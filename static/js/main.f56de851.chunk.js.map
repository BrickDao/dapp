{"version":3,"sources":["util/types.ts","store/subgraphNetworkStatus/types.ts","config.ts","assets/svg/TimesSVG.tsx","util/helpers/chooseRandom.ts","util/helpers/disableReactDevTools.ts","util/helpers/dontCloseWindowWarning.ts","util/helpers/formatDecimal.ts","util/helpers/formatNumber.ts","util/helpers/getTimeRemaining.ts","util/helpers/getValidationError.ts","util/helpers/normalizeString.ts","util/helpers/isPossibleContractWallet.ts","util/helpers/numberRangeArray.ts","util/helpers/stripFormatNumber.ts","components/proposals/voting/OffchainOpRollupVotingSubmitResultAction.tsx","components/proposals/voting/OffchainVotingAction.tsx","components/proposals/ProposalPeriodCountdown.tsx","assets/svg/StopwatchSVG.tsx","components/proposals/voting/VotingStatus.tsx","components/proposals/voting/OffchainVotingStatus.tsx","assets/svg/CheckSVG.tsx","components/proposals/voting/SquareRootVotingBar.tsx","components/proposals/voting/VotingActionButtons.tsx","components/web3/hooks/useContractSend.ts","components/web3/helpers/reverseResolveENS.ts","components/web3/hooks/useENSName.ts","components/web3/hooks/useETHGasPrice.ts","components/web3/hooks/useInitContracts.ts","components/web3/hooks/useIsDefaultChain.ts","components/web3/hooks/useMaybeContractWallet.ts","components/common/Modal.tsx","hooks/useRedeemCoupon.ts","components/adapters-extensions/enums.ts","store/connectedMember/actions.ts","store/connectModal/actions.ts","components/web3/hooks/useWeb3ModalManager.ts","util/helpers/truncateEthAddress.ts","components/web3/helpers/getExtensionAddress.ts","store/subgraphNetworkStatus/actions.ts","components/feedback/CycleEllipsis.tsx","components/proposals/SubmitAction.tsx","store/contracts/actions.ts","components/web3/Web3ModalManager.tsx","components/common/FadeIn.tsx","components/common/ErrorMessageWithDetails.tsx","components/web3/helpers/contractSend.ts","components/web3/helpers/getAdapterAddress.ts","components/web3/helpers/getAdapterAddressFromContracts.ts","components/web3/helpers/getDaoState.ts","components/web3/helpers/getContractByAddress.ts","components/web3/helpers/getDAOConfigEntry.ts","components/web3/helpers/getVotingAdapterName.ts","components/web3/helpers/hasFlag.ts","components/web3/helpers/multicall.ts","util/enums.ts","hooks/useAbortController.ts","hooks/useCounter.ts","hooks/useDao.ts","hooks/useDaoConfigurations.ts","hooks/useDaoTotalUnits.ts","hooks/useIsMounted.ts","hooks/useMemberActionDisabled.tsx","hooks/useMemberUnitsAtSnapshot.ts","hooks/useTimeStartEnd.ts","components/proposals/types.ts","components/web3/helpers/isEIP1559Compatible.ts","components/feedback/Loader.tsx","components/web3/WalletIcon.tsx","components/proposals/voting/types.ts","components/proposals/hooks/useCheckApplicant.ts","components/proposals/hooks/useDaoProposals.ts","components/proposals/hooks/useOffchainVotingResults.ts","components/proposals/hooks/useProposalsVotingAdapter.ts","components/proposals/hooks/useProposalOrDraft.ts","components/proposals/hooks/useProposals.ts","components/proposals/hooks/useProposalsVotes.ts","components/proposals/hooks/useProposalsVotingState.ts","components/proposals/hooks/useProposalWithOffchainVoteStatus.ts","components/proposals/hooks/useSignAndSendVote.ts","components/proposals/hooks/useSignAndSubmitProposal.ts","components/web3/EtherscanURL.tsx","components/proposals/helpers/calculateVotingTimeRanges.ts","components/proposals/helpers/getOffchainVotingProof.ts","components/proposals/helpers/getVoteChosen.ts","components/proposals/helpers/getVotingAdapterABI.ts","components/proposals/helpers/proposalHasFlag.ts","components/proposals/helpers/proposalHasVotingState.ts","components/proposals/helpers/submitOffchainVotingProof.ts","util/constants.ts","components/web3/config.ts","components/feedback/index.ts","components/feedback/CycleMessage.tsx","components/feedback/LoaderLarge.tsx","components/web3/types.ts","util/validation.ts","components/web3/hooks/useWeb3Modal.ts","gql/queryDao.ts","gql/queryAdaptersAndExtensions.ts","gql/queryMembers.ts","gql/queryTokenHolderBalances.ts","gql/handleSubgraphError.ts","store/connectedMember/reducers.ts","store/connectModal/reducers.ts","store/contracts/reducers.ts","store/subgraphNetworkStatus/reducers.ts","store/reducers.ts","store/index.ts","assets/svg/DiscordSVG.tsx","components/common/SocialMedia.tsx","assets/svg/GitHubSVG.tsx","assets/svg/MediumSVG.tsx","components/Footer.tsx","GlobalConnectWalletModal.tsx","Head.tsx","components/logo/Logo.tsx","components/logo/index.tsx","assets/svg/HamburgerSVG.tsx","components/web3/Web3ModalButton.tsx","components/dao-token/hooks/useDaoTokenDetails.ts","components/dao-token/DaoTokenHolder.tsx","components/dao-token/hooks/useTokenHolderBalances.ts","components/Nav.tsx","components/Header.tsx","components/adapters-extensions/helpers.ts","components/adapters-extensions/config.ts","components/adapters-extensions/hooks/useAdaptersOrExtensions.ts","components/adapters-extensions/hooks/useValidation.ts","components/adapters-extensions/AdapterOrExtensionSelectTarget.tsx","components/common/Checkbox.tsx","components/common/InputError.tsx","components/adapters-extensions/ConfigurationForm.tsx","components/adapters-extensions/ConfigurationModal.tsx","components/adapters-extensions/FinalizeModal.tsx","components/adapters-extensions/AdapterOrExtensionManager.tsx","components/common/Wrap.tsx","components/adapters-extensions/hooks/useInitAdapterExtensionContracts.ts","pages/governance/CreateGovernanceProposal.tsx","components/common/PreviewInputMarkdown.tsx","pages/membership/CreateMembershipProposal.tsx","pages/transfers/CreateTransferProposal.tsx","pages/tributes/CreateTributeProposal.tsx","pages/start/GetStarted.tsx","components/governance/GovernanceActions.tsx","pages/subpages/NotFound.tsx","components/proposals/ProposalDetails.tsx","pages/governance/GovernanceProposalDetails.tsx","components/proposals/ProposalCard.tsx","components/governance/GovernanceProposalsList.tsx","components/governance/hooks/useGovernanceProposals.ts","pages/governance/GovernanceProposals.tsx","components/common/CopyWithTooltip.tsx","pages/members/Delegation.tsx","assets/svg/CopySVG.tsx","assets/svg/WalletSVG.tsx","components/dao-token/DaoToken.tsx","assets/svg/UserSVG.tsx","pages/members/hooks/useMembers.ts","pages/members/MemberProfile.tsx","pages/members/MemberCard.tsx","pages/members/Members.tsx","components/proposals/Proposals.tsx","pages/membership/Membership.tsx","components/proposals/ProcessActionMembership.tsx","components/proposals/ProposalActions.tsx","components/proposals/ProposalAmount.tsx","pages/membership/MembershipDetails.tsx","components/feedback/LoaderWithEmoji.tsx","pages/redeem/RedeemManager.tsx","pages/redeem/Redeem.tsx","components/proposals/PostProcessActionTransfer.tsx","pages/transfers/TransferDetails.tsx","pages/transfers/Transfers.tsx","components/proposals/ProcessActionTribute.tsx","pages/tributes/TributeDetails.tsx","pages/tributes/Tributes.tsx","Routes.tsx","Init.tsx","App.tsx","InitError.tsx","reportWebVitals.ts","index.tsx"],"names":["AsyncStatus","SubgraphNetworkStatus","dotenvConfig","path","resolve","__dirname","process","REACT_APP_DAO_REGISTRY_CONTRACT_ADDRESS","REACT_APP_DEFAULT_CHAIN_NAME_LOCAL","REACT_APP_ENVIRONMENT","REACT_APP_GRAPH_API_URL","REACT_APP_INFURA_PROJECT_ID_DEV","REACT_APP_INFURA_PROJECT_ID_LOCAL","REACT_APP_INFURA_PROJECT_ID_PROD","REACT_APP_MULTICALL_CONTRACT_ADDRESS","REACT_APP_SNAPSHOT_HUB_API_URL","REACT_APP_COUPON_API_URL","REACT_APP_SNAPSHOT_SPACE","ENVIRONMENT","SNAPSHOT_HUB_API_URL","COUPON_API_URL","GRAPH_API_URL","CHAINS","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","GANACHE","HARMONY_TEST","HARMONY_MAIN","CHAIN_NAME_FULL","DEFAULT_CHAIN","ETHERSCAN_URLS","INFURA_WS_URLS","INFURA_PROJECT_ID","ETHEREUM_PROVIDER_URL","WALLETCONNECT_PROVIDER_OPTIONS","injected","display","name","description","package","walletconnect","WalletConnectProvider","options","infuraId","qrcodeModalOptions","mobileLinks","isMobile","DAO_REGISTRY_CONTRACT_ADDRESS","DAO_FACTORY_CONTRACT_ADDRESS","BANK_FACTORY_CONTRACT_ADDRESS","VOTING_CONTRACT_ADDRESS","CONFIGURATION_CONTRACT_ADDRESS","RAGEQUIT_CONTRACT_ADDRESS","MANAGING_CONTRACT_ADDRESS","FINANCING_CONTRACT_ADDRESS","ONBOARDING_CONTRACT_ADDRESS","GUILDKICK_CONTRACT_ADDRESS","DAO_REGISTRY_ADAPTER_CONTRACT_ADDRESS","BANK_ADAPTER_CONTRACT_ADDRESS","NFT_ADAPTER_CONTRACT_ADDRESS","COUPONONBOARDING_CONTRACT_ADDRESS","TRIBUTE_CONTRACT_ADDRESS","DISTRIBUTE_CONTRACT_ADDRESS","TRIBUTE_NFT_CONTRACT_ADDRESS","OFFCHAINVOTING_CONTRACT_ADDRESS","MULTICALL_CONTRACT_ADDRESS","GUILD_ADDRESS","TOTAL_ADDRESS","UNITS_ADDRESS","MEMBER_COUNT_ADDRESS","ETH_TOKEN_ADDRESS","SPACE","GQL_QUERY_POLLING_INTERVAL","TimesSVG","xmlns","viewBox","fill","d","chooseRandom","array","doNotChooseItem","arrayToUse","undefined","filter","a","Math","floor","random","length","disableReactDevTools","noop","DEV_TOOLS","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","Object","entries","key","value","dontCloseWindowWarning","callback","event","preventDefault","returnValue","addEventListener","removeEventListener","formatDecimal","n","toFixed","formatNumber","regEx","RegExp","toString","replace","DEFAULT_REMAINING","days","hours","minutes","seconds","total","getTimeRemaining","endTime","nowDate","Date","getTime","getValidationError","field","errors","message","normalizeString","stringToNormalize","toLowerCase","trim","isPossibleContractWallet","address","provider","getCode","bytecode","addressIsExernallyOwnedAccount","numberRangeArray","size","startAt","adjustedSize","Array","map","_","i","stripFormatNumber","OffchainOpRollupVotingSubmitResultAction","props","adapterName","proposal","daoProposalVotingAdapter","snapshotProposal","useState","Web3TxStatus","STANDBY","signatureStatus","setSignatureStatus","submitError","setSubmitError","bankExtensionAddress","useSelector","s","contracts","BankExtensionContract","contractAddress","bankExtensionMethods","instance","methods","getPriorAmountABI","abi","find","ai","daoRegistryAddress","DaoRegistryContract","getMemberAddressABI","useWeb3Modal","account","web3Instance","useContractSend","txEtherscanURL","txIsPromptOpen","txSend","txStatus","gasPrice","useETHGasPrice","average","useMemberActionDisabled","isDisabled","openWhyDisabledModal","WhyDisabledModal","votingAdapterMethods","getWeb3VotingAdapterContract","isInProcess","AWAITING_CONFIRM","PENDING","isDone","FULFILLED","isInProcessOrDone","Error","votes","proposalHash","idInDAO","snapshot","msg","payload","adapterAddress","getAdapterAddressFromContracts","getPriorAmount","call","numberOfDAOMembersAtSnapshot","getMemberAddressCalls","Number","memberIndex","multicall","calls","memberAddresses","memberBalanceCalls","m","memberBalancesAtSnapshot","memberAddress","voteData","values","v","metadata","createVote","proposalId","sig","timestamp","voteYes","choice","VoteChoicesIndex","Yes","weight","prepareVoteResult","actionId","chainId","daoAddress","voteResultTree","result","voteResultTreeHexRoot","getHexRoot","resultNodeLast","getBadNodeError","getBadNodeErrorResponse","BadNodeError","OK","getVoteResultRootDomainDefinition","domain","types","messageParams","JSON","stringify","root","primaryType","PRIMARY_TYPE_ERC712","signMessage","signature","getOffchainVotingProof","merkle_root","submitOffchainVotingProof","steps","merkleRoot","verifyingContract","submitVoteResultArguments","txArguments","from","REJECTED","className","disabled","onClick","Loader","ErrorMessageWithDetails","error","renderText","CycleMessage","intervalMs","messages","TX_CYCLE_MESSAGES","useFirstItemStart","render","FadeIn","EtherscanURL","url","isPending","renderSubmitStatus","title","OffchainVotingAction","refetchProposalOrDraft","voteChoiceClicked","setVoteChoiceClicked","votingDisabledReasonsRef","useRef","addressIsDelegatedMessage","alreadyVotedMessage","fetchingMembershipAtSnapshotMessage","noMembershipAtSnapshotMessage","undeterminedMembershipAtSnapshotMessage","delegateAddress","connectedMember","delegateKey","isAddressDelegated","useSignAndSendVote","signAndSendVote","voteDataStatus","voteChosen","getVoteChosen","setOtherDisabledReasons","useMemberUnitsAtSnapshot","hasMembershipAtSnapshot","memberUnitsAtSnapshotError","memberUnitsAtSnapshotStatus","snapshotProposalId","idInSnapshot","isSubmitDisabled","voteChoiceProgress","VoteChoices","partialVoteData","proposalIdInDAO","proposalIdInSnapshot","setDisabledReasonHelper","current","useEffect","truncateEthAddress","VotingActionButtons","buttonProps","voteProgress","displayCountdown","countdownFrom","renderCountdownText","showDaysOnly","renderedCountdownText","formatTimePeriod","format","time","period","formattedPeriod","ProposalPeriodCountdown","endedLabel","endLabel","endPeriodMs","startLabel","startPeriodMs","currentDate","setCurrentDate","startDate","endDate","interval","setInterval","clearInterval","StopwatchSVG","width","height","version","id","stroke","strokeWidth","fillRule","xlinkHref","VotingStatus","hasVotingEnded","noUnits","renderStatus","renderTimer","showPercentages","totalUnits","yesUnits","renderedStatus","role","SquareRootVotingBar","votingExpired","gracePeriodLabel","cycleEllipsisFadeInProps","duration","OffchainVotingStatus","countdownGracePeriodEndMs","countdownGracePeriodStartMs","countdownVotingEndMs","countdownVotingStartMs","onGracePeriodChange","onVotingPeriodChange","votingResult","useTimeStartEnd","hasTimeEnded","hasVotingStarted","hasTimeStarted","votingStartEndInitReady","timeStartEndInitReady","hasGracePeriodEnded","hasGracePeriodStarted","gracePeriodStartEndInitReady","isGracePeriodActive","No","units","didVotePassSimpleMajority","renderedStatusFromProp","ariaLabel","fadeInProps","ProposalPeriodComponent","CheckSVG","xmlnsXlink","getUnitsPercent","percentYes","percentNo","style","getButtonARIALabel","getButtonText","handleClick","renderVotedCheck","txError","setTxError","setTxEtherscanURL","setTxIsPromptOpen","txReceipt","setTxReceipt","setTxStatus","networkId","handleOnTxProcess","txHash","unsubscribeDontCloseWindow","contractSendParams","contractSend","receipt","REVERSE_RECORDS_ADDRESS","reverseResolveENS","addresses","contract","eth","Contract","ReverseRecordsABI","getNames","names","namehash","normalize","useENSName","setAddresses","reverseResolvedAddresses","setReverseResolvedAddresses","handleGetENSNamesCached","useCallback","URL","convertGasToWEI","gasStationPrice","toWei","BigNumber","INITIAL_GAS_PRICES","fast","fastest","safeLow","ignoreEnvironment","noRunIfEIP1559","gasPrices","setGasPrices","gasPriceError","setGasPriceError","gasPriceStatus","setGasPriceStatus","useAbortController","abortController","isMountedRef","shouldExitIfNotProduction","handleGetGasPricesCached","signal","isEIP1559Compatible","fetch","response","ok","json","responseJSON","abort","useInitContracts","dispatch","useDispatch","initContractDaoRegistry","initContractDaoFactory","initContractBankFactory","initContractConfiguration","initContractFinancing","initContractGuildKick","initContractManaging","initContractRagequit","initContractBankAdapter","initContractBankExtension","initContractOnboarding","initContractTribute","initContractDistribute","initRegisteredVotingAdapter","initContractTributeNFT","initContractNFTExtension","initContractNFTAdapter","initContractCouponOnboarding","initContractDaoRegistryAdapter","initContractERC20Extension","useIsDefaultChain","connected","defaultChainError","setDefaultChainError","defaultChain","isDefaultChain","INITIAL_MAYBE_CONTRACT_WALLET_STATE","useMaybeContractWallet","web3Provider","maybeContractWallet","setMaybeContractWallet","useIsMounted","handleIsPossibleContractWalletCached","Web3Provider","Modal","children","isOpen","isOpenHandler","keyProp","modalClassNames","styleProps","ariaHideApp","onRequestClose","overlayClassName","overlay","zIndex","FetchStatus","useRedeemCoupon","daoRegistryContract","couponOnboardingContract","CouponOnboardingContract","submitStatus","setSubmitStatus","redeemableCoupon","erc20Details","applicantAddressToChecksum","toChecksumAddress","recipient","redeemCouponArguments","String","amount","nonce","method","body","headers","getConnectedMember","addTokenToWallet","ethereum","request","params","type","console","log","redeemCoupon","DaoAdapterConstants","DaoExtensionConstants","VotingAdapterName","SET_CONNECTED_MEMBER","CLEAR_CONNECTED_MEMBER","getAddressIfDelegatedABI","membersABI","isActiveMemberABI","getCurrentDelegateKeyABI","clearConnectedMember","addressIfDelegated","memberFlag","isActiveMember","currentDelegateKey","doesMemberExist","hasFlag","MemberFlag","EXISTS","BURN_ADDRESS","CONNECT_MODAL_CLOSE","CONNECT_MODAL_OPEN","connectModalClose","connectModalOpen","DefaultTheme","ActionType","Web3ModalErrorType","INITIAL_STATE","reducer","state","CONNECT_WEB3MODAL","DEACTIVATE_PROVIDER_WEB3MODAL","ERROR_WEB3MODAL","INITIAL_CACHED_CONNECTOR_CHECK_STATUS","initialCachedConnectorCheckStatus","NEW_WEB3MODAL","web3Modal","UPDATE_ACCOUNT","useWeb3ModalManager","defaultTheme","onBeforeConnect","onBeforeDisconnect","providerOptions","useReducer","web3ModalTheme","web3ModalChain","connectWeb3ModalCached","connectWeb3Modal","chainChangedCallbackCached","_chainIdHex","cachedProvider","accountsChangedCallback","connectorId","connectCallback","statusAction","connectTo","Web3","getAccounts","net","getId","CONNECT","close","clearCachedProvider","DISCONNECT","on","removeListener","Web3Modal","cacheProvider","network","NetworkNames","NetworkIDs","theme","attemptUpdateFromCachedConnector","disconnectWeb3Modal","maxLength","isEthAddressValid","firstSegment","substring","secondPart","getExtensionAddress","extensionName","daoContractInstance","extensionNameSha3","utils","sha3","SET_SUBGRAPH_NETWORK_STATUS","setSubgraphNetworkStatus","MESSAGES","rootStyles","position","nbspStyles","CycleEllipsis","fadeInPropsMerged","inline","upToIndex","setUpToIndex","intervalId","prevIndex","WEB3_TX_FULFILLED","defaultChoices","VOTE_CHOICES","SubmitAction","checkApplicant","snapshotDraft","choices","proposalChoices","proposalName","proposalBody","start","proposalStart","end","proposalEnd","proposalSnapshot","proposalTimestamp","proposalSig","snapshotProposalSubmitted","setSnapshotProposalSubmitted","proposalDataForDaoRef","space","actionDisabledReasonsRef","invalidApplicantMessage","useSignAndSubmitProposal","proposalSignAndSendStatus","signAndSendProposal","useCheckApplicant","checkApplicantError","checkApplicantInvalidMsg","checkApplicantStatus","isApplicantValid","getContractByAddress","idForDAO","submitActionArgs","draftName","draftBody","draftMetadata","draftTimestamp","partialProposalData","SnapshotType","data","preparedVoteVerificationBytes","prepareVoteProposalData","parseInt","submitArguments","warn","CLEAR_CONTRACTS","CONTRACT_BANK_ADAPTER","CONTRACT_BANK_EXTENSION","CONTRACT_BANK_FACTORY","CONTRACT_CONFIGURATION","CONTRACT_COUPON_ONBOARDING","CONTRACT_DAO_FACTORY","CONTRACT_DAO_REGISTRY","CONTRACT_DAO_REGISTRY_ADAPTER","CONTRACT_DISTRIBUTE","CONTRACT_ERC20_EXTENSION","CONTRACT_FINANCING","CONTRACT_GUILDKICK","CONTRACT_MANAGING","CONTRACT_NFT_ADAPTER","CONTRACT_NFT_EXTENSION","CONTRACT_ONBOARDING","CONTRACT_RAGEQUIT","CONTRACT_TRIBUTE","CONTRACT_TRIBUTE_NFT","CONTRACT_VOTING","CONTRACT_VOTING_OP_ROLLUP","clearContracts","lazyBankFactoryABI","default","bankFactoryContract","createContractAction","lazyDaoFactoryABI","daoFactoryContract","lazyDaoRegistryABI","initContractVoting","initContractThunkFactory","actionType","adapterOrExtensionName","ContractAdapterNames","voting","adapterNameForRedux","VotingContract","lazyImport","initContractVotingOpRollup","OffchainVotingContract","ONBOARDING","onboarding","BANK","ContractExtensionNames","bank","isExtension","TRIBUTE","tribute","DISTRIBUTE","distribute","MANAGING","managing","NFT","nft","DAO_REGISTRY","dao_registry","RAGEQUIT","ragequit","GUILDKICK","guildkick","FINANCING","financing","CONFIGURATION","configuration","TRIBUTE_NFT","tribute_nft","COUPON_ONBOARDING","coupon_onboarding","ERC20","erc20","getState","votingAdapterName","getVotingAdapterName","getAdapterAddress","lazyABI","contractABI","Web3ModalContext","createContext","Web3ModalManager","DARK","defaultWeb3InstanceRef","providers","WebsocketProvider","defaultWeb3NetID","setDefaultWeb3NetID","web3ModalProviderArguments","currentProvider","then","catch","web3ModalContext","Provider","defaultStyle","transition","opacity","transitionStyles","entering","entered","exiting","exited","appear","in","show","timeout","isExpanded","setIsExpanded","isWalletRejectedRequest","code","test","textToDisplay","areErrorMessageAndTextStringSame","detailsProps","cursor","outline","methodName","contractInstanceMethods","methodArguments","onProcess","Promise","reject","BN","estimateGas","gas","gastoBN","decimalPlaces","ROUND_DOWN","toNumber","send","adapterNameSha3","getContractAddressOrThrow","DistributeContract","ManagingContract","OnboardingContract","TributeContract","TributeNFTContract","DaoState","c","getDAOConfigEntry","configKey","configKeySha3","getConfiguration","getDaoState","CREATION","READY","lazyIVotingABI","getAdapterName","flagToCheck","daoProposalFlag","log2","blockNumber","lazyMulticallABI","multicallMethods","aggregate","encodeFunctionCall","returnData","hexString","outputsABIItem","outputs","decodedOutputs","decodeParameters","__length__","FormFieldErrors","ProposalHeaderNames","setAbortController","AbortController","initialState","count","action","useCounter","useDao","useLazyQuery","GET_DAO","variables","getDao","called","loading","dao","setDao","gqlError","setGqlError","getDaoRegistryCallback","tributeDaos","INITIAL_CONFIG_ENTRIES","useDaoConfigurations","configKeys","daoRegistryABI","daoConfigurations","setDaoConfigurations","daoConfigurationsStatus","setDaoConfigurationsStatus","daoConfigurationsError","setDaoConfigurationsError","getConfigurationABI","ck","handleGetConfigurations","useDaoTotalUnits","subgraphNetworkStatus","status","getDaoFromSubgraphResult","setTotalUnits","totalUnitsStatus","setTotalUnitsStatus","totalUnitsError","setTotalUnitsError","getTotalUnitsFromExtensionCached","getTotalUnitsFromSubgraphCached","balanceOf","skipIsActiveMemberCheck","otherDisabledReasons","shouldShowWhyModal","setShouldShowWhyModal","otherReasonNext","r","disabledReason","getDisabledReason","canShowDisabledReason","WhyDisabledModalCached","handleSetOtherDisabledReasonsCached","otherReasons","Boolean","DEFAULT_POLL_INTERVAL_MS","pollUntilBlockInPast","block","blockOffset","pollInterval","blockOffsetCheck","currentBlock","abs","getBlockNumber","blockCheckOffset","currentBlockPollIntervalMs","memberUnitsAtSnapshot","setMemberUnitsAtSnapshot","setHasMembershipAtSnapshot","setMemberUnitsAtSnapshotError","setMemberUnitsAtSnapshotStatus","handleGetPriorUnitsAmountCached","isGreaterThan","areAllAsyncReady","asyncMapping","every","startSeconds","endSeconds","startEndStatusRef","setHasTimeStarted","setHasTimeEnded","setTimeStartEndInitReady","shouldNotCheck","intervalID","hasStartedCheck","now","hasEndedCheck","ceil","ProposalFlag","ProposalFlowStatus","DistributionStatus","SnapshotMetadataType","getBlock","latestBlock","baseFeePerGas","Spinner","showAfterMs","text","textProps","loaderProps","showLoaderAfterMs","setShowLoaderAfterMs","timeoutId","setTimeout","clearTimeout","MetaMaskSVG","lazy","WalletConnectSVG","walletIconMap","WalletIcon","providerName","fallback","VotingState","setCheckApplicantError","setCheckApplicantInvalidMsg","setCheckApplicantStatus","setIsApplicantValid","prevAddress","usePreviousDistinct","checkApplicantValidityCached","truncatedAddress","getIsNotReservedAddressABI","item","isNotReservedAddressCall","getIsNotZeroAddressABI","isNotZeroAddressCall","getGetAddressIfDelegatedABI","isNotReservedAddressResult","isNotZeroAddressResult","getAddressIfDelegatedResult","INITIAL_DAO_PROPOSAL_ENTRIES","useDaoProposals","proposalIds","proposalsAbi","registryAddress","daoProposals","setDaoProposals","daoProposalsStatus","setDaoProposalsStatus","daoProposalsError","setDaoProposalsError","safeProposalIds","setSafeProposalIds","daoProposalsCalls","setDaoProposalsCalls","useQuery","enabled","daoProposalsData","daoProposalsQueryError","handleGetDaoProposalsCached","safeProposalIdsToSet","isHexStrict","daoProposalsCallsToSet","useOffchainVotingResults","proposals","bankABI","bankAddress","votingResults","setVotingResults","offchainVotingResultsStatus","setOffchainVotingResultsStatus","offchainVotingResultsError","setOffchainVotingResultsError","proposalsToMap","setProposalsToMap","all","p","voterEntries","vote","keys","voterAddressesAndChoices","fromEntries","getUnitsPerChoiceCached","votingResultsToSetData","votingResultsToSetError","buildOffchainVotingResultEntriesCached","filteredVotingResultsToSetData","percentage","results","totalUnitsCall","unitsCalls","totalUnitsResult","forEach","proposalsToMapToSet","isArray","offchainVotingResults","INITIAL_VOTING_ADAPTERS","useProposalsVotingAdapter","registryABI","proposalsVotingAdapters","setProposalsVotingAdapters","proposalsVotingAdaptersError","setProposalsVotingAdaptersError","proposalsVotingAdaptersStatus","setProposalsVotingAdaptersStatus","getProposalsVotingAdaptersOnchainCached","votingAdapterABI","votingAdapterCalls","votingAdapterAddressResults","getAdapterNameABI","filteredProposalIds","_id","filteredVotingAdapterAddressResults","votingAdapterNameCalls","votingAdapterAddress","adapterNameResults","getVotingAdapterABI","votingAdaptersToSet","ERROR_PROPOSAL","ERROR_PROPOSAL_NOT_FOUND","useProposalOrDraft","daoProposal","setSnapshotDraft","setSnapshotProposal","proposalNotFound","setProposalNotFound","proposalError","setProposalError","proposalStatus","setProposalStatus","proposalVotingAdapterId","setProposalVotingAdapterId","proposalInclusiveStatus","setProposalInclusiveStatus","proposalInclusiveError","setProposalInclusiveError","refetchCount","updateRefetchCount","queryClient","useQueryClient","handleGetDraftCached","handleGetProposalCached","handleGetProposalOrDraftCached","snapshotType","draft","proposalData","getCommonSnapshotProposalData","idKey","erc712DraftHash","resetQueries","statuses","some","e","INITIAL_ARRAY","getSnapshotDraftsByAdapterAddress","baseURL","drafts","draftsJSON","draftEntries","sponsored","getSnapshotProposalsByAdapterAddress","proposalsJSON","proposalEntries","useProposals","includeProposalsExistingOnlyOffchain","setAdapterAddress","snapshotDraftAndProposals","setSnapshotDraftAndProposals","snapshotDraftAndProposalsStatus","setSnapshotDraftAndProposalsStatus","snapshotDraftAndProposalsError","setSnapshotDraftAndProposalsError","daoProposalIdsToUse","setDaoProposalIdsToUse","setProposals","proposalsInclusiveStatus","setProposalsInclusiveStatus","proposalsInclusiveError","setProposalsInclusiveError","useMemo","useProposalsVotingState","proposalsVotingState","proposalsVotingStateError","proposalsVotingStateStatus","proposalVotingAdapters","proposalsVotes","setProposalsVotes","proposalsVotesError","setProposalsVotesError","proposalsVotesStatus","setProposalsVotesStatus","safeProposalVotingAdapters","setSafeProposalVotingAdapters","getVotesDataABI","votesDataCallsData","votesDataCallsError","votesDataResults","votesDataResultsError","getProposalsVotesOnchainCached","offchainVotesDataABI","votingVotesDataABI","safeProposalVotingAdaptersToSet","useProposalsVotes","snapshotDraftEntriesData","snapshotDraftEntriesError","snapshotProposalEntriesData","snapshotProposalEntriesError","allSnapshotDraftsAndProposalsError","handleGetAllSnapshotDraftsAndProposalsCached","mergedEntries","flags","proposalsToSet","daoProposalId","snapshotId","snapshotDataId","snapshotData","isSnapshotDraft","proposalIdVotingAdapter","daoProposalVotingState","proposalIdVotingState","daoProposalVote","proposalIdVotes","proposalsError","proposalsStatus","setProposaslsVotingState","setProposalsVotingStateError","setProposalsVotingStateStatus","votingResultABIError","setVotingResultABIError","proposalsVotingStateCalls","setProposalsVotingStateCalls","proposalsVotingStateResult","proposalsVotingStateResultError","getProposalsVotingStateOnchainCached","votingResultABI","proposalsVotingStateCallsToSet","setProposalsVotingStateCallsPrepData","Completed","OffchainVotingGracePeriod","OffchainVotingSubmitResult","OffchainVoting","Process","Sponsor","Submit","useProposalWithOffchainVoteStatus","countdownVotingEndSeconds","countdownVotingStartSeconds","useCountdownToCheckInVoting","setStatus","initComplete","setInitComplete","setDAOProposal","setDAOProposalVote","daoProposalVoteResult","setDAOProposalVoteResult","proposalFlowStatusError","setProposalFlowStatusError","pollingIntervalIdRef","stopPollingRef","initialAsyncChecksCompleted","atExistsInDAO","proposalHasFlag","atSponsoredInDAO","SPONSORED","atProcessedInDAO","PROCESSED","offchainVotingAddress","offchainVotingABI","offchainResultSubmitted","isAddress","reporter","isInVoting","IN_PROGRESS","isInVotingGracePeriod","GRACE_PERIOD","getStatusFromContractCached","proposalsABI","voteResultABI","voteABI","voteResult","handleStopPollingForStatus","isStatusInitial","stopPollingForStatus","setVoteData","voteDataError","setVoteDataError","setVoteDataStatus","getSpace","snapshotSpace","voteProposalData","token","buildVoteMessage","erc712Message","prepareVoteMessage","getDomainDefinition","dataToSign","submitMessage","dataToReturn","uniqueId","daoRegistryInstance","setProposalData","proposalSignAndSendError","setProposalSignAndSendError","setProposalSignAndSendStatus","buildProposalMessageHelper","commonData","ContractDAOConfigKeys","offchainVotingVotingPeriod","votingTimeSeconds","buildProposalMessage","buildDraftMessage","prepareDraftMessage","prepareProposalMessage","uniqueIdDraft","href","rel","target","calculateVotingTimeRanges","gracePeriodLength","gracePeriodStartingTime","votePeriodLength","voteStartingTime","MS_MULTIPLIER","gracePeriodStartMs","voteStartMs","voteEndMs","gracePeriodEndMs","merkleRootHex","voteEntry","ve","lazyOffchainVotingABI","lazyVotingABI","proposalHasVotingState","votingStateToCheck","votingState","INITIAL_ITEM","activeMessage","setActiveMessage","prevMessage","LoaderLarge","ethAddress","useContext","gql","GET_ADAPTERS_AND_EXTENSIONS","GET_MEMBERS","GET_TOKEN_HOLDER_BALANCES","handleSubgraphError","store","onError","networkError","ERR","setConnectedMemberReducer","clearConnectedMemberReducer","BankAdapterContract","BankFactoryContract","ConfigurationContract","DaoFactoryContract","DaoRegistryAdapterContract","ERC20ExtensionContract","FinancingContract","GuildKickContract","NFTAdapterContract","NFTExtensionContract","RagequitContract","contractBankFactory","contractDAOFactory","contractDAORegistry","contractDaoRegistryAdapter","contractBankExtension","contractConfiguration","contractDistribute","contractFinancing","contractGuildKick","contractOnboarding","contractRagequit","contractTribute","contractVoting","contractManaging","contractBankAdapter","contractNFTAdapter","contractTributeNFT","contractCouponOnboarding","contractNFTExtension","contractERC20Extension","combineReducers","connectModal","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","DiscordSVG","transform","SocialMediaLinks","GitHubSVG","React","Component","MediumSVG","SocialMedia","MEDIUM","DISCORD","GITHUB","Footer","ConnectWalletModal","GlobalConnectWalletModal","isConnectModalOpen","modalProps","setModalProps","pathname","useLocation","prevState","Head","Helmet","content","Logo","ModalLogo","LeftLogo","CenterLogo","HamburgerSVG","ConnectWalletButton","customWalletText","showWalletETHBadge","isWrongNetwork","useDaoTokenDetails","daoTokenDetails","setDaoTokenDetails","daoTokenDetailsStatus","setDaoTokenDetailsStatus","daoTokenDetailsError","setDaoTokenDetailsError","getDaoTokenDetailsCached","symbol","decimals","image","location","origin","DaoTokenHolder","customStyles","badgeStyles","tokenHolder","setTokenHolder","tokenImageUrl","setTokenImageURL","tokenEtherscanURL","setTokenEtherscanURL","tokenHolderBalances","erc20ExtensionContract","tokenAddress","getTokenHolderBalances","startPolling","stopPolling","setTokenHolderBalances","getTokenBalanceCallback","tokens","pollingTimeoutId","useTokenHolderBalances","getTokenImageCallback","blob","reader","FileReader","onloadend","onerror","readAsDataURL","dataUrl","holders","holderData","holder","member","balance","src","alt","transitionOpeningStyles","right","transitionClosingStyles","NavLinks","tabIndex","to","NavHamburger","shouldShowMenuModal","setShouldShowMenuModal","setTransitionStyles","closeMenuRef","isCurrentMemberOrDelegateConnected","isCurrentMemberConnected","handleMenuModalClose","Transition","Nav","query","_matches","border","Header","RenderLogo","getAdapterOrExtensionId","getAccessControlLayer","acl","accessFlags","SUBMIT_PROPOSAL","PROCESS_PROPOSAL","SPONSOR_PROPOSAL","SET_CONFIGURATION","INTERNAL_TRANSFER","EXECUTION","NEW_MEMBER","ADD_TO_BALANCE","REGISTER_NEW_TOKEN","SUB_FROM_BALANCE","JAIL_MEMBER","UNJAIL_MEMBER","REMOVE_ADAPTER","ADD_ADAPTER","OFFCHAINVOTING","UPDATE_DELEGATE_KEY","NONVOTING_ONBOARDING","VOTING","WITHDRAW","UPDATE_TOKEN","COLLECT_NFT","WITHDRAW_NFT","ADAPTER_ACCESS_FLAGS","ADD_EXTENSION","REMOVE_EXTENSION","EXTENSION_ACCESS_FLAGS","TRANSFER_NFT","idx","reduce","b","entry","defaultAdaptersAndExtensions","adapterId","abiFunctionName","displayName","setAclToExtensionForAdapter","optionDefaultTarget","useAdaptersOrExtensions","adapterExtensionContracts","getRegisteredAdaptersAndExtensions","registeredAdaptersOrExtensions","setRegisteredAdaptersOrExtensions","unRegisteredAdaptersOrExtensions","setUnRegisteredAdaptersOrExtensions","adapterExtensionStatus","setAdapterExtensionStatus","getAdaptersAndExtensionsCached","registeredDaoAdapters","registeredDaoExtensions","registeredList","unRegisteredList","getAdapterFromGql","adapter","getExtensionFromGql","extensionId","extension","adapterOrExtension","gqlExtension","push","maybeSomeAdapters","maybeSomeExtensions","shouldSkip","option","gqlAdapter","adapters","extensions","getAdapterOrExtensionFromRedux","ae","ParamType","useValidation","isParamInputValid","paramInput","paramType","parameter","ADDRESS","checkAddressChecksum","isAddressValid","BYTES32","isHex","isBytes32Valid","BYTES32_ARRAY","split","isBytes32ArrayValid","UINT256","isNaN","isUint256Valid","UINT256_ARRAY","isUint256ArrayValid","getFormFieldError","INVALID_ETHEREUM_ADDRESS","INVALID_BYTES32","INVALID_BYTES32_ARRAY","INVALID_NUMBER","INVALID_NUMBER_ARRAY","REQUIRED","formatInputByType","inputValue","inputType","AdapterExtensionSelectTarget","defaultTarget","renderActions","renderCheckboxAction","selectedTargetOption","setSelectedTargetOption","selectedTargetOptionProps","setSelectedTargetOptionProps","onChange","selectedTargetProps","selectedOption","toUpperCase","renderDescription","CheckboxSize","Checkbox","checked","htmlFor","SMALL","label","InputError","restProps","ConfigurationForm","abiConfigurationInputs","abiMethodName","closeHandler","configureAdapterStatus","setConfigureAdapterStatus","removeStatus","setRemoveStatus","form","useForm","mode","reValidateMode","formState","getValues","setValue","register","trigger","configureAdapterError","isConnected","adapterOrExtensionText","isValid","isConfigureInProcess","isRemoveInProcess","isConfigureDone","isRemoveDone","isConfigureInProcessOrDone","isRemoveInProcessOrDone","removeExtensionArgument","removeAdapterArguments","adapterConfigArguments","abiInput","formattedValue","onSubmit","input","placeholder","ref","validate","handleSubmit","handleRemove","ConfigurationModal","configurationInputs","FinalizeModal","finalizeError","finalizeDao","WhyDisableModalTitles","Wrap","rest","AdapterOrExtensionManager","setABIMethodName","daoState","setDaoState","setIsDone","inputParameters","setInputParameters","openConfigureModal","setOpenConfigureModal","openFinalizeModal","setOpenFinalizeModal","selectAll","setSelectAll","selectionCount","setSelectionCount","selections","setSelections","configureAdapterOrExtension","setConfigureAdapterOrExtension","setIsInProcess","whyDisabledReason","setWhyDisabledReason","initAdapterExtensionContract","adapterExtensionName","useInitAdapterExtensionContracts","isDAOExisting","isDAOReady","isUnavailable","isLoading","nothingToAdd","checkDaoStateCached","finalizedMessage","daoRegistryState","handleAddAdapter","addAdapterOrExtension","handleAddExtension","adapterOrExtensionAddress","adapterOrExtensionType","adapterOrExtensionId","addAdapterOrExtensionArguments","txSendMethod","errorMessage","adaptersArguments","adapterContractAddress","contractAddressFromRedux","addAdaptersArguments","checkboxesSelection","inputs","RenderWrapper","scrollTo","top","left","behavior","LARGE","handleSelectTargetChange","handleConfigure","CONFIGURATION_REASON","FINALIZED_REASON","Fields","PreviewInputMarkdown","marginTop","CreateGovernanceProposal","history","useHistory","watch","Governance","required","CreateMembershipProposal","userAccountBalance","setUserAccountBalance","ethAddressValue","createMemberError","getUserAccountBalanceCached","getBalance","accountBalanceInWei","fromWei","ethAmount","ethAddressToChecksum","ethAmountInWei","proposerAddressToChecksum","proposalAmountValues","tributeAmount","tributeAmountUnit","accountAuthorizedToProcessPassedProposal","isInteger","CreateTransferProposal","daoTokens","setDaoTokens","selectedTokenBalance","setSelectedTokenBalance","isTypeAllMembers","selectedTokenValue","createTransferError","erc20ABI","ERC20ABI","getDaoTokensCached","getSelectedTokenBalanceCached","bankMethods","nbTokens","parsedAndSortedTokens","getTokenABI","getTokenCalls","index","fetchedTokens","balanceOfABI","getDaoTokenBalanceCalls","daoTokenBalances","tokensArray","daoBalance","tokenObj","toBN","gt","ethToken","erc20Tokens","nameABI","nameCalls","symbolABI","symbolCalls","decimalsABI","decimalsCalls","erc20DetailsCalls","chunkedResults","splice","symbols","parsedAndSortedERC20Tokens","sort","localeCompare","selectedTokenObj","parse","balanceBN","divisor","pow","beforeDecimal","div","afterDecimal","mod","balanceReadable","eq","selectedToken","notes","memberAddressToChecksum","amountArg","multiplier","amountWithDecimals","mul","bodyIntro","transferAmount","transferAmountUnit","returnSignature","memberAddressArg","transferArguments","isActiveMemberWithUnits","unitsBalance","amountToNumber","isSelectedTokenEth","CreateTributeProposal","userERC20Balance","setUserERC20Balance","setERC20Details","erc20Contract","setERC20Contract","erc20AddressValue","erc20Address","applicantAddressValue","applicantAddress","createTributeError","getERC20ContractCached","getERC20DetailsCached","getUserERC20BalanceCached","lazyERC20ABI","getRequestAmountUnit","requestAmount","tributeAmountWithDecimals","requestAmountArg","requestAmountUnit","TributeCube","memo","GetStartedHeader","GetStarted","AOS","init","offset","delay","mirror","once","GovernanceActions","votingStartMs","votingEndMs","votingPeriodData","setVotingPeriodData","handleOnVotingPeriodChangeCached","votingPeriodProps","NotFound","textAlign","fontSize","ProposalDetails","renderAmountBadge","GovernanceProposalDetails","useParams","DEFAULT_BUTTON_TEXT","ResponsiveEllipsis","responsiveHOC","LinesEllipsis","ProposalCard","buttonText","proposalOnClickId","linkPath","maxLine","ellipsis","trimRight","basedOn","renderName","GovernanceProposalsList","onProposalClick","proposalLinkPath","renderProposalCard","proposalsForVotingResults","setProposalsForVotingResults","failedProposals","passedProposals","votingProposals","filteredProposals","setFilteredProposals","governanceProposals","setGovernanceProposals","governanceProposalsError","setGovernanceProposalsError","governanceProposalsStatus","setGovernanceProposalsStatus","getSnapshotProposalsByActionId","handleGetProposalsCached","useGovernanceProposals","renderProposalCards","offchainResult","gp","filteredProposalsToSet","didPassSimpleMajority","flatMap","PASSED","FAILED","GovernanceProposals","CopyWithTooltip","copySuccessResetMs","textToCopy","tooltipProps","useClipboard","successDuration","isCopied","setCopied","elementRef","ReactTooltip","isTooltipShownRef","tooltipIDRef","uuidv4","tooltipID","delayShow","effect","afterHide","args","afterShow","DelegationStatus","DelegationStep","CopySVG","focusable","ArrowsSVG","DaoToken","UserSVG","DelegationModal","currentStep","daoRegistryAdapterContract","delegateError","delegateAddressValue","confirmDelegationValue","confirmDelegation","isFormFieldEmpty","setDelegation","includes","handleConfirmDelegation","revokeDelegation","handleRevokeDelegation","updateDelegateKeyArguments","parsedError","Delegation","SET_DELEGATION","setCurrentStep","delegationStatus","setDelegationStatus","showDelegationModal","setShowDelegationModal","fetchDelegationInfoCached","REVOKE_DELEGATION","DELEGATE_VOTES","useMembers","ensReverseResolvedAddresses","setAddressesToENSReverseResolve","getMembersFromSubgraphResult","members","setMembers","membersError","setMembersError","membersStatus","setMembersStatus","getMembersFromRegistryCached","getMembersFromSubgraphCached","filteredMembersWithDetails","didFullyRagequit","createdAt","parsedMember","daoRegistryMethods","getNbMembers","nbMembers","memberAddressesByDelegatedKeyABI","memberAddressesByDelegatedKeyCalls","memberAddressesByDelegatedKey","unitsBalanceOfCalls","unitsBalances","membersWithDetails","isDelegated","reverse","addressENS","MemberProfile","ethereumAddress","memberDetails","setMemberDetails","memberNotFound","setMemberNotFound","activeMember","isLoadingDone","ensNameFound","votingWeight","renderMemberInfo","MemberCard","renderMemberCards","Members","configurationKeysToGet","offchainVotingGracePeriod","Proposals","nonsponsoredProposals","offchainVotingPeriod","offchainGracePeriod","startingTime","times","voteState","votesData","noSnapshotVotes","offchainResultNotYetSubmitted","TIE","PASS","NOT_PASS","REQUESTS","Membership","useMemberActionDisabledProps","ProcessActionMembership","propsDisabled","membershipProposalAmount","setMembershipProposalAmount","notProposerMessage","areSomeDisabled","getMembershipProposalAmountCached","proposalDetails","processArguments","ProposalWithOffchainVoteActions","cycleEllipsisStyles","ProposalActions","renderAction","daoVotingAdapterName","ProposalAmount","amountUnit","amount2","amount2Unit","MembershipDetails","applicant","LoaderWithEmoji","emoji","RedeemManager","redeemables","RedeemCard","redeemable","isRedeemd","margin","RedeemCoupon","setReedemableCoupon","couponStatus","setCouponStatus","coupon","URLSearchParams","search","get","checkBySigOrAddrCached","coupons","PostProcessActionTransfer","alreadyCompletedMessage","toIndexArg","distributeArguments","distributions","distributeProposal","getActionDisabledReasons","TransferDetails","Transfers","ProcessActionTribute","tributeProposalDetails","setTributeProposalDetails","txEtherscanURLTokenApprove","txIsPromptOpenTokenApprove","txSendTokenApprove","txStatusTokenApprove","getTributeProposalDetailsCached","handleSubmitTokenApprove","erc20Instance","allowance","tributeAmountBN","allowanceBN","difference","sub","approveValue","add","tokenApproveArguments","PLACEHOLDER","TributeDetails","Tributes","ProcessName","proposalIdParameter","Routes","exact","component","App","renderMainContent","mainContent","Init","setError","isInitComplete","setIsInitComplete","initSnapshotAPI","processReadyMap","setProcessReadyMap","initContracts","handleInitContractsCached","handleGetMemberCached","handleGetSnapshotAPIStatusCached","getSnapshotAPIStatus","fs","InitError","padding","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","getElementById","autoRefreshOnNetworkChange","getApolloClient","ApolloClient","link","concat","HttpLink","uri","operationName","cache","InMemoryCache","typePolicies","Adapter","fields","merge","existing","incoming","Extension","QueryClient","defaultOptions","queries","refetchOnWindowFocus","ApolloProvider","client"],"mappings":"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","file":"static/js/main.f56de851.chunk.js","sourcesContent":["/**\n * FOR HIGH REUSE TYPES\n *\n * For any other more specific types, co-locate them in either:\n *\n * 1) The actual code file.\n * 2) In a type file in the location of the code files which mainly use the types.\n *\n * @see https://kentcdodds.com/blog/colocation\n */\n\nexport type EnvironmentName = 'localhost' | 'development' | 'production';\n\nexport enum AsyncStatus {\n  STANDBY = 'STANDBY',\n  PENDING = 'PENDING',\n  FULFILLED = 'FULFILLED',\n  REJECTED = 'REJECTED',\n}\n\nexport interface MetaMaskRPCError extends Error {\n  code: number;\n}\n","export enum SubgraphNetworkStatus {\n  OK = 'OK',\n  ERR = 'ERR',\n}\n\nexport type SubgraphNetworkStatusState = {\n  status: SubgraphNetworkStatus;\n};\n","import {config as dotenvConfig} from 'dotenv';\nimport {IProviderOptions} from 'web3modal';\nimport {isMobile} from '@walletconnect/browser-utils';\nimport {resolve} from 'path';\nimport WalletConnectProvider from '@walletconnect/web3-provider';\n\nimport {EnvironmentName} from './util/types';\n\ndotenvConfig({path: resolve(__dirname, '../.env')});\n\n/**\n * Global DApp Config\n */\n\nconst {\n  REACT_APP_DAO_REGISTRY_CONTRACT_ADDRESS,\n  REACT_APP_DEFAULT_CHAIN_NAME_LOCAL,\n  REACT_APP_ENVIRONMENT,\n  REACT_APP_GRAPH_API_URL,\n  REACT_APP_INFURA_PROJECT_ID_DEV,\n  REACT_APP_INFURA_PROJECT_ID_LOCAL,\n  REACT_APP_INFURA_PROJECT_ID_PROD,\n  REACT_APP_MULTICALL_CONTRACT_ADDRESS,\n  REACT_APP_SNAPSHOT_HUB_API_URL,\n  REACT_APP_COUPON_API_URL,\n  REACT_APP_SNAPSHOT_SPACE,\n} = process.env;\n\nexport const ENVIRONMENT = REACT_APP_ENVIRONMENT as EnvironmentName | undefined;\n\n/**\n * SNAPSHOT_HUB_API_URL\n *\n * @note For `ENVIRONMENT=localhost` we need to use CRA's local proxy\n *   so that we can communicate with our develop Snapshot Hub API\n *   without any CORS issues.\n *\n * @see src/setupProxy.js\n */\nexport const SNAPSHOT_HUB_API_URL: string | undefined =\n  ENVIRONMENT === 'localhost'\n    ? '/snapshot-hub'\n    : REACT_APP_SNAPSHOT_HUB_API_URL;\n\nexport const COUPON_API_URL: string | undefined = REACT_APP_COUPON_API_URL;\n\n// The Graph API URL\nexport const GRAPH_API_URL = REACT_APP_GRAPH_API_URL;\n\n// Network IDs, when users change wallet networks\nexport const CHAINS = {\n  MAINNET: 1,\n  ROPSTEN: 3,\n  RINKEBY: 4,\n  GOERLI: 5,\n  KOVAN: 42,\n  GANACHE: 1337,\n  HARMONY_TEST: 1666700000,\n  HARMONY_MAIN: 1666600000,\n} as const;\n\n// Network names for modal messaging\nexport const CHAIN_NAME_FULL = {\n  [CHAINS.MAINNET]: 'Main Ethereum Network',\n  [CHAINS.ROPSTEN]: 'Ropsten Test Network',\n  [CHAINS.RINKEBY]: 'Rinkeby Test Network',\n  [CHAINS.GOERLI]: 'Görli Test Network',\n  [CHAINS.KOVAN]: 'Kovan Test Network',\n  [CHAINS.GANACHE]: 'Ganache Test Network',\n  [CHAINS.HARMONY_TEST]: 'Harmony Test Network',\n  [CHAINS.HARMONY_MAIN]: 'Harmony Main Network',\n};\n\nexport const DEFAULT_CHAIN =\n  REACT_APP_ENVIRONMENT === 'production'\n    ? CHAINS.MAINNET\n    : REACT_APP_ENVIRONMENT === 'development'\n    ? CHAINS.RINKEBY\n    : REACT_APP_DEFAULT_CHAIN_NAME_LOCAL // Set this to change local development chain\n    ? CHAINS[REACT_APP_DEFAULT_CHAIN_NAME_LOCAL]\n    : CHAINS.GANACHE; // Defaults to a Ganache private network (1337)\n\nexport const ETHERSCAN_URLS: {[chainId: number]: string} = {\n  [CHAINS.MAINNET]: `https://etherscan.io`,\n  [CHAINS.ROPSTEN]: `https://ropsten.etherscan.io`,\n  [CHAINS.RINKEBY]: `https://rinkeby.etherscan.io`,\n  [CHAINS.GOERLI]: `https://goerli.etherscan.io`,\n  [CHAINS.KOVAN]: `https://kovan.etherscan.io`,\n  [CHAINS.HARMONY_TEST]: `https://explorer.pops.one`,\n  [CHAINS.HARMONY_MAIN]: `https://explorer.harmony.one`,\n};\n\nexport const INFURA_WS_URLS: {[chainId: number]: string} = {\n  [CHAINS.MAINNET]: `wss://mainnet.infura.io/ws/v3`,\n  [CHAINS.ROPSTEN]: `wss://ropsten.infura.io/ws/v3`,\n  [CHAINS.RINKEBY]: `wss://rinkeby.infura.io/ws/v3`,\n  [CHAINS.GOERLI]: `wss://goerli.infura.io/ws/v3`,\n  [CHAINS.KOVAN]: `wss://kovan.infura.io/ws/v3`,\n  [CHAINS.HARMONY_TEST]: `wss://ws.s0.pops.one`,\n  [CHAINS.HARMONY_MAIN]: `wss://ws.s0.t.hmny.io`,\n};\n\n// Infura Project Id\nexport const INFURA_PROJECT_ID =\n  REACT_APP_ENVIRONMENT === 'production'\n    ? REACT_APP_INFURA_PROJECT_ID_PROD\n    : REACT_APP_ENVIRONMENT === 'development'\n    ? REACT_APP_INFURA_PROJECT_ID_DEV\n    : REACT_APP_INFURA_PROJECT_ID_LOCAL;\n\n// Ethereum Provider URL\nexport const ETHEREUM_PROVIDER_URL: string = INFURA_WS_URLS[DEFAULT_CHAIN]\n  ? `${INFURA_WS_URLS[DEFAULT_CHAIN]}/${INFURA_PROJECT_ID}`\n  : DEFAULT_CHAIN === CHAINS.GANACHE\n  ? /**\n     * Ganache over WebSocket should work. @note Is not tested, yet.\n     * Attempting to be consistent with a WebSocket URL to avoid more logic.\n     *\n     * @link https://www.trufflesuite.com/docs/truffle/reference/configuration#networks\n     */\n    'ws://127.0.0.1:7545'\n  : '';\n\n/**\n * Wallet Connect config\n */\n\n/**\n * Tell Web3modal what providers we have available.\n *\n * The built-in web browser provider (only one can exist at a time),\n * MetaMask, Brave or Opera is added automatically by Web3modal\n */\nexport const WALLETCONNECT_PROVIDER_OPTIONS: IProviderOptions = {\n  // Injected providers\n  injected: {\n    display: {\n      name: 'MetaMask',\n      description: 'Connect with the provider in your Browser',\n    },\n    package: null,\n  },\n  // WalletConnect provider\n  walletconnect: {\n    display: {\n      name: 'WalletConnect',\n      description: 'Connect with your mobile wallet',\n    },\n    package: WalletConnectProvider,\n    options: {\n      infuraId: INFURA_PROJECT_ID, // required\n      qrcodeModalOptions: {\n        mobileLinks: isMobile()\n          ? ['rainbow', 'metamask', 'argent', 'trust']\n          : [],\n      },\n    },\n  },\n};\n\n/**\n * CORE CONTRACTS\n * @note as per https://github.com/openlawteam/tribute-contracts#architecture\n *\n * - DAO Registry (@note uses dao address for the contract address)\n * - DAO Factory\n */\n\n// If developing locally, include your DaoRegistry contract address in your `.env` file.\nexport const DAO_REGISTRY_CONTRACT_ADDRESS =\n  REACT_APP_DAO_REGISTRY_CONTRACT_ADDRESS;\n\nexport const DAO_FACTORY_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x392E9D1c7FaE6C62853e089466FFAE3F0a93c680',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x6d92a8E4aB80adcBbFDA44ef69fe847f82def641',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const BANK_FACTORY_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x0d316BAa42a0538f2aAca3F08D368FE9C4A87A7A',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xcD1639FD072113CC86e15f65f1505C6D58Aa7412',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\n// @todo\nexport const NFT_COLLECTION_FACTORY_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xf0D4BC92F8aD06CC163B96459787Dd563aAFC1f7',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xcF34FFFBba648719DAe106202674949f1679772B',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\n// @todo\nexport const ERC20_TOKEN_FACTORY_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x69Bd1bE55Fff22bE1d5468dFf1a6d0a184c520F7',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x862d71d6E9Be8a7495EfEBa6f2b657b00E629c95',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\n/**\n * ADAPTER CONTRACTS\n * @note as per https://github.com/openlawteam/tribute-contracts#architecture\n *\n * - Configuration\n * - CouponOnboardingContract\n * - Managing\n * - Onboarding\n * - Voting\n * - Offchain voting\n * - Financing\n * - Tribute\n * - Distribute\n * - Rage quit\n * - Guild kick\n * - BankAdapter\n * - TributeNFT\n * - NFTAdapter\n * - DaoRegistryAdapter\n */\n\nexport const VOTING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xc9415afc432CC56912f54682cC2Ea80ADdE1a89B',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xfB4E7C2FD8Ceb2757D2C4cE4749ebE326fc369D4',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const CONFIGURATION_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x92866ac08edFEAA8C52dEF0c12926FA7E95df8fB',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x65CaCA9F2638Fb2B245E9694f00343F0b6CB6F77',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const RAGEQUIT_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xD3C2cE38c905B9207e35D7EcE51c17b22EAb4afe',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x314C824Ea4586798DF8B46121E881Defa40CB47E',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const MANAGING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x03BE4284E9F3E7d1fd19cB0442713609105db7E7',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xeD025b5BA14b8f3A085057b9D7Baa13998343aA8',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const FINANCING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xA007fc56f540670F6ba17FD2b3B931FC72A7820a',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x4a7A5946567672c577EaF2b866BCeBc177E455E8',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const ONBOARDING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x6fA3f2BC09fB13091BF40C6920a9251B72348456',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x4e1Ccf6Bca8d14B670478d8C4e2aEc9f6277A7f5',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const GUILDKICK_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xf6F042cB61E409dbFE34A5fbC76Db334B7a93364',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x72a011Aa67F8214a146A162A99B322017ad763fD',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const DAO_REGISTRY_ADAPTER_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x35B3babfB8FF455903f6e89cEaa83140e09495F9',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x4d4243f2d605282CBd27C8391f05b77316d1a561',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const BANK_ADAPTER_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xed65eD0c561E77597E4D8472be1b4b184c31Fde4',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xA8EA078cF1D3837a025329c46A4E0F441Cb2eE87',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const NFT_ADAPTER_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xc69DF0C3855A6CaBF0c5983bD504770E5BFA8e84',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x538a4f00d64d2597717cAAd4D01C963317e3Ae40',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const COUPONONBOARDING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xb5935758c16B785d3749F20D65F5B501578dCb1c',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x9A2E533FBa58Ec8b0dA34438154C48E295C80576',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const TRIBUTE_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xD0dCB66d60f6EbF838e22423f58B01D6F7a60187',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xa7D723BFc4deC341da03E70Af4026B3926b1E8Db',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const DISTRIBUTE_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xB54D48D8471839D670C0e24548A7CfEA78bB1879',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x6749b9151B654A77ddA3Fa8f2b259E0E592065F6',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const TRIBUTE_NFT_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0x939Fd23C38496aB54fa4BD0b2ED535DE100f7d8F',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0x4Df3729e7B952EBE6d18b52132D2A8af2F2D167A',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\nexport const OFFCHAINVOTING_CONTRACT_ADDRESS = {\n  [CHAINS.MAINNET]: '',\n  [CHAINS.ROPSTEN]: '',\n  [CHAINS.RINKEBY]: '0xDfbe754ec9c2aA26ac2f429CfcEd819910eF5926',\n  [CHAINS.GOERLI]: '',\n  [CHAINS.KOVAN]: '',\n  [CHAINS.GANACHE]: '0xae02a075290D2efD74F0D3fE2DfE64831320855a',\n  [CHAINS.HARMONY_TEST]: '',\n  [CHAINS.HARMONY_MAIN]: '',\n};\n\n// If developing locally, include your Multicall contract address in your `.env` file.\nexport const MULTICALL_CONTRACT_ADDRESS = REACT_APP_MULTICALL_CONTRACT_ADDRESS;\n\n/**\n * These addresses are important as the contracts use them in their configs.\n *\n * @todo Remove and get from the chain/subgraph?\n *\n * @see https://github.com/openlawteam/tribute-contracts/blob/9e0e03616a00e41e666351e146ee109b9fe37fb2/utils/DaoFactory.js\n */\nexport const GUILD_ADDRESS: string =\n  '0x000000000000000000000000000000000000dead';\nexport const TOTAL_ADDRESS: string =\n  '0x000000000000000000000000000000000000babe';\nexport const UNITS_ADDRESS: string =\n  '0x00000000000000000000000000000000000FF1CE';\nexport const LOOT_ADDRESS: string =\n  '0x00000000000000000000000000000000B105F00D';\nexport const MEMBER_COUNT_ADDRESS: string =\n  '0x00000000000000000000000000000000DECAFBAD';\nexport const ETH_TOKEN_ADDRESS: string =\n  '0x0000000000000000000000000000000000000000';\nexport const DAI_TOKEN_ADDRESS: string =\n  '0x95b58a6bff3d14b7db2f5cb5f0ad413dc2940658';\n\n/**\n * `SPACE` is used inside Snapshot Hub for matching a `space`\n * with its own proposals and votes.\n */\nexport const SPACE: string | undefined = REACT_APP_SNAPSHOT_SPACE;\n\n/**\n * POLLING INTERVAL FOR GQL QUERIES\n * localhost | development - ms, poll every 5sec = 5000\n * production - ms, poll every 10sec = 10000\n */\nexport const GQL_QUERY_POLLING_INTERVAL: number =\n  REACT_APP_ENVIRONMENT === 'production' ? 10000 : 5000;\n","export default function TimesSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      aria-hidden=\"true\"\n      data-icon=\"times\"\n      data-prefix=\"fal\"\n      viewBox=\"0 0 320 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M193.94 256L296.5 153.44l21.15-21.15c3.12-3.12 3.12-8.19 0-11.31l-22.63-22.63c-3.12-3.12-8.19-3.12-11.31 0L160 222.06 36.29 98.34c-3.12-3.12-8.19-3.12-11.31 0L2.34 120.97c-3.12 3.12-3.12 8.19 0 11.31L126.06 256 2.34 379.71c-3.12 3.12-3.12 8.19 0 11.31l22.63 22.63c3.12 3.12 8.19 3.12 11.31 0L160 289.94 262.56 392.5l21.15 21.15c3.12 3.12 8.19 3.12 11.31 0l22.63-22.63c3.12-3.12 3.12-8.19 0-11.31L193.94 256z\"></path>\n    </svg>\n  );\n}\n","/**\n * chooseRandom\n *\n * Choose a random item from an array.\n *\n * @param {array} array - The array to choose from.\n * @param doNotChooseItem - An item to not choose (e.g. previously chosen item)\n */\nexport function chooseRandom<T>(array: T[], doNotChooseItem?: T) {\n  const arrayToUse =\n    doNotChooseItem !== undefined\n      ? array.filter((a) => a !== doNotChooseItem)\n      : array;\n\n  return arrayToUse[Math.floor(Math.random() * arrayToUse.length)];\n}\n","/**\n * disableReactDevTools\n *\n * Run before the app mounts to disable React dev tools.\n * Ideally, this is run conditionally based on environment.\n *\n * @see: https://github.com/facebook/react-devtools/issues/191#issuecomment-443607190\n */\nexport function disableReactDevTools() {\n  const noop = (): void => undefined;\n  const DEV_TOOLS = (window as any).__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n  if (typeof DEV_TOOLS === 'object') {\n    for (const [key, value] of Object.entries(DEV_TOOLS)) {\n      DEV_TOOLS[key] = typeof value === 'function' ? noop : null;\n    }\n  }\n}\n","/**\n * dontCloseWindowWarning\n *\n * Warns user not to close the window.\n *\n * @returns {() => void} unsubscribe function to stop listening, and the callback from firing.\n */\nexport function dontCloseWindowWarning(): () => void {\n  // @see: https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload#Example\n  const callback = (event: BeforeUnloadEvent) => {\n    // Cancel the event\n    event.preventDefault();\n    // Chrome requires returnValue to be set\n    event.returnValue = '';\n  };\n\n  window.addEventListener('beforeunload', callback);\n\n  return function unsubscribe() {\n    window.removeEventListener('beforeunload', callback);\n  };\n}\n","/**\n * formatDecimal\n *\n * A simple formatter with respect for dynamic decimal places\n * from `toFixed(2)` to `toFixed(4)`. If the number provided\n * is less than `0.01`, then `toFixed(4)` is used, else `toFixed(2)`.\n *\n * This may not work for all cases where the number is tiny, as it could\n * result in `\"0.0000\"`.\n *\n * @param {number} n\n * @returns {string} A `.toFixed()` representation of the decimal number.\n */\nexport function formatDecimal(n: number): string {\n  return n < 0.01 ? n.toFixed(4) : n.toFixed(2);\n}\n","/**\n * formatNumber\n *\n * Formats a number (U.S. region) with commas (e.g. 1000 -> 1,000).\n *\n * @param {string | number} value\n * @returns {string}\n *\n * @todo maybe a more friendly way via Intl API in JS core?\n */\nexport const formatNumber = (value: number | string): string => {\n  const regEx = new RegExp(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g);\n  return typeof value === 'number'\n    ? value.toString().replace(/,/g, '').replace(regEx, '$1,')\n    : value.replace(/,/g, '').replace(regEx, '$1,');\n};\n","type TimeRemaining = {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  total: number;\n};\n\nconst DEFAULT_REMAINING: TimeRemaining = {\n  days: 0,\n  hours: 0,\n  minutes: 0,\n  seconds: 0,\n  total: 0,\n};\n\nexport function getTimeRemaining(endTime: Date): TimeRemaining {\n  const nowDate: Date = new Date();\n\n  if (endTime <= nowDate) {\n    return DEFAULT_REMAINING;\n  }\n\n  const total: number = endTime.getTime() - nowDate.getTime();\n  const seconds: number = Math.floor((total / 1000) % 60);\n  const minutes: number = Math.floor((total / 1000 / 60) % 60);\n  const hours: number = Math.floor((total / (1000 * 60 * 60)) % 24);\n  const days: number = Math.floor(total / (1000 * 60 * 60 * 24));\n\n  return {\n    days,\n    hours,\n    minutes,\n    seconds,\n    total,\n  };\n}\n","/**\n * getValidationError\n *\n * Used with react-hook-form (mostly to solve a TS incorrect behavior)\n * Gets the associated error message with a field.\n *\n * @param {string} field\n * @param {Record<string, any>} errors\n * @returns string\n */\nexport function getValidationError(\n  field: string,\n  errors: Record<string, any>\n): string {\n  return errors[field] && 'message' in errors[field]\n    ? (errors[field].message as string)\n    : '';\n}\n","/**\n * normalizeString\n *\n * Converts string case to lowerCase and trims whitespace.\n *\n * @param {string} stringToNormalize\n * @returns {string} The normalized string lowercased and trimmed.\n */\nexport function normalizeString(stringToNormalize: string = ''): string {\n  return stringToNormalize.toLowerCase().trim();\n}\n","import {providers} from 'ethers';\n\nimport {normalizeString} from './normalizeString';\n\n/**\n * isPossibleContractWallet\n *\n * When passing a connected ethereum address, if there is bytecode at the address,\n * there is a good chance that it's a contract wallet. This is not 100% accurate, but it's\n * good enough to make a guess and do something trivial in the UI.\n *\n * @param address\n * @param provider\n * @returns `boolean`\n */\nexport async function isPossibleContractWallet(\n  /**\n   * Ethereum wallet address to check\n   */\n  address: string,\n  /**\n   * Ethers provider\n   *\n   * E.g. `new JsonRpcProvider(...)`\n   */\n  provider: providers.Provider\n): Promise<boolean> {\n  try {\n    const bytecode = await provider.getCode(normalizeString(address));\n\n    // It's a bit easier to detect an EOA (typical public/private key crypto wallet)\n    const addressIsExernallyOwnedAccount: boolean =\n      !bytecode ||\n      bytecode === '0x' ||\n      bytecode === '0x0' ||\n      bytecode === '0x00';\n\n    return addressIsExernallyOwnedAccount === false;\n  } catch (error) {\n    throw error;\n  }\n}\n","/**\n * numberRangeArray\n *\n * Outputs an array sequence of numbers given a total size and starting offset.\n * e.g. Years 1920..2002\n *\n * @param {size} number - Maximum number and last value of array. Default is 1.\n * @param {startAt} number - Offset to begin from. Default is 0.\n * @returns {number[]}\n */\nexport function numberRangeArray(size = 1, startAt = 0): number[] {\n  const adjustedSize = size + 1 - startAt;\n\n  return [...Array(adjustedSize)].map((_, i) => startAt + i);\n}\n","/**\n * stripFormatNumber\n *\n * Strips a number string formatting (via `formatNumber`) (e.g. 10,000 -> 10000).\n *\n * @param {string} value Number string to strip formatting (via `formatNumber`) from.\n * @returns {string} A Number string without any formatting form `formatNumber`.\n *\n * @todo maybe a more friendly way via Intl API in JS core?\n */\nexport const stripFormatNumber = (value: string): string =>\n  value.toString().replace(/,/g, '');\n","import {\n  createVote,\n  getVoteResultRootDomainDefinition,\n  prepareVoteResult,\n  signMessage,\n  VoteChoicesIndex,\n} from '@openlaw/snapshot-js-erc712';\nimport {useSelector} from 'react-redux';\nimport {useState} from 'react';\nimport {VoteEntry} from '@openlaw/snapshot-js-erc712/dist/types';\n\nimport {\n  DEFAULT_CHAIN,\n  MEMBER_COUNT_ADDRESS,\n  TOTAL_ADDRESS,\n  UNITS_ADDRESS,\n} from '../../../config';\nimport {\n  getAdapterAddressFromContracts,\n  multicall,\n  MulticallTuple,\n} from '../../web3/helpers';\nimport {BadNodeError} from './types';\nimport {ContractAdapterNames, Web3TxStatus} from '../../web3/types';\nimport {getOffchainVotingProof, submitOffchainVotingProof} from '../helpers';\nimport {normalizeString, numberRangeArray} from '../../../util/helpers';\nimport {OffchainVotingContract} from '../../../../abi-types/OffchainVotingContract';\nimport {PRIMARY_TYPE_ERC712, TX_CYCLE_MESSAGES} from '../../web3/config';\nimport {ProposalData} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useMemberActionDisabled} from '../../../hooks';\nimport {useWeb3Modal, useContractSend, useETHGasPrice} from '../../web3/hooks';\nimport CycleMessage from '../../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../../web3/EtherscanURL';\nimport FadeIn from '../../common/FadeIn';\nimport Loader from '../../feedback/Loader';\n\ntype Node = Parameters<\n  OffchainVotingContract['methods']['submitVoteResult']\n>['3'];\n\ntype OffchainVotingSubmitResultActionProps = {\n  adapterName: ContractAdapterNames;\n  proposal: ProposalData;\n};\n\ntype SubmitVoteResultArguments = [\n  daoAddress: string,\n  proposalId: string,\n  resultRoot: string,\n  lastResult: Node,\n  rootSig: string\n];\n\nexport function OffchainOpRollupVotingSubmitResultAction(\n  props: OffchainVotingSubmitResultActionProps\n) {\n  const {\n    adapterName,\n    proposal: {daoProposalVotingAdapter, snapshotProposal},\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [signatureStatus, setSignatureStatus] = useState<Web3TxStatus>(\n    Web3TxStatus.STANDBY\n  );\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Selectors\n   */\n\n  const bankExtensionAddress = useSelector(\n    (s: StoreState) => s.contracts.BankExtensionContract?.contractAddress\n  );\n\n  const bankExtensionMethods = useSelector(\n    (s: StoreState) => s.contracts.BankExtensionContract?.instance.methods\n  );\n\n  const getPriorAmountABI = useSelector((s: StoreState) =>\n    s.contracts.BankExtensionContract?.abi.find(\n      (ai) => ai.name === 'getPriorAmount'\n    )\n  );\n\n  const daoRegistryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  const getMemberAddressABI = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.abi\n  )?.find((ai) => ai.name === 'getMemberAddress');\n\n  const contracts = useSelector((s: StoreState) => s.contracts);\n\n  /**\n   * Our hooks\n   */\n\n  const {account, provider, web3Instance} = useWeb3Modal();\n  const {txEtherscanURL, txIsPromptOpen, txSend, txStatus} = useContractSend();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {isDisabled, openWhyDisabledModal, WhyDisabledModal} =\n    useMemberActionDisabled();\n\n  /**\n   * Variables\n   */\n\n  const votingAdapterMethods =\n    daoProposalVotingAdapter?.getWeb3VotingAdapterContract<OffchainVotingContract>()\n      .methods;\n\n  const isInProcess =\n    signatureStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    signatureStatus === Web3TxStatus.PENDING ||\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n\n  const isDone =\n    txStatus === Web3TxStatus.FULFILLED &&\n    signatureStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n\n  /**\n   * Functions\n   */\n\n  async function handleSubmit() {\n    try {\n      if (!daoRegistryAddress) {\n        throw new Error('No DAO Registry address was found.');\n      }\n\n      if (!bankExtensionAddress) {\n        throw new Error('No Bank Extension address was found.');\n      }\n\n      if (!getMemberAddressABI) {\n        throw new Error('No ABI for `getMemberAddress` was found.');\n      }\n\n      if (!getPriorAmountABI) {\n        throw new Error('No ABI for `getPriorAmount` was found.');\n      }\n\n      if (!snapshotProposal) {\n        throw new Error('No Snapshot proposal was found.');\n      }\n\n      if (!snapshotProposal.votes) {\n        throw new Error('No Snapshot proposal votes Array was found.');\n      }\n\n      if (!votingAdapterMethods) {\n        throw new Error('No \"OffchainVotingContract\" methods were found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      if (!bankExtensionMethods) {\n        throw new Error('No BankExtension methods were found.');\n      }\n\n      setSignatureStatus(Web3TxStatus.AWAITING_CONFIRM);\n\n      const {idInDAO: proposalHash} = snapshotProposal;\n\n      const snapshot: string = snapshotProposal.msg.payload.snapshot.toString();\n\n      const adapterAddress = getAdapterAddressFromContracts(\n        adapterName,\n        contracts\n      );\n\n      // Get total number of potential and admitted members in the DAO at the snapshot\n      const numberOfDAOMembersAtSnapshot: string = await bankExtensionMethods\n        .getPriorAmount(TOTAL_ADDRESS, MEMBER_COUNT_ADDRESS, snapshot)\n        .call();\n\n      const getMemberAddressCalls: MulticallTuple[] = numberRangeArray(\n        Number(numberOfDAOMembersAtSnapshot) - 1,\n        0\n      ).map(\n        (memberIndex): MulticallTuple => [\n          daoRegistryAddress,\n          getMemberAddressABI,\n          [memberIndex.toString()],\n        ]\n      );\n\n      // Get all member addresses in the DAO based on the member count\n      const memberAddresses: string[] = await multicall({\n        calls: getMemberAddressCalls,\n        web3Instance,\n      });\n\n      const memberBalanceCalls: MulticallTuple[] = memberAddresses.map(\n        (m): MulticallTuple => [\n          bankExtensionAddress,\n          getPriorAmountABI,\n          [m, UNITS_ADDRESS, snapshot],\n        ]\n      );\n\n      // Get all member balances\n      const memberBalancesAtSnapshot: string[] = await multicall({\n        calls: memberBalanceCalls,\n        web3Instance,\n      });\n\n      // Create vote entries\n      const votes: VoteEntry[] = memberAddresses.map((memberAddress, i) => {\n        const voteData = Object.values(\n          snapshotProposal.votes?.find(\n            (v) =>\n              normalizeString(memberAddress) ===\n              normalizeString(\n                Object.values(v)[0].msg.payload.metadata.memberAddress\n              )\n          ) || {}\n        )[0];\n\n        // Create votes based on whether `voteData` was found for `memberAddress`\n        return createVote({\n          proposalId: proposalHash,\n          sig: voteData?.sig || '0x',\n          timestamp: voteData ? Number(voteData.msg.timestamp) : 0,\n          voteYes: voteData?.msg.payload.choice === VoteChoicesIndex.Yes,\n          weight: voteData ? memberBalancesAtSnapshot[i] : '0',\n        });\n      });\n\n      // Prepare vote Result\n      const {voteResultTree, result} = await prepareVoteResult({\n        actionId: adapterAddress,\n        chainId: DEFAULT_CHAIN,\n        daoAddress: daoRegistryAddress,\n        votes,\n      });\n\n      const voteResultTreeHexRoot: string = voteResultTree.getHexRoot();\n      // The last of the result node tree steps\n      const resultNodeLast = result[result.length - 1] as any as Node;\n\n      // Validate the vote result node by calling the contract\n      const getBadNodeErrorResponse: string = await votingAdapterMethods\n        .getBadNodeError(\n          daoRegistryAddress,\n          proposalHash,\n          // `bool submitNewVote`\n          true,\n          voteResultTreeHexRoot,\n          snapshot,\n          // `gracePeriodStartingTime` should be `0` as `submitNewVote` is `true`\n          0,\n          resultNodeLast\n        )\n        .call();\n\n      if (Number(getBadNodeErrorResponse) !== BadNodeError.OK) {\n        throw new Error(\n          `Cannot submit off-chain voting result. Node has an error: ${BadNodeError[getBadNodeErrorResponse]}.`\n        );\n      }\n\n      // Prepare to sign root hex result\n      const {domain, types} = getVoteResultRootDomainDefinition(\n        daoRegistryAddress,\n        adapterAddress,\n        DEFAULT_CHAIN\n      );\n\n      const messageParams: string = JSON.stringify({\n        domain,\n        message: {root: voteResultTreeHexRoot},\n        primaryType: PRIMARY_TYPE_ERC712,\n        types,\n      });\n\n      // Sign root hex result message\n      const signature: string = await signMessage(\n        provider,\n        account,\n        messageParams\n      );\n\n      // Check if off-chain proof has already been submitted\n      const snapshotOffchainProofExists: boolean =\n        ((await getOffchainVotingProof(voteResultTreeHexRoot))?.merkle_root\n          .length || '') > 0;\n\n      /**\n       * Send off-chain vote proof silently to Snapshot Hub for storage and later use.\n       *\n       * We're piggy-backing off of the signature async call's status, instead of setting another status.\n       * E.g. It may confuse the user if we were to display text saying we're \"submitting\n       * off-chain proof\", or something to this effect, for a second or two.\n       */\n      if (!snapshotOffchainProofExists) {\n        await submitOffchainVotingProof({\n          actionId: adapterAddress,\n          chainId: DEFAULT_CHAIN,\n          steps: result,\n          merkleRoot: voteResultTreeHexRoot,\n          verifyingContract: daoRegistryAddress,\n        });\n      }\n\n      setSignatureStatus(Web3TxStatus.FULFILLED);\n\n      const submitVoteResultArguments: SubmitVoteResultArguments = [\n        daoRegistryAddress,\n        proposalHash,\n        voteResultTreeHexRoot,\n        resultNodeLast,\n        signature,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Send the tx\n      await txSend(\n        'submitVoteResult',\n        votingAdapterMethods,\n        submitVoteResultArguments,\n        txArguments\n      );\n    } catch (error) {\n      setSubmitError(error);\n      setSignatureStatus(Web3TxStatus.REJECTED);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    // Either Snapshot or chain tx\n    if (\n      txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      signatureStatus === Web3TxStatus.AWAITING_CONFIRM\n    ) {\n      return 'Awaiting your confirmation\\u2026';\n    }\n\n    // Only for chain tx\n    switch (txStatus) {\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Result submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <div>\n        <button\n          className=\"proposaldetails__button\"\n          disabled={isDisabled || isInProcessOrDone}\n          onClick={isDisabled || isInProcessOrDone ? () => {} : handleSubmit}>\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit Vote Result'}\n        </button>\n\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}>\n            Why is submitting disabled?\n          </button>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is this disabled?\" />\n    </>\n  );\n}\n","import {useEffect, useRef, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {VoteChoices} from '@openlaw/snapshot-js-erc712';\n\nimport {\n  useMemberActionDisabled,\n  useMemberUnitsAtSnapshot,\n} from '../../../hooks';\nimport {AsyncStatus} from '../../../util/types';\nimport {ContractAdapterNames, Web3TxStatus} from '../../web3/types';\nimport {getVoteChosen} from '../helpers';\nimport {ProposalData} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {truncateEthAddress} from '../../../util/helpers';\nimport {useSignAndSendVote} from '../hooks';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VotingActionButtons} from '.';\nimport ErrorMessageWithDetails from '../../common/ErrorMessageWithDetails';\n\ntype OffchainVotingActionProps = {\n  adapterName?: ContractAdapterNames;\n  proposal: ProposalData;\n};\n\ntype VotingDisabledReasons = {\n  addressIsDelegatedMessage: string;\n  alreadyVotedMessage: string;\n  fetchingMembershipAtSnapshotMessage: string;\n  noMembershipAtSnapshotMessage: string;\n  undeterminedMembershipAtSnapshotMessage: string;\n};\n\nconst {FULFILLED, PENDING, REJECTED} = AsyncStatus;\n\nconst getDelegatedAddressMessage = (a: string) =>\n  `Your member address is delegated to ${truncateEthAddress(\n    a,\n    7\n  )}. You must use that address to vote.`;\n\n/**\n * OffchainVotingAction\n *\n * An off-chain voting action component which facilitates submitting to Snapshot Hub.\n *\n * @returns {JSX.Element}\n */\nexport function OffchainVotingAction(\n  props: OffchainVotingActionProps\n): JSX.Element | null {\n  const {\n    adapterName,\n    proposal: {snapshotProposal, refetchProposalOrDraft},\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [voteChoiceClicked, setVoteChoiceClicked] = useState<VoteChoices>();\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Refs\n   */\n\n  const votingDisabledReasonsRef = useRef<VotingDisabledReasons>({\n    addressIsDelegatedMessage: '',\n    alreadyVotedMessage: '',\n    fetchingMembershipAtSnapshotMessage: '',\n    noMembershipAtSnapshotMessage: '',\n    undeterminedMembershipAtSnapshotMessage: '',\n  });\n\n  /**\n   * Selectors\n   */\n\n  const delegateAddress = useSelector(\n    (s: StoreState) => s.connectedMember?.delegateKey\n  );\n\n  const isAddressDelegated = useSelector(\n    (s: StoreState) => s.connectedMember?.isAddressDelegated\n  );\n\n  const memberAddress = useSelector(\n    (s: StoreState) => s.connectedMember?.memberAddress\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account} = useWeb3Modal();\n  const {signAndSendVote, voteDataStatus} = useSignAndSendVote();\n  const voteChosen = getVoteChosen(snapshotProposal?.votes, account || '');\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    setOtherDisabledReasons,\n    WhyDisabledModal,\n  } = useMemberActionDisabled();\n\n  const {\n    hasMembershipAtSnapshot,\n    memberUnitsAtSnapshotError,\n    memberUnitsAtSnapshotStatus,\n  } = useMemberUnitsAtSnapshot(\n    memberAddress,\n    snapshotProposal?.msg.payload.snapshot\n  );\n\n  /**\n   * Variables\n   */\n\n  const snapshot: number | undefined = snapshotProposal?.msg.payload.snapshot;\n  const proposalHash: string = snapshotProposal?.idInDAO || '';\n  const snapshotProposalId: string = snapshotProposal?.idInSnapshot || '';\n\n  const isInProcess =\n    voteDataStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    voteDataStatus === Web3TxStatus.PENDING;\n\n  const isDone = voteDataStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone;\n\n  const isSubmitDisabled = isDisabled || isInProcessOrDone;\n\n  const voteChoiceProgress: VoteChoices | undefined = isInProcess\n    ? voteChoiceClicked\n    : undefined;\n\n  const error: Error | undefined = submitError || memberUnitsAtSnapshotError;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    // 1. Determine and set local reasons why voting would be disabled\n\n    // Reason: address is delegated\n    if (delegateAddress) {\n      setDisabledReasonHelper(\n        'addressIsDelegatedMessage',\n        isAddressDelegated ? getDelegatedAddressMessage(delegateAddress) : ''\n      );\n    }\n\n    // Reason: already voted\n    setDisabledReasonHelper(\n      'alreadyVotedMessage',\n      voteChosen ? 'You have already voted.' : ''\n    );\n\n    // Reason: did not hold membership by snapshot\n    setDisabledReasonHelper(\n      'noMembershipAtSnapshotMessage',\n      !hasMembershipAtSnapshot && memberUnitsAtSnapshotStatus === FULFILLED\n        ? `You were not a member when the proposal was sponsored at snapshot ${snapshot}.`\n        : ''\n    );\n\n    // Reason: determining membership by snapshot\n    setDisabledReasonHelper(\n      'fetchingMembershipAtSnapshotMessage',\n      memberUnitsAtSnapshotStatus === PENDING\n        ? `We are waiting on your membership status for when this proposal was sponsored at snapshot ${snapshot}.`\n        : ''\n    );\n\n    // Reason: cannot determine membership by snapshot\n    setDisabledReasonHelper(\n      'undeterminedMembershipAtSnapshotMessage',\n      memberUnitsAtSnapshotStatus === REJECTED\n        ? `Something went wrong. Your membership status when this proposal was sponsored at snapshot ${snapshot} cannot be determined.`\n        : ''\n    );\n\n    // 2. Set reasons\n    setOtherDisabledReasons(Object.values(votingDisabledReasonsRef.current));\n  }, [\n    delegateAddress,\n    hasMembershipAtSnapshot,\n    isAddressDelegated,\n    memberUnitsAtSnapshotStatus,\n    setOtherDisabledReasons,\n    snapshot,\n    voteChosen,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function handleSubmitVote(choice: VoteChoices) {\n    try {\n      if (!proposalHash) {\n        throw new Error('No proposal hash was found.');\n      }\n\n      if (!snapshotProposalId) {\n        throw new Error('No proposal ID was found.');\n      }\n\n      setVoteChoiceClicked(VoteChoices[choice]);\n\n      await signAndSendVote({\n        ...(adapterName ? {adapterName} : undefined),\n        partialVoteData: {choice},\n        proposalIdInDAO: proposalHash,\n        proposalIdInSnapshot: snapshotProposalId,\n      });\n\n      // Refetch to show the vote the user submitted\n      refetchProposalOrDraft();\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  function setDisabledReasonHelper(\n    key: keyof VotingDisabledReasons,\n    message: string\n  ): void {\n    votingDisabledReasonsRef.current = {\n      ...votingDisabledReasonsRef.current,\n\n      [key]: message,\n    };\n  }\n\n  return (\n    <>\n      <VotingActionButtons\n        onClick={isSubmitDisabled ? () => {} : handleSubmitVote}\n        buttonProps={{\n          disabled: isSubmitDisabled,\n          'aria-disabled': isSubmitDisabled,\n        }}\n        voteChosen={voteChosen}\n        voteProgress={voteChoiceProgress}\n      />\n\n      {isDisabled && (\n        <button\n          className=\"button--help-centered\"\n          onClick={openWhyDisabledModal}>\n          Why is voting disabled?\n        </button>\n      )}\n\n      <ErrorMessageWithDetails\n        error={error}\n        renderText=\"Something went wrong\"\n      />\n\n      <WhyDisabledModal title=\"Why is voting disabled?\" />\n    </>\n  );\n}\n","import {useEffect, useState} from 'react';\n\nimport {getTimeRemaining} from '../../util/helpers';\n\nexport type RenderCountdownTextProps = {\n  formatTimePeriod: typeof formatTimePeriod;\n  showDaysOnly?: boolean;\n} & Pick<\n  ReturnType<typeof getTimeRemaining>,\n  'days' | 'hours' | 'minutes' | 'seconds'\n>;\n\ntype ProposalPeriodCountdownProps = {\n  endedLabel?: React.ReactNode;\n  endLabel?: React.ReactNode;\n  endPeriodMs: number;\n  renderCountdownText?: (p: RenderCountdownTextProps) => React.ReactNode;\n  startLabel?: React.ReactNode;\n  startPeriodMs: number;\n};\n\nfunction displayCountdown({\n  countdownFrom,\n  renderCountdownText,\n  showDaysOnly,\n}: {\n  countdownFrom: Date;\n  renderCountdownText?: ProposalPeriodCountdownProps['renderCountdownText'];\n  showDaysOnly?: boolean;\n}): string | React.ReactNode {\n  const {days, hours, minutes, seconds} = getTimeRemaining(countdownFrom);\n\n  const renderedCountdownText = renderCountdownText?.({\n    days,\n    formatTimePeriod,\n    hours,\n    minutes,\n    seconds,\n    showDaysOnly,\n  });\n\n  const format = formatTimePeriod;\n\n  // Custom\n  if (renderedCountdownText) {\n    return renderedCountdownText;\n  }\n\n  // days\n  if (days > 2 && showDaysOnly) {\n    return `~${days} days`;\n  }\n\n  // days : hrs : min\n  if (days > 0) {\n    return `${format(days, 'day')} : ${format(hours, 'hr')} : ${format(\n      minutes,\n      'min'\n    )}`;\n  }\n\n  // hrs : min\n  if (hours > 0) {\n    return `${format(hours, 'hr')} : ${format(minutes, 'min')}`;\n  }\n\n  // min : sec\n  if (minutes > 0) {\n    return `${format(minutes, 'min')} : ${format(seconds, 'sec')}`;\n  }\n\n  // sec\n  return <span className=\"color-brightsalmon\">{format(seconds, 'sec')}</span>;\n}\n\nfunction formatTimePeriod(time: number, period: 'day' | 'hr' | 'min' | 'sec') {\n  const formattedPeriod = time === 0 || time > 1 ? `${period}s` : period;\n\n  return `${time} ${formattedPeriod}`;\n}\n\nexport default function ProposalPeriodCountdown(\n  props: ProposalPeriodCountdownProps\n) {\n  const {\n    endedLabel,\n    endLabel,\n    endPeriodMs,\n    renderCountdownText,\n    startLabel,\n    startPeriodMs,\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [currentDate, setCurrentDate] = useState<Date>();\n\n  /**\n   * Variables\n   */\n\n  const startDate: Date = new Date(startPeriodMs);\n  const endDate: Date = new Date(endPeriodMs);\n\n  /**\n   * Effects\n   */\n\n  // Every current `Date` each 1000ms (1 second)\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentDate(new Date());\n    }, 1000);\n\n    return function cleanup() {\n      clearInterval(interval);\n    };\n  }, []);\n\n  /**\n   * Render\n   */\n\n  if (!currentDate) return null;\n\n  // If time period has not yet started\n  if (currentDate < startDate) {\n    return (\n      <div>\n        <span>\n          <span className=\"votingstatus\">{startLabel || 'Starts:'}</span>{' '}\n          <span className=\"votingstatus__timer\">\n            {displayCountdown({\n              countdownFrom: startDate,\n              renderCountdownText,\n              showDaysOnly: true,\n            })}\n          </span>\n        </span>\n      </div>\n    );\n  }\n\n  // If time period is happening now\n  if (currentDate < endDate) {\n    return (\n      <div>\n        <span>\n          <span className=\"votingstatus\">{endLabel || 'Ends:'}</span>{' '}\n          <span className=\"votingstatus__timer\">\n            {displayCountdown({countdownFrom: endDate, renderCountdownText})}\n          </span>\n        </span>\n      </div>\n    );\n  }\n\n  // Default fallthrough: time period has ended\n  return (\n    <div>\n      <span className=\"votingstatus\">{endedLabel || 'Ended'}</span>\n    </div>\n  );\n}\n","import {SVGAttributes} from 'react';\n\nexport default function StopwatchSVG(props: SVGAttributes<HTMLOrSVGElement>) {\n  return (\n    <svg\n      width=\"20px\"\n      height=\"20px\"\n      viewBox=\"0 0 21 24\"\n      version=\"1.1\"\n      {...props}>\n      <defs>\n        <path\n          d=\"M17.6516,6.408 C19.8162,8.36 21,11.02 21,13.844 C21,19.458 16.303,24 10.5,24 C4.69616,24 0,19.457 0,13.844 C0,8.506 4.22802,4.197 9.53077,3.731 L9.53077,1.875 L6.68768,1.875 C6.15238,1.875 5.71845,1.455 5.71845,0.938 C5.71845,0.42 6.15238,0 6.68768,0 L14.3123,0 C14.8476,0 15.2815,0.42 15.2815,0.938 C15.2815,1.455 14.8476,1.875 14.3123,1.875 L11.46923,1.875 L11.46923,3.731 C13.1316,3.877 14.7126,4.398 16.1059,5.252 L17.4392,3.962 C17.8177,3.596 18.4314,3.596 18.8099,3.962 C19.1885,4.328 19.1885,4.922 18.8099,5.288 L17.6516,6.408 Z M10.5,22.125 C15.2208,22.125 19.0615,18.41 19.0615,13.844 C19.0615,9.277 15.2209,5.562 10.5,5.562 C5.77913,5.562 1.93846,9.277 1.93846,13.844 C1.93846,18.41 5.77917,22.125 10.5,22.125 Z M11.46923,8.312 L11.46923,13.844 C11.46923,14.362 11.03531,14.781 10.5,14.781 C9.96469,14.781 9.53077,14.362 9.53077,13.844 L9.53077,8.312 C9.53077,7.795 9.96469,7.375 10.5,7.375 C11.03531,7.375 11.46923,7.795 11.46923,8.312 Z\"\n          id=\"path-1\"></path>\n      </defs>\n      <g\n        id=\"Page-1\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\">\n        <g id=\"Group-70\">\n          <mask id=\"mask-2\" fill=\"white\">\n            <use xlinkHref=\"#path-1\"></use>\n          </mask>\n          <use id=\"Clip-69\" fill=\"currentColor\" xlinkHref=\"#path-1\"></use>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\nimport {SquareRootVotingBar} from '.';\nimport ProposalPeriodCountdown from '../ProposalPeriodCountdown';\nimport StopwatchSVG from '../../../assets/svg/StopwatchSVG';\n\ntype VotingStatusProps = {\n  hasVotingEnded: boolean;\n  /**\n   * A render prop to display status to before / after the clock timer is shown.\n   */\n  renderStatus: () => React.ReactNode;\n  /**\n   * A render prop: display the `ProposalPeriod` timer.\n   * `renderTimer` Provides `ProposalPeriod` component as an argument.\n   *\n   * Passing the `ProposalPeriod` component via the render prop\n   * gives the opportunity to easily show a timer for voting, or grace period, for example,\n   * without adding more props.\n   */\n  renderTimer: (component: typeof ProposalPeriodCountdown) => React.ReactNode;\n  /**\n   * Set to `false` to hide percentage data under the voting progress bar.\n   * Defaults to `true`.\n   */\n  showPercentages?: boolean;\n  noUnits: Parameters<typeof SquareRootVotingBar>[0]['noUnits'];\n  totalUnits: Parameters<typeof SquareRootVotingBar>[0]['totalUnits'];\n  yesUnits: Parameters<typeof SquareRootVotingBar>[0]['yesUnits'];\n};\n\nexport function VotingStatus(props: VotingStatusProps) {\n  const {\n    hasVotingEnded,\n    noUnits,\n    renderStatus,\n    renderTimer,\n    showPercentages = true,\n    totalUnits,\n    yesUnits,\n  } = props;\n\n  const renderedStatus = renderStatus();\n\n  return (\n    <>\n      <div className=\"votingstatus-container\">\n        <StopwatchSVG aria-label=\"Proposal status\" role=\"img\" />\n\n        {renderedStatus && (\n          <span className=\"votingstatus\">{renderedStatus}</span>\n        )}\n\n        {renderTimer(ProposalPeriodCountdown)}\n      </div>\n\n      {/* VOTES */}\n      <SquareRootVotingBar\n        yesUnits={yesUnits}\n        noUnits={noUnits}\n        totalUnits={totalUnits}\n        votingExpired={hasVotingEnded}\n        showPercentages={showPercentages}\n      />\n    </>\n  );\n}\n","import {useEffect} from 'react';\n\nimport {CycleEllipsis} from '../../feedback';\nimport {RenderCountdownTextProps} from '../ProposalPeriodCountdown';\nimport {useTimeStartEnd} from '../../../hooks';\nimport {VotingResult} from '../types';\nimport {VotingStatus} from './VotingStatus';\n\nexport type OffchainVotingStatusRenderStatusProps = {\n  countdownGracePeriodEndMs: OffchainVotingStatusProps['countdownGracePeriodEndMs'];\n  countdownGracePeriodStartMs: OffchainVotingStatusProps['countdownGracePeriodStartMs'];\n  countdownVotingEndMs: OffchainVotingStatusProps['countdownVotingEndMs'];\n  countdownVotingStartMs: OffchainVotingStatusProps['countdownVotingStartMs'];\n  didVotePassSimpleMajority: boolean | undefined;\n  gracePeriodStartEndInitReady: boolean;\n  hasGracePeriodEnded: boolean;\n  hasGracePeriodStarted: boolean;\n  hasVotingEnded: boolean;\n  hasVotingStarted: boolean;\n  votingStartEndInitReady: boolean;\n};\n\nexport type OnGracePeriodChangeProps = {\n  hasGracePeriodEnded: boolean;\n  hasGracePeriodStarted: boolean;\n  /**\n   * Helpful if responding to events for multiple proposals\n   */\n  proposalId?: string;\n  gracePeriodStartEndInitReady: boolean;\n};\n\nexport type OnVotingPeriodChangeProps = {\n  hasVotingEnded: boolean;\n  hasVotingStarted: boolean;\n  /**\n   * Helpful if responding to events for multiple proposals\n   */\n  proposalId?: string;\n  votingStartEndInitReady: boolean;\n};\n\ntype OffchainVotingStatusProps = {\n  /**\n   * Voting start time\n   * i.e. calculated from the `OffchainVoting` contract's vote's start time, or Snapshot proposal's start time\n   */\n  countdownVotingStartMs: number | undefined;\n  /**\n   * Voting end time\n   * i.e. calculated from the `OffchainVoting` contract's vote's end time, or Snapshot proposal's end time\n   */\n  countdownVotingEndMs: number | undefined;\n  /**\n   * Grace period start time\n   * i.e. calculated from the `OffchainVoting` contract's vote's start time, or Snapshot proposal's start time\n   */\n  countdownGracePeriodStartMs?: number;\n  /**\n   * Grace period end time\n   * i.e. calculated from the `OffchainVoting` contract's vote's end time, or Snapshot proposal's end time\n   */\n  countdownGracePeriodEndMs?: number;\n  /**\n   * An optional callback to run on grace period time changes\n   */\n  onGracePeriodChange?: (p: OnGracePeriodChangeProps) => void;\n  /**\n   * An optional callback to run on voting time changes\n   */\n  onVotingPeriodChange?: (p: OnVotingPeriodChangeProps) => void;\n  /**\n   * An optional proposal ID if working with multiple proposals (i.e. listing).\n   * Helps when repsonding to events from callbacks like `onVotingPeriodChange` and `onGracePeriodChange`.\n   */\n  proposalId?: string;\n  /**\n   * Render a custom status\n   */\n  renderStatus?: (p: OffchainVotingStatusRenderStatusProps) => React.ReactNode;\n  /**\n   * A single proposal's `VotingResult` (i.e. as provided by `useOffchainVotingResults`)\n   */\n  votingResult: VotingResult | undefined;\n};\n\nfunction renderCountdownText({\n  days,\n  hours,\n  formatTimePeriod: format,\n}: RenderCountdownTextProps) {\n  if (days > 0) {\n    return `${format(days, 'day')} : ${format(hours, 'hr')}`;\n  }\n}\n\n// Grace period label\nconst gracePeriodLabel = <span>Grace period:</span>;\n\nconst cycleEllipsisFadeInProps = {duration: 150};\n\n/**\n * OffchainVotingStatus\n *\n * A read-only component to show voting status information.\n *\n * @param {OffchainVotingStatusProps} props\n * @returns {JSX.Element}\n */\nexport function OffchainVotingStatus({\n  countdownGracePeriodEndMs = 0,\n  countdownGracePeriodStartMs = 0,\n  countdownVotingEndMs = 0,\n  countdownVotingStartMs = 0,\n  onGracePeriodChange,\n  onVotingPeriodChange,\n  proposalId,\n  renderStatus,\n  votingResult,\n}: OffchainVotingStatusProps): JSX.Element {\n  /**\n   * Our hooks\n   */\n\n  const {\n    hasTimeEnded: hasVotingEnded,\n    hasTimeStarted: hasVotingStarted,\n    timeStartEndInitReady: votingStartEndInitReady,\n  } = useTimeStartEnd(\n    countdownVotingStartMs / 1000,\n    countdownVotingEndMs / 1000\n  );\n\n  const {\n    hasTimeEnded: hasGracePeriodEnded,\n    hasTimeStarted: hasGracePeriodStarted,\n    timeStartEndInitReady: gracePeriodStartEndInitReady,\n  } = useTimeStartEnd(\n    countdownGracePeriodStartMs / 1000,\n    countdownGracePeriodEndMs / 1000\n  );\n\n  /**\n   * Variables\n   */\n\n  const isGracePeriodActive: boolean =\n    gracePeriodStartEndInitReady &&\n    hasGracePeriodStarted &&\n    !hasGracePeriodEnded;\n\n  const noUnits: number = votingResult?.No.units || 0;\n  const totalUnits: number = votingResult?.totalUnits || 0;\n  const yesUnits: number = votingResult?.Yes.units || 0;\n\n  // We use `undefined` to indicate that the result has not yet been determined.\n  const didVotePassSimpleMajority: boolean | undefined = hasVotingEnded\n    ? yesUnits > noUnits\n    : undefined;\n\n  const renderedStatusFromProp = renderStatus?.({\n    countdownGracePeriodEndMs,\n    countdownGracePeriodStartMs,\n    countdownVotingEndMs,\n    countdownVotingStartMs,\n    didVotePassSimpleMajority,\n    gracePeriodStartEndInitReady,\n    hasGracePeriodEnded,\n    hasGracePeriodStarted,\n    hasVotingEnded,\n    hasVotingStarted,\n    votingStartEndInitReady,\n  });\n\n  /**\n   * Effects\n   */\n\n  // When voting times are updated, call the `onVotingPeriodChange` callback\n  useEffect(() => {\n    if (!votingStartEndInitReady) return;\n\n    onVotingPeriodChange?.({\n      hasVotingStarted,\n      hasVotingEnded,\n      proposalId,\n      votingStartEndInitReady,\n    });\n  }, [\n    hasVotingEnded,\n    hasVotingStarted,\n    onVotingPeriodChange,\n    proposalId,\n    votingStartEndInitReady,\n  ]);\n\n  // When voting times are updated, call the `onGracePeriodChange` callback\n  useEffect(() => {\n    if (!gracePeriodStartEndInitReady) return;\n\n    onGracePeriodChange?.({\n      hasGracePeriodEnded,\n      hasGracePeriodStarted,\n      proposalId,\n      gracePeriodStartEndInitReady,\n    });\n  }, [\n    gracePeriodStartEndInitReady,\n    hasGracePeriodEnded,\n    hasGracePeriodStarted,\n    onGracePeriodChange,\n    proposalId,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  function renderOffchainVotingStatus(): React.ReactNode {\n    // Render status from prop\n    if (renderedStatusFromProp) {\n      return renderedStatusFromProp;\n    }\n\n    // Loading\n    if (!votingStartEndInitReady) {\n      return (\n        <CycleEllipsis\n          ariaLabel=\"Getting off-chain voting status\"\n          fadeInProps={cycleEllipsisFadeInProps}\n          intervalMs={200}\n        />\n      );\n    }\n\n    // If in grace period, do not show a status.\n    if (isGracePeriodActive) {\n      return '';\n    }\n\n    // If passed on voting period ended\n    if (didVotePassSimpleMajority) {\n      return 'Approved';\n    }\n\n    // If failed on voting period ended\n    if (didVotePassSimpleMajority === false) {\n      return 'Failed';\n    }\n  }\n\n  function renderTimer(\n    ProposalPeriodComponent: Parameters<\n      Parameters<typeof VotingStatus>[0]['renderTimer']\n    >[0]\n  ): React.ReactNode {\n    // Vote countdown timer\n    if (votingStartEndInitReady && hasVotingStarted && !hasVotingEnded) {\n      return (\n        <ProposalPeriodComponent\n          endPeriodMs={countdownVotingEndMs}\n          renderCountdownText={renderCountdownText}\n          startPeriodMs={countdownVotingStartMs}\n        />\n      );\n    }\n\n    // Grace period countdown timer\n    if (isGracePeriodActive) {\n      return (\n        <ProposalPeriodComponent\n          endLabel={gracePeriodLabel}\n          endPeriodMs={countdownGracePeriodEndMs || 0}\n          renderCountdownText={renderCountdownText}\n          startPeriodMs={countdownGracePeriodStartMs || 0}\n        />\n      );\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <VotingStatus\n      hasVotingEnded={hasVotingEnded}\n      noUnits={noUnits}\n      renderStatus={renderOffchainVotingStatus}\n      renderTimer={renderTimer}\n      totalUnits={totalUnits}\n      yesUnits={yesUnits}\n    />\n  );\n}\n","import {SVGAttributes} from 'react';\n\nexport default function CheckSVG(props: SVGAttributes<HTMLOrSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 512 512\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M435.848 83.466L172.804 346.51l-96.652-96.652c-4.686-4.686-12.284-4.686-16.971 0l-28.284 28.284c-4.686 4.686-4.686 12.284 0 16.971l133.421 133.421c4.686 4.686 12.284 4.686 16.971 0l299.813-299.813c4.686-4.686 4.686-12.284 0-16.971l-28.284-28.284c-4.686-4.686-12.284-4.686-16.97 0z\"></path>\n    </svg>\n  );\n}\n","import CheckSVG from '../../../assets/svg/CheckSVG';\n\ntype SquareRootVotingBarProps = {\n  /**\n   * Allow values to not be set as they may not be ready\n   */\n  yesUnits: number | undefined;\n  /**\n   * Allow values to not be set as they may not be ready\n   */\n  noUnits: number | undefined;\n  /**\n   * Allow values to not be set as they may not be ready\n   */\n  totalUnits: number | undefined;\n  votingExpired: boolean;\n  showPercentages: boolean;\n};\n\n/**\n * Provides a formatted number string for display as a percentage.\n * Two decimal places are used, unless the decimals are `.00`,\n * then they are removed.\n *\n * E.g. 50%; 50.77%; 0%\n *\n * @param units\n * @param totalUnits\n * @returns `string`\n */\nfunction getUnitsPercent(units: number, totalUnits: number): string {\n  return ((units / totalUnits) * 100).toFixed(2).replace(/\\.00$/, '');\n}\n\nexport function SquareRootVotingBar({\n  yesUnits = 0,\n  noUnits = 0,\n  totalUnits,\n  votingExpired,\n  showPercentages,\n}: SquareRootVotingBarProps) {\n  /**\n   * Variables\n   */\n\n  const percentYes = totalUnits ? getUnitsPercent(yesUnits, totalUnits) : '0';\n  const percentNo = totalUnits ? getUnitsPercent(noUnits, totalUnits) : '0';\n\n  /**\n   * Render\n   */\n\n  return (\n    <div className=\"votingbar-container\">\n      <div className=\"votingbar\">\n        {/* YES */}\n        <div\n          className=\"votingbar__segment--yes\"\n          aria-label={`${percentYes}% yes votes`}\n          style={{\n            width: `${percentYes}%`,\n          }}\n        />\n\n        {/* NO */}\n        <div\n          className=\"votingbar__segment--no\"\n          aria-label={`${percentNo}% no votes`}\n          style={{\n            width: `${percentNo}%`,\n          }}\n        />\n      </div>\n\n      <div className=\"votingbar__percentages\">\n        {showPercentages && (\n          <>\n            {/* YES */}\n            {votingExpired && yesUnits > noUnits && (\n              <span className=\"yes-check\">\n                <CheckSVG aria-label=\"Vote has passed\" />\n              </span>\n            )}\n            <span className=\"yes-percent\">{percentYes}%</span>\n\n            {/* NO */}\n            <span className=\"no-percent\">{percentNo}%</span>\n            {votingExpired && yesUnits <= noUnits && (\n              <span className=\"no-check\">\n                <CheckSVG aria-label=\"Vote has failed\" />\n              </span>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {ButtonHTMLAttributes} from 'react';\nimport {VoteChoices} from '@openlaw/snapshot-js-erc712';\n\nimport CheckSVG from '../../../assets/svg/CheckSVG';\nimport Loader from '../../feedback/Loader';\n\ntype VotingActionButtonsProps = {\n  /**\n   * Common <button /> props for both buttons\n   */\n  buttonProps?: ButtonHTMLAttributes<HTMLButtonElement>;\n  onClick: (choice: VoteChoices) => void;\n  /**\n   * Which vote did the current connected user submit?\n   */\n  voteChosen?: VoteChoices;\n  /**\n   * Shows a loading spinner for a voting button.\n   */\n  voteProgress?: VoteChoices;\n};\n\nexport function VotingActionButtons(\n  props: VotingActionButtonsProps\n): JSX.Element {\n  const {buttonProps, onClick, voteChosen, voteProgress} = props;\n\n  /**\n   * Functions\n   */\n\n  function getButtonARIALabel(\n    choice: VoteChoices\n  ): Partial<React.HTMLAttributes<HTMLElement>> {\n    return voteProgress === choice\n      ? {'aria-label': `Voting ${choice} \\u2026`}\n      : {};\n  }\n\n  function getButtonText(choice: VoteChoices): React.ReactNode {\n    return voteProgress === choice ? (\n      <Loader aria-label={`Currently voting ${choice}...`} role=\"img\" />\n    ) : voteChosen === choice ? (\n      `Voted ${choice}`\n    ) : (\n      `Vote ${choice}`\n    );\n  }\n\n  function handleClick(choice: VoteChoices) {\n    return () => {\n      onClick(choice);\n    };\n  }\n\n  function renderVotedCheck(\n    choice: VoteChoices,\n    ariaLabel: string\n  ): React.ReactNode {\n    return voteChosen === choice ? (\n      <>\n        <CheckSVG aria-label={ariaLabel} />{' '}\n      </>\n    ) : (\n      ''\n    );\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <button\n        {...buttonProps}\n        {...getButtonARIALabel(VoteChoices.Yes)}\n        className={`proposaldetails__button`}\n        onClick={handleClick(VoteChoices.Yes)}>\n        {renderVotedCheck(VoteChoices.Yes, 'You voted yes')}\n        {getButtonText(VoteChoices.Yes)}\n      </button>\n\n      <button\n        {...buttonProps}\n        {...getButtonARIALabel(VoteChoices.No)}\n        className={`proposaldetails__button`}\n        onClick={handleClick(VoteChoices.No)}>\n        {renderVotedCheck(VoteChoices.No, 'You voted no')}\n        {getButtonText(VoteChoices.No)}\n      </button>\n    </>\n  );\n}\n","import {useState} from 'react';\nimport {TransactionReceipt} from 'web3-core/types';\n\nimport {CHAINS, ETHERSCAN_URLS} from '../../../config';\nimport {contractSend} from '../helpers';\nimport {dontCloseWindowWarning} from '../../../util/helpers';\nimport {useWeb3Modal} from './useWeb3Modal';\nimport {Web3TxStatus} from '../types';\n\ntype UseContractSendReturn = {\n  txError: Error | undefined;\n  txEtherscanURL: string;\n  txIsPromptOpen: boolean;\n  txReceipt: TransactionReceipt | undefined;\n  txSend: (\n    ...p: Parameters<typeof contractSend>\n  ) => Promise<TransactionReceipt | undefined>;\n  txStatus: Web3TxStatus;\n};\n\n/**\n * useContractSend\n *\n * A React hook which encapsulates the call and related values of `contractSend`.\n *\n * @returns {UseContractSendReturn}\n */\nexport function useContractSend(): UseContractSendReturn {\n  const [txError, setTxError] = useState<Error>();\n  const [txEtherscanURL, setTxEtherscanURL] = useState<string>('');\n  const [txIsPromptOpen, setTxIsPromptOpen] = useState<boolean>(false);\n  const [txReceipt, setTxReceipt] = useState<TransactionReceipt>();\n  const [txStatus, setTxStatus] = useState<Web3TxStatus>(Web3TxStatus.STANDBY);\n\n  /**\n   * Our hooks\n   */\n\n  const {networkId} = useWeb3Modal();\n\n  /**\n   * Functions\n   */\n\n  function handleOnTxProcess(callback?: (txh: string) => void) {\n    return (txHash: string) => {\n      setTxStatus(Web3TxStatus.PENDING);\n      setTxIsPromptOpen(false);\n\n      // Ganache transactions do not show on Etherscan.\n      if (networkId && networkId !== CHAINS.GANACHE) {\n        setTxEtherscanURL(`${ETHERSCAN_URLS[networkId]}/tx/${txHash}`);\n      }\n\n      callback && callback(txHash);\n    };\n  }\n\n  async function txSend(\n    ...contractSendParams: Parameters<typeof contractSend>\n  ) {\n    // Activate \"don't close window\" warning\n    const unsubscribeDontCloseWindow = dontCloseWindowWarning();\n\n    try {\n      // Reset state in case trying again after error.\n      setTxError(undefined);\n      setTxEtherscanURL('');\n\n      setTxStatus(Web3TxStatus.AWAITING_CONFIRM);\n      setTxIsPromptOpen(true);\n\n      // Intercept the on process callback to allow us to set our internal state.\n      contractSendParams[4] = handleOnTxProcess(contractSendParams[4]);\n\n      const receipt = await contractSend(...contractSendParams);\n\n      setTxReceipt(receipt);\n      setTxStatus(Web3TxStatus.FULFILLED);\n\n      unsubscribeDontCloseWindow();\n\n      return receipt;\n    } catch (error) {\n      setTxError(error);\n      setTxStatus(Web3TxStatus.REJECTED);\n      setTxIsPromptOpen(false);\n\n      unsubscribeDontCloseWindow();\n\n      throw error;\n    }\n  }\n\n  return {\n    txError,\n    txEtherscanURL,\n    txIsPromptOpen,\n    txReceipt,\n    txSend,\n    txStatus,\n  };\n}\n","import {AbiItem} from 'web3-utils/types';\nimport namehash from '@ensdomains/eth-ens-namehash';\nimport Web3 from 'web3';\n\nimport {CHAINS, DEFAULT_CHAIN} from '../../../config';\nimport {ReverseRecords} from '../../../../abi-types/ReverseRecords';\nimport ReverseRecordsABI from '../../../abis/ReverseRecords.json';\n\n/**\n * @see https://github.com/ensdomains/reverse-records#deployed-contract-address\n */\nexport const REVERSE_RECORDS_ADDRESS: Pick<\n  Record<typeof CHAINS[keyof typeof CHAINS], string>,\n  | typeof CHAINS.GOERLI\n  | typeof CHAINS.MAINNET\n  | typeof CHAINS.RINKEBY\n  | typeof CHAINS.ROPSTEN\n> = {\n  [CHAINS.GOERLI]: '0x333Fc8f550043f239a2CF79aEd5e9cF4A20Eb41e',\n  [CHAINS.MAINNET]: '0x3671aE578E63FdF66ad4F3E12CC0c0d71Ac7510C',\n  [CHAINS.RINKEBY]: '0x196eC7109e127A353B709a20da25052617295F6f',\n  [CHAINS.ROPSTEN]: '0x72c33B247e62d0f1927E8d325d0358b8f9971C68',\n};\n\n/**\n * ENS reverse resolution an ethereum address(es).\n * Forward resolution check is handled by the smart contract (see links).\n *\n * @param address `string | string[]`\n * @returns `string[]` The array returned will be the same length as the `addresses` argument.\n *   If the returned name is an empty `string`, or `namehash.normalize` check fails,\n *   the originally provided address `string` will be returned.\n *\n * @see https://docs.ens.domains/dapp-developer-guide/resolving-names#reverse-resolution\n * @see https://github.com/ensdomains/reverse-records\n * @see https://etherscan.io/address/0x3671aE578E63FdF66ad4F3E12CC0c0d71Ac7510C#code#F1#L39\n */\nexport async function reverseResolveENS(\n  addresses: string[],\n  web3Instance: Web3\n): Promise<string[]> {\n  const contractAddress = REVERSE_RECORDS_ADDRESS[DEFAULT_CHAIN];\n\n  if (!contractAddress || !addresses || !addresses.length) {\n    return addresses;\n  }\n\n  const contract = new web3Instance.eth.Contract(\n    ReverseRecordsABI as any as AbiItem[],\n    contractAddress\n  ) as any as ReverseRecords;\n\n  const names = await contract.methods.getNames(addresses).call();\n\n  /**\n   * Compare returned names match normalised names to prevent homograph attack\n   *\n   * @see https://github.com/ensdomains/reverse-records#usage-note\n   */\n  return names.map((n, i) =>\n    n !== '' && namehash.normalize(n) === n ? n : addresses[i]\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport Web3 from 'web3';\n\nimport {reverseResolveENS} from '../helpers/reverseResolveENS';\nimport {useWeb3Modal} from '.';\n\nexport function useENSName(): [\n  state: string[],\n  setState: (a: string[]) => void\n] {\n  /**\n   * State\n   */\n\n  const [addresses, setAddresses] = useState<string[]>([]);\n\n  const [reverseResolvedAddresses, setReverseResolvedAddresses] = useState<\n    string[]\n  >([]);\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetENSNamesCached = useCallback(handleGetENSNames, []);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!web3Instance || !addresses.length) return;\n\n    handleGetENSNamesCached(addresses, web3Instance);\n  }, [addresses, handleGetENSNamesCached, web3Instance]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetENSNames(a: string[], web3Instance: Web3) {\n    try {\n      setReverseResolvedAddresses(await reverseResolveENS(a, web3Instance));\n    } catch (error) {\n      setReverseResolvedAddresses(a);\n    }\n  }\n\n  return [reverseResolvedAddresses, setAddresses];\n}\n","import {toWei} from 'web3-utils';\nimport {useCallback, useEffect, useState} from 'react';\nimport BigNumber from 'bignumber.js';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {ENVIRONMENT} from '../../../config';\nimport {useAbortController} from '../../../hooks';\nimport {useWeb3Modal} from './useWeb3Modal';\n\ntype GasStationResponse = {\n  average: number;\n  avgWait: number;\n  block_time: number;\n  blockNum: number;\n  fast: number;\n  fastest: number;\n  fastestWait: number;\n  fastWait: number;\n  gasPriceRange: Record<string, number>;\n  safeLow: number;\n  safeLowWait: number;\n  speed: number;\n};\n\ntype GasPrices = {\n  average: string | undefined;\n  fast: string | undefined;\n  fastest: string | undefined;\n  safeLow: string | undefined;\n};\n\ntype UseETHGasPriceReturn = GasPrices & {\n  gasPriceError: Error | undefined;\n  gasPriceStatus: AsyncStatus;\n};\n\nconst URL = 'https://ethgasstation.info/json/ethgasAPI.json';\n\n/**\n * To prepare the provided ETHGasStation values for conversion from Gwei->wei,\n * first divide by `10`, per the API docs.\n *\n * @see https://docs.ethgasstation.info/gas-price#gas-price\n */\nfunction convertGasToWEI(gasStationPrice: number) {\n  const gasPriceToWEI: string = toWei(\n    new BigNumber((gasStationPrice / 10).toFixed(4)).toString(),\n    'Gwei'\n  );\n\n  return gasPriceToWEI;\n}\n\nconst INITIAL_GAS_PRICES: GasPrices = {\n  average: undefined,\n  fast: undefined,\n  fastest: undefined,\n  safeLow: undefined,\n};\n\n/**\n * useETHGasPrice\n *\n * Returns the latest mainnet gas prices, converted to WEI string from ETHGasStation.\n *\n * @returns {UseETHGasPriceReturn}\n * @see https://ethgasstation.info/json/ethgasAPI.json\n */\nexport function useETHGasPrice(props?: {\n  ignoreEnvironment?: boolean;\n  /**\n   * The network is EIP-1559 compatible and we do not want to use the gas price.\n   *\n   * The gas station prices can still be used for EIP-1559.\n   * For example, to set `maxFeePerGas` (base fee plus tip).\n   */\n  noRunIfEIP1559?: boolean;\n}): UseETHGasPriceReturn {\n  const {ignoreEnvironment = false, noRunIfEIP1559 = false} = props || {};\n\n  /**\n   * State\n   */\n\n  const [gasPrices, setGasPrices] = useState<GasPrices>(INITIAL_GAS_PRICES);\n  const [gasPriceError, setGasPriceError] = useState<Error>();\n\n  const [gasPriceStatus, setGasPriceStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n  const {abortController, isMountedRef} = useAbortController();\n\n  /**\n   * Variables\n   */\n\n  // Sometimes using mainnet gas prices for testnets won't work well with wallets.\n  const shouldExitIfNotProduction: boolean =\n    ignoreEnvironment === false && ENVIRONMENT !== 'production';\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetGasPricesCached = useCallback(handleGetGasPrices, [\n    abortController,\n    isMountedRef,\n    noRunIfEIP1559,\n    shouldExitIfNotProduction,\n    web3Instance,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    handleGetGasPricesCached();\n\n    return function cleanup() {\n      abortController?.abort();\n    };\n  }, [abortController, handleGetGasPricesCached]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetGasPrices() {\n    if (!abortController?.signal) return;\n\n    if (!web3Instance) return;\n\n    setGasPriceError(undefined);\n\n    if (shouldExitIfNotProduction) {\n      setGasPriceStatus(AsyncStatus.FULFILLED);\n\n      return;\n    }\n\n    if (noRunIfEIP1559) {\n      // Check EIP-1559 support\n      const {isEIP1559Compatible} = await import(\n        '../helpers/isEIP1559Compatible'\n      );\n\n      if (await isEIP1559Compatible(web3Instance)) {\n        setGasPriceStatus(AsyncStatus.FULFILLED);\n\n        return;\n      }\n    }\n\n    setGasPriceStatus(AsyncStatus.PENDING);\n\n    try {\n      const response = await fetch(URL, {signal: abortController.signal});\n\n      if (!response.ok) {\n        throw new Error(\n          'Something went wrong while getting the latest gas price.'\n        );\n      }\n\n      const responseJSON: GasStationResponse = await response.json();\n\n      if (!isMountedRef.current) return;\n\n      const {average, fast, fastest, safeLow} = responseJSON;\n\n      setGasPrices({\n        average: convertGasToWEI(average),\n        fast: convertGasToWEI(fast),\n        fastest: convertGasToWEI(fastest),\n        safeLow: convertGasToWEI(safeLow),\n      });\n\n      setGasPriceStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setGasPriceError(error);\n      setGasPrices(INITIAL_GAS_PRICES);\n      setGasPriceStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  /**\n   * Result\n   */\n\n  return {...gasPrices, gasPriceError, gasPriceStatus};\n}\n","import {useCallback} from 'react';\nimport {useDispatch} from 'react-redux';\nimport Web3 from 'web3';\n\nimport {\n  initContractBankAdapter,\n  initContractBankExtension,\n  initContractBankFactory,\n  initContractConfiguration,\n  initContractCouponOnboarding,\n  initContractDaoFactory,\n  initContractDaoRegistry,\n  initContractDaoRegistryAdapter,\n  initContractDistribute,\n  initContractERC20Extension,\n  initContractFinancing,\n  initContractGuildKick,\n  initContractManaging,\n  initContractNFTAdapter,\n  initContractNFTExtension,\n  initContractOnboarding,\n  initContractRagequit,\n  initContractTribute,\n  initContractTributeNFT,\n  initRegisteredVotingAdapter,\n} from '../../../store/actions';\nimport {ReduxDispatch} from '../../../store/types';\n\n/**\n * useInitContracts\n *\n * Initiates all contracts used in the app.\n *\n * @todo Use subgraph to pass the address to each init function, so it skips chain calls.\n */\nexport function useInitContracts(): (data: {\n  web3Instance: Web3;\n}) => Promise<void> {\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Cached callbacks\n   */\n\n  const initContractsCached = useCallback(initContracts, [dispatch]);\n\n  /**\n   * Init contracts\n   */\n  async function initContracts({web3Instance}: {web3Instance: Web3}) {\n    try {\n      // Must init registry first\n      await dispatch(initContractDaoRegistry(web3Instance));\n\n      await dispatch(initContractDaoFactory(web3Instance));\n      await dispatch(initContractBankFactory(web3Instance));\n      await dispatch(initContractConfiguration(web3Instance));\n      await dispatch(initContractFinancing(web3Instance));\n      await dispatch(initContractGuildKick(web3Instance));\n      await dispatch(initContractManaging(web3Instance));\n      await dispatch(initContractRagequit(web3Instance));\n      await dispatch(initContractBankAdapter(web3Instance));\n      await dispatch(initContractBankExtension(web3Instance));\n      await dispatch(initContractOnboarding(web3Instance));\n      await dispatch(initContractTribute(web3Instance));\n      await dispatch(initContractDistribute(web3Instance));\n      await dispatch(initRegisteredVotingAdapter(web3Instance));\n      await dispatch(initContractTributeNFT(web3Instance));\n      await dispatch(initContractNFTExtension(web3Instance));\n      await dispatch(initContractNFTAdapter(web3Instance));\n      await dispatch(initContractCouponOnboarding(web3Instance));\n      await dispatch(initContractDaoRegistryAdapter(web3Instance));\n      await dispatch(initContractERC20Extension(web3Instance));\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  return initContractsCached;\n}\n","import {useEffect, useState} from 'react';\n\nimport {CHAIN_NAME_FULL, DEFAULT_CHAIN} from '../../../config';\nimport {useWeb3Modal} from './useWeb3Modal';\n\ntype UseIsDefaultChainReturn = {\n  /**\n   * The default chain of the app\n   */\n  defaultChain: number;\n  /**\n   * Any error derived from detecting the default chain\n   */\n  defaultChainError: Error | undefined;\n  /**\n   * Specifies if the curently connected chain matches the app's default chain\n   */\n  isDefaultChain: boolean;\n};\n\n/**\n * useIsDefaultChain\n *\n * Checks if the connected account it connected to the default chain.\n *\n * @returns UseIsDefaultChainReturn\n */\nexport function useIsDefaultChain(): UseIsDefaultChainReturn {\n  /**\n   * Our hooks\n   */\n\n  const {networkId, connected} = useWeb3Modal();\n\n  /**\n   * State\n   */\n\n  const [defaultChainError, setDefaultChainError] = useState<Error>();\n\n  /**\n   * Effects\n   */\n\n  // Determine `defaultChainError`\n  useEffect(() => {\n    // User is already connected to a wallet, and chain is incorrect.\n    if (connected && networkId !== DEFAULT_CHAIN) {\n      setDefaultChainError(\n        new Error(`Please connect to the ${CHAIN_NAME_FULL[DEFAULT_CHAIN]}.`)\n      );\n\n      return;\n    }\n\n    // Reset error after successful checks.\n    setDefaultChainError(undefined);\n  }, [connected, networkId]);\n\n  return {\n    defaultChain: DEFAULT_CHAIN,\n    defaultChainError,\n    isDefaultChain: networkId === DEFAULT_CHAIN,\n  };\n}\n","import {provider} from 'web3-core/types';\nimport {useCallback, useEffect, useState} from 'react';\nimport {Web3Provider} from '@ethersproject/providers';\n\nimport {isPossibleContractWallet} from '../../../util/helpers';\nimport {useIsMounted} from '../../../hooks';\nimport Web3 from 'web3';\n\nconst INITIAL_MAYBE_CONTRACT_WALLET_STATE: boolean = false;\n\nexport function useMaybeContractWallet(\n  account: string | undefined,\n  web3Provider: Web3['currentProvider'] | undefined\n): boolean {\n  /**\n   * State\n   */\n\n  const [maybeContractWallet, setMaybeContractWallet] = useState<boolean>(\n    INITIAL_MAYBE_CONTRACT_WALLET_STATE\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {isMountedRef} = useIsMounted();\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleIsPossibleContractWalletCached = useCallback(\n    handleIsPossibleContractWallet,\n    [isMountedRef]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!web3Provider || !account) return;\n\n    handleIsPossibleContractWalletCached(account, web3Provider);\n  }, [account, handleIsPossibleContractWalletCached, web3Provider]);\n\n  /**\n   * Functions\n   */\n\n  async function handleIsPossibleContractWallet(\n    account: string,\n    web3Provider: provider\n  ): Promise<void> {\n    try {\n      const response = await isPossibleContractWallet(\n        account,\n        /**\n         * Web3 `provider` doesn't provide the correct types to satisfy `Web3Provider`,\n         * but this does work.\n         */\n        new Web3Provider(web3Provider as any)\n      );\n\n      if (!isMountedRef.current) return;\n\n      setMaybeContractWallet(response);\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setMaybeContractWallet(INITIAL_MAYBE_CONTRACT_WALLET_STATE);\n    }\n  }\n\n  /**\n   * Return\n   */\n\n  return maybeContractWallet;\n}\n","import ReactModal from 'react-modal';\n\nimport FadeIn from './FadeIn';\n\ntype ModalProps = {\n  children: React.ReactNode;\n  isOpen: boolean;\n  isOpenHandler: (isOpen: boolean) => void;\n  keyProp: string;\n  modalClassNames?: string;\n  styleProps?: Record<string, string>;\n};\n\nexport default function Modal({\n  children,\n  isOpen,\n  isOpenHandler,\n  keyProp,\n  modalClassNames,\n  styleProps,\n}: ModalProps) {\n  return (\n    <ReactModal\n      key={keyProp}\n      ariaHideApp={false}\n      className={`modal-container ${modalClassNames}`}\n      isOpen={isOpen}\n      onRequestClose={() => {\n        isOpenHandler(isOpen);\n      }}\n      overlayClassName=\"modal-overlay\"\n      role=\"dialog\"\n      style={\n        {\n          overlay: {zIndex: '99'},\n          ...styleProps,\n        } as any\n      }>\n      <FadeIn>\n        <div className=\"modal\">{children}</div>\n      </FadeIn>\n    </ReactModal>\n  );\n}\n","import {useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {toChecksumAddress} from 'web3-utils';\n\nimport {\n  useContractSend,\n  useETHGasPrice,\n  useIsDefaultChain,\n  useWeb3Modal,\n} from '../components/web3/hooks';\nimport {COUPON_API_URL} from '../config';\nimport {ERC20RegisterDetails} from '../components/dao-token/DaoToken';\nimport {getConnectedMember} from '../store/actions';\nimport {ReduxDispatch, StoreState} from '../store/types';\nimport {Web3TxStatus} from '../components/web3/types';\nimport {normalizeString} from '../util/helpers';\n\nexport enum FetchStatus {\n  STANDBY = 'STANDBY',\n  PENDING = 'PENDING',\n  FULFILLED = 'FULFILLED',\n  REJECTED = 'REJECTED',\n}\n\ntype RedeemCouponArguments = [\n  string, // `dao`\n  string, // `authorizedMember`\n  string, // `amount`\n  number, // `nonce`\n  string // `signature`\n];\n\ntype ReturnUseRedeemCoupon = {\n  isInProcessOrDone: boolean;\n  redeemCoupon: (\n    {redeemableCoupon}: Record<string, any>,\n    erc20Details?: ERC20RegisterDetails\n  ) => Promise<void>;\n  submitStatus: FetchStatus;\n  submitError: Error | undefined;\n  txStatus: Web3TxStatus;\n  txError: Error | undefined;\n  txEtherscanURL: string;\n  txIsPromptOpen: boolean;\n};\n\nexport function useRedeemCoupon(): ReturnUseRedeemCoupon {\n  /**\n   * Selectors\n   */\n\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n  const couponOnboardingContract = useSelector(\n    (s: StoreState) => s.contracts.CouponOnboardingContract\n  );\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n  const [submitStatus, setSubmitStatus] = useState<FetchStatus>(\n    FetchStatus.STANDBY\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {defaultChainError} = useIsDefaultChain();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {txError, txEtherscanURL, txIsPromptOpen, txSend, txStatus} =\n    useContractSend();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Variables\n   */\n\n  const isInProcessOrDone =\n    submitStatus === FetchStatus.PENDING ||\n    submitStatus === FetchStatus.FULFILLED;\n\n  /**\n   * Functions\n   */\n\n  async function handleRedeemCoupon(\n    redeemableCoupon: Record<string, any>,\n    erc20Details?: ERC20RegisterDetails\n  ) {\n    try {\n      if (defaultChainError) {\n        throw new Error('Wrong network connected.');\n      }\n\n      if (!redeemableCoupon) {\n        throw new Error('No coupon data was found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!couponOnboardingContract) {\n        throw new Error('No Coupon Onboarding contract was found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      setSubmitStatus(FetchStatus.PENDING);\n\n      const applicantAddressToChecksum = toChecksumAddress(\n        redeemableCoupon.recipient\n      );\n\n      // initiate tx\n      const redeemCouponArguments: RedeemCouponArguments = [\n        daoRegistryContract.contractAddress,\n        applicantAddressToChecksum,\n        String(redeemableCoupon.amount),\n        Number(redeemableCoupon.nonce),\n        redeemableCoupon.signature,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `redeemCoupon`\n      const txReceipt = await txSend(\n        'redeemCoupon',\n        couponOnboardingContract.instance.methods,\n        redeemCouponArguments,\n        txArguments\n      );\n\n      if (txReceipt) {\n        // update the db and send email\n        const response = await fetch(`${COUPON_API_URL}/api/coupon/redeem`, {\n          method: 'PATCH',\n          body: JSON.stringify({\n            // search by signature\n            signature: redeemableCoupon.signature,\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error('Something went wrong while updating the coupon.');\n        }\n\n        setSubmitStatus(FetchStatus.FULFILLED);\n\n        // if connected account is the coupon recipient\n        if (\n          normalizeString(redeemableCoupon.recipient) ===\n          normalizeString(account)\n        ) {\n          // re-fetch member\n          await dispatch(\n            getConnectedMember({\n              account,\n              daoRegistryContract,\n              web3Instance,\n            })\n          );\n\n          // suggest adding DAO token to wallet\n          await addTokenToWallet(erc20Details);\n        }\n      }\n    } catch (error) {\n      setSubmitError(error);\n      setSubmitStatus(FetchStatus.REJECTED);\n    }\n  }\n\n  async function addTokenToWallet(erc20Details?: ERC20RegisterDetails) {\n    if (!erc20Details) return;\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: erc20Details,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return {\n    isInProcessOrDone,\n    redeemCoupon: handleRedeemCoupon,\n    submitError,\n    submitStatus,\n    txStatus,\n    txError,\n    txEtherscanURL,\n    txIsPromptOpen,\n  };\n}\n","/**\n * DaoConstants as defined in the solidity DaoConstants.sol contract\n * and the available adapters as detailed here:\n * https://github.com/openlawteam/tribute-contracts\n */\nexport enum DaoAdapterConstants {\n  BANK = 'bank',\n  CONFIGURATION = 'configuration',\n  COUPON_ONBOARDING = 'coupon-onboarding',\n  DAO_REGISTRY = 'daoRegistry',\n  DISTRIBUTE = 'distribute',\n  EXECUTION = 'execution',\n  FINANCING = 'financing',\n  GUILDKICK = 'guildkick',\n  MANAGING = 'managing',\n  NFT = 'nft',\n  NONVOTING_ONBOARDING = 'nonvoting-onboarding',\n  OFFCHAINVOTING = 'offchainvoting',\n  ONBOARDING = 'onboarding',\n  RAGEQUIT = 'ragequit',\n  TRIBUTE = 'tribute',\n  TRIBUTE_NFT = 'tribute-nft',\n  VOTING = 'voting',\n}\n\nexport enum DaoExtensionConstants {\n  BANK = 'bank',\n  ERC20 = 'erc20-ext',\n  NFT = 'nft',\n}\n\n/**\n * Voting adapter names as defined in the solidity voting adapter contracts\n * i.e. `string public constant ADAPTER_NAME = \"VotingContract\"`.\n *\n * @link https://github.com/openlawteam/tribute-contracts/blob/master/contracts/adapters/voting\n */\nexport enum VotingAdapterName {\n  OffchainVotingContract = 'OffchainVotingContract',\n  VotingContract = 'VotingContract',\n}\n","import {Dispatch} from 'redux';\nimport Web3 from 'web3';\n\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {ConnectedMemberState} from '../connectedMember/types';\nimport {ContractsStateEntry} from '../contracts/types';\nimport {DaoRegistry} from '../../../abi-types/DaoRegistry';\nimport {hasFlag, multicall} from '../../components/web3/helpers';\nimport {MemberFlag} from '../../components/web3/types';\nimport {normalizeString} from '../../util/helpers';\n\nexport const SET_CONNECTED_MEMBER = 'SET_CONNECTED_MEMBER';\nexport const CLEAR_CONNECTED_MEMBER = 'CLEAR_CONNECTED_MEMBER';\n\n/**\n * getConnectedMember\n *\n * Gets information about a connected address from the DAO's `members`.\n * If the user is not a member, the defaults for a non-existent member of the DAO are returned (e.g. \"0x000000...\")\n * and `isActiveMember` will be `false`.\n *\n * The reason state is set for both a member and a non-member\n * is to ensure we're not too restrictive in our Dapp logic and\n * letting the contract do its job.\n */\nexport function getConnectedMember({\n  account,\n  daoRegistryContract,\n  web3Instance,\n}: {\n  account: string;\n  daoRegistryContract: ContractsStateEntry<DaoRegistry>;\n  web3Instance: Web3;\n}) {\n  return async function (dispatch: Dispatch<any>) {\n    const daoRegistryAddress = daoRegistryContract?.contractAddress;\n\n    const getAddressIfDelegatedABI = daoRegistryContract?.abi.find(\n      (ai) => ai.name === 'getAddressIfDelegated'\n    );\n    const membersABI = daoRegistryContract?.abi.find(\n      (ai) => ai.name === 'members'\n    );\n    const isActiveMemberABI = daoRegistryContract?.abi.find(\n      (ai) => ai.name === 'isActiveMember'\n    );\n    const getCurrentDelegateKeyABI = daoRegistryContract?.abi.find(\n      (ai) => ai.name === 'getCurrentDelegateKey'\n    );\n\n    if (\n      !account ||\n      !daoRegistryAddress ||\n      !getAddressIfDelegatedABI ||\n      !getCurrentDelegateKeyABI ||\n      !isActiveMemberABI ||\n      !membersABI\n    ) {\n      dispatch(clearConnectedMember());\n\n      return;\n    }\n\n    try {\n      /**\n       * @link https://github.com/openlawteam/tribute-contracts/blob/master/docs/core/DaoRegistry.md\n       */\n\n      const [\n        addressIfDelegated,\n        memberFlag,\n        isActiveMember,\n        currentDelegateKey,\n      ] = await multicall({\n        calls: [\n          [daoRegistryAddress, getAddressIfDelegatedABI, [account]],\n          [daoRegistryAddress, membersABI, [account]],\n          [\n            daoRegistryAddress,\n            isActiveMemberABI,\n            [daoRegistryAddress, account],\n          ],\n          [daoRegistryAddress, getCurrentDelegateKeyABI, [account]],\n        ],\n        web3Instance,\n      });\n\n      // A member can exist in the DAO, yet not be an active member (has units > 0)\n      const doesMemberExist: boolean = hasFlag(MemberFlag.EXISTS, memberFlag);\n\n      // Is this address known to the DAO?\n      const delegateKey: string =\n        isActiveMember || doesMemberExist ? currentDelegateKey : BURN_ADDRESS;\n\n      // Is this address known to the DAO?\n      const memberAddress: string =\n        isActiveMember || doesMemberExist ? addressIfDelegated : BURN_ADDRESS;\n\n      const isAddressDelegated: boolean =\n        normalizeString(account) === normalizeString(memberAddress) &&\n        normalizeString(account) !== normalizeString(delegateKey);\n\n      dispatch(\n        setConnectedMember({\n          delegateKey,\n          isAddressDelegated,\n          isActiveMember,\n          memberAddress,\n        })\n      );\n    } catch (error) {\n      dispatch(clearConnectedMember());\n\n      throw error;\n    }\n  };\n}\n\nexport function setConnectedMember(payload: ConnectedMemberState) {\n  return {type: SET_CONNECTED_MEMBER, ...payload};\n}\n\nexport function clearConnectedMember() {\n  return {type: CLEAR_CONNECTED_MEMBER};\n}\n","export const CONNECT_MODAL_CLOSE = 'CONNECT_MODAL_CLOSE';\nexport const CONNECT_MODAL_OPEN = 'CONNECT_MODAL_OPEN';\n\nexport function connectModalClose() {\n  return {type: CONNECT_MODAL_CLOSE};\n}\n\nexport function connectModalOpen() {\n  return {type: CONNECT_MODAL_OPEN};\n}\n","import {useReducer, useCallback, useEffect} from 'react';\nimport Web3 from 'web3';\nimport Web3Modal, {IProviderOptions} from 'web3modal';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {DEFAULT_CHAIN} from '../../../config';\nimport {NetworkNames, NetworkIDs} from '../../../util/enums';\n\nexport enum DefaultTheme {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nenum ActionType {\n  CONNECT_WEB3MODAL,\n  DEACTIVATE_PROVIDER_WEB3MODAL,\n  ERROR_WEB3MODAL,\n  INITIAL_CACHED_CONNECTOR_CHECK_STATUS,\n  NEW_WEB3MODAL,\n  UPDATE_ACCOUNT,\n}\n\ninterface Action {\n  type: ActionType;\n  payload?: Partial<Web3ModalManagerState>;\n}\n\nexport enum Web3ModalErrorType {\n  CONNECT = 'CONNECT',\n  DISCONNECT = 'DISCONNECT',\n}\n\nexport type Web3ModalError = {\n  connectorId: string;\n  error: Error;\n  type: Web3ModalErrorType;\n};\n\ntype Web3ModalManagerState = {\n  account?: undefined | string;\n  connected?: boolean;\n  error?: Web3ModalError;\n  initialCachedConnectorCheckStatus?: AsyncStatus;\n  networkId?: number;\n  provider?: any;\n  web3Instance?: Web3;\n  web3Modal?: Web3Modal;\n};\n\ninterface Web3ModalManagerInterface {\n  defaultChain?: number;\n  defaultTheme?: DefaultTheme;\n  onBeforeDisconnect?: () => void;\n  onBeforeConnect?: () => void;\n  providerOptions: IProviderOptions;\n}\n\ntype UseWeb3ModalManagerReturn = {\n  connectWeb3Modal: (connectorId: string) => Promise<void>;\n  disconnectWeb3Modal: () => Promise<void>;\n  providerOptions: Web3ModalManagerInterface['providerOptions'];\n} & Web3ModalManagerState;\n\nconst INITIAL_STATE = {};\n\nfunction reducer(\n  state: Web3ModalManagerState = INITIAL_STATE,\n  {type, payload}: Action\n): Web3ModalManagerState {\n  switch (type) {\n    case ActionType.CONNECT_WEB3MODAL: {\n      const {provider, networkId, account, connected, web3Instance} =\n        payload || {};\n\n      return {\n        ...state,\n        account,\n        connected,\n        networkId,\n        provider,\n        web3Instance,\n      };\n    }\n\n    case ActionType.DEACTIVATE_PROVIDER_WEB3MODAL: {\n      return INITIAL_STATE;\n    }\n\n    case ActionType.ERROR_WEB3MODAL: {\n      const {error} = payload || {};\n\n      return {\n        ...state,\n        error,\n      };\n    }\n\n    case ActionType.INITIAL_CACHED_CONNECTOR_CHECK_STATUS: {\n      const {initialCachedConnectorCheckStatus} = payload || {};\n\n      return {\n        ...state,\n        initialCachedConnectorCheckStatus,\n      };\n    }\n\n    case ActionType.NEW_WEB3MODAL: {\n      const {web3Modal} = payload || {};\n      return {web3Modal};\n    }\n\n    case ActionType.UPDATE_ACCOUNT: {\n      const {account} = payload || {};\n\n      return {\n        ...state,\n        account,\n      };\n    }\n\n    default:\n      return INITIAL_STATE;\n  }\n}\n\nexport default function useWeb3ModalManager({\n  defaultChain,\n  defaultTheme,\n  onBeforeConnect,\n  onBeforeDisconnect,\n  providerOptions,\n}: Web3ModalManagerInterface): UseWeb3ModalManagerReturn {\n  /**\n   * Reducers\n   */\n\n  const [state, dispatch] = useReducer<typeof reducer>(reducer, {\n    initialCachedConnectorCheckStatus: AsyncStatus.STANDBY,\n  });\n\n  /**\n   * Variables\n   */\n\n  const web3ModalTheme = defaultTheme;\n  const web3ModalChain: number = defaultChain || DEFAULT_CHAIN;\n\n  /**\n   * Cached callbacks\n   */\n\n  const connectWeb3ModalCached = useCallback(connectWeb3Modal, [\n    onBeforeConnect,\n    state.web3Modal,\n  ]);\n\n  const chainChangedCallbackCached = useCallback(chainChangedCallback, [\n    connectWeb3ModalCached,\n    state.web3Modal?.cachedProvider,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    const provider = state.provider;\n\n    // Subscribe to accounts change\n    provider?.on?.('accountsChanged', accountsChangedCallback);\n\n    // Subscribe to chainId change\n    provider?.on?.('chainChanged', chainChangedCallbackCached);\n\n    return () => {\n      // Remove listeners on unmount\n      provider?.removeListener?.('accountsChanged', accountsChangedCallback);\n      provider?.removeListener?.('chainChanged', chainChangedCallbackCached);\n    };\n  }, [chainChangedCallbackCached, state.provider]);\n\n  // Init Web3Modal\n  useEffect(() => {\n    if (state.web3Modal) return;\n\n    dispatch({\n      type: ActionType.NEW_WEB3MODAL,\n      payload: {\n        web3Modal: new Web3Modal({\n          cacheProvider: true, // optional\n          network: NetworkNames[NetworkIDs[web3ModalChain]], // optional\n          providerOptions, // required\n          theme: web3ModalTheme, // optional; `light` or `dark`. `dark` is default\n        }),\n      },\n    });\n  }, [providerOptions, state.web3Modal, web3ModalChain, web3ModalTheme]);\n\n  // Attempt to initialise connection to a cached provider\n  useEffect(() => {\n    // If the initial check has ran, or is running, exit.\n    if (\n      state.initialCachedConnectorCheckStatus === AsyncStatus.FULFILLED ||\n      state.initialCachedConnectorCheckStatus === AsyncStatus.PENDING\n    ) {\n      return;\n    }\n\n    attemptUpdateFromCachedConnector(\n      state.web3Modal?.cachedProvider,\n      connectWeb3ModalCached\n    );\n  }, [\n    connectWeb3ModalCached,\n    state.initialCachedConnectorCheckStatus,\n    state.web3Modal?.cachedProvider,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  function accountsChangedCallback([account]: string[]) {\n    dispatch({\n      type: ActionType.UPDATE_ACCOUNT,\n      payload: {\n        account,\n      },\n    });\n  }\n\n  function chainChangedCallback(_chainIdHex: string) {\n    if (!state.web3Modal?.cachedProvider) return;\n\n    connectWeb3ModalCached(state.web3Modal?.cachedProvider);\n  }\n\n  /**\n   * attemptUpdateFromCachedConnector\n   *\n   * Will attempt to connect if a `connectorId` (e.g. `\"injected\"`)\n   * and cached provider (via `localStorage`) is available.\n   *\n   * @param connectorId `String | undefined`\n   * @param connectCallback `Function` callback which dispatches an action to connect\n   * @returns void\n   */\n  async function attemptUpdateFromCachedConnector(\n    connectorId: string | undefined,\n    connectCallback: (cid: string) => Promise<void>\n  ): Promise<void> {\n    const statusAction = ActionType.INITIAL_CACHED_CONNECTOR_CHECK_STATUS;\n\n    /**\n     * Wait for the `state.web3Modal` object to be available, as `cachedProvider`\n     * defaults to an empty `String` if not set.\n     */\n    if (typeof connectorId !== 'string') return;\n\n    dispatch({\n      type: statusAction,\n      payload: {initialCachedConnectorCheckStatus: AsyncStatus.PENDING},\n    });\n\n    if (connectorId) {\n      // @note Does not throw\n      await connectCallback(connectorId);\n    }\n\n    dispatch({\n      type: statusAction,\n      payload: {initialCachedConnectorCheckStatus: AsyncStatus.FULFILLED},\n    });\n  }\n\n  /**\n   * Connect to a specfic wallet; get account assets and\n   * subscribe to provider events\n   */\n  async function connectWeb3Modal(connectorId: string): Promise<void> {\n    try {\n      if (!state.web3Modal) return;\n\n      const provider = await state.web3Modal.connectTo(connectorId);\n\n      const web3Instance: Web3 = new Web3(provider);\n\n      // Get index `0` account\n      const [account] = await web3Instance.eth.getAccounts();\n\n      // Run callback if provided\n      await onBeforeConnect?.();\n\n      dispatch({\n        type: ActionType.CONNECT_WEB3MODAL,\n        payload: {\n          account,\n          connected: true,\n          networkId: await web3Instance.eth.net.getId(),\n          provider,\n          web3Instance,\n        },\n      });\n    } catch (error) {\n      dispatch({\n        type: ActionType.ERROR_WEB3MODAL,\n        payload: {\n          error: {\n            connectorId,\n            error: new Error(`Failed to connect to ${connectorId}.`),\n            type: Web3ModalErrorType.CONNECT,\n          },\n        },\n      });\n    }\n  }\n\n  /**\n   * Disconnect wallet button pressed.\n   */\n  async function disconnectWeb3Modal(): Promise<void> {\n    try {\n      await state.provider?.close?.();\n\n      // If the cached provider is not cleared,\n      // WalletConnect will default to the existing session\n      // and does not allow to re-scan the QR code with a new wallet.\n      // Depending on your use case you may want or want not his behaviour.\n      state.web3Modal && (await state.web3Modal.clearCachedProvider());\n\n      // Run callback if provided\n      await onBeforeDisconnect?.();\n\n      // Reset all state\n      dispatch({type: ActionType.DEACTIVATE_PROVIDER_WEB3MODAL});\n    } catch (error) {\n      const connectorId: string = state.web3Modal?.cachedProvider || '';\n\n      dispatch({\n        type: ActionType.ERROR_WEB3MODAL,\n        payload: {\n          error: {\n            connectorId,\n            error: new Error(\n              `Failed to disconnect from ${connectorId || 'provider'}.`\n            ),\n            type: Web3ModalErrorType.DISCONNECT,\n          },\n        },\n      });\n    }\n  }\n\n  return {\n    ...state,\n    connectWeb3Modal,\n    disconnectWeb3Modal,\n    providerOptions,\n  };\n}\n","import {isEthAddressValid} from '../validation';\n\n/**\n * truncateEthAddress\n *\n * Truncates Ethereum address.\n *\n * @param {string} addr\n * @param {number} [maxLength=5]\n * @returns {string}\n */\nexport function truncateEthAddress(\n  address: string,\n  maxLength: number = 5\n): string {\n  // Fallback if empty `address`\n  if (!address) return '---';\n\n  // In case `address` is not an Ethereum address\n  if (!isEthAddressValid(address)) {\n    return address;\n  }\n\n  const firstSegment = address.substring(0, maxLength);\n  const secondPart = address.substring(address.length - 4);\n\n  return `${firstSegment}...${secondPart}`;\n}\n","import Web3 from 'web3';\n\nimport {ContractExtensionNames} from '../types';\nimport {DaoRegistry} from '../../../../abi-types/DaoRegistry';\n\nexport async function getExtensionAddress(\n  extensionName: ContractExtensionNames,\n  daoContractInstance: DaoRegistry | undefined\n): Promise<string> {\n  try {\n    if (!daoContractInstance) {\n      throw new Error('No DaoRegistry contract instance provided.');\n    }\n\n    const extensionNameSha3 = Web3.utils.sha3(extensionName);\n\n    if (!extensionNameSha3) {\n      throw new Error('No sha3 extension name was returned.');\n    }\n\n    return await daoContractInstance.methods\n      .getExtensionAddress(extensionNameSha3)\n      .call();\n  } catch (error) {\n    throw error;\n  }\n}\n","import {SubgraphNetworkStatusState} from './types';\n\nexport const SET_SUBGRAPH_NETWORK_STATUS = 'SET_SUBGRAPH_NETWORK_STATUS';\n\nexport function setSubgraphNetworkStatus(payload: SubgraphNetworkStatusState) {\n  return {type: SET_SUBGRAPH_NETWORK_STATUS, ...payload};\n}\n","import React, {useState, useEffect, CSSProperties} from 'react';\nimport FadeIn from '../common/FadeIn';\n\ntype CycleEllipsisProps = {\n  ariaLabel?: string;\n  /**\n   * What is the interval of cycling the message?\n   */\n  intervalMs?: number;\n  /**\n   * Optional settings for the inner `<FadeIn />` component.\n   */\n  fadeInProps?: Parameters<typeof FadeIn>[0];\n};\n\nconst MESSAGES = ['', '.', '.', '.'];\nconst rootStyles = {position: 'absolute'} as CSSProperties;\nconst nbspStyles = {\n  height: 1,\n  width: 1,\n} as CSSProperties;\n\nexport function CycleEllipsis(props: CycleEllipsisProps) {\n  const {ariaLabel, intervalMs = 1000, fadeInProps} = props;\n  const fadeInPropsMerged = {...fadeInProps, inline: true};\n\n  const [upToIndex, setUpToIndex] = useState<number>(1);\n\n  useEffect(() => {\n    const intervalId = setInterval(\n      () => setUpToIndex((prevIndex) => (prevIndex + 1) % MESSAGES.length),\n      intervalMs\n    );\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [intervalMs]);\n\n  return (\n    <>\n      <span aria-label={ariaLabel} style={rootStyles}>\n        <span>{upToIndex >= 0 && MESSAGES[0]}</span>\n        <span>\n          {upToIndex >= 1 && (\n            <FadeIn {...fadeInPropsMerged}>{MESSAGES[1]}</FadeIn>\n          )}\n        </span>\n        <span>\n          {upToIndex >= 2 && (\n            <FadeIn {...fadeInPropsMerged}>{MESSAGES[2]}</FadeIn>\n          )}\n        </span>\n        <span>\n          {upToIndex >= 3 && (\n            <FadeIn {...fadeInPropsMerged}>{MESSAGES[3]}</FadeIn>\n          )}\n        </span>\n      </span>\n      {/* @note Keep as it's an alignment fallback in certain CSS situations when no other text is a sibiling */}\n      <span style={nbspStyles}>&nbsp;</span>\n    </>\n  );\n}\n","import {useState, useRef, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n  CoreProposalVoteChoices,\n  prepareVoteProposalData,\n  SnapshotType,\n} from '@openlaw/snapshot-js-erc712';\n\nimport {AsyncStatus} from '../../util/types';\nimport {getContractByAddress} from '../web3/helpers';\nimport {ProposalData} from './types';\nimport {SPACE} from '../../config';\nimport {StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES, VOTE_CHOICES} from '../web3/config';\nimport {useCheckApplicant, useSignAndSubmitProposal} from './hooks';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {useMemberActionDisabled} from '../../hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport CycleMessage from '../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../web3/EtherscanURL';\nimport FadeIn from '../common/FadeIn';\nimport Loader from '../feedback/Loader';\n\ntype SubmitArguments = [\n  string, // `dao`\n  string, // `proposalId`\n  ...any[],\n  string // `proposal data`\n];\n\ntype SubmitActionProps = {\n  checkApplicant?: string;\n  proposal: ProposalData;\n};\n\ntype ActionDisabledReasons = {\n  invalidApplicantMessage: string;\n};\n\ntype ProposalDataForDao = {\n  body: string;\n  choices: CoreProposalVoteChoices;\n  end: number;\n  name: string;\n  sig: string;\n  snapshot: number;\n  space: string;\n  start: number;\n  timestamp: string;\n};\n\nconst {FULFILLED} = AsyncStatus;\nconst {AWAITING_CONFIRM, FULFILLED: WEB3_TX_FULFILLED, PENDING} = Web3TxStatus;\nconst defaultChoices: CoreProposalVoteChoices = VOTE_CHOICES;\n\nexport default function SubmitAction(props: SubmitActionProps) {\n  const {\n    checkApplicant,\n    proposal: {snapshotDraft, snapshotProposal, refetchProposalOrDraft},\n  } = props;\n\n  /**\n   * Default proposal data for submission to the DAO.\n   * This will be used for `proposalDataForDaoRef`.\n   */\n  const {\n    msg: {\n      payload: {\n        choices: proposalChoices = defaultChoices,\n        name: proposalName = '',\n        body: proposalBody = '',\n        start: proposalStart = 0,\n        end: proposalEnd = 0,\n        snapshot: proposalSnapshot = 0,\n      },\n      timestamp: proposalTimestamp = '',\n    },\n    sig: proposalSig = '',\n  } = snapshotProposal || {msg: {payload: {}}};\n\n  /**\n   * State\n   */\n\n  const [snapshotProposalSubmitted, setSnapshotProposalSubmitted] =\n    useState<boolean>((snapshotProposal?.sig.length || '') > 0);\n\n  const proposalDataForDaoRef = useRef<ProposalDataForDao>({\n    body: proposalBody,\n    choices: proposalChoices,\n    end: proposalEnd,\n    name: proposalName,\n    sig: proposalSig,\n    snapshot: proposalSnapshot,\n    space: SPACE || '',\n    start: proposalStart,\n    timestamp: proposalTimestamp,\n  });\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Refs\n   */\n\n  const actionDisabledReasonsRef = useRef<ActionDisabledReasons>({\n    invalidApplicantMessage: '',\n  });\n\n  /**\n   * Selectors\n   */\n\n  const contracts = useSelector((s: StoreState) => s.contracts);\n\n  const daoRegistryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {txEtherscanURL, txIsPromptOpen, txSend, txStatus} = useContractSend();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    WhyDisabledModal,\n    setOtherDisabledReasons,\n  } = useMemberActionDisabled();\n\n  const {proposalSignAndSendStatus, signAndSendProposal} =\n    useSignAndSubmitProposal<SnapshotType.proposal>();\n\n  const {\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n  } = useCheckApplicant(checkApplicant);\n\n  /**\n   * Variables\n   */\n\n  const isInProcess =\n    txStatus === AWAITING_CONFIRM ||\n    txStatus === PENDING ||\n    proposalSignAndSendStatus === AWAITING_CONFIRM ||\n    proposalSignAndSendStatus === PENDING;\n\n  const isDone = snapshotProposalSubmitted\n    ? txStatus === WEB3_TX_FULFILLED\n    : txStatus === WEB3_TX_FULFILLED &&\n      proposalSignAndSendStatus === WEB3_TX_FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (checkApplicant && checkApplicantStatus === FULFILLED) {\n      // 1. Determine and set reasons why action would be disabled\n\n      /**\n       * Reason: If the applicant address is invalid (see `useCheckApplicant`\n       * hook for reasons) the `submitProposal` smart contract transaction will\n       * fail.\n       */\n      if (!isApplicantValid && checkApplicantInvalidMsg) {\n        actionDisabledReasonsRef.current = {\n          ...actionDisabledReasonsRef.current,\n          invalidApplicantMessage: checkApplicantInvalidMsg,\n        };\n      }\n\n      // 2. Set reasons\n      setOtherDisabledReasons(Object.values(actionDisabledReasonsRef.current));\n    }\n  }, [\n    checkApplicant,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n    setOtherDisabledReasons,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function handleSubmit() {\n    try {\n      if (!daoRegistryAddress) {\n        throw new Error('No DAO Registry address was found.');\n      }\n\n      const actionId: string =\n        (snapshotDraft || snapshotProposal)?.actionId || '';\n\n      const contract = getContractByAddress(actionId, contracts);\n\n      if (!contract) {\n        throw Error(`No contract was found for action id ${actionId}.`);\n      }\n\n      const idForDAO: string =\n        (snapshotDraft || snapshotProposal)?.idInDAO || '';\n\n      const submitActionArgs: any[] = (\n        snapshotDraft?.msg.payload || snapshotProposal?.msg.payload\n      )?.metadata.submitActionArgs;\n\n      // If the Snapshot Proposal has not yet been submitted to Snapshot Hub\n      if (!snapshotProposalSubmitted && snapshotDraft) {\n        const {\n          msg: {\n            payload: {\n              name: draftName,\n              body: draftBody,\n              metadata: draftMetadata,\n            },\n            timestamp: draftTimestamp,\n          },\n        } = snapshotDraft;\n\n        // Sign and submit draft for snapshot-hub\n        const {data, signature} = await signAndSendProposal({\n          partialProposalData: {\n            name: draftName,\n            body: draftBody,\n            metadata: draftMetadata,\n            timestamp: draftTimestamp,\n          },\n          adapterAddress: contract.contractAddress,\n          type: SnapshotType.proposal,\n        });\n\n        // Set the proposal data for submission to the DAO\n        proposalDataForDaoRef.current = {\n          body: data.payload.body,\n          choices: data.payload.choices,\n          end: data.payload.end,\n          name: data.payload.name,\n          sig: signature,\n          snapshot: data.payload.snapshot,\n          space: data.space,\n          start: data.payload.start,\n          timestamp: data.timestamp,\n        };\n\n        setSnapshotProposalSubmitted(true);\n      }\n\n      const {body, choices, end, name, sig, snapshot, space, start, timestamp} =\n        proposalDataForDaoRef.current;\n\n      /**\n       * Prepare `data` argument for submission to DAO\n       *\n       * For information about which data the smart contract needs for signature verification (e.g. `hashMessage`):\n       * @link https://github.com/openlawteam/tribute-contracts/blob/master/contracts/adapters/voting/OffchainVoting.sol\n       */\n      const preparedVoteVerificationBytes = prepareVoteProposalData(\n        {\n          payload: {\n            body,\n            choices,\n            end,\n            name,\n            snapshot: snapshot.toString(),\n            start,\n          },\n          sig,\n          space,\n          timestamp: parseInt(timestamp),\n        },\n        web3Instance\n      );\n\n      const submitArguments: SubmitArguments = [\n        daoRegistryAddress,\n        idForDAO,\n        ...(submitActionArgs || []),\n        preparedVoteVerificationBytes,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      await txSend(\n        'submitProposal',\n        contract.instance.methods,\n        submitArguments,\n        txArguments\n      );\n\n      // Update the proposal\n      refetchProposalOrDraft();\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  function renderSubmitStatus(): React.ReactNode {\n    // Either Snapshot or chain tx\n    if (\n      txStatus === AWAITING_CONFIRM ||\n      proposalSignAndSendStatus === AWAITING_CONFIRM\n    ) {\n      return 'Awaiting your confirmation\\u2026';\n    }\n\n    // Only for chain tx\n    switch (txStatus) {\n      case PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case WEB3_TX_FULFILLED:\n        return (\n          <>\n            <div>Proposal submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Log-out check applicant error\n   *\n   * @todo Use logging service\n   */\n  if (checkApplicantError) {\n    console.warn(\n      `Error checking if the applicant address is valid: ${checkApplicantError.message}`\n    );\n  }\n\n  return (\n    <>\n      <div>\n        <button\n          className=\"proposaldetails__button\"\n          disabled={isDisabled || isInProcessOrDone}\n          onClick={isDisabled || isInProcessOrDone ? () => {} : handleSubmit}>\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Sponsor'}\n        </button>\n\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n\n        {/* SUBMIT STATUS */}\n\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}>\n            Why is sponsoring disabled?\n          </button>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is sponsoring disabled?\" />\n    </>\n  );\n}\n","import {AbiItem} from 'web3-utils/types';\nimport {Contract as Web3Contract} from 'web3-eth-contract/types';\nimport {Dispatch} from 'redux';\nimport Web3 from 'web3';\n\nimport {\n  ContractAdapterNames,\n  ContractExtensionNames,\n} from '../../components/web3/types';\nimport {\n  DEFAULT_CHAIN,\n  BANK_FACTORY_CONTRACT_ADDRESS,\n  DAO_FACTORY_CONTRACT_ADDRESS,\n  DAO_REGISTRY_CONTRACT_ADDRESS,\n} from '../../config';\nimport {\n  getAdapterAddress,\n  getVotingAdapterName,\n} from '../../components/web3/helpers';\nimport {\n  DaoAdapterConstants,\n  DaoExtensionConstants,\n  VotingAdapterName,\n} from '../../components/adapters-extensions/enums';\nimport {ContractsStateEntry} from './types';\nimport {getExtensionAddress} from '../../components/web3/helpers/getExtensionAddress';\nimport {StoreState} from '../types';\n\ntype ContractAction =\n  | typeof CLEAR_CONTRACTS\n  | typeof CONTRACT_BANK_ADAPTER\n  | typeof CONTRACT_BANK_EXTENSION\n  | typeof CONTRACT_BANK_FACTORY\n  | typeof CONTRACT_CONFIGURATION\n  | typeof CONTRACT_COUPON_ONBOARDING\n  | typeof CONTRACT_DAO_FACTORY\n  | typeof CONTRACT_DAO_REGISTRY\n  | typeof CONTRACT_DAO_REGISTRY_ADAPTER\n  | typeof CONTRACT_DISTRIBUTE\n  | typeof CONTRACT_ERC20_EXTENSION\n  | typeof CONTRACT_FINANCING\n  | typeof CONTRACT_GUILDKICK\n  | typeof CONTRACT_MANAGING\n  | typeof CONTRACT_NFT_ADAPTER\n  | typeof CONTRACT_NFT_EXTENSION\n  | typeof CONTRACT_ONBOARDING\n  | typeof CONTRACT_RAGEQUIT\n  | typeof CONTRACT_TRIBUTE\n  | typeof CONTRACT_TRIBUTE_NFT\n  | typeof CONTRACT_VOTING\n  | typeof CONTRACT_VOTING_OP_ROLLUP;\n\nexport const CLEAR_CONTRACTS = 'CLEAR_CONTRACTS';\nexport const CONTRACT_BANK_ADAPTER = 'CONTRACT_BANK_ADAPTER';\nexport const CONTRACT_BANK_EXTENSION = 'CONTRACT_BANK_EXTENSION';\nexport const CONTRACT_BANK_FACTORY = 'CONTRACT_BANK_FACTORY';\nexport const CONTRACT_CONFIGURATION = 'CONTRACT_CONFIGURATION';\nexport const CONTRACT_COUPON_ONBOARDING = 'CONTRACT_COUPON_ONBOARDING';\nexport const CONTRACT_DAO_FACTORY = 'CONTRACT_DAO_FACTORY';\nexport const CONTRACT_DAO_REGISTRY = 'CONTRACT_DAO_REGISTRY';\nexport const CONTRACT_DAO_REGISTRY_ADAPTER = 'CONTRACT_DAO_REGISTRY_ADAPTER';\nexport const CONTRACT_DISTRIBUTE = 'CONTRACT_DISTRIBUTE';\nexport const CONTRACT_ERC20_EXTENSION = 'CONTRACT_ERC20_EXTENSION';\nexport const CONTRACT_FINANCING = 'CONTRACT_FINANCING';\nexport const CONTRACT_GUILDKICK = 'CONTRACT_GUILDKICK';\nexport const CONTRACT_MANAGING = 'CONTRACT_MANAGING';\nexport const CONTRACT_NFT_ADAPTER = 'CONTRACT_NFT_ADAPTER';\nexport const CONTRACT_NFT_EXTENSION = 'CONTRACT_NFT_EXTENSION';\nexport const CONTRACT_ONBOARDING = 'CONTRACT_ONBOARDING';\nexport const CONTRACT_RAGEQUIT = 'CONTRACT_RAGEQUIT';\nexport const CONTRACT_TRIBUTE = 'CONTRACT_TRIBUTE';\nexport const CONTRACT_TRIBUTE_NFT = 'CONTRACT_TRIBUTE_NFT';\nexport const CONTRACT_VOTING = 'CONTRACT_VOTING';\nexport const CONTRACT_VOTING_OP_ROLLUP = 'CONTRACT_VOTING_OP_ROLLUP';\n\nexport function clearContracts(): Record<'type', typeof CLEAR_CONTRACTS> {\n  return {\n    type: CLEAR_CONTRACTS,\n  };\n}\n\nexport function initContractBankFactory(web3Instance: Web3) {\n  return async function (dispatch: Dispatch<any>) {\n    try {\n      if (web3Instance) {\n        const {default: lazyBankFactoryABI} = await import(\n          '../../abis/BankFactory.json'\n        );\n        const bankFactoryContract: AbiItem[] = lazyBankFactoryABI as any;\n        const contractAddress = BANK_FACTORY_CONTRACT_ADDRESS[DEFAULT_CHAIN];\n        const instance = new web3Instance.eth.Contract(\n          bankFactoryContract,\n          contractAddress\n        );\n\n        dispatch(\n          createContractAction({\n            type: CONTRACT_BANK_FACTORY,\n            abi: bankFactoryContract,\n            contractAddress,\n            instance,\n          })\n        );\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function initContractDaoFactory(web3Instance: Web3) {\n  return async function (dispatch: Dispatch<any>) {\n    try {\n      if (web3Instance) {\n        const {default: lazyDaoFactoryABI} = await import(\n          '../../abis/DaoFactory.json'\n        );\n        const daoFactoryContract: AbiItem[] = lazyDaoFactoryABI as any;\n        const contractAddress = DAO_FACTORY_CONTRACT_ADDRESS[DEFAULT_CHAIN];\n        const instance = new web3Instance.eth.Contract(\n          daoFactoryContract,\n          contractAddress\n        );\n\n        dispatch(\n          createContractAction({\n            type: CONTRACT_DAO_FACTORY,\n            abi: daoFactoryContract,\n            contractAddress,\n            instance,\n          })\n        );\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function initContractDaoRegistry(web3Instance: Web3) {\n  return async function (dispatch: Dispatch<any>) {\n    try {\n      if (web3Instance) {\n        const {default: lazyDaoRegistryABI} = await import(\n          '../../abis/DaoRegistry.json'\n        );\n\n        const daoRegistryContract: AbiItem[] = lazyDaoRegistryABI as any;\n        const contractAddress = DAO_REGISTRY_CONTRACT_ADDRESS;\n\n        if (!contractAddress) {\n          throw new Error('No DAO Registry contract address was found.');\n        }\n\n        const instance = new web3Instance.eth.Contract(\n          daoRegistryContract,\n          contractAddress\n        );\n\n        dispatch(\n          createContractAction({\n            type: CONTRACT_DAO_REGISTRY,\n            abi: daoRegistryContract,\n            contractAddress,\n            instance,\n          })\n        );\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n}\n\nexport function initContractVoting(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_VOTING,\n    adapterOrExtensionName: ContractAdapterNames.voting,\n    adapterNameForRedux: VotingAdapterName.VotingContract,\n    contractAddress,\n    lazyImport: () => import('../../abis/VotingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractVotingOpRollup(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_VOTING_OP_ROLLUP,\n    adapterOrExtensionName: ContractAdapterNames.voting,\n    adapterNameForRedux: VotingAdapterName.OffchainVotingContract,\n    contractAddress,\n    lazyImport: () => import('../../abis/OffchainVotingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractOnboarding(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_ONBOARDING,\n    adapterNameForRedux: DaoAdapterConstants.ONBOARDING,\n    adapterOrExtensionName: ContractAdapterNames.onboarding,\n    contractAddress,\n    lazyImport: () => import('../../abis/OnboardingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractBankExtension(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_BANK_EXTENSION,\n    adapterNameForRedux: DaoExtensionConstants.BANK,\n    adapterOrExtensionName: ContractExtensionNames.bank,\n    contractAddress,\n    isExtension: true,\n    lazyImport: () => import('../../abis/BankExtension.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractTribute(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_TRIBUTE,\n    adapterNameForRedux: DaoAdapterConstants.TRIBUTE,\n    adapterOrExtensionName: ContractAdapterNames.tribute,\n    contractAddress,\n    lazyImport: () => import('../../abis/TributeContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractDistribute(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_DISTRIBUTE,\n    adapterNameForRedux: DaoAdapterConstants.DISTRIBUTE,\n    adapterOrExtensionName: ContractAdapterNames.distribute,\n    contractAddress,\n    lazyImport: () => import('../../abis/DistributeContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractManaging(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_MANAGING,\n    adapterNameForRedux: DaoAdapterConstants.MANAGING,\n    adapterOrExtensionName: ContractAdapterNames.managing,\n    contractAddress,\n    lazyImport: () => import('../../abis/ManagingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractBankAdapter(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_BANK_ADAPTER,\n    adapterNameForRedux: DaoAdapterConstants.BANK,\n    adapterOrExtensionName: ContractAdapterNames.bank,\n    contractAddress,\n    lazyImport: () => import('../../abis/BankAdapterContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractNFTAdapter(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_NFT_ADAPTER,\n    adapterNameForRedux: DaoAdapterConstants.NFT,\n    adapterOrExtensionName: ContractAdapterNames.nft,\n    contractAddress,\n    lazyImport: () => import('../../abis/NFTAdapterContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractDaoRegistryAdapter(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_DAO_REGISTRY_ADAPTER,\n    adapterNameForRedux: DaoAdapterConstants.DAO_REGISTRY,\n    adapterOrExtensionName: ContractAdapterNames.dao_registry,\n    contractAddress,\n    lazyImport: () => import('../../abis/DaoRegistryAdapterContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractRagequit(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_RAGEQUIT,\n    adapterNameForRedux: DaoAdapterConstants.RAGEQUIT,\n    adapterOrExtensionName: ContractAdapterNames.ragequit,\n    contractAddress,\n    lazyImport: () => import('../../abis/RagequitContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractGuildKick(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_GUILDKICK,\n    adapterNameForRedux: DaoAdapterConstants.GUILDKICK,\n    adapterOrExtensionName: ContractAdapterNames.guildkick,\n    contractAddress,\n    lazyImport: () => import('../../abis/GuildKickContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractFinancing(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_FINANCING,\n    adapterNameForRedux: DaoAdapterConstants.FINANCING,\n    adapterOrExtensionName: ContractAdapterNames.financing,\n    contractAddress,\n    lazyImport: () => import('../../abis/FinancingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractConfiguration(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_CONFIGURATION,\n    adapterNameForRedux: DaoAdapterConstants.CONFIGURATION,\n    adapterOrExtensionName: ContractAdapterNames.configuration,\n    contractAddress,\n    lazyImport: () => import('../../abis/ConfigurationContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractTributeNFT(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_TRIBUTE_NFT,\n    adapterNameForRedux: DaoAdapterConstants.TRIBUTE_NFT,\n    adapterOrExtensionName: ContractAdapterNames.tribute_nft,\n    contractAddress,\n    lazyImport: () => import('../../abis/TributeNFTContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractCouponOnboarding(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_COUPON_ONBOARDING,\n    adapterNameForRedux: DaoAdapterConstants.COUPON_ONBOARDING,\n    adapterOrExtensionName: ContractAdapterNames.coupon_onboarding,\n    contractAddress,\n    lazyImport: () => import('../../abis/CouponOnboardingContract.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractNFTExtension(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_NFT_EXTENSION,\n    adapterNameForRedux: DaoExtensionConstants.NFT,\n    adapterOrExtensionName: ContractExtensionNames.nft,\n    contractAddress,\n    isExtension: true,\n    lazyImport: () => import('../../abis/NFTExtension.json'),\n    web3Instance,\n  });\n}\n\nexport function initContractERC20Extension(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return initContractThunkFactory({\n    actionType: CONTRACT_ERC20_EXTENSION,\n    adapterNameForRedux: DaoExtensionConstants.ERC20,\n    adapterOrExtensionName: ContractExtensionNames.erc20,\n    contractAddress,\n    isExtension: true,\n    lazyImport: () => import('../../abis/ERC20Extension.json'),\n    web3Instance,\n  });\n}\n\n/**\n * Inits the currently registered `voting` contract.\n *\n * @note The DaoRegistry and Managing contracts must be initialised beforehand.\n */\nexport function initRegisteredVotingAdapter(\n  web3Instance: Web3,\n  contractAddress?: string\n) {\n  return async function (dispatch: Dispatch<any>, getState: () => StoreState) {\n    try {\n      if (web3Instance) {\n        const daoRegistryContract = getState().contracts.DaoRegistryContract;\n\n        if (!daoRegistryContract) {\n          console.warn(\n            'Please init the DaoRegistry contract before the voting contract.'\n          );\n          return;\n        }\n\n        let votingAdapterName: string = '';\n        let address: string = contractAddress || '';\n\n        if (address) {\n          votingAdapterName = await getVotingAdapterName(address, web3Instance);\n        }\n\n        if (!address && !votingAdapterName) {\n          address = await getAdapterAddress(\n            ContractAdapterNames.voting,\n            getState().contracts.DaoRegistryContract?.instance\n          );\n\n          votingAdapterName = await getVotingAdapterName(address, web3Instance);\n        }\n\n        /**\n         * @todo Move voting adapter enum names (see contracts: `ADAPTER_NAME`)\n         *   to an appropriate adapter config file.\n         */\n        switch (votingAdapterName) {\n          case 'VotingContract':\n            return await initContractVoting(web3Instance, address)(\n              dispatch,\n              getState\n            );\n          case 'OffchainVotingContract':\n            return await initContractVotingOpRollup(web3Instance, address)(\n              dispatch,\n              getState\n            );\n          default:\n            throw new Error('Voting contract name could not be found.');\n        }\n      }\n    } catch (error) {\n      console.warn(\n        `The voting contract could not be found in the DAO. Are you sure you meant to add this contract's ABI?`\n      );\n    }\n  };\n}\n\nexport function createContractAction<T = Web3Contract>({\n  type,\n  ...payload\n}: {\n  type: ContractAction;\n} & ContractsStateEntry<T>) {\n  return {\n    type,\n    ...payload,\n  };\n}\n\nexport function initContractThunkFactory({\n  actionType,\n  adapterNameForRedux,\n  adapterOrExtensionName,\n  contractAddress,\n  isExtension = false,\n  lazyImport,\n  web3Instance,\n}: {\n  actionType: ContractAction;\n  adapterOrExtensionName: ContractAdapterNames | ContractExtensionNames;\n  /**\n   * The name to be shown in Redux state as `adapterOrExtensionName`.\n   */\n  adapterNameForRedux?: ContractsStateEntry['adapterOrExtensionName'];\n  contractAddress?: string;\n  /**\n   * If set to `true` an Extenion address will be searched for instead of an Adapter.\n   */\n  isExtension?: boolean;\n  /**\n   * Provide a Dynamic Import wrapped in a function.\n   *\n   * e.g. `() => import('./path/to/import')`\n   */\n  lazyImport: () => any;\n  web3Instance: Web3;\n}) {\n  // Return a Redux Thunk\n  return async function (dispatch: Dispatch<any>, getState: () => StoreState) {\n    try {\n      const {default: lazyABI} = await lazyImport();\n\n      const contractABI: AbiItem[] = lazyABI as any;\n\n      const address =\n        contractAddress ||\n        (isExtension\n          ? await getExtensionAddress(\n              adapterOrExtensionName as any as ContractExtensionNames,\n              getState().contracts.DaoRegistryContract?.instance\n            )\n          : await getAdapterAddress(\n              adapterOrExtensionName as any as ContractAdapterNames,\n              getState().contracts.DaoRegistryContract?.instance\n            ));\n\n      dispatch(\n        createContractAction({\n          type: actionType,\n          abi: contractABI,\n          contractAddress: address,\n          adapterOrExtensionName: adapterNameForRedux,\n          instance: new web3Instance.eth.Contract(contractABI, address),\n        })\n      );\n    } catch (error) {\n      // Warn instead of throwing as we want the Dapp to fail gracefully.\n      console.warn(\n        `The contract \"${adapterOrExtensionName}\" could not be found in the DAO. Are you sure you meant to add this contract's ABI?`\n      );\n    }\n  };\n}\n","import {createContext, useEffect, useRef, useState} from 'react';\nimport Web3 from 'web3';\nimport Web3Modal, {IProviderOptions} from 'web3modal';\n\nimport useWeb3ModalManager, {\n  DefaultTheme,\n  Web3ModalError,\n} from './hooks/useWeb3ModalManager';\nimport {AsyncStatus} from '../../util/types';\nimport {ETHEREUM_PROVIDER_URL} from '../../config';\n\ntype Web3ModalProviderArguments = {\n  defaultChain?: number;\n  defaultTheme?: DefaultTheme;\n  /**\n   * Optional: Any action to take after disconnecting from an Ethereum provider.\n   */\n  onBeforeDisconnect?: Parameters<\n    typeof useWeb3ModalManager\n  >[0]['onBeforeDisconnect'];\n  /**\n   * Optional: Any action to take before connecting to an Ethereum provider.\n   */\n  onBeforeConnect?: Parameters<\n    typeof useWeb3ModalManager\n  >[0]['onBeforeConnect'];\n  providerOptions: IProviderOptions; // required\n};\n\ntype Web3ModalManagerProps = {\n  children: JSX.Element;\n} & Web3ModalProviderArguments;\n\nexport type Web3ModalContextValue = {\n  account: string | undefined;\n  connected: boolean | undefined;\n  connectWeb3Modal: (providerName: string) => void;\n  disconnectWeb3Modal: () => void;\n  error: Web3ModalError | undefined;\n  initialCachedConnectorCheckStatus: AsyncStatus | undefined;\n  networkId: number | undefined;\n  provider: any;\n  providerOptions: IProviderOptions;\n  web3Instance: Web3 | undefined;\n  web3Modal: Web3Modal | undefined;\n};\n\nexport const Web3ModalContext = createContext<Web3ModalContextValue>(\n  {} as Web3ModalContextValue\n);\n\n/**\n * Web3ModalManager\n *\n * A provider for the `web3modal` wallet connection, provides access to\n * the wallet states, enables connections and disconnections.\n *\n * @example\n * <Web3ModalManager defaultChain={1} defaultTheme={'dark'} providerOptions={...}>\n *   ...\n * </Web3ModalManager>\n *\n * @param children: React.JSX\n * @param defaultChain?: number\n * @param defaultTheme?: DefaultTheme; default is `dark`\n * @param providerOptions: Record<string, any>\n */\n\nexport default function Web3ModalManager({\n  children,\n  defaultChain,\n  defaultTheme = DefaultTheme.DARK,\n  onBeforeConnect,\n  onBeforeDisconnect,\n  providerOptions,\n}: Web3ModalManagerProps) {\n  /**\n   * Refs\n   */\n\n  const defaultWeb3InstanceRef = useRef<Web3 | undefined>(\n    new Web3(new Web3.providers.WebsocketProvider(ETHEREUM_PROVIDER_URL))\n  );\n\n  /**\n   * State\n   */\n\n  const [defaultWeb3NetID, setDefaultWeb3NetID] = useState<\n    number | undefined\n  >();\n\n  /**\n   * Variables\n   */\n\n  const web3ModalProviderArguments: Web3ModalProviderArguments = {\n    defaultChain,\n    defaultTheme,\n    onBeforeConnect,\n    onBeforeDisconnect,\n    providerOptions,\n  };\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    account,\n    connected,\n    connectWeb3Modal,\n    disconnectWeb3Modal,\n    error,\n    initialCachedConnectorCheckStatus,\n    networkId = defaultWeb3NetID,\n    provider = defaultWeb3InstanceRef.current?.currentProvider,\n    web3Instance = defaultWeb3InstanceRef.current,\n    web3Modal,\n  } = useWeb3ModalManager(web3ModalProviderArguments);\n\n  /**\n   * Effects\n   */\n\n  // Set network ID when using `defaultWeb3InstanceRef` (i.e. not connected to a wallet)\n  useEffect(() => {\n    if (\n      !connected &&\n      initialCachedConnectorCheckStatus === AsyncStatus.FULFILLED\n    ) {\n      defaultWeb3InstanceRef.current?.eth.net\n        .getId()\n        .then(setDefaultWeb3NetID)\n        .catch(() => setDefaultWeb3NetID(undefined));\n    }\n  }, [connected, initialCachedConnectorCheckStatus]);\n\n  /**\n   * Render\n   */\n\n  const web3ModalContext: Web3ModalContextValue = {\n    account,\n    connected,\n    connectWeb3Modal,\n    disconnectWeb3Modal,\n    error,\n    initialCachedConnectorCheckStatus,\n    networkId,\n    provider,\n    providerOptions,\n    web3Instance,\n    web3Modal,\n  };\n\n  return (\n    <Web3ModalContext.Provider value={web3ModalContext}>\n      {children}\n    </Web3ModalContext.Provider>\n  );\n}\n","// see: http://reactcommunity.org/react-transition-group/transition\nimport React from 'react';\nimport {Transition} from 'react-transition-group';\n\ntype FadeInProps = {\n  children?: React.ReactNode;\n  duration?: number;\n  /**\n   * Defaults to `true`\n   */\n  show?: boolean;\n  /**\n   * Renders a `<span>` wrapper where the animation CSS is applied.\n   */\n  inline?: boolean;\n};\n\nconst DEFAULT_DURATION = 300;\n\nconst defaultStyle = (props: FadeInProps) => ({\n  transition: `opacity ${\n    props.duration || 300\n  }ms cubic-bezier(0, 0.69, 0.32, 0.64)`,\n  opacity: 0,\n});\n\nconst transitionStyles: Record<string, any> = {\n  entering: {opacity: 0},\n  entered: {opacity: 1},\n  exiting: {opacity: 0},\n  exited: {opacity: 0},\n};\n\nexport default function FadeIn(props: FadeInProps) {\n  const {inline} = props;\n\n  return (\n    <Transition\n      appear\n      in={props.show !== undefined ? props.show : true}\n      timeout={props.duration || DEFAULT_DURATION}>\n      {(transition) =>\n        inline ? (\n          <span\n            style={{\n              ...defaultStyle(props),\n              ...transitionStyles[transition],\n            }}>\n            {props.children}\n          </span>\n        ) : (\n          <div\n            style={{\n              ...defaultStyle(props),\n              ...transitionStyles[transition],\n            }}>\n            {props.children}\n          </div>\n        )\n      }\n    </Transition>\n  );\n}\n","import {useState} from 'react';\n\nimport {MetaMaskRPCError} from '../../util/types';\nimport {normalizeString} from '../../util/helpers';\nimport FadeIn from './FadeIn';\n\ntype ErrorMessageWithDetailsProps = {\n  detailsProps?: React.DetailsHTMLAttributes<HTMLDetailsElement>;\n  error: Error | (() => React.ReactElement) | undefined;\n  renderText: (() => React.ReactElement) | string;\n};\n\nexport default function ErrorMessageWithDetails(\n  props: ErrorMessageWithDetailsProps\n) {\n  const {error, renderText} = props;\n\n  /**\n   * State\n   */\n\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n\n  /**\n   * Variables\n   */\n\n  /**\n   * Some wallets will provide proper error codes. The `4001` is a \"user rejected transaction\".\n   *\n   * @link https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md#provider-errors\n   */\n  const isWalletRejectedRequest =\n    typeof error !== 'function' &&\n    ((error as MetaMaskRPCError)?.code === 4001 ||\n      /^(the )?user rejected (the )?request$/g.test(\n        normalizeString(error?.message || '')\n      ));\n\n  const textToDisplay: React.ReactNode =\n    typeof renderText === 'string' ? renderText : renderText();\n\n  const areErrorMessageAndTextStringSame: boolean =\n    typeof renderText === 'string' &&\n    typeof error !== 'function' &&\n    normalizeString(renderText) === normalizeString(error?.message || '')\n      ? true\n      : false;\n\n  /**\n   * Render\n   */\n\n  if (!error || isWalletRejectedRequest) return null;\n\n  return (\n    <FadeIn>\n      <div className=\"text-center\">\n        <p className=\"error-message\">{textToDisplay}</p>\n\n        {error && !areErrorMessageAndTextStringSame && (\n          <details {...props.detailsProps}>\n            <summary\n              aria-expanded={isExpanded}\n              className=\"error-message\"\n              onClick={() => setIsExpanded(!isExpanded)}\n              style={{cursor: 'pointer', outline: 'none'}}>\n              <small>Details</small>\n            </summary>\n\n            <p className=\"error-message\">\n              <small>\n                {typeof error === 'function' ? error() : error.message}\n              </small>\n            </p>\n          </details>\n        )}\n      </div>\n    </FadeIn>\n  );\n}\n","import {Contract, SendOptions} from 'web3-eth-contract/types';\nimport {TransactionReceipt} from 'web3-core/types';\nimport BigNumber from 'bignumber.js';\n\n/**\n * contractSend\n *\n * Returns the resolved transaction receipt or error\n *\n * @param {string} methodName\n * @param {Record<string, any>} contractInstanceMethods An object of the methods for the Web3 contract instance.\n * @param {any[]} methodArguments An array of any arguments for the contract's method.\n * @param {Record<string, any>} txArguments\n * @param {(txHash: string) => void} onProcess Callback which runs after a txHash has been received,\n *   but before the transaction is complete.\n * @returns {Promise<TransactionReceipt>} Resolved or rejected transaction.\n */\nexport async function contractSend(\n  methodName: string,\n  contractInstanceMethods: typeof Contract.prototype.methods,\n  methodArguments: any[],\n  txArguments: SendOptions,\n  onProcess?: (txHash: string) => void\n): Promise<TransactionReceipt> {\n  // Promisify so we can both `reject()` inside .on('error') and from transactions.\n  return new Promise<TransactionReceipt>(async (resolve, reject) => {\n    try {\n      const BN = BigNumber;\n      const method = contractInstanceMethods[methodName];\n\n      // estimate gas limit for transaction\n      const gas = await method(...methodArguments).estimateGas({\n        from: txArguments.from,\n        value: txArguments.value,\n      });\n\n      const gastoBN = new BN(gas)\n        .decimalPlaces(0, BigNumber.ROUND_DOWN)\n        .toNumber();\n\n      await method(...methodArguments)\n        .send({\n          ...txArguments,\n          gas: gastoBN,\n        })\n        .on('transactionHash', function (txHash: string) {\n          // Call onProcess with transaction hash\n          onProcess && onProcess(txHash);\n        })\n        .on('receipt', function (receipt: TransactionReceipt) {\n          // resolve on transaction receipt; contains event returnValues\n          resolve(receipt);\n        })\n        .on('error', (error: Error) => {\n          // reject on transaction error\n          reject(error);\n        });\n    } catch (error) {\n      // reject on estimate gas or transaction error\n      reject(error);\n    }\n  });\n}\n","import Web3 from 'web3';\n\nimport {ContractAdapterNames} from '../types';\nimport {DaoRegistry} from '../../../../abi-types/DaoRegistry';\n\nexport async function getAdapterAddress(\n  adapterName: ContractAdapterNames,\n  daoContractInstance: DaoRegistry | undefined\n): Promise<string> {\n  try {\n    if (!daoContractInstance) {\n      throw new Error('No DaoRegistry contract instance provided.');\n    }\n\n    const adapterNameSha3 = Web3.utils.sha3(adapterName);\n\n    if (!adapterNameSha3) {\n      throw new Error('No sha3 adapter name was returned.');\n    }\n\n    return await daoContractInstance.methods\n      .getAdapterAddress(adapterNameSha3)\n      .call();\n  } catch (error) {\n    throw error;\n  }\n}\n","import {ContractAdapterNames} from '../types';\nimport {ContractsStateEntry} from '../../../store/contracts/types';\nimport {StoreState} from '../../../store/types';\n\nfunction getContractAddressOrThrow(\n  contract: ContractsStateEntry<any> | null\n): string {\n  try {\n    const address = contract?.contractAddress;\n\n    if (!address) {\n      throw new Error(`Contract address was not found in the store.`);\n    }\n\n    return address;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/**\n * getAdapterAddressFromContracts\n *\n * Gets an adapter's address by its name (`type ContractAdapterNames`) from the Redux contracts state slice.\n *\n * @param {string} name\n * @param {StoreState['contracts']} contracts\n */\nexport function getAdapterAddressFromContracts(\n  name: ContractAdapterNames,\n  contracts: StoreState['contracts']\n): string {\n  try {\n    switch (name) {\n      case ContractAdapterNames.configuration:\n        return '';\n      case ContractAdapterNames.distribute:\n        return getContractAddressOrThrow(contracts.DistributeContract);\n      case ContractAdapterNames.financing:\n        return '';\n      case ContractAdapterNames.guildkick:\n        return '';\n      case ContractAdapterNames.managing:\n        return getContractAddressOrThrow(contracts.ManagingContract);\n      case ContractAdapterNames.onboarding:\n        return getContractAddressOrThrow(contracts.OnboardingContract);\n      case ContractAdapterNames.ragequit:\n        return '';\n      case ContractAdapterNames.tribute:\n        return getContractAddressOrThrow(contracts.TributeContract);\n      case ContractAdapterNames.tribute_nft:\n        return getContractAddressOrThrow(contracts.TributeNFTContract);\n      case ContractAdapterNames.voting:\n        return getContractAddressOrThrow(contracts.VotingContract);\n      default:\n        throw new Error(`Contract address was not found in the store.`);\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n","import {DaoRegistry} from '../../../../abi-types/DaoRegistry';\n\nexport enum DaoState {\n  CREATION = 'CREATION',\n  READY = 'READY',\n}\n\nexport async function getDaoState(\n  daoContractInstance: DaoRegistry | undefined\n): Promise<DaoState> {\n  try {\n    if (!daoContractInstance) {\n      throw new Error('No DaoRegistry contract instance provided.');\n    }\n\n    const state = await daoContractInstance.methods.state().call();\n\n    return Number(state) === 0 ? DaoState.CREATION : DaoState.READY;\n  } catch (error) {\n    throw error;\n  }\n}\n","import {ContractsStateEntry} from '../../../store/contracts/types';\nimport {normalizeString} from '../../../util/helpers';\nimport {StoreState} from '../../../store/types';\n\n/**\n * getContractByAddress\n *\n * Gets a Contract from the Redux contracts state slice by its `contractAddress`, or throws an Error.\n * A use case for this would be when using ERC712 signing data `actionId` to get\n * the appropriate Contract for submitting on-chain transactions.\n *\n * @param {string} address\n * @param {StoreState['contracts']} contracts\n */\nexport function getContractByAddress(\n  address: string,\n  contracts: StoreState['contracts']\n): ContractsStateEntry<any> {\n  try {\n    const contract = Object.values(contracts).find(\n      (c) =>\n        c?.contractAddress &&\n        normalizeString(c.contractAddress) === normalizeString(address)\n    );\n\n    if (!contract) {\n      throw new Error(`Contract was not found in the store.`);\n    }\n\n    return contract;\n  } catch (error) {\n    throw error;\n  }\n}\n","import Web3 from 'web3';\n\nimport {ContractDAOConfigKeys} from '../types';\nimport {DaoRegistry} from '../../../../abi-types/DaoRegistry';\n\nexport async function getDAOConfigEntry(\n  configKey: ContractDAOConfigKeys,\n  daoContractInstance: DaoRegistry | undefined\n): Promise<string> {\n  try {\n    if (!daoContractInstance) {\n      throw new Error('No DaoRegistry contract instance provided.');\n    }\n\n    const configKeySha3 = Web3.utils.sha3(configKey);\n\n    if (!configKeySha3) {\n      throw new Error('No sha3 config key was returned.');\n    }\n\n    return await daoContractInstance.methods\n      .getConfiguration(configKeySha3)\n      .call();\n  } catch (error) {\n    throw error;\n  }\n}\n","import {AbiItem} from 'web3-utils/types';\nimport Web3 from 'web3';\n\nimport {IVoting} from '../../../../abi-types/IVoting';\nimport {VotingAdapterName} from '../../adapters-extensions/enums';\n\nexport async function getVotingAdapterName(\n  address: string,\n  web3Instance: Web3\n): Promise<VotingAdapterName> {\n  try {\n    const {default: lazyIVotingABI} = await import(\n      '../../../abis/IVoting.json'\n    );\n\n    const votingAdapterName: string = await (\n      new web3Instance.eth.Contract(\n        lazyIVotingABI as AbiItem[],\n        address\n      ) as any as IVoting\n    ).methods\n      .getAdapterName()\n      .call();\n\n    return votingAdapterName as VotingAdapterName;\n  } catch (error) {\n    throw error;\n  }\n}\n","import {MemberFlag} from '../types';\nimport {ProposalFlag} from '../../proposals/types';\n\n/**\n * hasFlag\n *\n * A quicker alternative than calling `getProposalFlag` or `getMemberFlag` using `Multicall` for every possiblity.\n *\n * @todo Though this is faster, we may want to switch to using the contract and Multicall instead of re-creating the logic.\n *\n * @param flagToCheck\n * @param daoProposalFlag\n * @returns {boolean}\n *\n * @see `ProposalFlag` `DaoRegistry.sol`\n * @see `getFlag` `DaoConstants.sol`\n * @see `setFlag` `DaoConstants.sol`\n */\nexport function hasFlag(\n  flagToCheck: ProposalFlag | MemberFlag,\n  daoProposalFlag: number | string\n): boolean {\n  return flagToCheck === Math.log2(Number(daoProposalFlag) + 1) - 1;\n}\n","import Web3 from 'web3';\nimport {AbiItem} from 'web3-utils/types';\n\nimport {BlockType} from '../../../../abi-types/types';\nimport {MULTICALL_CONTRACT_ADDRESS} from '../../../config';\nimport {Multicall} from '../../../../abi-types/Multicall';\n\nexport type MulticallTuple = [\n  contractAddress: string,\n  functionABI: AbiItem,\n  parameters: string[]\n];\n\nexport async function multicall<T = any[]>({\n  blockNumber = 'latest',\n  calls,\n  web3Instance,\n}: {\n  /**\n   * Defaults to `latest`\n   */\n  blockNumber?: BlockType;\n  calls: MulticallTuple[];\n  web3Instance: Web3;\n}): Promise<T> {\n  const {default: lazyMulticallABI} = await import(\n    '../../../abis/Multicall.json'\n  );\n\n  if (!MULTICALL_CONTRACT_ADDRESS) {\n    throw new Error('No Multicall address was found. Are you sure it is set?');\n  }\n\n  try {\n    const {methods: multicallMethods} = new web3Instance.eth.Contract(\n      lazyMulticallABI as AbiItem[],\n      MULTICALL_CONTRACT_ADDRESS\n    ) as any as Multicall;\n\n    const {returnData} = await multicallMethods\n      .aggregate(\n        calls.map(([address, abi, params]) => [\n          address.toLowerCase(),\n          web3Instance.eth.abi.encodeFunctionCall(abi, params),\n        ])\n      )\n      .call({}, blockNumber);\n\n    return returnData.map((hexString: string, i: number) => {\n      const outputsABIItem = calls[i][1].outputs || [];\n      const decodedOutputs = web3Instance.eth.abi.decodeParameters(\n        outputsABIItem,\n        hexString\n      );\n\n      // Output as single result\n      if (\n        decodedOutputs.__length__ === 1 &&\n        decodedOutputs['0'] !== undefined\n      ) {\n        return decodedOutputs['0'];\n      }\n\n      return web3Instance.eth.abi.decodeParameters(\n        outputsABIItem || [],\n        hexString\n      );\n    }) as any as T;\n  } catch (error) {\n    throw error;\n  }\n}\n","/**\n * FOR HIGH REUSE ENUMS\n *\n * For any other more specific enum types, co-locate them in either:\n *\n * 1) The actual code file.\n * 2) In a type file in the location of the code files which mainly use the types.\n *\n * @see https://kentcdodds.com/blog/colocation\n */\n\n/**\n * @see https://chainid.network/\n */\nexport enum NetworkIDs {\n  GOERLI = 5,\n  KOVAN = 42,\n  RINKEBY = 4,\n  ROPSTEN = 3,\n  MAINNET = 1,\n}\n\n/**\n * @see https://chainid.network/\n */\nexport enum NetworkNames {\n  GOERLI = 'goerli',\n  KOVAN = 'kovan',\n  RINKEBY = 'rinkeby',\n  ROPSTEN = 'ropsten',\n  MAINNET = 'mainnet',\n}\n\nexport enum FormFieldErrors {\n  REQUIRED = 'This field is required.',\n  INVALID_BYTES32 = 'The value is not a bytes32.',\n  INVALID_BYTES32_ARRAY = 'The value is not a comma-separated bytes32 format, ie. 0x...,0x...',\n  INVALID_EMAIL = 'The email address is invalid.',\n  INVALID_ETHEREUM_ADDRESS = 'The ethereum address is invalid.',\n  INVALID_NUMBER = 'The value is not a number.',\n  INVALID_NUMBER_ARRAY = 'The value is not a comma-separated number format, ie. 42,5,124',\n}\n\nexport enum ProposalHeaderNames {\n  FAILED = 'Failed',\n  PASSED = 'Passed',\n  REQUESTS = 'Proposals',\n  VOTING = 'Voting',\n}\n","import {useState, useEffect, useRef} from 'react';\n\ntype UseAbortControllerReturn = {\n  abortController: AbortController | undefined;\n  isMountedRef: React.MutableRefObject<boolean>;\n};\n\n/**\n * useAbortController\n *\n * Provides an `AbortController` to cancel requests.\n * Also provides a helper `isMountedRef` to see if the React component has\n * been unmounted and therefore should not run any setting of state.\n */\nexport function useAbortController(): UseAbortControllerReturn {\n  /**\n   * State\n   */\n\n  const [abortController, setAbortController] = useState<AbortController>();\n\n  /**\n   * Refs\n   */\n\n  const isMountedRef = useRef<boolean>(false);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    !abortController && setAbortController(new AbortController());\n\n    return () => {\n      isMountedRef.current = false;\n\n      abortController && abortController.abort();\n    };\n  }, [abortController]);\n\n  return {\n    abortController,\n    isMountedRef,\n  };\n}\n","import {useReducer} from 'react';\n\ntype CounterState = {\n  count: number;\n};\n\ntype CounterAction = {\n  type: 'increment';\n};\n\ntype CounterReturn = [number, React.Dispatch<CounterAction>];\n\nconst initialState = {count: 0};\n\nfunction reducer(state: CounterState, action: CounterAction) {\n  switch (action.type) {\n    case 'increment':\n      return {count: state.count + 1};\n    default:\n      return state;\n  }\n}\n\n/**\n * useCounter\n *\n * A counter which is kept track of via a reducer.\n *\n * @note This is mainly to use inside a custom hook's callback resulting in a\n *  changed dependency for consumer's useEffect when a consumer higher up wants to trigger a \"re-run\"\n *  (i.e. re-fetch, refresh some data), similarly to dispatching a Redux action again to update the state.\n */\nexport function useCounter(): CounterReturn {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return [state.count, dispatch];\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useLazyQuery} from '@apollo/react-hooks';\n\nimport {StoreState} from '../store/types';\nimport {useSelector} from 'react-redux';\n\nimport {GET_DAO} from '../gql';\n\ntype UseDaoReturn = {\n  dao: Record<string, any> | undefined;\n  gqlError: Error | undefined;\n};\n\n/**\n * useDao\n *\n * This component queries The Graph API to get data on the dao\n *\n * @returns {UseDaoReturn}\n */\nexport function useDao(): UseDaoReturn {\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n\n  const [getDao, {called, loading, data, error}] = useLazyQuery(GET_DAO, {\n    variables: {id: daoRegistryContract?.contractAddress.toLowerCase()},\n  });\n\n  const [dao, setDao] = useState<Record<string, any> | undefined>();\n  const [gqlError, setGqlError] = useState<Error>();\n\n  const getDaoRegistryCallback = useCallback(getDaoRegistry, [\n    daoRegistryContract?.contractAddress,\n    data,\n    error,\n    loading,\n  ]);\n\n  useEffect(() => {\n    if (!called) {\n      getDao();\n    }\n  }, [called, getDao]);\n\n  useEffect(() => {\n    if (!loading && daoRegistryContract?.contractAddress) {\n      getDaoRegistryCallback();\n    }\n  }, [daoRegistryContract?.contractAddress, getDaoRegistryCallback, loading]);\n\n  function getDaoRegistry() {\n    try {\n      if (!loading && data) {\n        setDao(data.tributeDaos[0]);\n\n        if (data.tributeDaos.length === 0) {\n          const error = new Error(\n            `\"${daoRegistryContract?.contractAddress}\" dao address not found.`\n          );\n\n          throw error;\n        }\n      } else {\n        if (error) {\n          const error = new Error(\n            `\"${daoRegistryContract?.contractAddress}\" is not a valid dao address.`\n          );\n\n          throw error;\n        }\n      }\n    } catch (error) {\n      setGqlError(error);\n    }\n  }\n\n  return {dao, gqlError};\n}\n","import {AbiItem} from 'web3-utils/types';\nimport {useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport Web3 from 'web3';\n\nimport {AsyncStatus} from '../util/types';\nimport {ContractDAOConfigKeys} from '../components/web3/types';\nimport {multicall, MulticallTuple} from '../components/web3/helpers';\nimport {StoreState} from '../store/types';\nimport {useWeb3Modal} from '../components/web3/hooks';\n\ntype ConfigEntriesReturn = {\n  daoConfigurations: string[];\n  daoConfigurationsError: Error | undefined;\n  daoConfigurationsStatus: AsyncStatus;\n};\n\nconst INITIAL_CONFIG_ENTRIES: ConfigEntriesReturn['daoConfigurations'] = [];\n\n/**\n * useDaoConfigurations\n *\n * Pass in an array of plain text DAO configuration names to get\n * and the hook will return their values in an array, in the same order.\n *\n * @param configKeys\n * @returns `ConfigEntriesReturn`\n */\nexport function useDaoConfigurations(\n  /**\n   * The keys of any configuration settings to get from the DAO.\n   */\n  configKeys: ContractDAOConfigKeys[]\n): ConfigEntriesReturn {\n  /**\n   * Selectors\n   */\n\n  const daoRegistryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  const daoRegistryABI = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.abi\n  );\n\n  /**\n   * State\n   */\n\n  const [daoConfigurations, setDaoConfigurations] = useState<\n    ConfigEntriesReturn['daoConfigurations']\n  >(INITIAL_CONFIG_ENTRIES);\n\n  const [daoConfigurationsStatus, setDaoConfigurationsStatus] = useState<\n    ConfigEntriesReturn['daoConfigurationsStatus']\n  >(AsyncStatus.STANDBY);\n\n  const [daoConfigurationsError, setDaoConfigurationsError] =\n    useState<ConfigEntriesReturn['daoConfigurationsError']>();\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * Variables\n   */\n\n  const getConfigurationABI = daoRegistryABI?.find(\n    (ai) => ai.name === 'getConfiguration'\n  );\n\n  /**\n   * Effects\n   */\n\n  // Handle getting the configurations\n  useEffect(() => {\n    if (!daoRegistryAddress || !getConfigurationABI || !web3Instance) {\n      return;\n    }\n\n    handleGetConfigurations({\n      abi: getConfigurationABI,\n      configKeys,\n      contractAddress: daoRegistryAddress,\n      web3Instance,\n    });\n  }, [configKeys, daoRegistryAddress, getConfigurationABI, web3Instance]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetConfigurations({\n    abi,\n    configKeys,\n    contractAddress,\n    web3Instance,\n  }: {\n    configKeys: ContractDAOConfigKeys[];\n    contractAddress: string;\n    abi: AbiItem;\n    web3Instance: Web3;\n  }) {\n    try {\n      const calls: MulticallTuple[] = configKeys.map((ck) => [\n        contractAddress,\n        abi,\n        [web3Instance.utils.sha3(ck) || ''],\n      ]);\n\n      setDaoConfigurationsError(undefined);\n      setDaoConfigurationsStatus(AsyncStatus.PENDING);\n\n      setDaoConfigurations(await multicall({calls, web3Instance}));\n\n      setDaoConfigurationsStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      setDaoConfigurations(INITIAL_CONFIG_ENTRIES);\n      setDaoConfigurationsStatus(AsyncStatus.REJECTED);\n      setDaoConfigurationsError(error);\n    }\n  }\n\n  return {\n    daoConfigurations,\n    daoConfigurationsError,\n    daoConfigurationsStatus,\n  };\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useLazyQuery} from '@apollo/react-hooks';\nimport {useSelector} from 'react-redux';\n\nimport {AsyncStatus} from '../util/types';\nimport {StoreState} from '../store/types';\nimport {SubgraphNetworkStatus} from '../store/subgraphNetworkStatus/types';\nimport {GET_DAO} from '../gql';\nimport {TOTAL_ADDRESS, UNITS_ADDRESS} from '../config';\n\ntype UseDaoTotalUnitsReturn = {\n  totalUnits: number | undefined;\n  totalUnitsError: Error | undefined;\n  totalUnitsStatus: AsyncStatus;\n};\n\n/**\n * useDaoTotalUnits\n *\n * Gets DAO total units from subgraph with direct onchain fallback.\n *\n * @returns {UseDaoTotalUnitsReturn}\n */\nexport function useDaoTotalUnits(): UseDaoTotalUnitsReturn {\n  /**\n   * Selectors\n   */\n\n  const DaoRegistryContract = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract\n  );\n  const BankExtensionContract = useSelector(\n    (state: StoreState) => state.contracts.BankExtensionContract\n  );\n  const subgraphNetworkStatus = useSelector(\n    (state: StoreState) => state.subgraphNetworkStatus.status\n  );\n\n  /**\n   * GQL Query\n   */\n\n  const [getDaoFromSubgraphResult, {called, loading, data, error}] =\n    useLazyQuery(GET_DAO, {\n      variables: {\n        id: DaoRegistryContract?.contractAddress.toLowerCase(),\n      },\n    });\n\n  /**\n   * State\n   */\n\n  const [totalUnits, setTotalUnits] = useState<number>();\n  const [totalUnitsStatus, setTotalUnitsStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n  const [totalUnitsError, setTotalUnitsError] = useState<Error>();\n\n  /**\n   * Cached callbacks\n   */\n\n  const getTotalUnitsFromExtensionCached = useCallback(\n    getTotalUnitsFromExtension,\n    [BankExtensionContract]\n  );\n\n  const getTotalUnitsFromSubgraphCached = useCallback(\n    getTotalUnitsFromSubgraph,\n    [data, error, getTotalUnitsFromExtensionCached, loading]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!called) {\n      getDaoFromSubgraphResult();\n    }\n  }, [called, getDaoFromSubgraphResult]);\n\n  useEffect(() => {\n    if (subgraphNetworkStatus === SubgraphNetworkStatus.OK) {\n      if (!loading && DaoRegistryContract?.contractAddress) {\n        getTotalUnitsFromSubgraphCached();\n      }\n    } else {\n      // If there is a subgraph network error fallback to fetching totalUnits\n      // directly from smart contract\n      getTotalUnitsFromExtensionCached();\n    }\n  }, [\n    DaoRegistryContract?.contractAddress,\n    getTotalUnitsFromExtensionCached,\n    getTotalUnitsFromSubgraphCached,\n    loading,\n    subgraphNetworkStatus,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  function getTotalUnitsFromSubgraph() {\n    try {\n      setTotalUnitsStatus(AsyncStatus.PENDING);\n\n      if (!loading && data) {\n        // extract totalUnits from gql data\n        const {totalUnits} = data.tributeDaos[0] as Record<string, any>;\n        setTotalUnits(Number(totalUnits));\n        setTotalUnitsStatus(AsyncStatus.FULFILLED);\n      } else {\n        if (error) {\n          throw new Error(error.message);\n        }\n      }\n    } catch (error) {\n      // If there is a subgraph query error fallback to fetching totalUnits\n      // directly from smart contract\n      console.log(`subgraph query error: ${error.message}`);\n      getTotalUnitsFromExtensionCached();\n    }\n  }\n\n  async function getTotalUnitsFromExtension() {\n    if (!BankExtensionContract) {\n      return;\n    }\n\n    try {\n      setTotalUnitsStatus(AsyncStatus.PENDING);\n\n      const totalUnits = await BankExtensionContract.instance.methods\n        .balanceOf(TOTAL_ADDRESS, UNITS_ADDRESS)\n        .call();\n\n      setTotalUnits(Number(totalUnits));\n      setTotalUnitsStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      console.log(error);\n      setTotalUnits(undefined);\n      setTotalUnitsError(error);\n      setTotalUnitsStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  return {totalUnits, totalUnitsError, totalUnitsStatus};\n}\n","import {useEffect, useRef} from 'react';\n\ntype UseIsMountedReturn = {\n  isMountedRef: React.MutableRefObject<boolean>;\n};\n\n/**\n * useIsMounted\n *\n * A hook that returns a React Ref which tells if the component is mounted, or not.\n * This is helpful when needing to stop state updates in hooks with effects.\n */\nexport function useIsMounted(): UseIsMountedReturn {\n  /**\n   * Refs\n   */\n\n  const isMountedRef = useRef<boolean>(false);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    isMountedRef.current = true;\n\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  return {\n    isMountedRef,\n  };\n}\n","import React, {useCallback, useState} from 'react';\nimport ReactModal from 'react-modal';\n\nimport {StoreState} from '../store/types';\nimport {useSelector} from 'react-redux';\nimport {useWeb3Modal} from '../components/web3/hooks';\nimport FadeIn from '../components/common/FadeIn';\nimport TimesSVG from '../assets/svg/TimesSVG';\n\n/**\n * Props should be cached somehow to prevent a new object\n * making the hook re-render each time the parent re-renders,\n * causing a continuous loop.\n */\ntype UseMemberActionDisabledProps = {\n  /**\n   * Allows the active member check to be skipped.\n   * e.g. A tx does not require the account to be a member.\n   */\n  skipIsActiveMemberCheck?: boolean;\n};\n\ntype UseMemberActionDisabledReturn = {\n  disabledReason: string;\n  isDisabled: boolean;\n  openWhyDisabledModal: () => void;\n  setOtherDisabledReasons: (r: string[]) => void;\n  WhyDisabledModal: (p: WhyDisabledModalProps) => JSX.Element | null;\n};\n\ntype WhyDisabledModalProps = {\n  title?: string;\n};\n\n/**\n * useMemberActionDisabled\n *\n * This component covers the most common cases for why a member action button should be disabled.\n * More reasons for disabling the button can be added via props using `setOtherDisabledReasons`.\n *\n * @param {ProposalActionWhyDisabledProps} props\n * @returns {UseMemberActionDisabledReturn}\n */\nexport function useMemberActionDisabled(\n  props?: UseMemberActionDisabledProps\n): UseMemberActionDisabledReturn {\n  const {skipIsActiveMemberCheck = false} = props || {};\n\n  /**\n   * State\n   */\n\n  const [otherDisabledReasons, setOtherDisabledReasons] = useState<string[]>(\n    []\n  );\n  const [shouldShowWhyModal, setShouldShowWhyModal] = useState<boolean>(false);\n\n  /**\n   * Selectors\n   */\n\n  const isActiveMember = useSelector(\n    (s: StoreState) => s.connectedMember?.isActiveMember\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {connected} = useWeb3Modal();\n\n  /**\n   * Variables\n   */\n\n  // Get the first index of other reasons.\n  const otherReasonNext =\n    otherDisabledReasons && otherDisabledReasons.find((r) => r);\n  const disabledReason = getDisabledReason();\n  const isDisabled =\n    (disabledReason ? true : false) || (otherReasonNext ? true : false);\n  const canShowDisabledReason = isDisabled && disabledReason ? true : false;\n\n  /**\n   * Cached callbacks\n   */\n\n  const WhyDisabledModalCached = useCallback(WhyDisabledModal, [\n    canShowDisabledReason,\n    disabledReason,\n    shouldShowWhyModal,\n  ]);\n\n  const handleSetOtherDisabledReasonsCached = useCallback(\n    handleSetOtherDisabledReasons,\n    []\n  );\n\n  /**\n   * Functions\n   */\n\n  function handleSetOtherDisabledReasons(otherReasons: string[]) {\n    setOtherDisabledReasons(otherReasons.filter(Boolean));\n  }\n\n  function getDisabledReason() {\n    if (!connected) {\n      return 'Your wallet is not connected.';\n    }\n\n    if (!isActiveMember && !skipIsActiveMemberCheck) {\n      return 'Either you are not a member, or your membership is not active.';\n    }\n\n    return otherReasonNext || '';\n  }\n\n  function handleOpenWhyDisabledModal() {\n    setShouldShowWhyModal(true);\n  }\n\n  function WhyDisabledModal(props: WhyDisabledModalProps): JSX.Element | null {\n    if (!canShowDisabledReason) return null;\n\n    const {title} = props;\n\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        className=\"modal-container\"\n        isOpen={shouldShowWhyModal}\n        onRequestClose={() => {\n          setShouldShowWhyModal(false);\n        }}\n        overlayClassName=\"modal-overlay\"\n        role=\"dialog\"\n        style={{overlay: {zIndex: 1000}}}>\n        <FadeIn>\n          <div className=\"modal\">\n            <button\n              className=\"modal__close-button modal__close-button--icon\"\n              onClick={() => {\n                setShouldShowWhyModal(false);\n              }}>\n              <TimesSVG />\n            </button>\n            <div className=\"card\">\n              <h2 className=\"modal__title\">{title || 'Why disabled?'}</h2>\n              <p>{disabledReason}</p>\n            </div>\n          </div>\n        </FadeIn>\n      </ReactModal>\n    );\n  }\n\n  return {\n    disabledReason,\n    isDisabled,\n    openWhyDisabledModal: handleOpenWhyDisabledModal,\n    setOtherDisabledReasons: handleSetOtherDisabledReasonsCached,\n    WhyDisabledModal: WhyDisabledModalCached,\n  };\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport Web3 from 'web3';\n\nimport {AsyncStatus} from '../util/types';\nimport {ENVIRONMENT, UNITS_ADDRESS} from '../config';\nimport {StoreState} from '../store/types';\nimport {useIsMounted} from './useIsMounted';\nimport {useWeb3Modal} from '../components/web3/hooks';\n\ntype UseMemberUnitsAtSnapshotReturn = {\n  /**\n   * Was the member to check a member of the DAO at the\n   * requested snapshot?\n   */\n  hasMembershipAtSnapshot: boolean;\n  /**\n   * Member units as a `string`.\n   * Convert to a `BigNumber`, if needed for calculation.\n   */\n  memberUnitsAtSnapshot: string | undefined;\n  memberUnitsAtSnapshotError: Error | undefined;\n  memberUnitsAtSnapshotStatus: AsyncStatus;\n};\n\nconst {STANDBY, PENDING, FULFILLED, REJECTED} = AsyncStatus;\n\nconst DEFAULT_POLL_INTERVAL_MS: number =\n  ENVIRONMENT === 'production' ? 15000 : 5000;\n\nconst DEFAULT_BLOCK_CHECK_OFFSET: number = 2;\n\n/**\n * In order for `getPriorAmount` to return without reverting,\n * we must be sending a block number from the past.\n *\n * We must poll to wait until the block is in the past.\n * We could poll `getPriorAmount` until it does not revert, but\n * doing this could hide other errors.\n *\n * @param number `blockToCompare`\n * @param Web3 `web3Instance`\n * @returns `boolean`\n * @see `getPriorAmount` in `tribute-contracts`\n */\nasync function pollUntilBlockInPast({\n  block,\n  blockOffset = DEFAULT_BLOCK_CHECK_OFFSET,\n  isMountedRef,\n  pollInterval = DEFAULT_POLL_INTERVAL_MS,\n  web3Instance,\n}: {\n  block: number;\n  blockOffset?: number;\n  isMountedRef?: React.MutableRefObject<boolean>;\n  pollInterval?: number;\n  web3Instance: Web3;\n}) {\n  return new Promise<boolean>(async (resolve, reject) => {\n    /**\n     * Uses a positive block offset to check if the difference between `block` provided\n     * and `currentBlock` is at least at or greater than the `blockOffset`.\n     *\n     * This is used to limit errors from `getPriorAmount` when the block is not in the past.\n     * If we set an offset, it helps to mitigate issues where the fetched block number\n     * and the `block.number in the contract are not yet aligned.\n     */\n    const blockOffsetCheck = (block: number, currentBlock: number): boolean => {\n      const blockDifference: number = currentBlock - block;\n\n      return blockDifference >= Math.abs(blockOffset);\n    };\n\n    // Check immediately\n    try {\n      if (blockOffsetCheck(block, await web3Instance.eth.getBlockNumber())) {\n        resolve(true);\n\n        return;\n      }\n    } catch (error) {\n      reject(error);\n\n      return;\n    }\n\n    // If the initial check did not succeed, begin to poll.\n    const intervalId = setInterval(async () => {\n      try {\n        if (!isMountedRef?.current) {\n          clearInterval(intervalId);\n\n          return;\n        }\n\n        if (blockOffsetCheck(block, await web3Instance.eth.getBlockNumber())) {\n          clearInterval(intervalId);\n          resolve(true);\n        }\n      } catch (error) {\n        clearInterval(intervalId);\n        reject(error);\n      }\n    }, pollInterval);\n  });\n}\n\nexport function useMemberUnitsAtSnapshot(\n  memberAddress: string | undefined,\n  snapshot: number | undefined,\n  options?: {\n    blockCheckOffset?: number;\n    currentBlockPollIntervalMs?: number;\n  }\n): UseMemberUnitsAtSnapshotReturn {\n  const {blockCheckOffset, currentBlockPollIntervalMs} = options || {};\n\n  /**\n   * Selectors\n   */\n\n  const bankExtensionMethods = useSelector(\n    (s: StoreState) => s.contracts.BankExtensionContract?.instance.methods\n  );\n\n  /**\n   * State\n   */\n\n  const [memberUnitsAtSnapshot, setMemberUnitsAtSnapshot] = useState<string>();\n\n  const [hasMembershipAtSnapshot, setHasMembershipAtSnapshot] =\n    useState<boolean>(false);\n\n  const [memberUnitsAtSnapshotError, setMemberUnitsAtSnapshotError] =\n    useState<Error>();\n\n  const [memberUnitsAtSnapshotStatus, setMemberUnitsAtSnapshotStatus] =\n    useState<AsyncStatus>(STANDBY);\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n  const {isMountedRef} = useIsMounted();\n\n  /**\n   * Cached Callbacks\n   */\n\n  const handleGetPriorUnitsAmountCached = useCallback(\n    handleGetPriorUnitsAmount,\n    [isMountedRef]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    // These parameters may be arriving async and not ready, yet.\n    if (!memberAddress || !snapshot || !bankExtensionMethods || !web3Instance) {\n      return;\n    }\n\n    handleGetPriorUnitsAmountCached({\n      bankExtensionMethods,\n      blockCheckOffset,\n      currentBlockPollIntervalMs,\n      memberAddress,\n      snapshot,\n      web3Instance,\n    });\n  }, [\n    bankExtensionMethods,\n    blockCheckOffset,\n    currentBlockPollIntervalMs,\n    handleGetPriorUnitsAmountCached,\n    memberAddress,\n    snapshot,\n    web3Instance,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetPriorUnitsAmount({\n    bankExtensionMethods,\n    blockCheckOffset,\n    currentBlockPollIntervalMs,\n    memberAddress,\n    snapshot,\n    web3Instance,\n  }: {\n    bankExtensionMethods: any;\n    blockCheckOffset?: number;\n    currentBlockPollIntervalMs?: number;\n    memberAddress: string;\n    snapshot: number;\n    web3Instance: Web3;\n  }): Promise<void> {\n    try {\n      // Reset any error\n      setMemberUnitsAtSnapshotError(undefined);\n      setMemberUnitsAtSnapshotStatus(PENDING);\n\n      /**\n       * Poll until we are at a block in the past.\n       *\n       * For example, in governance votes, this can be an issue for anyone trying\n       * to vote in the same block as the proposal's snapshot,\n       * as `getPriorAmount` will revert if `blockToCheck >= block.number`.\n       *\n       * This is not an issue with on-chain proposals.\n       */\n      await pollUntilBlockInPast({\n        block: snapshot,\n        blockOffset: blockCheckOffset,\n        isMountedRef,\n        pollInterval: currentBlockPollIntervalMs,\n        web3Instance,\n      });\n\n      const memberUnitsAtSnapshot: string = await bankExtensionMethods\n        .getPriorAmount(memberAddress, UNITS_ADDRESS, snapshot)\n        .call();\n\n      if (!isMountedRef.current) return;\n\n      setMemberUnitsAtSnapshot(memberUnitsAtSnapshot);\n\n      setHasMembershipAtSnapshot(\n        new BigNumber(memberUnitsAtSnapshot).isGreaterThan(new BigNumber(0))\n      );\n\n      setMemberUnitsAtSnapshotStatus(FULFILLED);\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setHasMembershipAtSnapshot(false);\n      setMemberUnitsAtSnapshot(undefined);\n      setMemberUnitsAtSnapshotError(error);\n      setMemberUnitsAtSnapshotStatus(REJECTED);\n    }\n  }\n\n  return {\n    hasMembershipAtSnapshot,\n    memberUnitsAtSnapshot,\n    memberUnitsAtSnapshotError,\n    memberUnitsAtSnapshotStatus,\n  };\n}\n","import {useEffect, useRef, useState} from 'react';\n\nimport {AsyncStatus} from '../util/types';\n\ntype UseTimeStartEndReturn = {\n  hasTimeEnded: boolean;\n  hasTimeStarted: boolean;\n  /**\n   * Informs if the initial async checks have run.\n   * This helps to tame UI false-positives that can arise when\n   * using only booleans to check status.\n   */\n  timeStartEndInitReady: boolean;\n};\n\ntype StartEndStatus = {start: AsyncStatus; end: AsyncStatus};\n\nconst {FULFILLED, PENDING, STANDBY} = AsyncStatus;\n\nfunction areAllAsyncReady(asyncMapping: Record<string, AsyncStatus>) {\n  return Object.values(asyncMapping).every((s) => s === FULFILLED);\n}\n\n/**\n * Provides `boolean` results when time starts and ends.\n *\n * If either `startSeconds` or `endSeconds` are `undefined`, or `<= 0`\n * the checks will never run; only `timeStartEndInitReady` will ever be `true`.\n *\n * @param startSeconds\n * @param endSeconds\n * @returns `UseTimeStartEndReturn`\n */\nexport function useTimeStartEnd(\n  startSeconds: number | undefined,\n  endSeconds: number | undefined\n): UseTimeStartEndReturn {\n  /**\n   * Refs\n   */\n\n  const startEndStatusRef = useRef<StartEndStatus>({\n    start: STANDBY,\n    end: STANDBY,\n  });\n\n  /**\n   * State\n   */\n\n  const [hasTimeStarted, setHasTimeStarted] = useState<boolean>(false);\n  const [hasTimeEnded, setHasTimeEnded] = useState<boolean>(false);\n\n  const [timeStartEndInitReady, setTimeStartEndInitReady] = useState<boolean>(\n    areAllAsyncReady(startEndStatusRef.current)\n  );\n\n  /**\n   * Variables\n   */\n\n  const shouldNotCheck: boolean =\n    startSeconds === undefined ||\n    endSeconds === undefined ||\n    startSeconds <= 0 ||\n    endSeconds <= 0;\n\n  /**\n   * Effects\n   */\n\n  // Actively check if time has started\n  useEffect(() => {\n    if (hasTimeStarted || shouldNotCheck) {\n      setTimeStartEndInitReady(() => {\n        startEndStatusRef.current.start = FULFILLED;\n        return areAllAsyncReady(startEndStatusRef.current);\n      });\n\n      return;\n    }\n\n    setTimeStartEndInitReady(() => {\n      startEndStatusRef.current.start = PENDING;\n      return areAllAsyncReady(startEndStatusRef.current);\n    });\n\n    // Check if time has started every 1 second\n    const intervalID = setInterval(() => {\n      const hasStartedCheck: boolean =\n        Math.floor(Date.now() / 1000) > (startSeconds ?? 0);\n\n      setHasTimeStarted(hasStartedCheck);\n\n      // The interval async process has run once\n      if (startEndStatusRef.current.start !== FULFILLED) {\n        setTimeStartEndInitReady(() => {\n          startEndStatusRef.current.start = FULFILLED;\n          return areAllAsyncReady(startEndStatusRef.current);\n        });\n      }\n    }, 1000);\n\n    return function cleanup() {\n      if (intervalID) {\n        clearInterval(intervalID);\n      }\n    };\n  }, [hasTimeStarted, shouldNotCheck, startSeconds]);\n\n  // Actively check if time has ended\n  useEffect(() => {\n    if (hasTimeEnded || shouldNotCheck) {\n      setTimeStartEndInitReady(() => {\n        startEndStatusRef.current.end = FULFILLED;\n        return areAllAsyncReady(startEndStatusRef.current);\n      });\n\n      return;\n    }\n\n    setTimeStartEndInitReady(() => {\n      startEndStatusRef.current.end = PENDING;\n      return areAllAsyncReady(startEndStatusRef.current);\n    });\n\n    // Check if time has ended every 1 second\n    const intervalID = setInterval(() => {\n      const hasEndedCheck: boolean =\n        Math.ceil(Date.now() / 1000) > (endSeconds ?? 0);\n\n      setHasTimeEnded(hasEndedCheck);\n\n      // The interval async process has run once\n      if (startEndStatusRef.current.end !== FULFILLED) {\n        setTimeStartEndInitReady(() => {\n          startEndStatusRef.current.end = FULFILLED;\n          return areAllAsyncReady(startEndStatusRef.current);\n        });\n      }\n    }, 1000);\n\n    return function cleanup() {\n      if (intervalID) {\n        clearInterval(intervalID);\n      }\n    };\n  }, [endSeconds, hasTimeEnded, shouldNotCheck]);\n\n  return {\n    hasTimeStarted,\n    hasTimeEnded,\n    timeStartEndInitReady,\n  };\n}\n","import {\n  SnapshotDraftData,\n  SnapshotProposalData,\n  SnapshotDraftResponseData,\n  SnapshotProposalResponseData,\n  SnapshotType,\n  VoteChoices,\n} from '@openlaw/snapshot-js-erc712';\nimport {AbiItem} from 'web3-utils/types';\nimport {Contract} from 'web3-eth-contract/types';\n\nimport {ContractAdapterNames} from '../web3/types';\nimport {VotingAdapterName} from '../adapters-extensions/enums';\nimport {VotingState} from './voting/types';\n\n/**\n * ENUMS\n */\n\n/**\n * Mapping of DaoRegistry proposal flags.\n * This should match the enum (including order) in the `DaoRegistry`. If it does not match,\n * the results of checking the proposal's state via flag will be wrong.\n *\n * @see `ProposalFlag` `DaoRegistry.sol`\n * @see `getFlag` `DaoConstants.sol`\n * @see `setFlag` `DaoConstants.sol`\n */\nexport enum ProposalFlag {\n  EXISTS,\n  SPONSORED,\n  PROCESSED,\n}\n\n// @todo Need more information about the vote challenge flow.\nexport enum ProposalFlowStatus {\n  Submit = 'Submit',\n  Sponsor = 'Sponsor',\n  OffchainVoting = 'OffchainVoting',\n  OffchainVotingSubmitResult = 'OffchainVotingSubmitResult',\n  OffchainVotingGracePeriod = 'OffchainVotingGracePeriod',\n  OnchainVoting = 'OnchainVoting',\n  Process = 'Process',\n  Completed = 'Completed',\n}\n\n/**\n * @see `Distribute.sol` in tribute-contracts\n */\nexport enum DistributionStatus {\n  NOT_STARTED,\n  IN_PROGRESS,\n  DONE,\n  FAILED,\n}\n\n/**\n * This is an internal type we use for sending to Snapshot Hub via\n * `metadata: {}` to indicate the proposal is only meant for xyz.\n *\n * @note Only set the `metadata.type` in the case where the proposal's usage\n * cannot be determined by the `actionId` (adapter address) alone.\n */\nexport enum SnapshotMetadataType {\n  Governance = 'Governance',\n}\n\n/**\n * TYPES\n */\n\nexport type Proposal = {\n  adapterAddress: string;\n  flags: string; // unint256 of Proposal's current flag\n};\n\n// Arguments for an optional render prop for `<ProposalActions />` and its child action wrapping components.\nexport type RenderActionPropArguments = {\n  [VotingAdapterName.OffchainVotingContract]: {\n    adapterName: ContractAdapterNames;\n    // An enum name (`string`) of the DAO proposal's `VotingState` index\n    daoProposalVoteResult: typeof VotingState[any] | undefined;\n    daoProposalVote: OffchainVotingAdapterVote | undefined;\n    gracePeriodStartMs: number | undefined;\n    gracePeriodEndMs: number | undefined;\n    proposal: ProposalData;\n    status: ProposalFlowStatus | undefined;\n  };\n};\n\n// @todo Change the type to be precise\nexport type SubgraphProposal = Record<string, any>;\n\n/**\n * We augment the response data to add a few helpful data pieces.\n */\nexport type SnapshotDraft = {\n  /**\n   * The ID used to reference the DAO.\n   */\n  idInDAO: string;\n  /**\n   * An ID helper to reference the Draft hash\n   */\n  idInSnapshot: string;\n} & SnapshotDraftResponseData;\n\n/**\n * We augment the response data to add a few helpful data pieces.\n */\nexport type SnapshotProposal = {\n  /**\n   * The ID used to reference the DAO.\n   */\n  idInDAO: string;\n  /**\n   * An ID helper to reference the Proposal hash\n   */\n  idInSnapshot: string;\n} & SnapshotProposalResponseData;\n\n/**\n * Common data shared between a Snapshot Drafts and Proposals.\n * Helpful when we need to display information which is accessible on both.\n */\nexport type SnapshotProposalCommon = SnapshotDraft | SnapshotProposal;\n\nexport type ProposalData = {\n  // @todo Make non-nullable?\n  idInDAO?: string;\n  // @todo Make non-nullable?\n  daoProposalVotingAdapter?: ProposalVotingAdapterData;\n  // @todo Make non-nullable?\n  daoProposalVote?: ProposalVotesData;\n  // @todo Make non-nullable?\n  daoProposalVotingState?: VotingState;\n  daoProposal: Proposal | undefined;\n  /**\n   * Data for either a Draft or Proposal which is shared between the two types.\n   */\n  getCommonSnapshotProposalData: () => SnapshotProposalCommon | undefined;\n  refetchProposalOrDraft: () => void;\n  snapshotDraft: SnapshotDraft | undefined;\n  snapshotProposal: SnapshotProposal | undefined;\n  snapshotType: ProposalOrDraftSnapshotType | undefined;\n};\n\n/**\n * A conditional helper type for determining which data shape to use.\n *\n * @link https://www.typescriptlang.org/docs/handbook/2/conditional-types.html\n */\nexport type ProposalOrDraftSnapshotData =\n  | SnapshotDraftResponseData\n  | SnapshotProposalResponseData;\n\nexport type ProposalOrDraftSnapshotType =\n  | SnapshotType.proposal\n  | SnapshotType.draft;\n\n/**\n * A conditional helper type for determining which data shape to use based on the `ProposalOrDraftSnapshotType`.\n *\n * @link https://www.typescriptlang.org/docs/handbook/2/conditional-types.html\n */\nexport type ProposalOrDraftSignDataFromType<\n  T extends ProposalOrDraftSnapshotType\n> = T extends SnapshotType.proposal ? SnapshotProposalData : SnapshotDraftData;\n\n/**\n * Voting.sol->Voting\n *\n * @link https://github.com/openlawteam/tribute-contracts/blob/master/contracts/adapters/voting/Voting.sol\n */\nexport type VotingAdapterVotes = {\n  blockNumber: string;\n  nbNo: string;\n  nbYes: string;\n  startingTime: string;\n};\n\n/**\n * OffchainVoting.sol->Voting\n *\n * @link https://github.com/openlawteam/tribute-contracts/blob/master/contracts/adapters/voting/OffchainVoting.sol\n */\nexport type OffchainVotingAdapterVote = {\n  fallbackVotesCount: string;\n  forceFailed: boolean;\n  gracePeriodStartingTime: string;\n  index: string;\n  isChallenged: boolean;\n  nbNo: string;\n  nbYes: string;\n  reporter: string;\n  resultRoot: string;\n  snapshot: string;\n  startingTime: string;\n};\n\n/**\n * VotingResult\n *\n * A custom result we build to deliver to components.\n * It should accommodate all types of yes/no voting (i.e. on-chain, off-chain).\n */\n\nexport type VoteChoiceResult = {\n  percentage: number;\n  units: number;\n};\n\nexport type VotingResult = {\n  [VoteChoices.Yes]: VoteChoiceResult;\n  [VoteChoices.No]: VoteChoiceResult;\n  totalUnits: number;\n};\n\n/**\n * Proposal's voting adapter data\n */\nexport type ProposalVotingAdapterData = {\n  votingAdapterName: VotingAdapterName;\n  votingAdapterAddress: string;\n  /**\n   * Get the ABI for the proposal.\n   * The object is not included inline to\n   * save from repetitive data (some ABIs can be large).\n   */\n  getVotingAdapterABI: () => AbiItem[];\n  // Helper to use the Web3 Contract directly\n  getWeb3VotingAdapterContract: <T = Contract>() => T;\n};\n\nexport type ProposalVotingAdapterTuple = [\n  proposalId: string,\n  votingAdapterData: ProposalVotingAdapterData\n];\n\n/**\n * Proposal on-chain votes data\n *\n * @see `useProposalsVotes`\n */\nexport type ProposalVotesData = {\n  [VotingAdapterName.OffchainVotingContract]?: OffchainVotingAdapterVote;\n  [VotingAdapterName.VotingContract]?: VotingAdapterVotes;\n};\n","import {BlockTransactionBase} from 'web3-eth';\nimport Web3 from 'web3';\n\ninterface TemporaryBlockTxType extends BlockTransactionBase {\n  baseFeePerGas?: string;\n}\n\n/**\n * Checks if the block header contains fields that indicate EIP-1559\n * support (i.e. `baseFeePerGas`).\n *\n * @todo Fix types once `web3-eth` types are up-to-date.\n *\n * @returns {Promise<boolean>} true if current network supports EIP-1559\n */\nexport async function isEIP1559Compatible(\n  /**\n   * May be arriving in async (from a hook),\n   * hence the `undefined` type.\n   */\n  web3Instance: Web3 | undefined\n): Promise<boolean> {\n  const latestBlock = (await web3Instance?.eth.getBlock(\n    'latest'\n  )) as TemporaryBlockTxType;\n\n  return latestBlock?.baseFeePerGas !== undefined;\n}\n","import React, {useEffect, useState} from 'react';\n\ninterface IProps {\n  // Show spinner after some time has elapsed.\n  // Prevents the \"sudden spinner\" UI/UX no-no.\n  // Esp. if we could have cached data.\n  showAfterMs?: number;\n  text?: string;\n  textProps?: {[key: string]: any};\n}\n\nfunction Spinner(props: Partial<IProps>) {\n  return <div className=\"loader\" {...props} />;\n}\n\nconst Loader = (\n  props: IProps & React.PropsWithoutRef<JSX.IntrinsicElements['div']>\n) => {\n  const {showAfterMs, text, textProps, ...loaderProps} = props;\n  const [showLoaderAfterMs, setShowLoaderAfterMs] = useState<boolean>(false);\n\n  useEffect(() => {\n    /* 200ms is approx. the time a user will notice a stalled, blank screen */\n    const timeoutId =\n      showAfterMs && setTimeout(() => setShowLoaderAfterMs(true), showAfterMs);\n\n    return function cleanup() {\n      timeoutId && clearTimeout(timeoutId);\n    };\n  }, [showAfterMs]);\n\n  return (!showAfterMs || (showAfterMs && showLoaderAfterMs)) && props.text ? (\n    <div className=\"loader-container\">\n      <Spinner {...loaderProps} />\n      <span className=\"loader__text\" {...textProps}>\n        {text}\n      </span>\n    </div>\n  ) : (!showAfterMs || (showAfterMs && showLoaderAfterMs)) && !props.text ? (\n    <Spinner {...loaderProps} />\n  ) : null;\n};\n\nexport default Loader;\n","import {lazy, Suspense} from 'react';\n\ntype WalletIconProps = {\n  providerName: string | undefined;\n};\n\n/**\n * Lazy load SVG's\n */\n\nconst MetaMaskSVG = lazy(() => import('../../assets/svg/MetaMaskSVG'));\n\nconst WalletConnectSVG = lazy(\n  () => import('../../assets/svg/WalletConnectSVG')\n);\n\n// Mapping of provider name to lazy component\nconst walletIconMap: Record<string, JSX.Element> = {\n  injected: <MetaMaskSVG />,\n  walletconnect: <WalletConnectSVG />,\n};\n\nexport function WalletIcon({\n  providerName,\n}: WalletIconProps): JSX.Element | null {\n  if (!providerName || !walletIconMap[providerName]) return null;\n\n  return (\n    <Suspense fallback={null}>\n      <span className=\"walletconnect__wallet-icon\">\n        {walletIconMap[providerName]}\n      </span>\n    </Suspense>\n  );\n}\n","import {ToStepNodeResult} from '@openlaw/snapshot-js-erc712/dist/types';\n\n/**\n * @see `IVoting.sol` in tribute-contracts\n */\nexport enum VotingState {\n  NOT_STARTED,\n  TIE,\n  PASS,\n  NOT_PASS,\n  IN_PROGRESS,\n  GRACE_PERIOD,\n}\n\n/**\n * @see `OffchainVoting.sol->getBadNodeError` in tribute-contracts\n */\nexport enum BadNodeError {\n  OK,\n  WRONG_PROPOSAL_ID,\n  INVALID_CHOICE,\n  AFTER_VOTING_PERIOD,\n  BAD_SIGNATURE,\n  INDEX_OUT_OF_BOUND,\n}\n\n/**\n * Response when calling `GET snapshot-hub/api/:space/offchain_proof/:merkle_root`\n */\nexport type SnapshotOffchainProofResponse = {\n  merkle_root: string;\n  space: string;\n  steps: ToStepNodeResult[];\n};\n","import {AbiItem} from 'web3-utils';\nimport {useSelector} from 'react-redux';\nimport {useState, useEffect, useCallback} from 'react';\nimport usePreviousDistinct from 'react-use/lib/usePreviousDistinct';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {multicall, MulticallTuple} from '../../../components/web3/helpers';\nimport {normalizeString, truncateEthAddress} from '../../../util/helpers';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../../components/web3/hooks';\n\ntype UseCheckApplicantReturn = {\n  checkApplicantError: Error | undefined;\n  checkApplicantInvalidMsg: string | undefined;\n  checkApplicantStatus: AsyncStatus;\n  isApplicantValid: boolean | undefined;\n};\n\n/**\n * useCheckApplicant\n *\n * Checks if the provided applicant address is valid to become a potential new member.\n *\n * @export\n * @param {string} [address]\n * @returns {UseCheckApplicantReturn}\n */\nexport function useCheckApplicant(address?: string): UseCheckApplicantReturn {\n  /**\n   * Selectors\n   */\n\n  const DaoRegistryContract = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract\n  );\n\n  /**\n   * State\n   */\n\n  const [checkApplicantError, setCheckApplicantError] = useState<Error>();\n\n  const [checkApplicantInvalidMsg, setCheckApplicantInvalidMsg] =\n    useState<string>();\n\n  const [checkApplicantStatus, setCheckApplicantStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  const [isApplicantValid, setIsApplicantValid] = useState<boolean>();\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * Their hooks\n   */\n\n  const prevAddress = usePreviousDistinct(address);\n\n  /**\n   * Cached callbacks\n   */\n\n  const checkApplicantValidityCached = useCallback(checkApplicantValidity, [\n    DaoRegistryContract,\n    address,\n    web3Instance,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    // Reset state if no address is detected\n    if (prevAddress && !address) {\n      setCheckApplicantError(undefined);\n      setCheckApplicantInvalidMsg(undefined);\n      setIsApplicantValid(undefined);\n      setCheckApplicantStatus(AsyncStatus.STANDBY);\n    }\n\n    if (address) {\n      checkApplicantValidityCached();\n    }\n  }, [address, checkApplicantValidityCached, prevAddress]);\n\n  /**\n   * Functions\n   */\n\n  async function checkApplicantValidity() {\n    if (!address || !DaoRegistryContract || !web3Instance) return;\n\n    try {\n      setCheckApplicantStatus(AsyncStatus.PENDING);\n\n      const truncatedAddress = truncateEthAddress(address, 7);\n\n      const {abi: daoRegistryABI, contractAddress: daoRegistryAddress} =\n        DaoRegistryContract;\n\n      // Build calls to DaoRegistry contract (which includes relevant DaoConstants functions)\n      const getIsNotReservedAddressABI = daoRegistryABI.find(\n        (item) => item.name === 'isNotReservedAddress'\n      );\n      const isNotReservedAddressCall: MulticallTuple = [\n        daoRegistryAddress,\n        getIsNotReservedAddressABI as AbiItem,\n        [address],\n      ];\n\n      const getIsNotZeroAddressABI = daoRegistryABI.find(\n        (item) => item.name === 'isNotZeroAddress'\n      );\n      const isNotZeroAddressCall: MulticallTuple = [\n        daoRegistryAddress,\n        getIsNotZeroAddressABI as AbiItem,\n        [address],\n      ];\n\n      const getGetAddressIfDelegatedABI = daoRegistryABI.find(\n        (item) => item.name === 'getAddressIfDelegated'\n      );\n      const getAddressIfDelegatedCall: MulticallTuple = [\n        daoRegistryAddress,\n        getGetAddressIfDelegatedABI as AbiItem,\n        [address],\n      ];\n\n      const calls = [\n        isNotReservedAddressCall,\n        isNotZeroAddressCall,\n        getAddressIfDelegatedCall,\n      ];\n\n      const [\n        isNotReservedAddressResult,\n        isNotZeroAddressResult,\n        getAddressIfDelegatedResult,\n      ] = await multicall<[boolean, boolean, string]>({calls, web3Instance});\n\n      if (!isNotReservedAddressResult) {\n        // Applicant address cannot be a reserved address.\n        setIsApplicantValid(false);\n        setCheckApplicantInvalidMsg(\n          `The applicant address ${truncatedAddress} is invalid because it is a DAO reserved address.`\n        );\n      } else if (!isNotZeroAddressResult) {\n        // Applicant address cannot be 0x0 address.\n        setIsApplicantValid(false);\n        setCheckApplicantInvalidMsg(\n          `The applicant address ${truncatedAddress} is invalid.`\n        );\n      } else if (\n        normalizeString(address) !==\n        normalizeString(getAddressIfDelegatedResult)\n      ) {\n        // Applicant address cannot already be in use as a delegate key.\n        setIsApplicantValid(false);\n        setCheckApplicantInvalidMsg(\n          `The applicant address ${truncatedAddress} is already in use as a delegate key. The address must be removed as a delegate before it can become a member.`\n        );\n      } else {\n        setIsApplicantValid(true);\n        setCheckApplicantInvalidMsg(undefined);\n      }\n\n      setCheckApplicantStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      setIsApplicantValid(undefined);\n      setCheckApplicantInvalidMsg(undefined);\n      setCheckApplicantError(error);\n      setCheckApplicantStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  return {\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n  };\n}\n","import {useEffect, useState, useCallback} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useQuery} from 'react-query';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {Proposal} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks';\n\ntype DaoProposalEntries = [proposalId: string, proposal: Proposal][];\n\ntype UseDaoProposalsReturn = {\n  daoProposals: DaoProposalEntries;\n  daoProposalsStatus: AsyncStatus;\n  daoProposalsError: Error | undefined;\n};\n\nconst INITIAL_DAO_PROPOSAL_ENTRIES: DaoProposalEntries = [];\n\n/**\n * useDaoProposals\n *\n * Gets `proposals` by their id from the DAO via `multicall`.\n *\n * @param proposalIds\n * @returns `UseDaoProposalsReturn`\n */\nexport function useDaoProposals(proposalIds: string[]): UseDaoProposalsReturn {\n  /**\n   * Selectors\n   */\n\n  const proposalsAbi = useSelector((s: StoreState) =>\n    s.contracts.DaoRegistryContract?.abi.find((a) => a.name === 'proposals')\n  );\n\n  const registryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  /**\n   * State\n   */\n\n  const [daoProposals, setDaoProposals] = useState<DaoProposalEntries>(\n    INITIAL_DAO_PROPOSAL_ENTRIES\n  );\n\n  const [daoProposalsStatus, setDaoProposalsStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  const [daoProposalsError, setDaoProposalsError] = useState<Error>();\n\n  const [safeProposalIds, setSafeProposalIds] = useState<string[]>();\n\n  const [daoProposalsCalls, setDaoProposalsCalls] =\n    useState<MulticallTuple[]>();\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * React Query\n   */\n\n  const {data: daoProposalsData, error: daoProposalsQueryError} = useQuery(\n    ['daoProposals', daoProposalsCalls],\n    async () => {\n      if (!daoProposalsCalls?.length || !web3Instance) {\n        return;\n      }\n\n      return await multicall({\n        calls: daoProposalsCalls,\n        web3Instance,\n      });\n    },\n    {enabled: !!daoProposalsCalls?.length && !!web3Instance}\n  );\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetDaoProposalsCached = useCallback(handleGetDaoProposals, [\n    daoProposalsData,\n    daoProposalsQueryError,\n    safeProposalIds,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (\n      !proposalIds.length ||\n      !safeProposalIds ||\n      !proposalsAbi ||\n      !registryAddress ||\n      !web3Instance\n    ) {\n      return;\n    }\n\n    handleGetDaoProposalsCached();\n  }, [\n    handleGetDaoProposalsCached,\n    proposalIds.length,\n    proposalsAbi,\n    registryAddress,\n    safeProposalIds,\n    web3Instance,\n  ]);\n\n  useEffect(() => {\n    if (!proposalIds.length || !web3Instance) {\n      return;\n    }\n\n    // Only use hex (more specifically `bytes32`) id's\n    const safeProposalIdsToSet = proposalIds.filter(\n      web3Instance.utils.isHexStrict\n    );\n\n    setSafeProposalIds(safeProposalIdsToSet);\n  }, [proposalIds, web3Instance]);\n\n  useEffect(() => {\n    if (!proposalsAbi || !registryAddress || !safeProposalIds?.length) return;\n\n    const daoProposalsCallsToSet: MulticallTuple[] = safeProposalIds.map(\n      (id) => [registryAddress, proposalsAbi, [id]]\n    );\n\n    setDaoProposalsCalls(daoProposalsCallsToSet);\n  }, [proposalsAbi, registryAddress, safeProposalIds]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetDaoProposals() {\n    try {\n      if (!safeProposalIds) return;\n\n      if (!safeProposalIds.length) {\n        setDaoProposalsStatus(AsyncStatus.FULFILLED);\n        setDaoProposals([]);\n\n        return;\n      }\n\n      setDaoProposalsStatus(AsyncStatus.PENDING);\n      // Reset error\n      setDaoProposalsError(undefined);\n\n      if (daoProposalsQueryError) {\n        throw daoProposalsQueryError;\n      }\n\n      if (daoProposalsData) {\n        setDaoProposals(\n          safeProposalIds.map((id, i) => [id, daoProposalsData[i]])\n        );\n        setDaoProposalsStatus(AsyncStatus.FULFILLED);\n      }\n    } catch (error) {\n      setDaoProposals(INITIAL_DAO_PROPOSAL_ENTRIES);\n      setDaoProposalsError(error);\n      setDaoProposalsStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  return {\n    daoProposals,\n    daoProposalsStatus,\n    daoProposalsError,\n  };\n}\n","import {AbiItem} from 'web3-utils/types';\nimport {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {VoteChoicesIndex} from '@openlaw/snapshot-js-erc712';\nimport Web3 from 'web3';\nimport {useQuery} from 'react-query';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {SnapshotProposal, VotingResult} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {UNITS_ADDRESS, TOTAL_ADDRESS} from '../../../config';\nimport {useIsMounted} from '../../../hooks';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VoteChoices} from '../../web3/types';\n\ntype OffchainVotingResultEntries = [\n  proposalHash: string,\n  votingResult: VotingResult\n][];\n\ntype UseOffchainVotingResultsReturn = {\n  offchainVotingResults: OffchainVotingResultEntries;\n  offchainVotingResultsError: Error | undefined;\n  offchainVotingResultsStatus: AsyncStatus;\n};\n\n/**\n * @todo Polling\n */\nexport function useOffchainVotingResults(\n  /**\n   * Accepts a single `SnapshotProposal` or `SnapshotProposal[]`\n   */\n  proposals: (SnapshotProposal | undefined) | (SnapshotProposal | undefined)[]\n): UseOffchainVotingResultsReturn {\n  /**\n   * Selectors\n   */\n\n  const bankABI = useSelector(\n    (s: StoreState) => s.contracts.BankExtensionContract?.abi\n  );\n  const bankAddress = useSelector(\n    (s: StoreState) => s.contracts.BankExtensionContract?.contractAddress\n  );\n\n  /**\n   * State\n   */\n\n  const [votingResults, setVotingResults] =\n    useState<OffchainVotingResultEntries>([]);\n\n  const [offchainVotingResultsStatus, setOffchainVotingResultsStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  const [offchainVotingResultsError, setOffchainVotingResultsError] = useState<\n    Error | undefined\n  >();\n\n  const [proposalsToMap, setProposalsToMap] = useState<\n    (SnapshotProposal | undefined)[]\n  >([]);\n\n  /**\n   * Variables\n   */\n\n  const getPriorAmountABI = bankABI?.find(\n    (item) => item.name === 'getPriorAmount'\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n  const {isMountedRef} = useIsMounted();\n\n  /**\n   * React Query\n   */\n\n  const {data: votingResultsToSetData, error: votingResultsToSetError} =\n    useQuery(\n      ['votingResultsToSet', proposalsToMap],\n      async () => {\n        if (\n          !bankAddress ||\n          !getPriorAmountABI ||\n          !proposalsToMap.length ||\n          !web3Instance\n        )\n          return;\n\n        return await Promise.all(\n          proposalsToMap.map(async (p) => {\n            const snapshot = p?.msg.payload.snapshot;\n            const idInSnapshot = p?.idInSnapshot;\n\n            if (!idInSnapshot || !snapshot) return;\n\n            const voterEntries = p?.votes?.map((v): [string, number] => {\n              const vote = v[Object.keys(v)[0]];\n\n              return [\n                /**\n                 * Must be the true member's address for calculating voting power.\n                 * This value is (or at least should be) derived from `OffchainVoting.memberAddressesByDelegatedKey`.\n                 */\n                vote.msg.payload.metadata.memberAddress,\n                vote.msg.payload.choice,\n              ];\n            });\n\n            if (!voterEntries || !voterEntries.length) return;\n\n            // Dedupe any duplicate addresses to be safe.\n            const voterAddressesAndChoices = Object.entries(\n              Object.fromEntries(voterEntries)\n            );\n\n            try {\n              const result = await getUnitsPerChoiceCached({\n                bankAddress,\n                getPriorAmountABI,\n                snapshot,\n                voterAddressesAndChoices,\n                web3Instance,\n              });\n\n              return [idInSnapshot, result];\n            } catch (error) {\n              return;\n            }\n          })\n        );\n      },\n      {\n        enabled:\n          !!bankAddress &&\n          !!getPriorAmountABI &&\n          !!proposalsToMap.length &&\n          !!web3Instance,\n      }\n    );\n\n  /**\n   * Cached callbacks\n   */\n\n  const getUnitsPerChoiceCached = useCallback(\n    getUnitsPerChoiceFromContract,\n    []\n  );\n\n  const buildOffchainVotingResultEntriesCached = useCallback(\n    buildOffchainVotingResultEntries,\n    [\n      bankAddress,\n      getPriorAmountABI,\n      isMountedRef,\n      proposalsToMap.length,\n      votingResultsToSetData,\n      votingResultsToSetError,\n      web3Instance,\n    ]\n  );\n\n  /**\n   * Effects\n   */\n\n  // Build result entries of `OffchainVotingResultEntries`\n  useEffect(() => {\n    buildOffchainVotingResultEntriesCached();\n  }, [buildOffchainVotingResultEntriesCached]);\n\n  useEffect(() => {\n    const proposalsToMapToSet = Array.isArray(proposals)\n      ? proposals\n      : [proposals];\n\n    setProposalsToMap(proposalsToMapToSet);\n  }, [proposals]);\n\n  /**\n   * Functions\n   */\n\n  async function buildOffchainVotingResultEntries() {\n    if (\n      !bankAddress ||\n      !getPriorAmountABI ||\n      !proposalsToMap.length ||\n      !web3Instance\n    ) {\n      return;\n    }\n\n    try {\n      setOffchainVotingResultsStatus(AsyncStatus.PENDING);\n\n      if (votingResultsToSetError) {\n        throw votingResultsToSetError;\n      }\n\n      if (votingResultsToSetData) {\n        const filteredVotingResultsToSetData = votingResultsToSetData.filter(\n          (p) => p\n        );\n\n        if (!isMountedRef.current) return;\n\n        setOffchainVotingResultsStatus(AsyncStatus.FULFILLED);\n        setVotingResults(\n          filteredVotingResultsToSetData as OffchainVotingResultEntries\n        );\n        setOffchainVotingResultsError(undefined);\n      }\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setOffchainVotingResultsStatus(AsyncStatus.REJECTED);\n      setVotingResults([]);\n      setOffchainVotingResultsError(error);\n    }\n  }\n\n  async function getUnitsPerChoiceFromContract({\n    bankAddress,\n    getPriorAmountABI,\n    snapshot,\n    voterAddressesAndChoices,\n    web3Instance,\n  }: {\n    bankAddress: string;\n    getPriorAmountABI: AbiItem;\n    snapshot: number;\n    voterAddressesAndChoices: [string, number][];\n    web3Instance: Web3;\n  }): Promise<VotingResult> {\n    try {\n      // Create results object to set later\n      const results = {\n        [VoteChoices.Yes]: {\n          percentage: 0,\n          units: 0,\n        },\n        [VoteChoices.No]: {\n          percentage: 0,\n          units: 0,\n        },\n        totalUnits: 0,\n      };\n\n      // Build a call for total units\n      const totalUnitsCall: MulticallTuple = [\n        bankAddress,\n        getPriorAmountABI,\n        [\n          TOTAL_ADDRESS, // account\n          UNITS_ADDRESS, // tokenAddr\n          snapshot.toString(), // blockNumber\n        ],\n      ];\n\n      // Build calls to Bank contract\n      const unitsCalls = voterAddressesAndChoices.map(\n        ([address]): MulticallTuple => [\n          bankAddress,\n          getPriorAmountABI,\n          [\n            address, // account\n            UNITS_ADDRESS, // tokenAddr\n            snapshot.toString(), // blockNumber\n          ],\n        ]\n      );\n\n      const calls = [totalUnitsCall, ...unitsCalls];\n\n      const [totalUnitsResult, ...votingResults]: string[] = await multicall({\n        calls: calls,\n        web3Instance,\n      });\n\n      // Set Units values for choices\n      votingResults.forEach((units, i) => {\n        const isYes =\n          VoteChoicesIndex[voterAddressesAndChoices[i][1]] ===\n          VoteChoicesIndex[VoteChoicesIndex.Yes];\n        const choice = isYes ? VoteChoices.Yes : VoteChoices.No;\n\n        results[choice].units += Number(units);\n      });\n\n      // Set percentages\n      results[VoteChoices.Yes].percentage =\n        (results[VoteChoices.Yes].units / Number(totalUnitsResult)) * 100;\n\n      results[VoteChoices.No].percentage =\n        (results[VoteChoices.No].units / Number(totalUnitsResult)) * 100;\n\n      // Set total units\n      results.totalUnits = Number(totalUnitsResult);\n\n      return results;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  return {\n    offchainVotingResults: votingResults,\n    offchainVotingResultsError,\n    offchainVotingResultsStatus,\n  };\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {BURN_ADDRESS} from '../../../util/constants';\nimport {getVotingAdapterABI} from '../helpers';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {ProposalVotingAdapterData} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VotingAdapterName} from '../../adapters-extensions/enums';\n\ntype ProposalVotingAdapterTuple = [\n  proposalId: string,\n  votingAdapterData: ProposalVotingAdapterData\n];\n\ntype UseProposalsVotingAdapterReturn = {\n  proposalsVotingAdapters: ProposalVotingAdapterTuple[];\n  proposalsVotingAdaptersError: Error | undefined;\n  proposalsVotingAdaptersStatus: AsyncStatus;\n};\n\nconst INITIAL_VOTING_ADAPTERS: ProposalVotingAdapterTuple[] = [];\n\n/**\n * Fetch voting adapter data for proposals by DAO proposal id.\n * Only returns data for proposals of which voting adapters have been assigned (i.e. sponsored).\n *\n * @param {string[]}\n * @returns {UseProposalsVotingAdapterReturn}\n */\nexport function useProposalsVotingAdapter(\n  proposalIds: string[]\n): UseProposalsVotingAdapterReturn {\n  /**\n   * Selectors\n   */\n\n  const registryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n  const registryABI = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.abi\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * State\n   */\n\n  const [proposalsVotingAdapters, setProposalsVotingAdapters] = useState<\n    ProposalVotingAdapterTuple[]\n  >(INITIAL_VOTING_ADAPTERS);\n\n  const [proposalsVotingAdaptersError, setProposalsVotingAdaptersError] =\n    useState<Error | undefined>();\n\n  const [proposalsVotingAdaptersStatus, setProposalsVotingAdaptersStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  /**\n   * Cached callbacks\n   */\n\n  const getProposalsVotingAdaptersOnchainCached = useCallback(\n    getProposalsVotingAdaptersOnchain,\n    [proposalIds, registryABI, registryAddress, web3Instance]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getProposalsVotingAdaptersOnchainCached();\n  }, [getProposalsVotingAdaptersOnchainCached]);\n\n  /**\n   * Functions\n   */\n\n  async function getProposalsVotingAdaptersOnchain(): Promise<void> {\n    if (\n      !proposalIds.length ||\n      !registryABI ||\n      !registryAddress ||\n      !web3Instance\n    ) {\n      return;\n    }\n\n    // Only use hex (more specifically `bytes32`) id's\n    const safeProposalIds = proposalIds.filter(web3Instance.utils.isHexStrict);\n\n    if (!safeProposalIds.length) {\n      setProposalsVotingAdapters(INITIAL_VOTING_ADAPTERS);\n      setProposalsVotingAdaptersStatus(AsyncStatus.FULFILLED);\n\n      return;\n    }\n\n    try {\n      const votingAdapterABI = registryABI.find(\n        (ai) => ai.name === 'votingAdapter'\n      );\n\n      if (!votingAdapterABI) {\n        throw new Error(\n          'No \"votingAdapter\" ABI function was found in the DAO registry ABI.'\n        );\n      }\n\n      // `DaoRegistry.votingAdapter` calls\n      const votingAdapterCalls: MulticallTuple[] = safeProposalIds.map((id) => [\n        registryAddress,\n        votingAdapterABI,\n        [id],\n      ]);\n\n      setProposalsVotingAdaptersStatus(AsyncStatus.PENDING);\n\n      const votingAdapterAddressResults: string[] = await multicall({\n        calls: votingAdapterCalls,\n        web3Instance,\n      });\n\n      const {default: lazyIVotingABI} = await import(\n        '../../../abis/IVoting.json'\n      );\n\n      const getAdapterNameABI = (lazyIVotingABI as typeof registryABI).find(\n        (ai) => ai.name === 'getAdapterName'\n      );\n\n      if (!getAdapterNameABI) {\n        throw new Error(\n          'No \"getAdapterName\" ABI function was found in the IVoting ABI.'\n        );\n      }\n\n      /**\n       * Filter out `safeProposalIds` which are not sponsored (i.e. voting adapter address === `BURN_ADDRESS`).\n       * Filter out `votingAdapterAddressResults` which equal the `BURN_ADDRESS`.\n       *\n       * This ensures these two arrays maintain the same length as they rely on indexes for the\n       * proposals to match up to the array of `multicall` results.\n       */\n\n      const filteredProposalIds = safeProposalIds.filter(\n        (_id, i) => votingAdapterAddressResults[i] !== BURN_ADDRESS\n      );\n\n      const filteredVotingAdapterAddressResults =\n        votingAdapterAddressResults.filter((a) => a !== BURN_ADDRESS);\n\n      /**\n       * Exit early if there's no voting adapter addresses.\n       * It means no proposals were found to be sponsored\n       */\n      if (!filteredVotingAdapterAddressResults.length) {\n        setProposalsVotingAdapters(INITIAL_VOTING_ADAPTERS);\n        setProposalsVotingAdaptersStatus(AsyncStatus.FULFILLED);\n\n        return;\n      }\n\n      const votingAdapterNameCalls: MulticallTuple[] =\n        filteredVotingAdapterAddressResults.map((votingAdapterAddress) => [\n          votingAdapterAddress,\n          getAdapterNameABI,\n          [],\n        ]);\n\n      const adapterNameResults: VotingAdapterName[] = await multicall({\n        calls: votingAdapterNameCalls,\n        web3Instance,\n      });\n\n      const votingAdaptersToSet = await Promise.all(\n        filteredProposalIds.map(\n          async (id, i): Promise<ProposalVotingAdapterTuple> => {\n            const votingAdapterABI = await getVotingAdapterABI(\n              adapterNameResults[i]\n            );\n            const votingAdapterAddress = filteredVotingAdapterAddressResults[i];\n\n            return [\n              id,\n              {\n                votingAdapterName: adapterNameResults[i],\n                votingAdapterAddress,\n                getVotingAdapterABI: () => votingAdapterABI,\n                getWeb3VotingAdapterContract: <T>() =>\n                  new web3Instance.eth.Contract(\n                    votingAdapterABI,\n                    votingAdapterAddress\n                  ) as any as T,\n              },\n            ];\n          }\n        )\n      );\n\n      setProposalsVotingAdapters(votingAdaptersToSet);\n      setProposalsVotingAdaptersStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      setProposalsVotingAdaptersStatus(AsyncStatus.REJECTED);\n      setProposalsVotingAdapters([]);\n      setProposalsVotingAdaptersError(error);\n    }\n  }\n\n  return {\n    proposalsVotingAdapters,\n    proposalsVotingAdaptersError,\n    proposalsVotingAdaptersStatus,\n  };\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {\n  SnapshotDraftResponse,\n  SnapshotProposalResponse,\n  SnapshotType,\n} from '@openlaw/snapshot-js-erc712';\nimport {useQueryClient} from 'react-query';\n\nimport {\n  Proposal,\n  ProposalData,\n  ProposalOrDraftSnapshotType,\n  SnapshotDraft,\n  SnapshotProposal,\n  SnapshotProposalCommon,\n} from '../types';\nimport {AsyncStatus} from '../../../util/types';\nimport {SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {useAbortController, useCounter} from '../../../hooks';\nimport {useProposalsVotingAdapter} from './useProposalsVotingAdapter';\n\ntype UseProposalReturn = {\n  proposalData: ProposalData | undefined;\n  proposalError: Error | undefined;\n  proposalNotFound: boolean;\n  proposalStatus: AsyncStatus;\n};\n\nconst ERROR_PROPOSAL: string =\n  'Something went wrong while getting the proposal.';\nconst ERROR_PROPOSAL_NOT_FOUND: string = 'Proposal was not found.';\n\n/**\n * useProposalOrDraft\n *\n * Fetches a snapshot-hub `proposal` or `draft` type by an ID string.\n *\n * If no `type` argument is provided it will search first for a\n * `proposal`, then if not found, search for a `draft`.\n *\n * @todo Fetch subgraph proposal on mount before a draft or proposal has been fetched.\n *\n * @param {string} id A draft's or a proposal's ID to search for.\n * @param {SnapshotType?} type An optional snapshot-hub `type` to search by.\n * @returns {UseProposalReturn}\n */\nexport function useProposalOrDraft(\n  id: string,\n  type?: ProposalOrDraftSnapshotType\n): UseProposalReturn {\n  /**\n   * State\n   */\n\n  /**\n   * @todo Get subgraph data using useLazyQuery\n   * @link https://www.apollographql.com/docs/react/data/queries/#executing-queries-manually\n   */\n\n  const [daoProposal /* setDAOProposal */] = useState<Proposal>();\n  const [snapshotDraft, setSnapshotDraft] = useState<SnapshotDraft>();\n  const [snapshotProposal, setSnapshotProposal] = useState<SnapshotProposal>();\n  const [proposalNotFound, setProposalNotFound] = useState<boolean>(false);\n  const [proposalError, setProposalError] = useState<Error>();\n  const [proposalStatus, setProposalStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n  const [proposalVotingAdapterId, setProposalVotingAdapterId] = useState<\n    string[]\n  >([id]);\n\n  // The overall status of the async data being fetched\n  const [proposalInclusiveStatus, setProposalInclusiveStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  // Any error of the async data being fetched\n  const [proposalInclusiveError, setProposalInclusiveError] = useState<Error>();\n\n  /**\n   * Our hooks\n   */\n\n  const {abortController, isMountedRef} = useAbortController();\n\n  const [refetchCount, updateRefetchCount] = useCounter();\n\n  /**\n   * Fetch on-chain voting adapter data for proposals.\n   * Only returns data for proposals of which voting adapters have been assigned (i.e. sponsored).\n   */\n  const {\n    proposalsVotingAdapters,\n    proposalsVotingAdaptersError,\n    proposalsVotingAdaptersStatus,\n  } = useProposalsVotingAdapter(proposalVotingAdapterId);\n\n  /**\n   * Their hooks\n   */\n\n  const queryClient = useQueryClient();\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetDraftCached = useCallback(handleGetDraft, [\n    abortController?.signal,\n    id,\n    isMountedRef,\n  ]);\n\n  const handleGetProposalCached = useCallback(handleGetProposal, [\n    abortController?.signal,\n    id,\n    isMountedRef,\n    type,\n  ]);\n\n  const handleGetProposalOrDraftCached = useCallback(handleGetProposalOrDraft, [\n    handleGetDraftCached,\n    handleGetProposalCached,\n  ]);\n\n  /**\n   * Variables\n   */\n\n  const snapshotType: ProposalOrDraftSnapshotType | undefined = snapshotProposal\n    ? SnapshotType.proposal\n    : snapshotDraft\n    ? SnapshotType.draft\n    : undefined;\n\n  /**\n   * We need to at least have Snapshot data to provide the proposal,\n   * otherwise we will have nothing to show the user.\n   */\n  const proposalData: UseProposalReturn['proposalData'] =\n    snapshotDraft || snapshotProposal\n      ? {\n          // idInDAO: '',\n          daoProposal,\n          daoProposalVotingAdapter: proposalsVotingAdapters[0]?.[1],\n          getCommonSnapshotProposalData,\n          refetchProposalOrDraft,\n          snapshotDraft,\n          snapshotProposal,\n          snapshotType,\n        }\n      : undefined;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!abortController?.signal) return;\n\n    switch (type) {\n      case SnapshotType.draft:\n        handleGetDraftCached();\n        break;\n      case SnapshotType.proposal:\n        handleGetProposalCached();\n        break;\n      default:\n        handleGetProposalOrDraftCached();\n        break;\n    }\n  }, [\n    abortController?.signal,\n    handleGetDraftCached,\n    handleGetProposalCached,\n    handleGetProposalOrDraftCached,\n    // Required in order to refetch\n    refetchCount,\n    type,\n  ]);\n\n  useEffect(() => {\n    if (refetchCount === 0) return;\n\n    /**\n     * Provide a different Array reference to force a re-render of the\n     * `useProposalsVotingAdapter` hook. If the `id` argument changes, that's\n     * fine as well, but it's unlikely.\n     */\n    setProposalVotingAdapterId([id]);\n  }, [id, refetchCount]);\n\n  useEffect(() => {\n    async function resetQueries() {\n      if (refetchCount === 0) return;\n\n      /**\n       * Reset React Queries when `refetchCount` is incremented (proposal is\n       * sponsored/submitted on chain, proposal is voted on)\n       *\n       * Needed so queries can fetch data that has been updated by the change in\n       * proposal status\n       *\n       */\n      await queryClient.resetQueries();\n    }\n\n    resetQueries();\n  }, [queryClient, refetchCount]);\n\n  // Set overall async status\n  useEffect(() => {\n    const {STANDBY, PENDING, FULFILLED, REJECTED} = AsyncStatus;\n    const statuses = [proposalStatus, proposalsVotingAdaptersStatus];\n\n    /**\n     * Standby\n     *\n     * The other statuses rely on a Snapshot Hub proposal or draft being fetched,\n     * so it's only in `STANDBY` at the point the proposals have\n     * not yet been fetched.\n     */\n    if (proposalStatus === STANDBY) {\n      setProposalInclusiveStatus(STANDBY);\n\n      return;\n    }\n\n    /**\n     * Pending\n     *\n     * Do not trigger pending requests (UI may show loader) for refetches (meant to be silent).\n     */\n    if (statuses.some((s) => s === PENDING) && refetchCount === 0) {\n      setProposalInclusiveStatus(PENDING);\n\n      return;\n    }\n\n    // Fulfilled\n    if (statuses.every((s) => s === FULFILLED)) {\n      setProposalInclusiveStatus(FULFILLED);\n\n      return;\n    }\n\n    // Fulfilled: checked for DAO proposals' voting adapters and none were returned - not sponsored\n    if (\n      proposalStatus === FULFILLED &&\n      proposalsVotingAdaptersStatus === FULFILLED &&\n      !proposalsVotingAdapters.length\n    ) {\n      setProposalInclusiveStatus(FULFILLED);\n\n      return;\n    }\n\n    // Rejected\n    if (statuses.some((s) => s === REJECTED)) {\n      setProposalInclusiveStatus(REJECTED);\n\n      return;\n    }\n  }, [\n    proposalStatus,\n    proposalsVotingAdapters.length,\n    proposalsVotingAdaptersStatus,\n    refetchCount,\n  ]);\n\n  // Set any error from async calls\n  useEffect(() => {\n    const errors = [proposalError, proposalsVotingAdaptersError];\n\n    setProposalInclusiveError(errors.find((e) => e));\n  }, [proposalError, proposalsVotingAdaptersError]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetDraft(): Promise<SnapshotDraft | undefined> {\n    try {\n      setProposalStatus(AsyncStatus.PENDING);\n\n      const response = await fetch(\n        `${SNAPSHOT_HUB_API_URL}/api/${SPACE}/draft/${id}`,\n        {signal: abortController?.signal}\n      );\n\n      if (!response.ok) {\n        throw new Error(ERROR_PROPOSAL);\n      }\n\n      const responseJSON: SnapshotDraftResponse = await response.json();\n\n      if (!isMountedRef.current) return;\n\n      // @note API does not provide a 404\n      if (!responseJSON || !Object.keys(responseJSON).length) {\n        setProposalNotFound(true);\n\n        throw new Error(ERROR_PROPOSAL_NOT_FOUND);\n      }\n\n      const idKey = Object.keys(responseJSON)[0];\n      // Get the `SnapshotDraftResponseData` by the address key of the single result.\n      const draft: SnapshotDraft = {\n        idInDAO: idKey,\n        idInSnapshot: idKey,\n        ...responseJSON[idKey],\n      };\n\n      setProposalStatus(AsyncStatus.FULFILLED);\n      setSnapshotDraft(draft);\n\n      return draft;\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setProposalStatus(AsyncStatus.REJECTED);\n      setProposalError(error);\n    }\n  }\n\n  async function handleGetProposal(): Promise<SnapshotProposal | undefined> {\n    try {\n      setProposalStatus(AsyncStatus.PENDING);\n\n      /**\n       * @note `searchUniqueDraftId` includes the draft id in the search for the proposal\n       *   as a Tribute proposal's ID hash could be the Snapshot Draft's ID.\n       */\n      const response = await fetch(\n        `${SNAPSHOT_HUB_API_URL}/api/${SPACE}/proposal/${id}?searchUniqueDraftId=true&includeVotes=true`,\n        {signal: abortController?.signal}\n      );\n\n      if (!response.ok) {\n        /**\n         * If `type` is set then we know we can determine `handleGetDraft`\n         * will not be called after in `handleGetProposalOrDraft`.\n         */\n        if (type === SnapshotType.proposal) {\n          throw new Error(ERROR_PROPOSAL);\n        }\n\n        return;\n      }\n\n      const responseJSON: SnapshotProposalResponse = await response.json();\n\n      if (!isMountedRef.current) return;\n\n      // @note API does not provide a 404\n      if (!responseJSON || !Object.keys(responseJSON).length) {\n        /**\n         * If `type` is set then we know we can determine `handleGetDraft`\n         * will not be called after in `handleGetProposalOrDraft`.\n         */\n        if (type === SnapshotType.proposal) {\n          setProposalNotFound(true);\n          throw new Error(ERROR_PROPOSAL_NOT_FOUND);\n        }\n\n        return;\n      }\n\n      const idKey = Object.keys(responseJSON)[0];\n      // Determine ID submitted to DAO, i.e. if there's a Draft ID hash, we should use that.\n      const proposalId: string =\n        responseJSON[idKey]?.data.erc712DraftHash || idKey;\n      // Get the `SnapshotProposalResponseData` by the address key of the single result.\n      const proposal: SnapshotProposal = {\n        idInDAO: proposalId,\n        idInSnapshot: idKey,\n        ...responseJSON[idKey],\n      };\n\n      setProposalStatus(AsyncStatus.FULFILLED);\n      setSnapshotProposal(proposal);\n\n      return proposal;\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setProposalStatus(AsyncStatus.REJECTED);\n      setProposalError(error);\n    }\n  }\n\n  /**\n   * Searches all possible combinations to return a proposal or a draft:\n   *\n   * 1. Search for a proposal (including by using the `id` as the Draft's ID hash via `searchUniqueDraftId`)\n   * 2. Search for a draft, if nothing is returned for a proposal.\n   */\n  async function handleGetProposalOrDraft() {\n    // 1. Attempt to search for a proposal.\n    const proposal = await handleGetProposalCached();\n\n    if (!proposal) {\n      // 2. If not found, attempt a search for a draft.\n      const draft = await handleGetDraftCached();\n\n      setSnapshotDraft(draft);\n\n      return;\n    }\n\n    setSnapshotProposal(proposal);\n  }\n\n  /**\n   * getCommonSnapshotProposalData\n   *\n   * @returns `SnapshotProposalCommon | undefined` Data for either a Draft or Proposal which is shared between the two types.\n   */\n  function getCommonSnapshotProposalData(): SnapshotProposalCommon | undefined {\n    switch (snapshotType) {\n      case SnapshotType.draft:\n        return snapshotDraft;\n      case SnapshotType.proposal:\n        return snapshotProposal;\n      default:\n        return undefined;\n    }\n  }\n\n  function refetchProposalOrDraft(): void {\n    updateRefetchCount({type: 'increment'});\n  }\n\n  return {\n    proposalData,\n    proposalError: proposalInclusiveError,\n    proposalNotFound,\n    proposalStatus: proposalInclusiveStatus,\n  };\n}\n","import {useEffect, useMemo, useState, useCallback} from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n  SnapshotDraftResponse,\n  SnapshotDraftResponseData,\n  SnapshotProposalResponse,\n  SnapshotProposalResponseData,\n  SnapshotType,\n} from '@openlaw/snapshot-js-erc712';\nimport {useQuery} from 'react-query';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {DaoAdapterConstants} from '../../adapters-extensions/enums';\nimport {normalizeString} from '../../../util/helpers';\nimport {ProposalData, SnapshotDraft, SnapshotProposal} from '../types';\nimport {SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {StoreState} from '../../../store/types';\nimport {useDaoProposals, useProposalsVotingState} from '.';\nimport {useProposalsVotes} from './useProposalsVotes';\nimport {useProposalsVotingAdapter} from './useProposalsVotingAdapter';\n\ntype UseProposalsReturn = {\n  proposals: ProposalData[];\n  proposalsStatus: AsyncStatus;\n  proposalsError: Error | undefined;\n};\n\ntype SnapshotDraftAndProposalEntries = [\n  string,\n  SnapshotDraftResponseData | SnapshotProposalResponseData\n][];\n\nconst INITIAL_ARRAY: any[] = [];\n\n// Gets Drafts (unsponsored Proposals) from Snapshot Hub\nasync function getSnapshotDraftsByAdapterAddress(\n  adapterAddress: string\n): Promise<[string, SnapshotDraftResponseData][]> {\n  try {\n    const baseURL = `${SNAPSHOT_HUB_API_URL}/api/${SPACE}`;\n\n    const drafts = await fetch(`${baseURL}/drafts/${adapterAddress}`);\n\n    if (!drafts.ok) {\n      throw new Error(\n        'Something went wrong while fetching the Snapshot drafts.'\n      );\n    }\n\n    const draftsJSON: SnapshotDraftResponse = await drafts.json();\n\n    // Get Drafts which have not yet been sponsored (Proposal created)\n    const draftEntries = Object.entries(draftsJSON).filter(\n      ([_, d]) => d.data.sponsored === false\n    );\n\n    return draftEntries;\n  } catch (error) {\n    throw error;\n  }\n}\n\n// Gets Proposals from Snapshot Hub\nasync function getSnapshotProposalsByAdapterAddress(\n  adapterAddress: string\n): Promise<[string, SnapshotProposalResponseData][]> {\n  try {\n    const baseURL = `${SNAPSHOT_HUB_API_URL}/api/${SPACE}`;\n\n    const proposals = await fetch(\n      `${baseURL}/proposals/${adapterAddress}?includeVotes=true`\n    );\n\n    if (!proposals.ok) {\n      throw new Error(\n        'Something went wrong while fetching the Snapshot proposals.'\n      );\n    }\n\n    const proposalsJSON: SnapshotProposalResponse = await proposals.json();\n\n    /**\n     * Re-map entries setting the correct id used for the `proposalId` in the DAO.\n     * If it has a draft hash, then this is what was submitted to the DAO, most likely (e.g. submit proposal)\n     */\n    const proposalEntries = Object.entries(proposalsJSON).map(\n      ([id, p]): [string, SnapshotProposalResponseData] => [\n        p.data.erc712DraftHash || id,\n        p,\n      ]\n    );\n\n    return proposalEntries;\n  } catch (error) {\n    throw error;\n  }\n}\n\n/**\n * useProposals\n *\n * @param {string} adapterName Name of the adapter contract to get proposals for.\n * @param {string} includeProposalsExistingOnlyOffchain To handle proposal types where the first step is creating a snapshot draft/offchain proposal only (no onchain proposal exists).\n * @returns `UseProposalsReturn` An object with the proposals, and the current async status.\n */\nexport function useProposals({\n  adapterName,\n  includeProposalsExistingOnlyOffchain = false,\n}: {\n  adapterName: DaoAdapterConstants;\n  includeProposalsExistingOnlyOffchain?: boolean;\n}): UseProposalsReturn {\n  /**\n   * State\n   */\n\n  const [adapterAddress, setAdapterAddress] = useState<string>();\n\n  const [snapshotDraftAndProposals, setSnapshotDraftAndProposals] =\n    useState<SnapshotDraftAndProposalEntries>(INITIAL_ARRAY);\n\n  const [snapshotDraftAndProposalsStatus, setSnapshotDraftAndProposalsStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  const [snapshotDraftAndProposalsError, setSnapshotDraftAndProposalsError] =\n    useState<Error | undefined>();\n\n  const [daoProposalIdsToUse, setDaoProposalIdsToUse] =\n    useState<string[]>(INITIAL_ARRAY);\n\n  const [proposals, setProposals] = useState<ProposalData[]>(INITIAL_ARRAY);\n\n  // The overall status of the async data being fetched\n  const [proposalsInclusiveStatus, setProposalsInclusiveStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  // Any error of the async data being fetched\n  const [proposalsInclusiveError, setProposalsInclusiveError] =\n    useState<Error>();\n\n  /**\n   * Selectors\n   */\n\n  const contracts = useSelector((s: StoreState) => s.contracts);\n\n  /**\n   * Memo\n   */\n\n  const snapshotDraftAndProposalsIds: string[] = useMemo(\n    () => snapshotDraftAndProposals.map((e) => e[0]),\n    [snapshotDraftAndProposals]\n  );\n\n  /**\n   * Our hooks\n   */\n\n  /**\n   * Fetch DAO proposals, if there are `snapshotDraftAndProposals`.\n   *\n   * Dependent upon `snapshotDraftAndProposals`.\n   */\n  const {daoProposals, daoProposalsError, daoProposalsStatus} = useDaoProposals(\n    snapshotDraftAndProposalsIds\n  );\n\n  /**\n   * Fetch on-chain voting adapter data for proposals of which voting adapters have been assigned (i.e. sponsored).\n   *\n   * Dependent upon `daoProposals`.\n   */\n  const {\n    proposalsVotingAdapters,\n    proposalsVotingAdaptersError,\n    proposalsVotingAdaptersStatus,\n  } = useProposalsVotingAdapter(daoProposalIdsToUse);\n\n  /**\n   * Fetch on-chain voting state for proposals of which voting adapters have been assigned (i.e. sponsored).\n   *\n   * Dependent upon `useProposalsVotingAdapter`.\n   */\n  const {\n    proposalsVotingState,\n    proposalsVotingStateError,\n    proposalsVotingStateStatus,\n  } = useProposalsVotingState(proposalsVotingAdapters);\n\n  /**\n   * Fetch on-chain votes data for proposals of which voting adapters have been assigned (i.e. sponsored)\n   *\n   * Dependent upon `useProposalsVotingAdapter`.\n   */\n  const {proposalsVotes, proposalsVotesError, proposalsVotesStatus} =\n    useProposalsVotes(proposalsVotingAdapters);\n\n  /**\n   * React Query\n   */\n\n  const {data: snapshotDraftEntriesData, error: snapshotDraftEntriesError} =\n    useQuery(\n      ['snapshotDraftEntries', adapterAddress],\n      async () => {\n        if (!adapterAddress) return;\n\n        return await getSnapshotDraftsByAdapterAddress(adapterAddress);\n      },\n      {\n        enabled: !!adapterAddress,\n      }\n    );\n\n  const {\n    data: snapshotProposalEntriesData,\n    error: snapshotProposalEntriesError,\n  } = useQuery(\n    ['snapshotProposalEntries', adapterAddress],\n    async () => {\n      if (!adapterAddress) return;\n\n      return await getSnapshotProposalsByAdapterAddress(adapterAddress);\n    },\n    {\n      enabled: !!adapterAddress,\n    }\n  );\n\n  /**\n   * Variables\n   */\n\n  const allSnapshotDraftsAndProposalsError =\n    snapshotDraftEntriesError || snapshotProposalEntriesError;\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetAllSnapshotDraftsAndProposalsCached = useCallback(\n    handleGetAllSnapshotDraftsAndProposals,\n    [\n      allSnapshotDraftsAndProposalsError,\n      snapshotDraftEntriesData,\n      snapshotProposalEntriesData,\n    ]\n  );\n\n  /**\n   * Effects\n   */\n\n  // Get and set the adapter address\n  useEffect(() => {\n    // @note We don't use the helper function as we don't want it to throw here.\n    const address = Object.entries(contracts).find(\n      ([_, c]) => c?.adapterOrExtensionName === adapterName\n    )?.[1]?.contractAddress;\n\n    setAdapterAddress(address);\n  }, [adapterAddress, adapterName, contracts]);\n\n  // Get and set all Snapshot drafts and proposal entries\n  useEffect(() => {\n    if (!adapterAddress) return;\n\n    handleGetAllSnapshotDraftsAndProposalsCached();\n  }, [adapterAddress, handleGetAllSnapshotDraftsAndProposalsCached]);\n\n  // Set the DAO proposal IDs we want to work with\n  useEffect(() => {\n    if (!daoProposals.length) return;\n\n    if (includeProposalsExistingOnlyOffchain) {\n      // Do not filter-out proposals which exist only off-chain\n      return setDaoProposalIdsToUse(daoProposals.map(([id]) => id));\n    }\n\n    // Filter-out proposals which do not exist onchain\n    return setDaoProposalIdsToUse(\n      daoProposals.filter(([_, p]) => p.flags !== '0').map(([id]) => id)\n    );\n  }, [daoProposals, includeProposalsExistingOnlyOffchain]);\n\n  // Set `proposals` with any returned data, once overall `AsyncStatus` equals `FULFILLED`\n  useEffect(() => {\n    if (proposalsInclusiveStatus !== AsyncStatus.FULFILLED) {\n      return;\n    }\n\n    const proposalsToSet = daoProposalIdsToUse\n      .map((id): ProposalData => {\n        const [, daoProposal] =\n          daoProposals.find(\n            ([daoProposalId]) =>\n              normalizeString(daoProposalId) === normalizeString(id)\n          ) || [];\n\n        const [snapshotDataId, snapshotData] =\n          snapshotDraftAndProposals.find(\n            ([snapshotId]) =>\n              normalizeString(snapshotId) === normalizeString(id)\n          ) || [];\n\n        const isSnapshotDraft: boolean =\n          snapshotData?.msg.type === SnapshotType.draft;\n\n        const snapshotDraft: SnapshotDraft | undefined =\n          snapshotDataId && isSnapshotDraft\n            ? {\n                ...(snapshotData as SnapshotDraft),\n                // @todo Rename to `idForDAO` as it is more accurate, as the ID may not yet exist in the DAO.\n                idInDAO: id,\n                idInSnapshot: snapshotDataId,\n              }\n            : undefined;\n\n        const snapshotProposal: SnapshotProposal | undefined =\n          snapshotDataId && !isSnapshotDraft\n            ? {\n                ...(snapshotData as SnapshotProposal),\n                // @todo Rename to `idForDAO` as it is more accurate, as the ID may not yet exist in the DAO.\n                idInDAO: id,\n                idInSnapshot: snapshotDataId,\n              }\n            : undefined;\n\n        const daoProposalVotingAdapter = proposalsVotingAdapters.find(\n          ([proposalIdVotingAdapter]) =>\n            normalizeString(proposalIdVotingAdapter) === normalizeString(id)\n        )?.[1];\n\n        const daoProposalVotingState = proposalsVotingState.find(\n          ([proposalIdVotingState]) =>\n            normalizeString(proposalIdVotingState) === normalizeString(id)\n        )?.[1];\n\n        const daoProposalVote = proposalsVotes.find(\n          ([proposalIdVotes]) =>\n            normalizeString(id) === normalizeString(proposalIdVotes)\n        )?.[1];\n\n        return {\n          daoProposal,\n          daoProposalVote,\n          daoProposalVotingAdapter,\n          daoProposalVotingState,\n          /**\n           * @todo Work to remove `idInDAO` on the root. Don't think we use this?\n           */\n          idInDAO: id,\n          snapshotDraft,\n          snapshotProposal,\n          snapshotType: isSnapshotDraft\n            ? SnapshotType.draft\n            : SnapshotType.proposal,\n\n          // @todo Make type optional\n          getCommonSnapshotProposalData: () => undefined,\n          // @todo Make type optional\n          refetchProposalOrDraft: () => {},\n        };\n      })\n      .filter((p) => p.snapshotDraft || p.snapshotProposal);\n\n    // Set proposals\n    setProposals(proposalsToSet);\n  }, [\n    daoProposalIdsToUse,\n    daoProposals,\n    proposalsInclusiveStatus,\n    proposalsVotes,\n    proposalsVotingAdapters,\n    proposalsVotingState,\n    snapshotDraftAndProposals,\n  ]);\n\n  // Set overall async status\n  useEffect(() => {\n    const {STANDBY, PENDING, FULFILLED, REJECTED} = AsyncStatus;\n\n    const statuses = [\n      daoProposalsStatus,\n      proposalsVotingAdaptersStatus,\n      proposalsVotingStateStatus,\n      proposalsVotesStatus,\n      snapshotDraftAndProposalsStatus,\n    ];\n\n    /**\n     * Standby\n     *\n     * The other statuses rely on Snapshot drafts and proposals being fetched,\n     * so it's only in `STANDBY` at the point the Snapshot data has\n     * not yet been fetched.\n     */\n    if (snapshotDraftAndProposalsStatus === STANDBY) {\n      setProposalsInclusiveStatus(STANDBY);\n\n      return;\n    }\n\n    // Pending\n    if (statuses.some((s) => s === PENDING)) {\n      setProposalsInclusiveStatus(PENDING);\n\n      return;\n    }\n\n    // Fulfilled\n    if (statuses.every((s) => s === FULFILLED)) {\n      setProposalsInclusiveStatus(FULFILLED);\n\n      return;\n    }\n\n    /**\n     * Fulfilled: no `snapshotDraftAndProposals` were found.\n     *\n     * Since the other data-fetching hooks rely on `snapshotDraftAndProposals`\n     * their statuses will be in `STANDBY` if `snapshotDraftAndProposals` is empty.\n     */\n    if (\n      snapshotDraftAndProposalsStatus === FULFILLED &&\n      !snapshotDraftAndProposals.length\n    ) {\n      setProposalsInclusiveStatus(FULFILLED);\n\n      return;\n    }\n\n    /**\n     * Fulfilled: No data was returned after running `useProposalsVotingAdapter`.\n     *\n     * The hooks `useProposalsVotingState`, `useProposalsVotes` are dependent upon `proposalsVotingAdapters`,\n     * so if there is no data, at this point, it's safe to return `FULFILLED`.\n     */\n    if (\n      proposalsVotingAdaptersStatus === FULFILLED &&\n      !proposalsVotingAdapters.length\n    ) {\n      setProposalsInclusiveStatus(FULFILLED);\n\n      return;\n    }\n\n    // Rejected\n    if (statuses.some((s) => s === REJECTED)) {\n      setProposalsInclusiveStatus(REJECTED);\n\n      return;\n    }\n  }, [\n    daoProposalIdsToUse.length,\n    daoProposalsStatus,\n    proposalsVotesStatus,\n    proposalsVotingAdapters,\n    proposalsVotingAdaptersStatus,\n    proposalsVotingStateStatus,\n    snapshotDraftAndProposals.length,\n    snapshotDraftAndProposalsStatus,\n  ]);\n\n  // Set any error from async calls\n  useEffect(() => {\n    setProposalsInclusiveError(\n      [\n        daoProposalsError,\n        proposalsVotesError,\n        proposalsVotingAdaptersError,\n        proposalsVotingStateError,\n        snapshotDraftAndProposalsError,\n      ].find((e) => e)\n    );\n  }, [\n    daoProposalsError,\n    proposalsVotesError,\n    proposalsVotingAdaptersError,\n    proposalsVotingStateError,\n    snapshotDraftAndProposalsError,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetAllSnapshotDraftsAndProposals() {\n    try {\n      setSnapshotDraftAndProposalsStatus(AsyncStatus.PENDING);\n      // Reset error\n      setSnapshotDraftAndProposalsError(undefined);\n\n      if (allSnapshotDraftsAndProposalsError) {\n        throw allSnapshotDraftsAndProposalsError;\n      }\n\n      if (snapshotDraftEntriesData && snapshotProposalEntriesData) {\n        const mergedEntries = [\n          ...snapshotDraftEntriesData,\n          ...snapshotProposalEntriesData,\n        ];\n\n        if (!mergedEntries.length) {\n          setSnapshotDraftAndProposalsStatus(AsyncStatus.FULFILLED);\n\n          return;\n        }\n\n        setSnapshotDraftAndProposals(mergedEntries);\n        setSnapshotDraftAndProposalsStatus(AsyncStatus.FULFILLED);\n      }\n    } catch (error) {\n      setSnapshotDraftAndProposalsStatus(AsyncStatus.REJECTED);\n      setSnapshotDraftAndProposals(INITIAL_ARRAY);\n      setSnapshotDraftAndProposalsError(error);\n    }\n  }\n\n  return {\n    proposals,\n    proposalsError: proposalsInclusiveError,\n    proposalsStatus: proposalsInclusiveStatus,\n  };\n}\n","import {AbiItem} from 'web3-utils/types';\nimport {useCallback, useEffect, useState} from 'react';\nimport {useQuery} from 'react-query';\nimport {useSelector} from 'react-redux';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {ProposalVotesData, ProposalVotingAdapterTuple} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VotingAdapterName} from '../../adapters-extensions/enums';\n\ntype ProposalsVotesTuple = [\n  proposalId: string,\n  /**\n   * For each proposal, each result is stored under its adapter name.\n   */\n  adapterData: ProposalVotesData\n];\n\ntype UseProposalsVotesReturn = {\n  proposalsVotes: ProposalsVotesTuple[];\n  proposalsVotesError: Error | undefined;\n  proposalsVotesStatus: AsyncStatus;\n};\n\nexport function useProposalsVotes(\n  /**\n   * A tuple of proposal id's and voting adapter data.\n   * This data is returned by `useProposalsVotingAdapter`.\n   */\n  proposalVotingAdapters: ProposalVotingAdapterTuple[]\n): UseProposalsVotesReturn {\n  /**\n   * Selectors\n   */\n\n  const registryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  /**\n   * State\n   */\n\n  const [proposalsVotes, setProposalsVotes] = useState<ProposalsVotesTuple[]>(\n    []\n  );\n\n  const [proposalsVotesError, setProposalsVotesError] = useState<Error>();\n\n  const [proposalsVotesStatus, setProposalsVotesStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  const [safeProposalVotingAdapters, setSafeProposalVotingAdapters] =\n    useState<ProposalVotingAdapterTuple[]>();\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * React Query\n   */\n\n  const {data: votesDataCallsData, error: votesDataCallsError} = useQuery(\n    ['votesDataCalls', safeProposalVotingAdapters],\n    async (): Promise<MulticallTuple[] | undefined> => {\n      if (!safeProposalVotingAdapters || !registryAddress) return;\n\n      return await Promise.all(\n        safeProposalVotingAdapters.map(\n          async ([\n            proposalId,\n            {votingAdapterAddress, getVotingAdapterABI, votingAdapterName},\n          ]): Promise<MulticallTuple> => [\n            votingAdapterAddress,\n            await getVotesDataABI(votingAdapterName, getVotingAdapterABI()),\n            /**\n             * We build the call arguments the same way for the different voting adapters\n             * (i.e. [dao, proposalId]). If we need to change this we can move it to another function.\n             */\n            [registryAddress, proposalId],\n          ]\n        )\n      );\n    },\n    {\n      enabled:\n        !!proposalVotingAdapters.length &&\n        !!safeProposalVotingAdapters &&\n        !!registryAddress &&\n        !!web3Instance,\n    }\n  );\n\n  const {data: votesDataResults, error: votesDataResultsError} = useQuery(\n    ['votesDataResults', votesDataCallsData?.length],\n    async () => {\n      if (!votesDataCallsData?.length || !web3Instance) {\n        return;\n      }\n\n      return await multicall({\n        calls: votesDataCallsData,\n        web3Instance,\n      });\n    },\n    {enabled: !!votesDataCallsData?.length && !!web3Instance}\n  );\n\n  /**\n   * Cached callbacks\n   */\n\n  const getProposalsVotesOnchainCached = useCallback(getProposalsVotesOnchain, [\n    safeProposalVotingAdapters,\n    votesDataCallsData,\n    votesDataCallsError,\n    votesDataResults,\n    votesDataResultsError,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (\n      !proposalVotingAdapters.length ||\n      !safeProposalVotingAdapters ||\n      !registryAddress ||\n      !web3Instance\n    ) {\n      return;\n    }\n\n    getProposalsVotesOnchainCached();\n  }, [\n    getProposalsVotesOnchainCached,\n    proposalVotingAdapters.length,\n    registryAddress,\n    safeProposalVotingAdapters,\n    web3Instance,\n  ]);\n\n  useEffect(() => {\n    if (!proposalVotingAdapters.length || !web3Instance) {\n      return;\n    }\n\n    // Only use hex (more specifically `bytes32`) id's\n    const safeProposalVotingAdaptersToSet = proposalVotingAdapters.filter(\n      ([id]) => web3Instance.utils.isHexStrict(id)\n    );\n\n    setSafeProposalVotingAdapters(safeProposalVotingAdaptersToSet);\n  }, [proposalVotingAdapters, web3Instance]);\n\n  /**\n   * Functions\n   */\n\n  async function getProposalsVotesOnchain() {\n    if (!safeProposalVotingAdapters) {\n      return;\n    }\n\n    if (!safeProposalVotingAdapters.length) {\n      setProposalsVotesStatus(AsyncStatus.FULFILLED);\n      setProposalsVotes([]);\n\n      return;\n    }\n\n    try {\n      setProposalsVotesStatus(AsyncStatus.PENDING);\n\n      if (votesDataCallsError) {\n        throw votesDataCallsError;\n      }\n\n      // Build votes results\n      if (votesDataCallsData) {\n        if (votesDataResultsError) {\n          throw votesDataResultsError;\n        }\n\n        if (votesDataResults) {\n          setProposalsVotes(\n            safeProposalVotingAdapters.map(\n              ([proposalId, {votingAdapterName}], i) => [\n                proposalId,\n                {\n                  [votingAdapterName]: votesDataResults[i],\n                },\n              ]\n            )\n          );\n\n          setProposalsVotesStatus(AsyncStatus.FULFILLED);\n        }\n      }\n    } catch (error) {\n      setProposalsVotes([]);\n      setProposalsVotesStatus(AsyncStatus.REJECTED);\n      setProposalsVotesError(error);\n    }\n  }\n\n  /**\n   * getVotesDataABI\n   *\n   * Gets the ABI for the public mapping getter of voting data.\n   *\n   * @param {VotingAdapterName} votingAdapterName\n   * @returns {Promise<AbiItem>}\n   */\n  async function getVotesDataABI(\n    votingAdapterName: VotingAdapterName,\n    votingAdapterABI: AbiItem[]\n  ): Promise<AbiItem> {\n    try {\n      switch (votingAdapterName) {\n        case VotingAdapterName.OffchainVotingContract:\n          const offchainVotesDataABI = votingAdapterABI.find(\n            (ai) => ai.name === 'votes'\n          );\n\n          if (!offchainVotesDataABI) {\n            throw new Error(\n              `No \"votes\" function ABI was found for \"${votingAdapterName}\".`\n            );\n          }\n\n          return offchainVotesDataABI;\n\n        case VotingAdapterName.VotingContract:\n          const votingVotesDataABI = votingAdapterABI.find(\n            (ai) => ai.name === 'votes'\n          );\n\n          if (!votingVotesDataABI) {\n            throw new Error(\n              `No \"votes\" function ABI was found for \"${votingAdapterName}\".`\n            );\n          }\n\n          return votingVotesDataABI;\n\n        default:\n          throw new Error(\n            `No voting adapter name was found for \"${votingAdapterName}\".`\n          );\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  return {\n    proposalsVotes,\n    proposalsVotesError,\n    proposalsVotesStatus,\n  };\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {AbiItem} from 'web3-utils/types';\nimport {useQuery} from 'react-query';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {ProposalVotingAdapterTuple} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VotingState} from '../voting/types';\n\ntype ProposalsVotingStateTuples = [\n  proposalId: string,\n  votingState: VotingState\n][];\n\ntype UseProposalsVotingStateReturn = {\n  proposalsVotingState: ProposalsVotingStateTuples;\n  proposalsVotingStateError: Error | undefined;\n  proposalsVotingStateStatus: AsyncStatus;\n};\n\nexport function useProposalsVotingState(\n  /**\n   * A tuple of proposal id's and voting adapter data.\n   * This data is returned by `useProposalsVotingAdapter`.\n   */\n  proposalVotingAdapters: ProposalVotingAdapterTuple[]\n): UseProposalsVotingStateReturn {\n  /**\n   * Selectors\n   */\n\n  const registryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  /**\n   * State\n   */\n\n  const [proposalsVotingState, setProposaslsVotingState] =\n    useState<ProposalsVotingStateTuples>([]);\n\n  const [proposalsVotingStateError, setProposalsVotingStateError] =\n    useState<Error>();\n\n  const [proposalsVotingStateStatus, setProposalsVotingStateStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  const [votingResultABIError, setVotingResultABIError] = useState<Error>();\n\n  const [proposalsVotingStateCalls, setProposalsVotingStateCalls] =\n    useState<MulticallTuple[]>();\n\n  const [safeProposalVotingAdapters, setSafeProposalVotingAdapters] =\n    useState<ProposalVotingAdapterTuple[]>();\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  /**\n   * React Query\n   */\n\n  const {\n    data: proposalsVotingStateResult,\n    error: proposalsVotingStateResultError,\n  } = useQuery(\n    ['proposalsVotingStateResult', proposalsVotingStateCalls],\n    async () => {\n      if (!proposalsVotingStateCalls?.length || !web3Instance) {\n        return;\n      }\n\n      return await multicall({\n        calls: proposalsVotingStateCalls,\n        web3Instance,\n      });\n    },\n    {enabled: !!proposalsVotingStateCalls?.length && !!web3Instance}\n  );\n\n  /**\n   * Cached callbacks\n   */\n\n  const getProposalsVotingStateOnchainCached = useCallback(\n    getProposalsVotingStateOnchain,\n    [\n      proposalVotingAdapters.length,\n      proposalsVotingStateCalls,\n      proposalsVotingStateResult,\n      proposalsVotingStateResultError,\n      registryAddress,\n      safeProposalVotingAdapters,\n      votingResultABIError,\n      web3Instance,\n    ]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getProposalsVotingStateOnchainCached();\n  }, [getProposalsVotingStateOnchainCached]);\n\n  useEffect(() => {\n    if (!proposalVotingAdapters.length || !web3Instance) {\n      return;\n    }\n\n    // Only use hex (more specifically `bytes32`) id's\n    const safeProposalVotingAdaptersToSet = proposalVotingAdapters.filter(\n      ([id]) => web3Instance.utils.isHexStrict(id)\n    );\n\n    setSafeProposalVotingAdapters(safeProposalVotingAdaptersToSet);\n  }, [proposalVotingAdapters, web3Instance]);\n\n  useEffect(() => {\n    async function setProposalsVotingStateCallsPrepData() {\n      if (!registryAddress || !safeProposalVotingAdapters?.length) return;\n\n      const lazyIVotingABI = (await import('../../../abis/IVoting.json'))\n        .default as AbiItem[];\n\n      const votingResultABI = lazyIVotingABI.find(\n        (ai) => ai.name === 'voteResult'\n      );\n\n      if (!votingResultABI) {\n        setVotingResultABIError(\n          new Error(\n            'No \"voteResult\" ABI function was found on the \"IVoting\" contract.'\n          )\n        );\n\n        return;\n      }\n\n      const proposalsVotingStateCallsToSet: MulticallTuple[] =\n        safeProposalVotingAdapters.map(\n          ([proposalId, {votingAdapterAddress}]) => [\n            votingAdapterAddress,\n            votingResultABI,\n            [registryAddress, proposalId],\n          ]\n        );\n      setProposalsVotingStateCalls(proposalsVotingStateCallsToSet);\n    }\n\n    setProposalsVotingStateCallsPrepData();\n  }, [registryAddress, safeProposalVotingAdapters]);\n\n  /**\n   * Functions\n   */\n\n  async function getProposalsVotingStateOnchain() {\n    if (\n      !registryAddress ||\n      !proposalVotingAdapters.length ||\n      !safeProposalVotingAdapters ||\n      !web3Instance\n    ) {\n      return;\n    }\n\n    if (!safeProposalVotingAdapters.length) {\n      setProposalsVotingStateStatus(AsyncStatus.FULFILLED);\n\n      return;\n    }\n\n    try {\n      if (votingResultABIError) {\n        throw votingResultABIError;\n      }\n\n      if (!proposalsVotingStateCalls) return;\n\n      setProposalsVotingStateStatus(AsyncStatus.PENDING);\n\n      if (proposalsVotingStateResultError) {\n        throw proposalsVotingStateResultError;\n      }\n\n      if (proposalsVotingStateResult) {\n        setProposalsVotingStateStatus(AsyncStatus.FULFILLED);\n        setProposaslsVotingState(\n          safeProposalVotingAdapters.map(([proposalId], i) => [\n            proposalId,\n            proposalsVotingStateResult[i],\n          ])\n        );\n      }\n    } catch (error) {\n      setProposalsVotingStateStatus(AsyncStatus.REJECTED);\n      setProposaslsVotingState([]);\n      setProposalsVotingStateError(error);\n    }\n  }\n\n  return {\n    proposalsVotingState,\n    proposalsVotingStateError,\n    proposalsVotingStateStatus,\n  };\n}\n","import {useSelector} from 'react-redux';\nimport {useCallback, useEffect, useRef, useState} from 'react';\nimport {isAddress} from 'web3-utils';\n\nimport {\n  ProposalFlowStatus,\n  ProposalData,\n  ProposalFlag,\n  OffchainVotingAdapterVote,\n} from '../types';\nimport {BURN_ADDRESS} from '../../../util/constants';\nimport {ENVIRONMENT} from '../../../config';\nimport {multicall, MulticallTuple} from '../../web3/helpers';\nimport {normalizeString} from '../../../util/helpers';\nimport {proposalHasFlag} from '../helpers';\nimport {StoreState} from '../../../store/types';\nimport {useTimeStartEnd} from '../../../hooks';\nimport {useWeb3Modal} from '../../web3/hooks';\nimport {VotingState} from '../voting/types';\n\ntype UseProposalWithOffchainVoteStatusReturn = {\n  daoProposal: {adapterAddress: string; flags: number} | undefined;\n  daoProposalVote: OffchainVotingAdapterVote | undefined;\n  /**\n   * An enum name (`string`) of the DAO proposal's `VotingState` index\n   */\n  daoProposalVoteResult: typeof VotingState[any] | undefined;\n  proposalFlowStatusError: Error | undefined;\n  status: ProposalFlowStatus | undefined;\n  stopPollingForStatus: () => void;\n};\n\ntype UseProposalWithOffchainVoteStatusProps = {\n  /**\n   * Voting start time if `useCountdownToCheckInVoting: true`\n   * i.e. calculated from the `OffchainVoting` contract's vote's start time, or Snapshot proposal's start time.\n   *\n   * If not available and/or determined, use `0`.\n   */\n  countdownVotingStartSeconds?: number;\n  /**\n   * Voting end time if `useCountdownToCheckInVoting: true`\n   * i.e. calculated from the `OffchainVoting` contract's vote's end time, or Snapshot proposal's end time\n   *\n   * If not available and/or determined, use `0`.\n   */\n  countdownVotingEndSeconds?: number;\n  proposal: ProposalData;\n  /**\n   * Defaults to `DEFAULT_POLL_INTERVAL_MS`:\n   *  - Production: 15000ms\n   *  - Development: 5000ms\n   */\n  pollInterval?: number;\n  /**\n   * If `true` \"in voting\" will be determined by an internal timer using\n   * `countdownVotingStartSeconds` and `countdownVotingEndSeconds`, and not by the\n   * contract's `VotingState`.\n   */\n  useCountdownToCheckInVoting?: boolean;\n};\n\nconst {\n  Completed,\n  OffchainVotingGracePeriod,\n  OffchainVotingSubmitResult,\n  OffchainVoting,\n  Process,\n  Sponsor,\n  Submit,\n} = ProposalFlowStatus;\n\nconst DEFAULT_POLL_INTERVAL_MS: number =\n  ENVIRONMENT === 'production' ? 15000 : 5000;\n\n/**\n * Derives where in the \"proposal flow\" a proposal currently is.\n *\n * Most flow states are derived from the contract.\n * Determing whether a proposal is in voting works a bit differently, depending\n * on which vote start and end times are to be used (i.e. Snapshot proposal vs. Contract proposal).\n *\n * Therefore, we pass these two timing values as props to be more agnostic.\n *\n * @param UseProposalWithOffchainVoteStatusProps\n * @returns `UseProposalWithOffchainVoteStatusReturn`\n */\nexport function useProposalWithOffchainVoteStatus({\n  countdownVotingEndSeconds = 0,\n  countdownVotingStartSeconds = 0,\n  pollInterval = DEFAULT_POLL_INTERVAL_MS,\n  proposal,\n  useCountdownToCheckInVoting = false,\n}: UseProposalWithOffchainVoteStatusProps): UseProposalWithOffchainVoteStatusReturn {\n  /**\n   * Selectors\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  const daoRegistryAddress = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  const daoRegistryABI = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract?.abi\n  );\n\n  /**\n   * State\n   */\n\n  const [status, setStatus] = useState<ProposalFlowStatus>();\n\n  const [initComplete, setInitComplete] = useState<boolean>(false);\n\n  const [daoProposal, setDAOProposal] =\n    useState<UseProposalWithOffchainVoteStatusReturn['daoProposal']>();\n\n  const [daoProposalVote, setDAOProposalVote] =\n    useState<UseProposalWithOffchainVoteStatusReturn['daoProposalVote']>();\n\n  const [daoProposalVoteResult, setDAOProposalVoteResult] =\n    useState<\n      UseProposalWithOffchainVoteStatusReturn['daoProposalVoteResult']\n    >();\n\n  const [proposalFlowStatusError, setProposalFlowStatusError] =\n    useState<Error>();\n\n  /**\n   * Refs\n   */\n\n  const pollingIntervalIdRef = useRef<NodeJS.Timeout>();\n  const stopPollingRef = useRef<boolean>(false);\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    hasTimeStarted: hasVotingStarted,\n    hasTimeEnded: hasVotingEnded,\n    timeStartEndInitReady,\n  } = useTimeStartEnd(countdownVotingStartSeconds, countdownVotingEndSeconds);\n\n  /**\n   * Variables\n   */\n\n  const initialAsyncChecksCompleted: boolean =\n    initComplete &&\n    (useCountdownToCheckInVoting ? timeStartEndInitReady : true);\n\n  const {daoProposalVotingAdapter, snapshotDraft, snapshotProposal} = proposal;\n  const proposalId = snapshotDraft?.idInDAO || snapshotProposal?.idInDAO;\n\n  const atExistsInDAO = daoProposal\n    ? proposalHasFlag(ProposalFlag.EXISTS, daoProposal.flags)\n    : false;\n\n  const atSponsoredInDAO = daoProposal\n    ? proposalHasFlag(ProposalFlag.SPONSORED, daoProposal.flags)\n    : false;\n\n  const atProcessedInDAO = daoProposal\n    ? proposalHasFlag(ProposalFlag.PROCESSED, daoProposal.flags)\n    : false;\n\n  const offchainVotingAddress = daoProposalVotingAdapter?.votingAdapterAddress;\n  const offchainVotingABI = daoProposalVotingAdapter?.getVotingAdapterABI();\n\n  /**\n   * Check if vote result was submitted.\n   * We can do this by checking if `reporter` and `resultRoot` has been set.\n   *\n   * @see `submitVoteResult` in tribute-contracts off-chain voting adapters\n   */\n  const offchainResultSubmitted: boolean =\n    isAddress(daoProposalVote?.reporter || '') &&\n    normalizeString(daoProposalVote?.reporter || '') !== BURN_ADDRESS;\n\n  const isInVotingFromTimer: boolean = hasVotingStarted && !hasVotingEnded;\n\n  const isInVoting: boolean = useCountdownToCheckInVoting\n    ? isInVotingFromTimer\n    : VotingState[daoProposalVoteResult || ''] ===\n      VotingState[VotingState.IN_PROGRESS];\n\n  const isInVotingGracePeriod: boolean =\n    VotingState[daoProposalVoteResult || ''] ===\n    VotingState[VotingState.GRACE_PERIOD];\n\n  /**\n   * Cached callbacks\n   */\n\n  const getStatusFromContractCached = useCallback(getStatusFromContract, [\n    daoProposalVotingAdapter,\n    daoRegistryABI,\n    daoRegistryAddress,\n    offchainVotingABI,\n    offchainVotingAddress,\n    proposalId,\n    web3Instance,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  // Get status as soon as possible.\n  useEffect(() => {\n    if (initComplete) {\n      return;\n    }\n\n    getStatusFromContractCached().catch((error) => {\n      setProposalFlowStatusError(error);\n    });\n  }, [getStatusFromContractCached, initComplete]);\n\n  // Poll for status, etc.\n  useEffect(() => {\n    /**\n     * Stop polling if processed:\n     * Set our ref to be accessed inside of the polling interval callback\n     */\n    if (atProcessedInDAO) {\n      stopPollingRef.current = true;\n    }\n\n    // Clear any previous intervals\n    handleStopPollingForStatus();\n\n    // Then, poll every `x` Ms\n    const intervalId = setInterval(async () => {\n      try {\n        if (stopPollingRef.current) {\n          handleStopPollingForStatus();\n        }\n\n        await getStatusFromContractCached();\n      } catch (error) {\n        handleStopPollingForStatus();\n\n        setProposalFlowStatusError(error);\n      }\n    }, pollInterval);\n\n    pollingIntervalIdRef.current = intervalId;\n  }, [atProcessedInDAO, pollInterval, getStatusFromContractCached]);\n\n  // Stop polling if propsal is processed, or on unmount.\n  useEffect(() => {\n    if (atProcessedInDAO) {\n      handleStopPollingForStatus();\n    }\n\n    // Cleanup polling on unmount\n    return function cleanup() {\n      handleStopPollingForStatus();\n    };\n  }, [atProcessedInDAO]);\n\n  // Determine the `status`\n  useEffect(() => {\n    // Status: cannot yet be determined\n    if (!initialAsyncChecksCompleted) {\n      setStatus(undefined);\n\n      return;\n    }\n\n    const isStatusInitial: boolean = status === undefined;\n\n    // Status: Submit\n    if (\n      !atExistsInDAO &&\n      !atSponsoredInDAO &&\n      !atProcessedInDAO &&\n      (status === Submit || isStatusInitial)\n    ) {\n      setStatus(Submit);\n\n      return;\n    }\n\n    /**\n     * Status: Sponsor\n     *\n     * This may never occur for many adapter's proposals as submit and sponsor\n     * take place in 1 transaction.\n     */\n    if (\n      atExistsInDAO &&\n      !isInVoting &&\n      (status === Submit || isStatusInitial)\n    ) {\n      setStatus(Sponsor);\n\n      return;\n    }\n\n    // Status: Off-Chain Voting\n    if (\n      atSponsoredInDAO &&\n      isInVoting &&\n      !offchainResultSubmitted &&\n      (status === Submit || status === Sponsor || isStatusInitial)\n    ) {\n      setStatus(OffchainVoting);\n\n      return;\n    }\n\n    // Status: Ready to Submit Vote Result\n    if (\n      atSponsoredInDAO &&\n      !isInVoting &&\n      !offchainResultSubmitted &&\n      (status === OffchainVoting || isStatusInitial)\n    ) {\n      setStatus(OffchainVotingSubmitResult);\n\n      return;\n    }\n\n    // Status: Grace period\n    if (\n      atSponsoredInDAO &&\n      !isInVoting &&\n      offchainResultSubmitted &&\n      isInVotingGracePeriod &&\n      (status === OffchainVotingSubmitResult || isStatusInitial)\n    ) {\n      setStatus(OffchainVotingGracePeriod);\n\n      return;\n    }\n\n    // Status: Process\n    if (\n      atSponsoredInDAO &&\n      !isInVoting &&\n      offchainResultSubmitted &&\n      !isInVotingGracePeriod &&\n      (status === OffchainVotingGracePeriod || isStatusInitial)\n    ) {\n      setStatus(Process);\n\n      return;\n    }\n\n    // Status: Processed (completed)\n    if (atProcessedInDAO && (status === Process || isStatusInitial)) {\n      setStatus(Completed);\n\n      return;\n    }\n  }, [\n    atExistsInDAO,\n    atProcessedInDAO,\n    atSponsoredInDAO,\n    initialAsyncChecksCompleted,\n    isInVoting,\n    isInVotingGracePeriod,\n    offchainResultSubmitted,\n    status,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function getStatusFromContract(): Promise<\n    | Partial<{\n        proposal: typeof daoProposal;\n        voteResult: typeof daoProposalVoteResult;\n        votes: typeof daoProposalVote;\n      }>\n    | undefined\n  > {\n    try {\n      if (\n        !daoRegistryABI ||\n        !daoRegistryAddress ||\n        !proposalId ||\n        !web3Instance\n      ) {\n        return;\n      }\n\n      const proposalsABI = daoRegistryABI.filter(\n        (item) => item.name === 'proposals'\n      )[0];\n\n      /**\n       * If there is no voting adapter (i.e. the proposal is not yet sponsored)\n       * then only call the DAO for the proposal data and exit early.\n       */\n      if (!daoProposalVotingAdapter) {\n        const [proposal] = await multicall({\n          calls: [\n            // DAO proposals call\n            [daoRegistryAddress, proposalsABI, [proposalId]],\n          ],\n          web3Instance,\n        });\n\n        setDAOProposal(proposal);\n        // Set last\n        setInitComplete(true);\n\n        return proposal;\n      }\n\n      if (!offchainVotingABI || !offchainVotingAddress) return;\n\n      const voteResultABI = offchainVotingABI.filter(\n        (item) => item.name === 'voteResult'\n      )[0];\n\n      const voteABI = offchainVotingABI.filter(\n        (item) => item.name === 'votes'\n      )[0];\n\n      const calls: MulticallTuple[] = [\n        // DAO proposals call\n        [daoRegistryAddress, proposalsABI, [proposalId]],\n        // Vote data call\n        [offchainVotingAddress, voteABI, [daoRegistryAddress, proposalId]],\n        // Vote result (state) call\n        [\n          offchainVotingAddress,\n          voteResultABI,\n          [daoRegistryAddress, proposalId],\n        ],\n      ];\n\n      const [proposal, votes, voteResult] = await multicall({\n        calls,\n        web3Instance,\n      });\n\n      setDAOProposal(proposal);\n      setDAOProposalVote(votes);\n      setDAOProposalVoteResult(voteResult);\n      // Set last\n      setInitComplete(true);\n\n      return {\n        proposal,\n        voteResult,\n        votes,\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  function handleStopPollingForStatus() {\n    if (pollingIntervalIdRef.current) {\n      clearInterval(pollingIntervalIdRef.current);\n\n      pollingIntervalIdRef.current = undefined;\n    }\n  }\n\n  /**\n   * Return\n   */\n\n  return {\n    daoProposal,\n    daoProposalVote,\n    daoProposalVoteResult,\n    proposalFlowStatusError,\n    status,\n    stopPollingForStatus: handleStopPollingForStatus,\n  };\n}\n","import {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n  buildVoteMessage,\n  getDomainDefinition,\n  getSpace,\n  prepareVoteMessage,\n  signMessage,\n  SnapshotMessageVote,\n  SnapshotSubmitBaseReturn,\n  SnapshotType,\n  SnapshotVoteData,\n  SnapshotVoteProposal,\n  submitMessage,\n  VoteChoicesIndex,\n} from '@openlaw/snapshot-js-erc712';\n\nimport {BURN_ADDRESS} from '../../../util/constants';\nimport {ContractAdapterNames, Web3TxStatus} from '../../web3/types';\nimport {DEFAULT_CHAIN, SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {getAdapterAddressFromContracts} from '../../web3/helpers';\nimport {PRIMARY_TYPE_ERC712} from '../../web3/config';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks/useWeb3Modal';\n\ntype SignAndSendVoteDataParam = {\n  choice: SnapshotMessageVote['choice'];\n  metadata?: Record<string, any>;\n};\n\ntype UseSignAndSendVoteReturn = {\n  signAndSendVote: (data: {\n    partialVoteData: SignAndSendVoteDataParam;\n    // e.g. Governance does not have an adpater name\n    adapterName?: ContractAdapterNames;\n    proposalIdInDAO: SnapshotVoteData['payload']['proposalId'];\n    proposalIdInSnapshot: string;\n  }) => Promise<SignAndSendVoteReturn>;\n  voteData: SignAndSendVoteReturn | undefined;\n  voteDataError: Error | undefined;\n  voteDataStatus: Web3TxStatus;\n};\n\ntype SignAndSendVoteReturn = {\n  data: SnapshotVoteData;\n  signature: string;\n  uniqueId: SnapshotSubmitBaseReturn['uniqueId'];\n};\n\n/**\n * useSignAndSendVote\n *\n * React hook which prepares proposal data for submission\n * to Snapshot and Tribute and signs it (ERC712)\n *\n * @returns {Promise<BuildAndSignProposalDataReturn>} An object with the proposal data and the ERC712 signature string.\n */\nexport function useSignAndSendVote(): UseSignAndSendVoteReturn {\n  /**\n   * Selectors\n   */\n\n  const daoRegistryAddress = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract?.contractAddress\n  );\n\n  const contracts = useSelector((s: StoreState) => s.contracts);\n\n  const memberAddress = useSelector(\n    (s: StoreState) => s.connectedMember?.memberAddress\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, provider, web3Instance} = useWeb3Modal();\n\n  /**\n   * State\n   */\n\n  const [voteData, setVoteData] = useState<SignAndSendVoteReturn>();\n  const [voteDataError, setVoteDataError] = useState<Error>();\n  const [voteDataStatus, setVoteDataStatus] = useState<Web3TxStatus>(\n    Web3TxStatus.STANDBY\n  );\n\n  /**\n   * Functions\n   */\n\n  /**\n   * signAndSendVote\n   *\n   * Builds the vote data for submission to Snapshot and signs it (ERC712).\n   *\n   * @param {SignAndSendVoteDataParam}\n   * @param {adapterName} ContractAdapterNames - An adapter's contract address this data is related to.\n   *   @note Does not accept voting adapter names.\n   * @param {SnapshotVoteData['payload']['proposalHash']} proposalHash - The unique hash of the proposal from snapshot-hub.\n   * @returns {Promise<BuildAndSignProposalDataReturn>} An object with the vote data and the ERC712 signature string.\n   */\n  async function signAndSendVote({\n    partialVoteData,\n    adapterName,\n    proposalIdInDAO,\n    proposalIdInSnapshot,\n  }: {\n    partialVoteData: SignAndSendVoteDataParam;\n    // e.g. Governance does not have an adpater name\n    adapterName?: ContractAdapterNames;\n    /**\n     * This is the hash of the content as submitted to the DAO.\n     * The hash should be the same as the Snapshot draft's, or\n     * proposal's (if not submitted as a draft), ID.\n     *\n     * We need to make sure this matches what has been submitted to\n     * the DAO for later signature verifications.\n     */\n    proposalIdInDAO: SnapshotVoteData['payload']['proposalId'];\n    /**\n     * Must match a `proposal` type's ID in Snapshot so a `vote` may be attached.\n     */\n    proposalIdInSnapshot: string;\n  }): Promise<SignAndSendVoteReturn> {\n    try {\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      if (!account) {\n        throw new Error('No account was found.');\n      }\n\n      if (!memberAddress) {\n        throw new Error('No member address was found.');\n      }\n\n      if (!daoRegistryAddress) {\n        throw new Error('No \"DaoRegistry\" address was found.');\n      }\n\n      if (!SNAPSHOT_HUB_API_URL) {\n        throw new Error('No \"SNAPSHOT_HUB_API_URL\" was found.');\n      }\n\n      if (!SPACE) {\n        throw new Error('No Snapshot \"SPACE\" was found.');\n      }\n\n      setVoteDataStatus(Web3TxStatus.AWAITING_CONFIRM);\n\n      const adapterAddress = adapterName\n        ? getAdapterAddressFromContracts(adapterName, contracts)\n        : BURN_ADDRESS;\n\n      const {choice, metadata = {}} = partialVoteData;\n\n      const {data: snapshotSpace} = await getSpace(SNAPSHOT_HUB_API_URL, SPACE);\n\n      const voteData: SnapshotMessageVote = {\n        chainId: DEFAULT_CHAIN,\n        choice,\n        metadata: {\n          ...metadata,\n          /**\n           * Must be the true member's address for calculating voting power.\n           * It's safest to use our helper Redux value `memberAddress: string`,\n           * as it uses `OffchainVoting.memberAddressesByDelegatedKey`.\n           */\n          memberAddress,\n        },\n      };\n\n      const voteProposalData: SnapshotVoteProposal = {\n        proposalId: proposalIdInDAO,\n        space: SPACE,\n        token: snapshotSpace.token,\n      };\n\n      // 1. Check proposal type and get appropriate message\n      const message = await buildVoteMessage(\n        voteData,\n        voteProposalData,\n        SNAPSHOT_HUB_API_URL\n      );\n\n      const erc712Message = prepareVoteMessage({\n        timestamp: message.timestamp,\n        payload: {\n          proposalId: message.payload.proposalId,\n          choice: VoteChoicesIndex[choice],\n        },\n      });\n\n      const {domain, types} = getDomainDefinition(\n        {...erc712Message, type: SnapshotType.vote},\n        daoRegistryAddress,\n        adapterAddress,\n        DEFAULT_CHAIN\n      );\n\n      const dataToSign = JSON.stringify({\n        types: types,\n        domain: domain,\n        primaryType: PRIMARY_TYPE_ERC712,\n        message: erc712Message,\n      });\n\n      const signature: string = await signMessage(\n        provider,\n        account,\n        dataToSign\n      );\n\n      setVoteDataStatus(Web3TxStatus.PENDING);\n\n      // 3. Send data to snapshot-hub\n      const {data} = await submitMessage<SnapshotSubmitBaseReturn>(\n        SNAPSHOT_HUB_API_URL,\n        account,\n        {\n          ...message,\n          payload: {...message.payload, proposalId: proposalIdInSnapshot},\n        },\n        signature,\n        {\n          actionId: domain.actionId,\n          chainId: domain.chainId,\n          verifyingContract: domain.verifyingContract,\n          message: erc712Message,\n        }\n      );\n\n      const dataToReturn = {\n        data: message,\n        signature,\n        uniqueId: data.uniqueId,\n      };\n\n      setVoteDataStatus(Web3TxStatus.FULFILLED);\n      setVoteData(dataToReturn);\n\n      return dataToReturn;\n    } catch (error) {\n      setVoteDataStatus(Web3TxStatus.REJECTED);\n      setVoteDataError(error);\n\n      throw error;\n    }\n  }\n\n  return {\n    signAndSendVote,\n    voteData,\n    voteDataError,\n    voteDataStatus,\n  };\n}\n","import {useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {\n  buildDraftMessage,\n  buildProposalMessage,\n  getDomainDefinition,\n  getSpace,\n  prepareDraftMessage,\n  prepareProposalMessage,\n  signMessage,\n  SnapshotMessageBase,\n  SnapshotMessageProposal,\n  SnapshotProposalData,\n  SnapshotSubmitBaseReturn,\n  SnapshotSubmitProposalReturn,\n  SnapshotType,\n  submitMessage,\n} from '@openlaw/snapshot-js-erc712';\n\nimport {\n  ContractAdapterNames,\n  ContractDAOConfigKeys,\n  Web3TxStatus,\n} from '../../web3/types';\nimport {DEFAULT_CHAIN, SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {\n  getAdapterAddressFromContracts,\n  getDAOConfigEntry,\n} from '../../web3/helpers';\nimport {PRIMARY_TYPE_ERC712} from '../../web3/config';\nimport {\n  ProposalOrDraftSignDataFromType,\n  ProposalOrDraftSnapshotType,\n} from '../types';\nimport {StoreState} from '../../../store/types';\nimport {useWeb3Modal} from '../../web3/hooks/useWeb3Modal';\nimport {BURN_ADDRESS} from '../../../util/constants';\n\ntype SignAndSendData<T extends ProposalOrDraftSnapshotType> = {\n  partialProposalData: PrepareAndSignProposalDataParam;\n  adapterAddress?: string;\n  adapterName?: ContractAdapterNames;\n  type: T;\n};\n\ntype PrepareAndSignProposalDataParam = {\n  body: SnapshotProposalData['payload']['body'];\n  name: SnapshotProposalData['payload']['name'];\n  metadata: SnapshotProposalData['payload']['metadata'];\n  /**\n   * Helpful for Proposal types when hashes between created Drafts\n   * and yet to be created Proposals need to match.\n   */\n  timestamp?: SnapshotProposalData['timestamp'];\n};\n\ntype UseSignAndSubmitProposalReturn<T extends ProposalOrDraftSnapshotType> = {\n  signAndSendProposal: (\n    d: SignAndSendData<T>\n  ) => Promise<SignAndSendProposalReturn<T>>;\n  proposalData: SignAndSendProposalReturn<T> | undefined;\n  proposalSignAndSendError: Error | undefined;\n  proposalSignAndSendStatus: Web3TxStatus;\n};\n\ntype SignAndSendProposalReturn<T extends ProposalOrDraftSnapshotType> = {\n  data: ProposalOrDraftSignDataFromType<T>;\n  signature: string;\n  uniqueId: SnapshotSubmitBaseReturn['uniqueId'];\n  uniqueIdDraft: SnapshotSubmitProposalReturn['uniqueIdDraft'];\n};\n\n/**\n * useSignAndSubmitProposal\n *\n * React hook which prepares proposal data for submission\n * to Snapshot and Tribute and signs it (ERC712)\n *\n * @returns {Promise<UseSignAndSubmitProposalReturn>} An object with the proposal data and the ERC712 signature string.\n */\nexport function useSignAndSubmitProposal<\n  T extends ProposalOrDraftSnapshotType\n>(): UseSignAndSubmitProposalReturn<T> {\n  /**\n   * Selectors\n   */\n\n  const daoRegistryAddress = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract?.contractAddress\n  );\n  const daoRegistryInstance = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract?.instance\n  );\n  const contracts = useSelector((state: StoreState) => state.contracts);\n\n  /**\n   * Our hooks\n   */\n\n  const {account, provider, web3Instance} = useWeb3Modal();\n\n  /**\n   * State\n   */\n\n  const [proposalData, setProposalData] =\n    useState<SignAndSendProposalReturn<T>>();\n  const [proposalSignAndSendError, setProposalSignAndSendError] =\n    useState<Error>();\n  const [proposalSignAndSendStatus, setProposalSignAndSendStatus] =\n    useState<Web3TxStatus>(Web3TxStatus.STANDBY);\n\n  /**\n   * Functions\n   */\n\n  /**\n   * A wrapper to clearly separate the running of functions\n   * specific to Proposals.\n   *\n   * @param {SnapshotMessageBase & Partial<SnapshotMessageProposal>} commonData\n   * @returns {Promise<SnapshotProposalData>}\n   */\n  async function buildProposalMessageHelper(\n    commonData: SnapshotMessageBase & Partial<SnapshotMessageProposal>\n  ): Promise<SnapshotProposalData> {\n    if (!SNAPSHOT_HUB_API_URL) {\n      throw new Error('No \"SNAPSHOT_HUB_API_URL\" was found.');\n    }\n\n    if (!web3Instance) {\n      throw new Error('No Web3 instance was found.');\n    }\n\n    const snapshot: number = await web3Instance.eth.getBlockNumber();\n\n    const votingTimeSeconds: number = parseInt(\n      await getDAOConfigEntry(\n        ContractDAOConfigKeys.offchainVotingVotingPeriod,\n        daoRegistryInstance\n      )\n    );\n\n    return await buildProposalMessage(\n      {\n        ...commonData,\n        votingTimeSeconds,\n        snapshot,\n      },\n      SNAPSHOT_HUB_API_URL\n    );\n  }\n\n  /**\n   * signAndSendProposal\n   *\n   * Builds the proposal data for submission to Tribute and Snapshot and signs it (ERC712).\n   *\n   * @returns {Promise<SignAndSendProposalReturn>} An object with the proposal data, signature string, and propsal hash(es) from snapshot-hub.\n   */\n  async function signAndSendProposal({\n    partialProposalData,\n    adapterAddress,\n    adapterName,\n    type,\n  }: SignAndSendData<T>): Promise<SignAndSendProposalReturn<T>> {\n    try {\n      if (!account) {\n        throw new Error('No account was found to send.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      if (!daoRegistryAddress) {\n        throw new Error('No \"DaoRegistry\" address was found.');\n      }\n\n      if (!SNAPSHOT_HUB_API_URL) {\n        throw new Error('No \"SNAPSHOT_HUB_API_URL\" was found.');\n      }\n\n      if (!SPACE) {\n        throw new Error('No Snapshot \"SPACE\" was found.');\n      }\n\n      if (type !== SnapshotType.draft && type !== SnapshotType.proposal) {\n        throw new Error('Handling for type \"vote\" is not implemented.');\n      }\n\n      setProposalSignAndSendStatus(Web3TxStatus.AWAITING_CONFIRM);\n\n      const actionId = adapterAddress\n        ? adapterAddress\n        : adapterName\n        ? getAdapterAddressFromContracts(adapterName, contracts)\n        : BURN_ADDRESS;\n\n      const {body, name, metadata, timestamp} = partialProposalData;\n\n      const {data: snapshotSpace} = await getSpace(SNAPSHOT_HUB_API_URL, SPACE);\n\n      const commonData: SnapshotMessageBase = {\n        name,\n        body,\n        metadata,\n        token: snapshotSpace.token,\n        space: SPACE,\n      };\n\n      // 1. Check proposal type and prepare appropriate message\n      const message = (\n        type === SnapshotType.draft\n          ? await buildDraftMessage(commonData, SNAPSHOT_HUB_API_URL)\n          : await buildProposalMessageHelper({\n              ...commonData,\n              timestamp,\n            })\n      ) as ProposalOrDraftSignDataFromType<T>;\n\n      // 2. Prepare signing data. Snapshot and the contracts will verify this same data against the signature.\n      const erc712Message =\n        type === SnapshotType.draft\n          ? prepareDraftMessage(message)\n          : prepareProposalMessage(message as SnapshotProposalData);\n\n      const {domain, types} = getDomainDefinition(\n        {...erc712Message, type},\n        daoRegistryAddress,\n        actionId,\n        DEFAULT_CHAIN\n      );\n\n      const dataToSign = JSON.stringify({\n        types,\n        domain,\n        primaryType: PRIMARY_TYPE_ERC712,\n        message: erc712Message,\n      });\n\n      // 3. Sign data\n      const signature = await signMessage(provider, account, dataToSign);\n\n      setProposalSignAndSendStatus(Web3TxStatus.PENDING);\n\n      // 3. Send data to snapshot-hub\n      const {data} = await submitMessage<SnapshotSubmitProposalReturn>(\n        SNAPSHOT_HUB_API_URL,\n        account,\n        message,\n        signature,\n        {\n          actionId: domain.actionId,\n          chainId: domain.chainId,\n          verifyingContract: domain.verifyingContract,\n          message: erc712Message,\n        }\n      );\n\n      const dataToReturn = {\n        data: message,\n        signature,\n        uniqueId: data.uniqueId,\n        uniqueIdDraft: data.uniqueIdDraft || '',\n      };\n\n      setProposalSignAndSendStatus(Web3TxStatus.FULFILLED);\n      setProposalData(dataToReturn);\n\n      return dataToReturn;\n    } catch (error) {\n      setProposalSignAndSendStatus(Web3TxStatus.REJECTED);\n      setProposalSignAndSendError(error);\n\n      throw error;\n    }\n  }\n\n  return {\n    proposalData,\n    proposalSignAndSendError,\n    proposalSignAndSendStatus,\n    signAndSendProposal,\n  };\n}\n","type EtherscanURLProps = {\n  url: string;\n  isPending?: boolean;\n};\n\nexport default function EtherscanURL(props: EtherscanURLProps) {\n  const {url, isPending = false} = props;\n\n  return (\n    <small>\n      <a href={url} rel=\"noopener noreferrer\" target=\"_blank\">\n        {isPending ? 'view progress' : 'view transaction'}\n      </a>\n    </small>\n  );\n}\n","export function calculateVotingTimeRanges({\n  gracePeriodLength,\n  gracePeriodStartingTime,\n  votePeriodLength,\n  voteStartingTime,\n}: {\n  gracePeriodLength: string | undefined;\n  gracePeriodStartingTime: string | undefined;\n  votePeriodLength: string | undefined;\n  voteStartingTime: string | undefined;\n}): {\n  gracePeriodEndMs: number;\n  gracePeriodStartMs: number;\n  voteEndMs: number;\n  voteStartMs: number;\n} {\n  const MS_MULTIPLIER: number = 1000;\n  const toNumber = (value: string | undefined): number => Number(value || 0);\n\n  const gracePeriodStartMs: number =\n    toNumber(gracePeriodStartingTime) * MS_MULTIPLIER;\n\n  const voteStartMs: number = toNumber(voteStartingTime) * MS_MULTIPLIER;\n\n  return {\n    voteEndMs: voteStartMs + toNumber(votePeriodLength) * MS_MULTIPLIER,\n    voteStartMs,\n    gracePeriodEndMs:\n      gracePeriodStartMs + toNumber(gracePeriodLength) * MS_MULTIPLIER,\n    gracePeriodStartMs,\n  };\n}\n","import {SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {SnapshotOffchainProofResponse} from '../voting/types';\n\n/**\n * getOffchainVotingProof\n *\n * Gets a Merkle hex root's steps from Snapshot Hub\n * for verification.\n *\n * @link https://github.com/openlawteam/snapshot-hub\n */\nexport async function getOffchainVotingProof(\n  merkleRootHex: string\n): Promise<SnapshotOffchainProofResponse | undefined> {\n  try {\n    const response = await fetch(\n      `${SNAPSHOT_HUB_API_URL}/api/${SPACE}/offchain_proof/${merkleRootHex}`\n    );\n\n    // Return empty if not found\n    if (response.status === 404) {\n      return undefined;\n    }\n\n    // Some other error occured\n    if (!response.ok) {\n      throw new Error(\n        'Something went wrong while getting the off-chain vote proof.'\n      );\n    }\n\n    return await response.json();\n  } catch (error) {\n    throw error;\n  }\n}\n","import {VoteChoicesIndex} from '@openlaw/snapshot-js-erc712';\n\nimport {normalizeString} from '../../../util/helpers';\nimport {SnapshotProposal} from '../types';\nimport {VoteChoices} from '../../web3/types';\n\nexport function getVoteChosen(\n  votes: SnapshotProposal['votes'],\n  account: string\n): VoteChoices | undefined {\n  const voteEntry = (votes || []).find((ve) =>\n    Object.entries(ve).find(\n      ([address, _voteData]) =>\n        normalizeString(address) === normalizeString(account || '')\n    )\n  );\n\n  if (voteEntry) {\n    const voteData = Object.entries(voteEntry)[0][1];\n    const choice = voteData.msg.payload.choice;\n\n    return choice === VoteChoicesIndex.Yes ? VoteChoices.Yes : VoteChoices.No;\n  }\n\n  return undefined;\n}\n","import {AbiItem} from 'web3-utils/types';\n\nimport {VotingAdapterName} from '../../adapters-extensions/enums';\n\n/**\n * getVotingAdapterABI\n *\n * Gets the ABI for a voting adapter by the adapter's adapter name.\n *\n * @param {VotingAdapterName} votingAdapterName\n * @returns {Promise<AbiItem[]>}\n */\nexport async function getVotingAdapterABI(\n  votingAdapterName: VotingAdapterName\n): Promise<AbiItem[]> {\n  try {\n    switch (votingAdapterName) {\n      // Off-chain optimistic rollup\n      case VotingAdapterName.OffchainVotingContract:\n        const {default: lazyOffchainVotingABI} = await import(\n          '../../../abis/OffchainVotingContract.json'\n        );\n\n        return lazyOffchainVotingABI as AbiItem[];\n\n      // On-chain voting\n      case VotingAdapterName.VotingContract:\n        const {default: lazyVotingABI} = await import(\n          '../../../abis/VotingContract.json'\n        );\n\n        return lazyVotingABI as AbiItem[];\n\n      default:\n        throw new Error(\n          `No voting adapter name was found for \"${votingAdapterName}\".`\n        );\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n","import {ProposalFlag} from '../types';\n\n/**\n * proposalHasFlag\n *\n * @param flagToCheck\n * @param daoProposalFlag\n * @returns {boolean}\n *\n * @see `ProposalFlag` `DaoRegistry.sol`\n * @see `getFlag` `DaoConstants.sol`\n * @see `setFlag` `DaoConstants.sol`\n */\nexport function proposalHasFlag(\n  flagToCheck: ProposalFlag,\n  daoProposalFlag: number | string\n): boolean {\n  return flagToCheck === Math.log2(Number(daoProposalFlag) + 1) - 1;\n}\n","import {VotingState} from '../voting/types';\n\nexport function proposalHasVotingState(\n  votingStateToCheck: VotingState,\n  votingState: number | string\n): boolean {\n  return VotingState[votingState] === VotingState[votingStateToCheck];\n}\n","import {SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {ToStepNodeResult} from '@openlaw/snapshot-js-erc712/dist/types';\n\ntype SubmitOffchainVotingProofArguments = {\n  /**\n   * DAO Adapter address\n   */\n  actionId: string;\n  /**\n   * Blockchain network ID\n   */\n  chainId: number;\n  /**\n   * Hex string of the Merkle root\n   */\n  merkleRoot: string;\n  /**\n   * An array of Merkle tree steps\n   */\n  steps: ToStepNodeResult[];\n  /**\n   * DAO Registry address\n   */\n  verifyingContract: string;\n};\n\n/**\n * submitOffchainVotingProof\n *\n * Submits a Merkle hex root and its steps to Snapshot Hub\n * for verification and storage (if successful).\n *\n * The API endpoint does not have any return data, only a `201` response.\n *\n * @link https://github.com/openlawteam/snapshot-hub\n */\nexport async function submitOffchainVotingProof(\n  data: SubmitOffchainVotingProofArguments\n): Promise<void> {\n  try {\n    const response = await fetch(\n      `${SNAPSHOT_HUB_API_URL}/api/${SPACE}/offchain_proofs`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(\n        'Something went wrong while submitting the off-chain vote proof.'\n      );\n    }\n  } catch (error) {\n    throw error;\n  }\n}\n","/**\n * BURN_ADDRESS\n *\n * - e.g. Helpful when detecting no address.\n * - e.g. Helpful for ERC-712 signatures which have no action id (like Governance).\n */\nexport const BURN_ADDRESS: '0x0000000000000000000000000000000000000000' =\n  '0x0000000000000000000000000000000000000000';\n","import {CoreProposalVoteChoices} from '@openlaw/snapshot-js-erc712';\nimport {VoteChoices} from './types';\n\n/**\n * WEB3 CONFIG for TRIBUTE\n */\n\n// Vote choices should be \"yes\", \"no\" unless Tribute contracts change.\nexport const VOTE_CHOICES: CoreProposalVoteChoices = [\n  VoteChoices.Yes,\n  VoteChoices.No,\n];\n\n// When signing data this is the `primaryType` key's value which is part of the data to sign.\nexport const PRIMARY_TYPE_ERC712 = 'Message';\n\nexport const TX_CYCLE_MESSAGES: string[] = [\n  'Submitting\\u2026',\n  'Working\\u2026',\n  'DAOing\\u2026',\n  'Getting closer\\u2026',\n  'Dreaming of ETH\\u2026',\n];\n","export * from './CycleEllipsis';\n","import React, {useState, useEffect} from 'react';\n\nimport {chooseRandom} from '../../util/helpers';\n\ntype CycleMessageProps = {\n  /**\n   * Use the first item as the default.\n   */\n  useFirstItemStart?: boolean;\n  /**\n   * What is the interval of cycling the message?\n   */\n  intervalMs: number;\n  /**\n   * Provide multiple strings to cycle through.\n   */\n  messages: string[];\n  /**\n   * Render a React Element.\n   * activeMessage is passed in.\n   */\n  render: (m: string) => React.ReactElement;\n};\n\nexport default function CycleMessage(props: CycleMessageProps) {\n  const {intervalMs, messages, useFirstItemStart} = props;\n\n  // Default item at start.\n  const INITIAL_ITEM = useFirstItemStart\n    ? messages[0]\n    : chooseRandom<string>(messages);\n\n  const [activeMessage, setActiveMessage] = useState<string>(INITIAL_ITEM);\n\n  useEffect(() => {\n    const intervalId = setInterval(\n      () =>\n        setActiveMessage((prevMessage) =>\n          chooseRandom<string>(messages, prevMessage)\n        ),\n      intervalMs\n    );\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [intervalMs, messages]);\n\n  return props.render(activeMessage);\n}\n","import {useState, useEffect} from 'react';\n\ntype LoaderLargeProps = {\n  // Show waiting effect after some time has elapsed. Prevents the \"sudden\n  // spinner\" UI/UX no-no. Esp. if we could have cached data.\n  showAfterMs?: number;\n};\n\nexport default function LoaderLarge(props: LoaderLargeProps) {\n  const {showAfterMs} = props;\n  const [showLoaderAfterMs, setShowLoaderAfterMs] = useState<boolean>(false);\n\n  useEffect(() => {\n    /* 200ms is approx. the time a user will notice a stalled, blank screen */\n    const timeoutId =\n      showAfterMs && setTimeout(() => setShowLoaderAfterMs(true), showAfterMs);\n\n    return function cleanup() {\n      timeoutId && clearTimeout(timeoutId);\n    };\n  }, [showAfterMs]);\n\n  return !showAfterMs || (showAfterMs && showLoaderAfterMs) ? (\n    <div className=\"loader--large\" aria-label=\"Loading content...\" />\n  ) : null;\n}\n","/**\n * WEB3 TYPES\n */\n\n// ...\n\n/**\n * WEB3 ENUMS\n */\n\n/**\n * Mapping of DaoRegistry member flags.\n * This should match the enum (including order) in the `DaoRegistry`. If it does not match,\n * the results of checking the proposal's state via flag will be wrong.\n *\n * @see `MemberFlag` `DaoRegistry.sol`\n * @see `getFlag` `DaoConstants.sol`\n * @see `setFlag` `DaoConstants.sol`\n */\nexport enum MemberFlag {\n  EXISTS,\n}\n\n/**\n * Should match tribute-contracts constants\n *\n * @todo Add other extensions as needs arise\n */\nexport enum ContractAdapterNames {\n  bank = 'bank',\n  configuration = 'configuration',\n  coupon_onboarding = 'coupon-onboarding',\n  dao_registry = 'daoRegistry',\n  distribute = 'distribute',\n  financing = 'financing',\n  guildkick = 'guildkick',\n  managing = 'managing',\n  nft = 'nft',\n  onboarding = 'onboarding',\n  ragequit = 'ragequit',\n  tribute = 'tribute',\n  tribute_nft = 'tribute-nft',\n  voting = 'voting',\n}\n\n/**\n * Should match tribute-contracts constants\n *\n * @todo Add other extensions as needs arise\n */\nexport enum ContractExtensionNames {\n  bank = 'bank',\n  erc20 = 'erc20-ext',\n  nft = 'nft',\n}\n\n/**\n * Should match tribute-contracts constants\n *\n * @todo Add other extensions as needs arise\n */\nexport enum ContractDAOConfigKeys {\n  offchainVotingGracePeriod = 'offchainvoting.gracePeriod',\n  offchainVotingStakingAmount = 'offchainvoting.stakingAmount',\n  offchainVotingVotingPeriod = 'offchainvoting.votingPeriod',\n  onboardingChunkSize = 'onboarding.chunkSize',\n  onboardingMaximumChunks = 'onboarding.maximumChunks',\n  onboardingUnitsPerChunk = 'onboarding.unitsPerChunk',\n  onboardingTokenAddr = 'onboarding.tokenAddr',\n  votingGracePeriod = 'voting.gracePeriod',\n  votingStakingAmount = 'voting.stakingAmount',\n  votingVotingPeriod = 'voting.votingPeriod',\n}\n\nexport enum VoteChoices {\n  Yes = 'Yes',\n  No = 'No',\n}\n\nexport enum Web3TxStatus {\n  STANDBY = 'STANDBY',\n  AWAITING_CONFIRM = 'AWAITING_CONFIRM',\n  PENDING = 'PENDING',\n  FULFILLED = 'FULFILLED',\n  REJECTED = 'REJECTED',\n}\n","import Web3 from 'web3';\n\nexport const hasValue = (value: string) => (value !== '' ? true : false);\n\nexport const isEmailValid = (email: string) =>\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(email);\n\nexport const isEthAddressValid = (ethAddress: string) =>\n  Web3.utils.isAddress(ethAddress);\n","import {useContext} from 'react';\n\nimport {Web3ModalContextValue, Web3ModalContext} from '../Web3ModalManager';\n\n/**\n * useWeb3Modal(): Web3ModalContextValue\n *\n * Internal hook to access wallet connectivity and connected state.\n *\n * @example\n * const {account, connected, networkId, ...} = useWeb3Modal();\n */\nexport function useWeb3Modal(): Web3ModalContextValue {\n  return useContext(Web3ModalContext);\n}\n","import {gql} from '@apollo/client';\n\nexport const GET_DAO = gql`\n  query GetDao($id: ID) {\n    tributeDaos(where: {id: $id}) {\n      id # dao address\n      daoAddress\n      name\n      totalUnits\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\n\nexport const GET_ADAPTERS_AND_EXTENSIONS = gql`\n  query GetAdaptersAndExtensions($daoAddress: String) {\n    tributeDaos(where: {daoAddress: $daoAddress}) {\n      daoAddress\n      adapters {\n        id\n        acl\n        adapterId\n        adapterAddress\n      }\n      extensions {\n        id\n        extensionId\n        extensionAddress\n      }\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\n\nexport const GET_MEMBERS = gql`\n  query GetMembers($daoAddress: String) {\n    tributeDaos(where: {daoAddress: $daoAddress}) {\n      members(orderBy: createdAt, orderDirection: desc) {\n        createdAt\n        address: memberAddress\n        delegateKey\n        isDelegated\n        units\n        didFullyRagequit\n      }\n    }\n  }\n`;\n","import {gql} from '@apollo/client';\n\nexport const GET_TOKEN_HOLDER_BALANCES = gql`\n  query GetTokenHolderBalances($tokenAddress: String!) {\n    tokens(where: {tokenAddress: $tokenAddress}) {\n      symbol\n      tokenAddress\n      holders {\n        balance\n        member {\n          id\n          delegateKey\n        }\n      }\n    }\n  }\n`;\n","import {ApolloLink} from '@apollo/client';\nimport {onError} from '@apollo/client/link/error';\nimport {Store} from 'redux';\n\nimport {setSubgraphNetworkStatus} from '../store/actions';\nimport {SubgraphNetworkStatus} from '../store/subgraphNetworkStatus/types';\nimport {StoreState} from '../store/types';\n\n/**\n * handleSubgraphError\n *\n * Handles an error from The Graph's GQL server at the Apollo\n * Link level.\n *\n * Handles network errors from The Graph's GQL server.\n *\n * About network errors from the Apollo Docs:\n *\n *   \"Network errors occur \"These are errors encountered while attempting\n *    to communicate with your GraphQL server, usually resulting in a\n *    4xx or 5xx response status code (and no data).\"\n *\n * We do not handle GQL errors that arise from individual queries.\n * Perhaps it best to handle those inside of the concerned components\n * (i.e. IF query error || subgraph is down THEN fallback)\n *\n * About GQL errors from the Apollo Docs:\n *\n *  - Syntax errors (e.g., a query was malformed)\n *  - Validation errors (e.g., a query included a schema field that doesn't exist)\n *  - Resolver errors (e.g., an error occurred while attempting to populate a query field)\n *\n * @param {Store} store\n * @returns {ApolloLink}\n * @link https://www.apollographql.com/docs/react/data/error-handling\n */\nexport function handleSubgraphError(store: Store): ApolloLink {\n  return onError(({/* graphQLErrors */ networkError}) => {\n    if (networkError) {\n      const reduxStateNotYetSet =\n        (store.getState() as StoreState).subgraphNetworkStatus.status !==\n        SubgraphNetworkStatus.ERR;\n\n      if (reduxStateNotYetSet) {\n        store.dispatch(\n          setSubgraphNetworkStatus({status: SubgraphNetworkStatus.ERR})\n        );\n\n        // Show error once\n        console.error(`[Subgraph network error]: ${networkError}`);\n      }\n    }\n\n    // Reset when there's no more network error\n    if (!networkError) {\n      const reduxStateNotYetSet =\n        (store.getState() as StoreState).subgraphNetworkStatus.status !==\n        SubgraphNetworkStatus.OK;\n\n      if (reduxStateNotYetSet) {\n        store.dispatch(\n          setSubgraphNetworkStatus({status: SubgraphNetworkStatus.OK})\n        );\n      }\n    }\n  });\n}\n","import {CLEAR_CONNECTED_MEMBER, SET_CONNECTED_MEMBER} from './actions';\nimport {ConnectedMemberState} from './types';\n\nconst INITIAL_STATE = null;\n\nexport default function reducer(\n  state: ConnectedMemberState = INITIAL_STATE,\n  action: any\n) {\n  const {type, ...payload} = action;\n\n  switch (type) {\n    case SET_CONNECTED_MEMBER:\n      return setConnectedMemberReducer(state, payload);\n    case CLEAR_CONNECTED_MEMBER:\n      return clearConnectedMemberReducer();\n    default:\n      return state;\n  }\n}\n\nfunction setConnectedMemberReducer(\n  state: Partial<ConnectedMemberState>,\n  payload: Record<string, any>\n) {\n  return {...state, ...payload};\n}\n\nfunction clearConnectedMemberReducer() {\n  return INITIAL_STATE;\n}\n","import {CONNECT_MODAL_CLOSE, CONNECT_MODAL_OPEN} from './actions';\nimport {ConnectModalState} from './types';\n\nconst INITIAL_STATE = {\n  isOpen: false,\n};\n\nexport default function reducer(\n  state: ConnectModalState = INITIAL_STATE,\n  action: any\n) {\n  const {type} = action;\n\n  switch (type) {\n    case CONNECT_MODAL_CLOSE:\n      return connectModalClose(state);\n    case CONNECT_MODAL_OPEN:\n      return connectModalOpen(state);\n    default:\n      return state;\n  }\n}\n\nfunction connectModalClose(\n  state: Partial<ConnectModalState>\n): ConnectModalState {\n  return {...state, isOpen: false};\n}\n\nfunction connectModalOpen(\n  state: Partial<ConnectModalState>\n): ConnectModalState {\n  return {...state, isOpen: true};\n}\n","import {\n  CLEAR_CONTRACTS,\n  CONTRACT_BANK_ADAPTER,\n  CONTRACT_BANK_EXTENSION,\n  CONTRACT_BANK_FACTORY,\n  CONTRACT_CONFIGURATION,\n  CONTRACT_COUPON_ONBOARDING,\n  CONTRACT_DAO_FACTORY,\n  CONTRACT_DAO_REGISTRY_ADAPTER,\n  CONTRACT_DAO_REGISTRY,\n  CONTRACT_DISTRIBUTE,\n  CONTRACT_ERC20_EXTENSION,\n  CONTRACT_FINANCING,\n  CONTRACT_GUILDKICK,\n  CONTRACT_MANAGING,\n  CONTRACT_NFT_ADAPTER,\n  CONTRACT_NFT_EXTENSION,\n  CONTRACT_ONBOARDING,\n  CONTRACT_RAGEQUIT,\n  CONTRACT_TRIBUTE_NFT,\n  CONTRACT_TRIBUTE,\n  CONTRACT_VOTING_OP_ROLLUP,\n  CONTRACT_VOTING,\n} from '../actions';\nimport {ContractsState} from './types';\n\nconst initialState = {\n  BankAdapterContract: null,\n  BankExtensionContract: null,\n  BankFactoryContract: null,\n  ConfigurationContract: null,\n  CouponOnboardingContract: null,\n  DaoFactoryContract: null,\n  DaoRegistryAdapterContract: null,\n  DaoRegistryContract: null,\n  DistributeContract: null,\n  ERC20ExtensionContract: null,\n  FinancingContract: null,\n  GuildKickContract: null,\n  ManagingContract: null,\n  NFTAdapterContract: null,\n  NFTExtensionContract: null,\n  OnboardingContract: null,\n  RagequitContract: null,\n  TributeContract: null,\n  TributeNFTContract: null,\n  VotingContract: null,\n};\n\nexport default function reducer(\n  state: ContractsState = initialState,\n  action: any\n) {\n  const {type, ...payload} = action;\n\n  switch (type) {\n    case CLEAR_CONTRACTS:\n      return clearContracts(state);\n    case CONTRACT_BANK_ADAPTER:\n      return contractBankAdapter(state, payload);\n    case CONTRACT_BANK_EXTENSION:\n      return contractBankExtension(state, payload);\n    case CONTRACT_BANK_FACTORY:\n      return contractBankFactory(state, payload);\n    case CONTRACT_CONFIGURATION:\n      return contractConfiguration(state, payload);\n    case CONTRACT_COUPON_ONBOARDING:\n      return contractCouponOnboarding(state, payload);\n    case CONTRACT_DAO_FACTORY:\n      return contractDAOFactory(state, payload);\n    case CONTRACT_DAO_REGISTRY:\n      return contractDAORegistry(state, payload);\n    case CONTRACT_DAO_REGISTRY_ADAPTER:\n      return contractDaoRegistryAdapter(state, payload);\n    case CONTRACT_DISTRIBUTE:\n      return contractDistribute(state, payload);\n    case CONTRACT_ERC20_EXTENSION:\n      return contractERC20Extension(state, payload);\n    case CONTRACT_FINANCING:\n      return contractFinancing(state, payload);\n    case CONTRACT_GUILDKICK:\n      return contractGuildKick(state, payload);\n    case CONTRACT_MANAGING:\n      return contractManaging(state, payload);\n    case CONTRACT_NFT_ADAPTER:\n      return contractNFTAdapter(state, payload);\n    case CONTRACT_NFT_EXTENSION:\n      return contractNFTExtension(state, payload);\n    case CONTRACT_ONBOARDING:\n      return contractOnboarding(state, payload);\n    case CONTRACT_RAGEQUIT:\n      return contractRagequit(state, payload);\n    case CONTRACT_TRIBUTE:\n      return contractTribute(state, payload);\n    case CONTRACT_TRIBUTE_NFT:\n      return contractTributeNFT(state, payload);\n    case CONTRACT_VOTING:\n      return contractVoting(state, payload);\n    case CONTRACT_VOTING_OP_ROLLUP:\n      return contractVoting(state, payload);\n\n    default:\n      return state;\n  }\n}\n\nfunction clearContracts(state: ContractsState) {\n  return {...state, ...initialState};\n}\n\nfunction contractBankFactory(state: ContractsState, payload: any) {\n  return {...state, BankFactoryContract: {...payload}};\n}\n\nfunction contractDAOFactory(state: ContractsState, payload: any) {\n  return {...state, DaoFactoryContract: {...payload}};\n}\n\nfunction contractDAORegistry(state: ContractsState, payload: any) {\n  return {...state, DaoRegistryContract: {...payload}};\n}\n\nfunction contractDaoRegistryAdapter(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, DaoRegistryAdapterContract: {...payload}};\n}\n\nfunction contractBankExtension(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, BankExtensionContract: {...payload}};\n}\n\nfunction contractConfiguration(state: ContractsState, payload: any) {\n  return {...state, ConfigurationContract: {...payload}};\n}\n\nfunction contractDistribute(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, DistributeContract: {...payload}};\n}\n\nfunction contractFinancing(state: ContractsState, payload: any) {\n  return {...state, FinancingContract: {...payload}};\n}\n\nfunction contractGuildKick(state: ContractsState, payload: any) {\n  return {...state, GuildKickContract: {...payload}};\n}\n\nfunction contractOnboarding(state: ContractsState, payload: any) {\n  return {...state, OnboardingContract: {...payload}};\n}\n\nfunction contractRagequit(state: ContractsState, payload: any) {\n  return {...state, RagequitContract: {...payload}};\n}\n\nfunction contractTribute(state: ContractsState, payload: any): ContractsState {\n  return {...state, TributeContract: {...payload}};\n}\n\nfunction contractVoting(state: ContractsState, payload: any): ContractsState {\n  return {...state, VotingContract: {...payload}};\n}\n\nfunction contractManaging(state: ContractsState, payload: any): ContractsState {\n  return {...state, ManagingContract: {...payload}};\n}\n\nfunction contractBankAdapter(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, BankAdapterContract: {...payload}};\n}\n\nfunction contractNFTAdapter(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, NFTAdapterContract: {...payload}};\n}\n\nfunction contractTributeNFT(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, TributeNFTContract: {...payload}};\n}\n\nfunction contractCouponOnboarding(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, CouponOnboardingContract: {...payload}};\n}\n\nfunction contractNFTExtension(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, NFTExtensionContract: {...payload}};\n}\n\nfunction contractERC20Extension(\n  state: ContractsState,\n  payload: any\n): ContractsState {\n  return {...state, ERC20ExtensionContract: {...payload}};\n}\n","import {SET_SUBGRAPH_NETWORK_STATUS} from './actions';\nimport {SubgraphNetworkStatus, SubgraphNetworkStatusState} from './types';\n\nconst INITIAL_STATE = {\n  status: SubgraphNetworkStatus.OK,\n};\n\nexport default function reducer(\n  state: SubgraphNetworkStatusState = INITIAL_STATE,\n  action: any\n) {\n  const {type, ...payload} = action;\n\n  switch (type) {\n    case SET_SUBGRAPH_NETWORK_STATUS:\n      return setSubgraphNetworkStatus(state, payload);\n    default:\n      return state;\n  }\n}\n\nfunction setSubgraphNetworkStatus(\n  state: Partial<SubgraphNetworkStatusState>,\n  payload: Record<string, any>\n) {\n  return {...state, ...payload};\n}\n","import {combineReducers} from 'redux';\n\nimport connectedMember from './connectedMember/reducers';\nimport connectModal from './connectModal/reducers';\nimport contracts from './contracts/reducers';\nimport subgraphNetworkStatus from './subgraphNetworkStatus/reducers';\n\nexport default combineReducers({\n  connectModal,\n  connectedMember,\n  contracts,\n  subgraphNetworkStatus,\n});\n","import {applyMiddleware, createStore} from 'redux';\nimport {composeWithDevTools} from 'redux-devtools-extension/logOnlyInProduction';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './reducers';\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from 'react';\n\nexport default function DiscordSVG(props: React.SVGAttributes<SVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 12 14\" {...props}>\n      <g fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g transform=\"translate(-737 -124)\">\n          <g transform=\"translate(596 124)\">\n            <path\n              fill=\"currentColor\"\n              d=\"M151.166.8h-8.679c-.733 0-1.344.611-1.344 1.345v8.8c0 .734.611 1.345 1.344 1.345h7.395l-.366-1.223.855.795.795.733 1.405 1.223V2.145c-.06-.734-.61-1.345-1.405-1.345zm-2.506 8.495s-.244-.306-.428-.55c.49-.122.917-.367 1.161-.795a2.065 2.065 0 01-.733.367c-.306.122-.611.245-.917.306a4.039 4.039 0 01-1.71 0 6.007 6.007 0 01-.979-.306 1.83 1.83 0 01-.489-.244s-.06 0-.06-.061c-.123-.062-.184-.123-.184-.123.305.367.672.673 1.161.795-.183.244-.428.55-.428.55a2.579 2.579 0 01-2.017-.978c0-1.344.367-2.628.917-3.79.55-.427 1.161-.671 1.834-.671l.06.06c-.61.184-1.222.429-1.71.856l.366-.183c.49-.183.978-.367 1.467-.428h.122a4.947 4.947 0 011.345 0c.672.061 1.344.306 1.955.611a5.299 5.299 0 00-1.65-.855l.061-.122c.673.06 1.284.244 1.834.672.611 1.161.917 2.506.917 3.789-.367.733-1.1 1.1-1.895 1.1zm-2.995-3.056c-.427-.06-.733.245-.794.673-.061.427.244.733.672.794.428.061.734-.244.795-.672v-.061c0-.367-.306-.734-.673-.734zm2.384 0c-.428-.06-.733.245-.795.673-.06.427.245.733.673.794.427.061.733-.244.794-.672v-.061c0-.367-.305-.734-.672-.734z\"></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import DiscordSVG from '../../assets/svg/DiscordSVG';\nimport GitHubSVG from '../../assets/svg/GitHubSVG';\nimport MediumSVG from '../../assets/svg/MediumSVG';\n\n// @todo Add missing URLs when available\nenum SocialMediaLinks {\n  DISCORD = '#',\n  // query params search sepcifically for openlawteam/tribute-ui and\n  // openlawteam/tribute-contracts\n  GITHUB = 'https://github.com/search?q=org%3Aopenlawteam+tribute-ui+OR+tribute-contracts+in%3Aname&type=repositories',\n  MEDIUM = '#',\n}\n\nexport default function SocialMedia() {\n  return (\n    <div className=\"socialmedia\">\n      <a\n        href={SocialMediaLinks.MEDIUM}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <MediumSVG />\n      </a>\n      <a\n        href={SocialMediaLinks.DISCORD}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <DiscordSVG />\n      </a>\n      <a\n        href={SocialMediaLinks.GITHUB}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        <GitHubSVG />\n      </a>\n    </div>\n  );\n}\n","import React from 'react';\n\nclass GitHubSVG extends React.Component {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-hidden=\"true\"\n        data-icon=\"github\"\n        data-prefix=\"fab\"\n        viewBox=\"0 0 496 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n        />\n      </svg>\n    );\n  }\n}\n\nexport default GitHubSVG;\n","import React from 'react';\n\nclass MediumSVG extends React.Component {\n  render() {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-hidden=\"true\"\n        data-icon=\"medium\"\n        data-prefix=\"fab\"\n        viewBox=\"0 0 448 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M0 32v448h448V32H0zm372.2 106.1l-24 23c-2.1 1.6-3.1 4.2-2.7 6.7v169.3c-.4 2.6.6 5.2 2.7 6.7l23.5 23v5.1h-118V367l24.3-23.6c2.4-2.4 2.4-3.1 2.4-6.7V199.8l-67.6 171.6h-9.1L125 199.8v115c-.7 4.8 1 9.7 4.4 13.2l31.6 38.3v5.1H71.2v-5.1l31.6-38.3c3.4-3.5 4.9-8.4 4.1-13.2v-133c.4-3.7-1-7.3-3.8-9.8L75 138.1V133h87.3l67.4 148L289 133.1h83.2v5z\"\n        />\n      </svg>\n    );\n  }\n}\n\nexport default MediumSVG;\n","import SocialMedia from './common/SocialMedia';\n\nexport default function Footer() {\n  return (\n    <div className=\"footer\">\n      <SocialMedia />\n    </div>\n  );\n}\n","import {lazy, Suspense, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useEffect} from 'react';\n\nimport {\n  useIsDefaultChain,\n  useMaybeContractWallet,\n  useWeb3Modal,\n} from './components/web3/hooks';\nimport {AsyncStatus} from './util/types';\nimport {connectModalClose, connectModalOpen} from './store/actions';\nimport {StoreState} from './store/types';\nimport {useLocation} from 'react-router-dom';\n\n/**\n * Lazy load ConnectWalletModal only when open\n */\nconst ConnectWalletModal = lazy(\n  () => import('./components/web3/ConnectWalletModal')\n);\n\nexport default function GlobalConnectWalletModal() {\n  /**\n   * Selectors\n   */\n\n  const isConnectModalOpen: boolean = useSelector(\n    ({connectModal}: StoreState) => connectModal.isOpen\n  );\n\n  /**\n   * State\n   */\n\n  const [modalProps, setModalProps] = useState<\n    Parameters<typeof ConnectWalletModal>[0]['modalProps']\n  >({\n    isOpen: isConnectModalOpen,\n    onRequestClose: () => {\n      dispatch(connectModalClose());\n    },\n  });\n\n  /**\n   * Our hooks\n   */\n\n  const {account, connected, initialCachedConnectorCheckStatus, web3Instance} =\n    useWeb3Modal();\n\n  const {isDefaultChain} = useIsDefaultChain();\n\n  const maybeContractWallet = useMaybeContractWallet(\n    account,\n    web3Instance?.currentProvider\n  );\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch();\n  const {pathname} = useLocation();\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    setModalProps((prevState) => ({...prevState, isOpen: isConnectModalOpen}));\n  }, [isConnectModalOpen]);\n\n  /**\n   * Effects\n   */\n\n  /**\n   * Will automatically re-show the modal (on app `pathname` change) only when:\n   *  - If wrong chain\n   *  - If smart contract wallet\n   */\n  useEffect(() => {\n    if (initialCachedConnectorCheckStatus === AsyncStatus.FULFILLED) {\n      const shouldAutomaticallyOpenModal: boolean =\n        connected && (!isDefaultChain || maybeContractWallet) ? true : false;\n\n      shouldAutomaticallyOpenModal\n        ? dispatch(connectModalOpen())\n        : dispatch(connectModalClose());\n    }\n  }, [\n    connected,\n    dispatch,\n    initialCachedConnectorCheckStatus,\n    isDefaultChain,\n    maybeContractWallet,\n    pathname,\n  ]);\n\n  /**\n   * Render\n   */\n\n  if (!isConnectModalOpen) return null;\n\n  return (\n    <Suspense fallback={null}>\n      <ConnectWalletModal\n        // @todo Look into more generic way to render errors in the modal\n        maybeContractWallet={maybeContractWallet}\n        modalProps={modalProps}\n      />\n    </Suspense>\n  );\n}\n","import {Helmet} from 'react-helmet';\n\nexport default function Head() {\n  return (\n    <Helmet>\n      <title>Tribute</title>\n      <meta\n        name=\"description\"\n        content=\"A modular DAO framework developed and coordinated by its members\"\n      />\n    </Helmet>\n  );\n}\n","interface LogoProps {\n  size?: 'small' | 'medium' | 'large' | '';\n}\n\nexport default function Logo(props: LogoProps) {\n  return (\n    <div className={`logo ${props.size ? `logo--${props.size}` : ''}`}>\n      TRIBUTE\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Logo from './Logo';\n\n/**\n * ModalLogo\n * This component is used for modal menu\n */\nexport function ModalLogo() {\n  return (\n    <div className=\"logo-container logo-container--center\">\n      <Logo size=\"small\" />\n    </div>\n  );\n}\n\n/**\n * LeftLogo\n * This component is used for main pages\n */\nexport function LeftLogo() {\n  return (\n    <div className=\"logo-container logo-container--header\">\n      <Logo size=\"medium\" />\n    </div>\n  );\n}\n\n/**\n * CenterLogo\n * This component is used for splash page\n */\nexport function CenterLogo() {\n  return (\n    <div className=\"logo-container logo-container--center\">\n      <Logo size=\"large\" />\n    </div>\n  );\n}\n","export default function HamburgerSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      aria-hidden=\"true\"\n      data-icon=\"bars\"\n      data-prefix=\"fal\"\n      viewBox=\"0 0 448 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M442 114H6a6 6 0 01-6-6V84a6 6 0 016-6h436a6 6 0 016 6v24a6 6 0 01-6 6zm0 160H6a6 6 0 01-6-6v-24a6 6 0 016-6h436a6 6 0 016 6v24a6 6 0 01-6 6zm0 160H6a6 6 0 01-6-6v-24a6 6 0 016-6h436a6 6 0 016 6v24a6 6 0 01-6 6z\"></path>\n    </svg>\n  );\n}\n","import {isMobile} from '@walletconnect/browser-utils';\nimport {useDispatch} from 'react-redux';\n\nimport {connectModalOpen} from '../../store/actions';\nimport {truncateEthAddress} from '../../util/helpers';\nimport {useIsDefaultChain} from './hooks';\nimport {useWeb3Modal} from './hooks';\nimport {WalletIcon} from './';\n\ntype CustomWalletTextProps = {\n  account: ReturnType<typeof useWeb3Modal>['account'];\n  connected: ReturnType<typeof useWeb3Modal>['connected'];\n  isMobile: ReturnType<typeof isMobile>;\n};\n\ntype ConnectWalletButtonProps = {\n  customWalletText?: ((o: CustomWalletTextProps) => string) | string;\n  showWalletETHBadge?: boolean;\n};\n\nexport default function ConnectWalletButton({\n  customWalletText,\n  // Defaults to `true`\n  showWalletETHBadge = true,\n}: ConnectWalletButtonProps): JSX.Element {\n  /**\n   * Our hooks\n   */\n\n  const {account, connected, web3Modal} = useWeb3Modal();\n\n  const {isDefaultChain} = useIsDefaultChain();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch();\n\n  /**\n   * Variables\n   */\n\n  const isWrongNetwork: boolean = isDefaultChain === false;\n\n  /**\n   * Functions\n   */\n\n  function getWalletText(): string {\n    if (customWalletText) {\n      return typeof customWalletText === 'function'\n        ? customWalletText({account, connected, isMobile: isMobile()})\n        : customWalletText;\n    }\n\n    if (account) {\n      return truncateEthAddress(account);\n    }\n\n    return 'Connect';\n  }\n\n  /**\n   * Return\n   */\n\n  return (\n    <button\n      className={`walletconnect__connect-button \n        ${\n          isWrongNetwork && connected\n            ? 'walletconnect__connect-button--error'\n            : ''\n        }`}\n      onClick={() => {\n        dispatch(connectModalOpen());\n      }}>\n      <span\n        className={`connect-button-text ${\n          connected ? 'connect-button-text--ethAddress' : ''\n        }`}>\n        {getWalletText()}\n      </span>\n\n      {isWrongNetwork && connected && <span>Wrong Network</span>}\n\n      {showWalletETHBadge && (\n        <WalletIcon providerName={web3Modal?.cachedProvider} />\n      )}\n    </button>\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {StoreState} from '../../../store/types';\nimport {ERC20RegisterDetails} from '../DaoToken';\nimport {AsyncStatus} from '../../../util/types';\n\ntype UseDaoTokenDetailsReturn = {\n  daoTokenDetails: ERC20RegisterDetails | undefined;\n  daoTokenDetailsError: Error | undefined;\n  daoTokenDetailsStatus: AsyncStatus;\n};\n\n/**\n * useDaoTokenDetails\n *\n * Gets DAO token details from ERC20Extension contract.\n *\n * @returns {UseDaoTokenDetailsReturn}\n */\nexport function useDaoTokenDetails(): UseDaoTokenDetailsReturn {\n  /**\n   * Selectors\n   */\n\n  const ERC20ExtensionContract = useSelector(\n    (state: StoreState) => state.contracts?.ERC20ExtensionContract\n  );\n\n  /**\n   * State\n   */\n\n  const [daoTokenDetails, setDaoTokenDetails] =\n    useState<ERC20RegisterDetails>();\n  const [daoTokenDetailsStatus, setDaoTokenDetailsStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n  const [daoTokenDetailsError, setDaoTokenDetailsError] = useState<Error>();\n\n  /**\n   * Cached callbacks\n   */\n\n  const getDaoTokenDetailsCached = useCallback(getDaoTokenDetails, [\n    ERC20ExtensionContract,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getDaoTokenDetailsCached();\n  }, [getDaoTokenDetailsCached]);\n\n  /**\n   * Functions\n   */\n\n  async function getDaoTokenDetails() {\n    if (!ERC20ExtensionContract) return;\n\n    try {\n      setDaoTokenDetailsStatus(AsyncStatus.PENDING);\n\n      const symbol = await ERC20ExtensionContract.instance.methods\n        .symbol()\n        .call();\n      const decimals = await ERC20ExtensionContract.instance.methods\n        .decimals()\n        .call();\n\n      setDaoTokenDetails({\n        address: ERC20ExtensionContract.contractAddress,\n        symbol,\n        decimals: Number(decimals),\n        image: `${window.location.origin}/favicon.ico`,\n      });\n\n      setDaoTokenDetailsStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      console.log(error);\n      setDaoTokenDetails(undefined);\n      setDaoTokenDetailsError(error);\n      setDaoTokenDetailsStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  return {daoTokenDetails, daoTokenDetailsError, daoTokenDetailsStatus};\n}\n","import {useCallback, useEffect, useState} from 'react';\n\nimport FadeIn from '../../components/common/FadeIn';\nimport {useWeb3Modal} from '../../components/web3/hooks';\nimport {useTokenHolderBalances} from './hooks';\nimport {formatNumber} from '../../util/helpers';\nimport {ETHERSCAN_URLS} from '../../config';\n\nexport type ERC20HolderDetails = {\n  symbol: string;\n  balance: number;\n  tokenAddress: string;\n};\n\ntype DaoTokenHolderProps = {\n  backgroundColor?: string;\n  border?: string;\n  color?: string;\n  customStyles?: Record<string, string>;\n};\n\nconst image = `${window.location.origin}/favicon.ico`;\n\nconst toDataURL = (url: string) =>\n  fetch(url)\n    .then((response) => response.blob())\n    .then(\n      (blob) =>\n        new Promise((resolve, reject) => {\n          const reader = new FileReader();\n          reader.onloadend = () => resolve(reader.result);\n          reader.onerror = reject;\n          reader.readAsDataURL(blob);\n        })\n    );\n\nexport default function DaoTokenHolder({\n  customStyles,\n  ...badgeStyles\n}: DaoTokenHolderProps): JSX.Element {\n  /**\n   * State\n   */\n\n  const [tokenHolder, setTokenHolder] = useState<ERC20HolderDetails>();\n  const [tokenImageUrl, setTokenImageURL] = useState<string | undefined>();\n  const [tokenEtherscanURL, setTokenEtherscanURL] = useState<string>('');\n\n  /**\n   * Our hooks\n   */\n\n  const {tokenHolderBalances} = useTokenHolderBalances();\n  const {account, networkId} = useWeb3Modal();\n\n  /**\n   * Cached callbacks\n   */\n\n  const getTokenImageCallback = useCallback(getTokenImage, []);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    setTokenHolder(undefined);\n\n    if (account && tokenHolderBalances) {\n      const {holders, symbol, tokenAddress} = tokenHolderBalances;\n\n      const holderData = holders?.find(\n        (holder: any) =>\n          holder.member?.id.toLowerCase() === account.toLowerCase()\n      );\n\n      holderData &&\n        setTokenHolder({\n          balance: holderData.balance,\n          tokenAddress,\n          symbol,\n        });\n\n      account &&\n        networkId &&\n        setTokenEtherscanURL(\n          `${ETHERSCAN_URLS[networkId]}/token/${tokenAddress}?a=${account}`\n        );\n\n      getTokenImageCallback();\n    }\n  }, [account, networkId, tokenHolderBalances, getTokenImageCallback]);\n\n  /**\n   * Functions\n   */\n\n  function getTokenImage() {\n    try {\n      toDataURL(image).then((dataUrl: any) => {\n        dataUrl && setTokenImageURL(dataUrl);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  if (tokenHolder) {\n    return (\n      <FadeIn>\n        <a\n          className=\"daotokenholder__button\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href={tokenEtherscanURL}\n          style={{...badgeStyles, ...customStyles}}>\n          <span className=\"daotokenholder__balance\">\n            {formatNumber(tokenHolder.balance)}\n          </span>\n          <span className=\"daotokenholder__symbol\">{tokenHolder.symbol}</span>\n\n          {tokenImageUrl && <img src={tokenImageUrl} alt=\"Token Icon\" />}\n        </a>\n      </FadeIn>\n    );\n  }\n\n  return <></>;\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\nimport {useLazyQuery} from '@apollo/react-hooks';\n\nimport {StoreState} from '../../../store/types';\nimport {GET_TOKEN_HOLDER_BALANCES} from '../../../gql';\n\ntype UseTokenHolderBalancesReturn = {\n  tokenHolderBalances: Record<string, any> | undefined;\n  gqlError: Error | undefined;\n};\n\n/**\n * useTokenHolderBalances\n *\n * This component queries The Graph API to get data on the token holders\n *\n * @returns {UseTokenHolderBalancesReturn}\n */\nexport function useTokenHolderBalances(): UseTokenHolderBalancesReturn {\n  /**\n   * Selectors\n   */\n\n  const erc20ExtensionContract = useSelector(\n    (s: StoreState) => s.contracts?.ERC20ExtensionContract\n  );\n\n  const connectedMember = useSelector((s: StoreState) => s.connectedMember);\n\n  /**\n   * GQL Query\n   */\n\n  const [\n    getTokenHolderBalances,\n    {called, loading, data, error, startPolling, stopPolling},\n  ] = useLazyQuery(GET_TOKEN_HOLDER_BALANCES, {\n    variables: {\n      tokenAddress: erc20ExtensionContract?.contractAddress.toLowerCase(),\n    },\n  });\n\n  /**\n   * State\n   */\n\n  const [tokenHolderBalances, setTokenHolderBalances] = useState<\n    Record<string, any> | undefined\n  >();\n  const [gqlError, setGqlError] = useState<Error>();\n\n  /**\n   * Cached callbacks\n   */\n\n  const getTokenBalanceCallback = useCallback(getTokenBalance, [\n    erc20ExtensionContract?.contractAddress,\n    data,\n    error,\n    loading,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!called && erc20ExtensionContract?.contractAddress) {\n      getTokenHolderBalances();\n    }\n  }, [called, erc20ExtensionContract?.contractAddress, getTokenHolderBalances]);\n\n  useEffect(() => {\n    if (!loading && erc20ExtensionContract?.contractAddress) {\n      getTokenBalanceCallback();\n    }\n  }, [\n    erc20ExtensionContract?.contractAddress,\n    getTokenBalanceCallback,\n    loading,\n  ]);\n\n  // When the `SET_CONNECTED_MEMBER` redux action is dispatched in other\n  // components (to refetch the connected user's member status info) the\n  // `useSelector` hook above will return a new `connectedMember` object. By\n  // default, the `useEffect` hook uses a strict equality comparison which will\n  // consider the new object a changed value (even if the individual fields are\n  // the same from the previous `connectedMember` store state). This change is\n  // used to trigger a refresh of the `GET_TOKEN_HOLDER_BALANCES` query result\n  // so any change to the connected token holder's balance can be shown in the\n  // nav badge without having to do a page reload.\n  useEffect(() => {\n    // a single refetch may not be enough to catch any token balance change so\n    // we poll but only for a short time period\n    connectedMember && startPolling && startPolling(2000);\n\n    const pollingTimeoutId = stopPolling && setTimeout(stopPolling, 10000);\n\n    return function cleanup() {\n      pollingTimeoutId && clearTimeout(pollingTimeoutId);\n    };\n  }, [connectedMember, startPolling, stopPolling]);\n\n  /**\n   * Functions\n   */\n\n  function getTokenBalance() {\n    try {\n      if (!loading && data) {\n        setTokenHolderBalances(data.tokens[0]);\n        if (data.tokens.length === 0) {\n          const error = new Error(\n            `\"${erc20ExtensionContract?.contractAddress}\" erc20 address not found.`\n          );\n          throw error;\n        }\n      } else {\n        if (error) {\n          const error = new Error(\n            `\"${erc20ExtensionContract?.contractAddress}\" is not a valid erc20 address.`\n          );\n\n          throw error;\n        }\n      }\n    } catch (error) {\n      setGqlError(error);\n    }\n  }\n\n  return {tokenHolderBalances, gqlError};\n}\n","import {NavLink} from 'react-router-dom';\nimport {Transition} from 'react-transition-group';\nimport {useSelector} from 'react-redux';\nimport {useState, useEffect, useRef} from 'react';\nimport Media from 'react-media';\nimport ReactModal from 'react-modal';\n\nimport {ModalLogo} from './logo';\nimport {StoreState} from '../store/types';\nimport {useWeb3Modal} from './web3/hooks';\nimport HamburgerSVG from '../assets/svg/HamburgerSVG';\nimport TimesSVG from '../assets/svg/TimesSVG';\nimport Web3ModalButton from './web3/Web3ModalButton';\nimport DaoTokenHolder from './dao-token/DaoTokenHolder';\n\n// see: http://reactcommunity.org/react-transition-group/transition\nconst duration = 200;\n\nconst defaultStyle = {\n  transition: '0.1s',\n};\n\nconst transitionOpeningStyles: Record<string, any> = {\n  entering: {right: '-300px'},\n  entered: {right: 0},\n  exiting: {right: 0, opacity: 0},\n  exited: {right: '-300px', opacity: 0},\n};\n\nconst transitionClosingStyles: Record<string, any> = {\n  entering: {right: 0, opacity: 1},\n  entered: {right: '-300px', opacity: 1},\n  exiting: {right: '-300px', opacity: 1},\n  exited: {right: 0, opacity: 1},\n};\n\nexport function NavLinks() {\n  return (\n    <nav role=\"navigation\" id=\"navigation\">\n      <ul className=\"nav__list\" data-testid=\"nav__list\">\n        <li tabIndex={0}>\n          <NavLink to=\"/membership\">\n            <span>Membership</span>\n          </NavLink>\n        </li>\n        <li tabIndex={0}>\n          <NavLink to=\"/governance\">\n            <span>Governance</span>\n          </NavLink>\n        </li>\n        <li tabIndex={0}>\n          <NavLink to=\"/transfers\">\n            <span>Transfer</span>\n          </NavLink>\n        </li>\n        <li tabIndex={0}>\n          <NavLink to=\"/tributes\">\n            <span>Tribute</span>\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport function NavHamburger() {\n  /**\n   * Selectors\n   */\n\n  const connectedMember = useSelector((s: StoreState) => s.connectedMember);\n\n  /**\n   * State\n   */\n\n  const [shouldShowMenuModal, setShouldShowMenuModal] = useState(false);\n  const [transitionStyles, setTransitionStyles] = useState<Record<string, any>>(\n    transitionOpeningStyles\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account} = useWeb3Modal();\n\n  /**\n   * Refs\n   */\n\n  const closeMenuRef = useRef<NodeJS.Timeout>();\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    // Clean up on unmount\n    return () => {\n      closeMenuRef.current && clearTimeout(closeMenuRef.current);\n    };\n  }, []);\n\n  /**\n   * Variables\n   */\n\n  const isCurrentMemberOrDelegateConnected: boolean =\n    account && connectedMember?.isActiveMember ? true : false;\n  const isCurrentMemberConnected: boolean =\n    account &&\n    connectedMember?.isActiveMember &&\n    account.toLowerCase() === connectedMember?.memberAddress.toLowerCase()\n      ? true\n      : false;\n\n  /**\n   * Functions\n   */\n\n  function handleMenuModalClose(close: boolean) {\n    // delay transition for closing\n    if (close) {\n      setShouldShowMenuModal(close);\n      setTransitionStyles(transitionOpeningStyles);\n    } else {\n      setTransitionStyles(transitionClosingStyles);\n      closeMenuRef.current = setTimeout(\n        () => setShouldShowMenuModal(close),\n        500\n      );\n      return () => closeMenuRef.current && clearTimeout(closeMenuRef.current);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <div tabIndex={0} className=\"nav__hamburger-wrapper\">\n        <div\n          className=\"nav__hamburger\"\n          aria-label=\"Menu\"\n          aria-controls=\"navigation\"\n          onClick={(event) => {\n            event.preventDefault();\n            handleMenuModalClose(true);\n          }}>\n          <HamburgerSVG />\n        </div>\n      </div>\n\n      {/** MODAL MENU */}\n      <ReactModal\n        ariaHideApp={false}\n        className=\"nav-modal-container\"\n        isOpen={shouldShowMenuModal}\n        onRequestClose={() => {\n          handleMenuModalClose(false);\n        }}\n        overlayClassName=\"nav-modal-overlay\"\n        role=\"dialog\"\n        style={{overlay: {zIndex: '99'}} as any}>\n        <Transition appear in={shouldShowMenuModal} timeout={duration}>\n          {(transition) => (\n            <nav role=\"navigation\" id=\"navigation\">\n              <div\n                style={{\n                  ...defaultStyle,\n                  ...transitionStyles[transition],\n                }}\n                className=\"nav-modal\">\n                <button\n                  className=\"modal__close-button modal__close-button--icon\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    handleMenuModalClose(false);\n                  }}>\n                  <TimesSVG />\n                </button>\n\n                <ModalLogo />\n\n                <div className=\"nav-modal__walletconnect-button-container\">\n                  <Web3ModalButton />\n                </div>\n                <ul className=\"nav__list\">\n                  <li\n                    onClick={() => {\n                      handleMenuModalClose(false);\n                    }}>\n                    <NavLink to=\"/membership\">\n                      <span>Membership</span>\n                    </NavLink>\n                  </li>\n                  <li\n                    onClick={() => {\n                      handleMenuModalClose(false);\n                    }}>\n                    <NavLink to=\"/governance\">\n                      <span>Governance</span>\n                    </NavLink>\n                  </li>\n                  <li\n                    onClick={() => {\n                      handleMenuModalClose(false);\n                    }}>\n                    <NavLink to=\"/transfers\">\n                      <span>Transfer</span>\n                    </NavLink>\n                  </li>\n                  <li\n                    onClick={() => {\n                      handleMenuModalClose(false);\n                    }}>\n                    <NavLink to=\"/tributes\">\n                      <span>Tribute</span>\n                    </NavLink>\n                  </li>\n                  {/* The Profile link is available to only the connected member user (not any delegate) because the profile exists for the member account. */}\n                  {isCurrentMemberConnected && (\n                    <li\n                      onClick={() => {\n                        handleMenuModalClose(false);\n                      }}>\n                      <NavLink to={`/members/${account}`}>\n                        <span>Profile</span>\n                      </NavLink>\n                    </li>\n                  )}\n                  {/* The Manage DAO link is available to both connected member users and connected delegate users. */}\n                  {isCurrentMemberOrDelegateConnected && (\n                    <li\n                      onClick={() => {\n                        handleMenuModalClose(false);\n                      }}>\n                      <NavLink to=\"/dao-manager\">\n                        <span>Manage DAO</span>\n                      </NavLink>\n                    </li>\n                  )}\n                </ul>\n              </div>\n            </nav>\n          )}\n        </Transition>\n      </ReactModal>\n    </>\n  );\n}\n\nexport default function Nav() {\n  /**\n   * Render\n   */\n\n  return (\n    <Media query=\"(max-width: 62em)\">\n      {(_matches: boolean) => (\n        <div className=\"nav-header\">\n          <div className=\"nav-header__menu-container\">\n            {/* NAV */}\n            <NavLinks />\n            <DaoTokenHolder border={'1px solid #c3d6dc'} />\n            <NavHamburger />\n            <div className=\"nav-header__walletconnect-button-container\">\n              <Web3ModalButton />\n            </div>\n          </div>\n        </div>\n      )}\n    </Media>\n  );\n}\n","import {Link} from 'react-router-dom';\n\nimport {LeftLogo} from './logo';\nimport Nav from './Nav';\n\nexport default function Header() {\n  /**\n   * Functions\n   */\n\n  // Render the location with a link\n  function RenderLogo(props: React.PropsWithChildren<any>) {\n    return <Link to=\"/\">{props.children}</Link>;\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <header className=\"header\">\n      <RenderLogo>\n        <LeftLogo />\n      </RenderLogo>\n\n      <div className=\"header__nav-container\">\n        <Nav />\n      </div>\n    </header>\n  );\n}\n","import Web3 from 'web3';\n\nimport {DaoAdapterConstants, DaoExtensionConstants} from './enums';\nimport {AclFlag} from './types';\n\nexport function getAdapterOrExtensionId(\n  adapterName: DaoAdapterConstants | DaoExtensionConstants\n): string {\n  return sha3(adapterName) as string;\n}\n\n/**\n * getAccessControlLayer\n *\n * @param adapterName\n */\nexport function getAccessControlLayer(\n  adapterOrExtensionName: string\n): Record<string, any> {\n  const adapterAndExtensionFlags: Record<\n    | DaoAdapterConstants\n    | DaoExtensionConstants.BANK\n    | DaoExtensionConstants.NFT,\n    any\n  > = {\n    [DaoExtensionConstants.BANK]: {},\n    [DaoAdapterConstants.CONFIGURATION]: {\n      SUBMIT_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      SET_CONFIGURATION: true,\n    },\n    [DaoAdapterConstants.DISTRIBUTE]: {\n      SUBMIT_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      INTERNAL_TRANSFER: true,\n    },\n    [DaoAdapterConstants.EXECUTION]: {},\n    [DaoAdapterConstants.TRIBUTE]: {\n      SUBMIT_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      NEW_MEMBER: true,\n      ADD_TO_BALANCE: true,\n      REGISTER_NEW_TOKEN: true,\n    },\n    [DaoAdapterConstants.FINANCING]: {\n      SUBMIT_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      ADD_TO_BALANCE: true,\n      SUB_FROM_BALANCE: true,\n    },\n    [DaoAdapterConstants.GUILDKICK]: {\n      SUBMIT_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      SUB_FROM_BALANCE: true,\n      ADD_TO_BALANCE: true,\n      JAIL_MEMBER: true,\n      UNJAIL_MEMBER: true,\n      INTERNAL_TRANSFER: true,\n    },\n    [DaoAdapterConstants.MANAGING]: {\n      SUBMIT_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      REMOVE_ADAPTER: true,\n      ADD_ADAPTER: true,\n    },\n    [DaoAdapterConstants.OFFCHAINVOTING]: {},\n    [DaoAdapterConstants.ONBOARDING]: {\n      SUBMIT_PROPOSAL: true,\n      SPONSOR_PROPOSAL: true,\n      PROCESS_PROPOSAL: true,\n      ADD_TO_BALANCE: true,\n      UPDATE_DELEGATE_KEY: true,\n      NEW_MEMBER: true,\n    },\n    [DaoAdapterConstants.NONVOTING_ONBOARDING]: {},\n    [DaoAdapterConstants.RAGEQUIT]: {\n      SUB_FROM_BALANCE: true,\n      JAIL_MEMBER: true,\n      UNJAIL_MEMBER: true,\n      INTERNAL_TRANSFER: true,\n    },\n    [DaoAdapterConstants.VOTING]: {},\n    [DaoAdapterConstants.BANK]: {\n      WITHDRAW: true,\n      SUB_FROM_BALANCE: true,\n      UPDATE_TOKEN: true,\n    },\n    [DaoAdapterConstants.NFT]: {\n      COLLECT_NFT: true,\n    },\n    [DaoAdapterConstants.COUPON_ONBOARDING]: {\n      SUBMIT_PROPOSAL: false,\n      ADD_TO_BALANCE: true,\n      UPDATE_DELEGATE_KEY: false,\n      NEW_MEMBER: true,\n    },\n    [DaoAdapterConstants.TRIBUTE_NFT]: {\n      SUBMIT_PROPOSAL: true,\n      NEW_MEMBER: true,\n      ADD_TO_BALANCE: true,\n      COLLECT_NFT: true,\n    },\n    [DaoExtensionConstants.NFT]: {\n      WITHDRAW_NFT: true,\n      COLLECT_NFT: true,\n      INTERNAL_TRANSFER: true,\n    },\n    [DaoAdapterConstants.DAO_REGISTRY]: {\n      UPDATE_DELEGATE_KEY: true,\n    },\n  };\n\n  const flags = adapterAndExtensionFlags[adapterOrExtensionName];\n\n  return {acl: accessFlags(flags)};\n}\n\n/**\n *   === INTERNAL HELPER FUNCTIONS ===\n */\n\n/**\n * accessFlags()\n *\n * @param flags\n */\nfunction accessFlags(flags: Record<AclFlag, boolean>): number {\n  const ADAPTER_ACCESS_FLAGS = [\n    flags.ADD_ADAPTER,\n    flags.REMOVE_ADAPTER,\n    flags.JAIL_MEMBER,\n    flags.UNJAIL_MEMBER,\n    flags.SUBMIT_PROPOSAL,\n    flags.SPONSOR_PROPOSAL,\n    flags.PROCESS_PROPOSAL,\n    flags.UPDATE_DELEGATE_KEY,\n    flags.SET_CONFIGURATION,\n    flags.ADD_EXTENSION,\n    flags.REMOVE_EXTENSION,\n    flags.NEW_MEMBER,\n  ];\n  const EXTENSION_ACCESS_FLAGS = [flags.TRANSFER_NFT];\n\n  const values: boolean[] = [\n    ...ADAPTER_ACCESS_FLAGS,\n    ...EXTENSION_ACCESS_FLAGS,\n  ];\n\n  return entry(values) as number;\n}\n\n/**\n * sha3()\n *\n * @returns string | null\n * @param value\n */\nfunction sha3(value: string): string | null {\n  return Web3.utils.sha3(value);\n}\n\n/**\n * entry()\n *\n * @param values\n */\nfunction entry(values: Boolean[]): number {\n  return values\n    .map((v: any, idx: number) => (v !== undefined ? 2 ** idx : 0))\n    .reduce((a: any, b: any) => a + b);\n}\n","import {DaoAdapterConstants /*DaoExtensionConstants*/} from './enums';\nimport {getAdapterOrExtensionId} from './helpers';\n\nimport {\n  BANK_ADAPTER_CONTRACT_ADDRESS,\n  CONFIGURATION_CONTRACT_ADDRESS,\n  COUPONONBOARDING_CONTRACT_ADDRESS,\n  DAO_REGISTRY_ADAPTER_CONTRACT_ADDRESS,\n  DEFAULT_CHAIN,\n  DISTRIBUTE_CONTRACT_ADDRESS,\n  FINANCING_CONTRACT_ADDRESS,\n  GUILDKICK_CONTRACT_ADDRESS,\n  MANAGING_CONTRACT_ADDRESS,\n  NFT_ADAPTER_CONTRACT_ADDRESS,\n  // NFT_EXTENSION_CONTRACT_ADDRESS,\n  OFFCHAINVOTING_CONTRACT_ADDRESS,\n  ONBOARDING_CONTRACT_ADDRESS,\n  RAGEQUIT_CONTRACT_ADDRESS,\n  TRIBUTE_CONTRACT_ADDRESS,\n  TRIBUTE_NFT_CONTRACT_ADDRESS,\n  VOTING_CONTRACT_ADDRESS,\n} from '../../config';\n\ntype AdapterProps = {\n  abiFunctionName: string;\n  adapterId?: string;\n  contractAddress: string;\n  description: string;\n  extensionId?: string;\n  name: string;\n  /**\n   * Sets the access control for a particular adapter (by address)\n   * to a specific extension. Both adapter and extension need to be\n   * already registered to the DAO.\n   *\n   * We call the `setAclToExtensionForAdapter` function from the\n   * DaoRegistry, and set the access for each adapter based on this flag\n   */\n  setAclToExtensionForAdapter?: boolean;\n};\n\nexport type AdaptersAndExtensionsType = {\n  isExtension?: boolean;\n  options?: Omit<\n    AdapterProps,\n    | 'abiFunctionName'\n    | 'adapterId'\n    | 'contractAddress'\n    | 'description'\n    | 'extensionId'\n    | 'name'\n    | 'setAclToExtensionForAdapter'\n  >;\n  optionDefaultTarget?: DaoAdapterConstants;\n} & Partial<AdapterProps>;\n\n/**\n * @note README [IMPORTANT]\n *\n *    HOW TO ADD A NEW DEFAULT ADAPTER OR EXTENSION\n *\n * 1. Add the new contract address to the `./src/config.ts`\n *    list ie: <NAME-OF-NEW-CONTRACT>_CONTRACT_ADDRESS\n *\n * 2. Create a new object in the following variable `defaultAdaptersAndExtensions`\n *    - Extensions: must have the key/value pair set `isExtension: true`\n *    - Choosing an adapter/extension from a group: must be defined within a nested `options` key\n */\nexport const defaultAdaptersAndExtensions: AdaptersAndExtensionsType[] = [\n  {\n    name: DaoAdapterConstants.CONFIGURATION,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.CONFIGURATION),\n    contractAddress: CONFIGURATION_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'submitConfigurationProposal',\n    description:\n      'Manages storing and retrieving per-DAO settings required by shared adapters.',\n  },\n  {\n    name: DaoAdapterConstants.DISTRIBUTE,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.DISTRIBUTE),\n    contractAddress: DISTRIBUTE_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'submitProposal',\n    description:\n      'Allows the members to distribute funds to one or all members of the DAO.',\n  },\n  {\n    name: DaoAdapterConstants.FINANCING,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.FINANCING),\n    contractAddress: FINANCING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'createFinancingRequest',\n    description:\n      'Allows individuals and/or organizations to request funds to finance their projects, and the members of the DAO have the power to vote and decide which projects should be funded.',\n  },\n  {\n    name: DaoAdapterConstants.GUILDKICK,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.GUILDKICK),\n    contractAddress: GUILDKICK_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'submitKickProposal',\n    description:\n      'Gives the members the freedom to choose which individuals or organizations should really be part of the DAO.',\n  },\n  {\n    name: DaoAdapterConstants.MANAGING,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.MANAGING),\n    contractAddress: MANAGING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'submitProposal',\n    description:\n      'Enhances the DAO capabilities by adding/updating the DAO Adapters through a voting process.',\n  },\n  {\n    name: DaoAdapterConstants.ONBOARDING,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.ONBOARDING),\n    contractAddress: ONBOARDING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'configureDao',\n    description:\n      'Triggers the process of minting internal tokens in exchange of a specific token at a fixed price.',\n  },\n  {\n    name: DaoAdapterConstants.RAGEQUIT,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.RAGEQUIT),\n    contractAddress: RAGEQUIT_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'ragequit',\n    description:\n      'Gives the members the freedom to choose when it is the best time to exit the DAO for any given reason.',\n  },\n  {\n    name: DaoAdapterConstants.TRIBUTE,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.TRIBUTE),\n    contractAddress: TRIBUTE_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'configureDao',\n    description:\n      'Allows potential and existing DAO members to contribute any amount of ERC-20 tokens to the DAO in exchange for any amount of DAO internal tokens.',\n  },\n  {\n    name: DaoAdapterConstants.TRIBUTE_NFT,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.TRIBUTE_NFT),\n    contractAddress: TRIBUTE_NFT_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'provideTributeNFT',\n    description:\n      'Allows potential DAO members to contribute a registered ERC-721 asset to the DAO in exchange for any amount of DAO units.',\n  },\n  {\n    options: [\n      {\n        name: DaoAdapterConstants.VOTING,\n        displayName: DaoAdapterConstants.OFFCHAINVOTING,\n        adapterId: getAdapterOrExtensionId(DaoAdapterConstants.VOTING),\n        contractAddress: OFFCHAINVOTING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n        abiFunctionName: 'configureDao',\n        description:\n          'Adds the offchain voting governance process to the DAO to support gasless voting.',\n        setAclToExtensionForAdapter: true,\n      },\n      {\n        name: DaoAdapterConstants.VOTING,\n        displayName: DaoAdapterConstants.VOTING,\n        adapterId: getAdapterOrExtensionId(DaoAdapterConstants.VOTING),\n        contractAddress: VOTING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n        abiFunctionName: 'configureDao',\n        description:\n          'Adds the simple on chain voting governance process to the DAO.',\n        setAclToExtensionForAdapter: true,\n      },\n    ],\n    optionDefaultTarget: DaoAdapterConstants.VOTING,\n  },\n  {\n    name: DaoAdapterConstants.BANK,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.BANK),\n    contractAddress: BANK_ADAPTER_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'withdraw',\n    description:\n      'Allows the members to withdraw their funds from the DAO bank.',\n  },\n  {\n    name: DaoAdapterConstants.NFT,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.NFT),\n    contractAddress: NFT_ADAPTER_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'collect',\n    description: 'Transfers ownership of an NFT to the DAO collection.',\n  },\n  {\n    name: DaoAdapterConstants.COUPON_ONBOARDING,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.COUPON_ONBOARDING),\n    contractAddress: COUPONONBOARDING_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'configureDao',\n    description:\n      'Provides a way to onboard an initial group of members quickly without requiring multiple proposals.',\n  },\n  {\n    name: DaoAdapterConstants.DAO_REGISTRY,\n    adapterId: getAdapterOrExtensionId(DaoAdapterConstants.DAO_REGISTRY),\n    contractAddress: DAO_REGISTRY_ADAPTER_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n    abiFunctionName: 'updateDelegateKey',\n    description: 'Allows the member to update delegate key.',\n  },\n  // {\n  //   isExtension: true,\n  //   name: DaoExtensionConstants.NFT,\n  //   extensionId: getAdapterOrExtensionId(DaoExtensionConstants.NFT),\n  //   contractAddress: NFT_EXTENSION_CONTRACT_ADDRESS[DEFAULT_CHAIN],\n  //   abiFunctionName: 'registerPotentialNewNFT',\n  //   description:\n  //     'Adds to the DAO the capability of managing and curate a collection of standard NFTs.',\n  // },\n];\n","import {useCallback, useEffect, useState} from 'react';\nimport {useLazyQuery} from '@apollo/react-hooks';\nimport {useSelector} from 'react-redux';\n\nimport {StoreState} from '../../../store/types';\nimport {AsyncStatus} from '../../../util/types';\nimport {Adapters, Extensions} from '../types';\n\nimport {GET_ADAPTERS_AND_EXTENSIONS} from '../../../gql';\n\nimport {\n  defaultAdaptersAndExtensions,\n  AdaptersAndExtensionsType,\n} from '../config';\nimport {GQL_QUERY_POLLING_INTERVAL} from '../../../config';\n\nimport {DaoAdapterConstants, DaoExtensionConstants} from '../enums';\n\nexport type AdapterType = {\n  __typename: string;\n  id: string;\n  acl: string;\n  adapterId: string;\n  adapterAddress: string;\n};\n\nexport type ExtensionType = {\n  __typename: string;\n  id: string;\n  extensionId: string;\n  extensionAddress: string;\n};\n\ntype UseAdaptersOrExtensionsReturn = {\n  adapterExtensionStatus: AsyncStatus;\n  getAdapterOrExtensionFromRedux: (\n    adapterName: DaoAdapterConstants | DaoExtensionConstants\n  ) => Record<string, any>;\n  registeredAdaptersOrExtensions: AdapterType[] | undefined;\n  unRegisteredAdaptersOrExtensions: Adapters[] | undefined;\n};\n\nexport type AdaptersType = AdapterType & Adapters;\nexport type ExtensionsType = ExtensionType & Extensions;\n\n/**\n * useAdaptersOrExtensions\n *\n * This component queries The Graph API to get the daos adapters.\n * It returns the available adapters filtered by a search on the current dao.\n *\n * @returns {UseAdaptersOrExtensionsReturn}\n */\nexport function useAdaptersOrExtensions(): UseAdaptersOrExtensionsReturn {\n  /**\n   * Selectors\n   */\n  const {DaoRegistryContract, ...adapterExtensionContracts} = useSelector(\n    (s: StoreState) => s.contracts\n  );\n\n  /**\n   * Their hooks\n   */\n  const [getRegisteredAdaptersAndExtensions, {called, data, error}] =\n    useLazyQuery(GET_ADAPTERS_AND_EXTENSIONS, {\n      pollInterval: GQL_QUERY_POLLING_INTERVAL,\n      variables: {\n        daoAddress: DaoRegistryContract?.contractAddress.toLowerCase(),\n      },\n    });\n\n  /**\n   * State\n   */\n  const [registeredAdaptersOrExtensions, setRegisteredAdaptersOrExtensions] =\n    useState<AdapterType[] | undefined>();\n  const [\n    unRegisteredAdaptersOrExtensions,\n    setUnRegisteredAdaptersOrExtensions,\n  ] = useState<Adapters[] | undefined>();\n  const [adapterExtensionStatus, setAdapterExtensionStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  const getAdaptersAndExtensionsCached = useCallback(\n    getAdaptersAndExtensions,\n    []\n  );\n\n  useEffect(() => {\n    if (!called) {\n      getRegisteredAdaptersAndExtensions();\n    }\n  }, [called, getRegisteredAdaptersAndExtensions]);\n\n  // Get adapters and extensions from GQL\n  useEffect(() => {\n    if (!DaoRegistryContract?.contractAddress) return;\n\n    try {\n      setAdapterExtensionStatus(AsyncStatus.PENDING);\n\n      if (data) {\n        // extract adapters and extensions from gql data\n        const {adapters, extensions} = data.tributeDaos[0] as Record<\n          string,\n          any\n        >;\n\n        // create a list of registered and un-registered adapters and extensions\n        const {registeredList, unRegisteredList} =\n          getAdaptersAndExtensionsCached(adapters, extensions);\n\n        setRegisteredAdaptersOrExtensions(registeredList);\n        setUnRegisteredAdaptersOrExtensions(unRegisteredList);\n\n        // done; lets set status to fulfilled\n        setAdapterExtensionStatus(AsyncStatus.FULFILLED);\n      } else {\n        if (error) {\n          throw new Error(error.message);\n        }\n      }\n    } catch (error) {\n      setRegisteredAdaptersOrExtensions(undefined);\n      setUnRegisteredAdaptersOrExtensions(undefined);\n\n      setAdapterExtensionStatus(AsyncStatus.REJECTED);\n    }\n  }, [DaoRegistryContract, data, error, getAdaptersAndExtensionsCached]);\n\n  /**\n   * getAdaptersAndExtensions\n   *\n   * Find all registered and un-registered adapters and extensions\n   *\n   * @param registeredDaoAdapters\n   * @param registeredDaoExtensions\n   */\n  function getAdaptersAndExtensions(\n    registeredDaoAdapters: any,\n    registeredDaoExtensions: any\n  ): Record<string, any> {\n    //@todo types\n\n    let registeredList: AdaptersAndExtensionsType[] = [];\n    let unRegisteredList: AdaptersAndExtensionsType[] = [];\n\n    const getAdapterFromGql = (adapterId: string) => {\n      return registeredDaoAdapters.find(\n        (adapter: AdaptersAndExtensionsType) => {\n          return adapter.adapterId?.toLowerCase() === adapterId?.toLowerCase();\n        }\n      );\n    };\n\n    const getExtensionFromGql = (extensionId: string) => {\n      return registeredDaoExtensions.find(\n        (extension: AdaptersAndExtensionsType) => {\n          return (\n            extension.extensionId?.toLowerCase() === extensionId?.toLowerCase()\n          );\n        }\n      );\n    };\n\n    defaultAdaptersAndExtensions.forEach(\n      (adapterOrExtension: AdaptersAndExtensionsType | any) => {\n        if (adapterOrExtension?.isExtension) {\n          // Add an extenaion\n\n          const gqlExtension = getExtensionFromGql(\n            adapterOrExtension.extensionId\n          );\n\n          if (gqlExtension) {\n            registeredList.push({\n              ...gqlExtension,\n              ...adapterOrExtension,\n              name: adapterOrExtension.name as DaoAdapterConstants,\n              description: adapterOrExtension.description,\n            } as AdaptersAndExtensionsType);\n          } else {\n            unRegisteredList.push({\n              ...adapterOrExtension,\n              name: adapterOrExtension.name as DaoAdapterConstants,\n              description: adapterOrExtension.description,\n            } as AdaptersAndExtensionsType);\n          }\n        } else if (adapterOrExtension?.options) {\n          // Check options for adapters and extensions\n\n          // dry-run check to see if any of the options have already been registered\n          const maybeSomeAdapters = adapterOrExtension?.options.some(\n            (s: any) => {\n              return !s.isExtension && getAdapterFromGql(s.adapterId);\n            }\n          );\n\n          // dry-run check to see if any of the options have already been registered\n          const maybeSomeExtensions = adapterOrExtension?.options.some(\n            (s: any) => {\n              return s.isExtension && getExtensionFromGql(s.extensionId);\n            }\n          );\n\n          // this means an adapter or extension has already been\n          // added from the options\n          if (maybeSomeAdapters || maybeSomeExtensions) {\n            let shouldSkip = false;\n\n            adapterOrExtension?.options?.forEach((option: any) => {\n              if (shouldSkip) {\n                return;\n              }\n\n              if (option?.isExtension) {\n                const gqlExtension = getExtensionFromGql(option.extensionId);\n\n                if (gqlExtension) {\n                  registeredList.push({\n                    ...gqlExtension,\n                    ...option,\n                    name: option.name as DaoAdapterConstants,\n                    description: option.description,\n                  } as AdaptersAndExtensionsType);\n\n                  shouldSkip = true;\n                  return;\n                } else {\n                  unRegisteredList.push({\n                    ...option,\n                    name: option.name as DaoAdapterConstants,\n                    description: option.description,\n                  } as AdaptersAndExtensionsType);\n                }\n              } else {\n                const gqlAdapter = getAdapterFromGql(option.adapterId);\n                if (gqlAdapter) {\n                  registeredList.push({\n                    ...gqlAdapter,\n                    ...option,\n                    name: option.name as DaoAdapterConstants,\n                    description: option.description,\n                  } as AdaptersAndExtensionsType);\n\n                  shouldSkip = true;\n                  return;\n                } else {\n                  unRegisteredList.push({\n                    ...option,\n                    name: option.name as DaoAdapterConstants,\n                    description: option.description,\n                  } as AdaptersAndExtensionsType);\n                }\n              }\n            });\n          } else {\n            // just add the options as a nested object;\n            // this will trigger the dropdown to display the options\n            unRegisteredList.push(adapterOrExtension);\n          }\n        } else {\n          // Add an adapter\n          const gqlAdapter = getAdapterFromGql(adapterOrExtension.adapterId);\n\n          if (gqlAdapter) {\n            registeredList.push({\n              ...gqlAdapter,\n              ...adapterOrExtension,\n              name: adapterOrExtension.name as DaoAdapterConstants,\n              description: adapterOrExtension.description,\n            } as AdaptersAndExtensionsType);\n          } else {\n            unRegisteredList.push({\n              ...adapterOrExtension,\n              name: adapterOrExtension.name as DaoAdapterConstants,\n              description: adapterOrExtension.description,\n            } as AdaptersAndExtensionsType);\n          }\n        }\n      }\n    );\n\n    return {\n      registeredList,\n      unRegisteredList,\n    };\n  }\n\n  /**\n   * getAdapterOrExtensionFromRedux\n   *\n   * @param adapterOrExtensionName DaoAdapterConstants\n   */\n  function getAdapterOrExtensionFromRedux(\n    adapterOrExtensionName: DaoAdapterConstants | DaoExtensionConstants\n  ): Record<string, any> {\n    return Object.keys(adapterExtensionContracts)\n      .map((ae) => adapterExtensionContracts[ae])\n      .filter((ae) => ae) // filter out any `null` objects\n      .filter((ae) => ae.adapterOrExtensionName === adapterOrExtensionName)[0];\n  }\n\n  return {\n    adapterExtensionStatus,\n    getAdapterOrExtensionFromRedux,\n    registeredAdaptersOrExtensions,\n    unRegisteredAdaptersOrExtensions,\n  };\n}\n","import Web3 from 'web3';\n\nimport {FormFieldErrors} from '../../../util/enums';\nimport {useIsDefaultChain} from '../../web3/hooks';\n\ntype ValidationType =\n  | 'address'\n  | 'bytes32'\n  | 'bytes32[]'\n  | 'uint256'\n  | 'uint256[]';\n\nexport type ParamInputType = string | string[] | number | number[];\n\nexport enum ParamType {\n  ADDRESS = 'address',\n  BYTES32 = 'bytes32',\n  BYTES32_ARRAY = 'bytes32[]',\n  UINT256 = 'uint256',\n  UINT256_ARRAY = 'uint256[]',\n}\n\ntype UseValidationReturn = {\n  isParamInputValid: (\n    paramInput: ParamInputType,\n    paramType: ValidationType\n  ) => boolean;\n  getFormFieldError: (paramType: ValidationType) => string | FormFieldErrors;\n  formatInputByType: (inputValue: any, inputType: ParamType) => string;\n};\n\n/**\n * useValidation\n *\n * This hook validates the input values for the ABI parameters.\n *\n * @returns {UseValidationReturn}\n */\nexport function useValidation(): UseValidationReturn {\n  /**\n   * Hooks\n   */\n  const {defaultChain} = useIsDefaultChain();\n\n  function isParamInputValid(\n    paramInput: ParamInputType,\n    paramType: ValidationType\n  ): boolean {\n    const parameter: string = paramInput.toString();\n\n    const isValid: boolean =\n      paramType === ParamType.ADDRESS\n        ? isAddressValid(parameter)\n        : paramType === ParamType.BYTES32\n        ? isBytes32Valid(parameter)\n        : paramType === ParamType.BYTES32_ARRAY\n        ? isBytes32ArrayValid(parameter)\n        : paramType === ParamType.UINT256\n        ? isUint256Valid(parameter)\n        : paramType === ParamType.UINT256_ARRAY\n        ? isUint256ArrayValid(parameter)\n        : true;\n\n    return isValid;\n  }\n\n  function getFormFieldError(\n    paramType: ValidationType\n  ): string | FormFieldErrors {\n    return paramType === ParamType.ADDRESS\n      ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n      : paramType === ParamType.BYTES32\n      ? FormFieldErrors.INVALID_BYTES32\n      : paramType === ParamType.BYTES32_ARRAY\n      ? FormFieldErrors.INVALID_BYTES32_ARRAY\n      : paramType === ParamType.UINT256\n      ? FormFieldErrors.INVALID_NUMBER\n      : paramType === ParamType.UINT256_ARRAY\n      ? FormFieldErrors.INVALID_NUMBER_ARRAY\n      : FormFieldErrors.REQUIRED;\n  }\n\n  /**\n   * isAddressValid()\n   *\n   * @returns boolean\n   * @param parameter string\n   */\n  function isAddressValid(parameter: string): boolean {\n    try {\n      if (!parameter) return false;\n\n      return (\n        Web3.utils.checkAddressChecksum(parameter, defaultChain) ||\n        Web3.utils.isAddress(parameter, defaultChain)\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * isBytes32Valid()\n   *\n   * @returns boolean\n   * @param parameter string\n   */\n  function isBytes32Valid(parameter: string): boolean {\n    try {\n      if (!parameter) return false;\n\n      return parameter.length === 66 && Web3.utils.isHex(parameter);\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * isBytes32ArrayValid()\n   *\n   * @returns boolean\n   * @param parameter string\n   */\n  function isBytes32ArrayValid(parameter: string): boolean {\n    try {\n      return Array.from(parameter.split(',')).every(\n        (p) => p.length === 66 && Web3.utils.isHex(p)\n      );\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * isUint256Valid\n   *\n   * @returns boolean\n   * @param parameter string\n   */\n  function isUint256Valid(parameter: string): boolean {\n    return !isNaN(Number(parameter));\n  }\n\n  /**\n   * isUint256ArrayValid()\n   *\n   * @returns boolean\n   * @param parameter string\n   */\n  function isUint256ArrayValid(parameter: string): boolean {\n    return Array.from(parameter.split(',')).every((p) => Number(p));\n  }\n\n  function formatInputByType(inputValue: any, inputType: any) {\n    const formatBytes32Array = (): string[] =>\n      Array.from(inputValue.split(','));\n    const formatUint256Array = (): number[] => {\n      return Array.from(inputValue.split(',').map((i: string) => Number(i)));\n    };\n\n    return inputType === ParamType.BYTES32_ARRAY\n      ? formatBytes32Array()\n      : inputType === ParamType.UINT256_ARRAY\n      ? formatUint256Array()\n      : inputType === ParamType.UINT256\n      ? Number(inputValue)\n      : inputValue;\n  }\n\n  return {\n    isParamInputValid,\n    getFormFieldError,\n    formatInputByType,\n  };\n}\n","import React, {useState} from 'react';\n\nimport {DaoAdapterConstants, DaoExtensionConstants} from './enums';\n\ntype AdapterExtensionTarget =\n  | DaoAdapterConstants\n  | DaoExtensionConstants\n  | null;\n\ntype AdapterExtensionSelectTargetRenderActionsArgs = {\n  selectedTargetOption: AdapterExtensionTarget;\n  selectedTargetOptionProps: any;\n};\n\ntype AdapterExtensionSelectTargetProps = {\n  defaultTarget?: AdapterExtensionTarget;\n  adapterOrExtension: Record<string, any>;\n  renderActions: (\n    a: AdapterExtensionSelectTargetRenderActionsArgs\n  ) => JSX.Element | null;\n  renderCheckboxAction: (a: {\n    selectedTargetOption: AdapterExtensionTarget;\n  }) => JSX.Element | null;\n};\n\n/**\n * AdapterExtensionSelectTarget\n *\n * Displays a drop-down confirm list with options to\n * choose to from the defined list of options in `./config.ts`\n\n *\n * @param {AdapterExtensionSelectTargetProps} props\n * @returns {JSX.Element}\n */\nexport default function AdapterExtensionSelectTarget(\n  props: AdapterExtensionSelectTargetProps\n) {\n  const {\n    adapterOrExtension,\n    defaultTarget,\n    renderActions,\n    renderCheckboxAction,\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [selectedTargetOption, setSelectedTargetOption] =\n    useState<AdapterExtensionTarget>(defaultTarget || null);\n\n  const [selectedTargetOptionProps, setSelectedTargetOptionProps] =\n    useState<any>({});\n\n  /**\n   * Functions\n   */\n\n  function handleSelectTargetChange(\n    event: React.ChangeEvent<HTMLSelectElement>\n  ) {\n    const {value} = event.target;\n\n    setSelectedTargetOption(value as AdapterExtensionTarget);\n\n    const selectedTargetProps: string = adapterOrExtension?.options.find(\n      (selectedOption: any) => selectedOption.displayName === value\n    );\n\n    setSelectedTargetOptionProps(selectedTargetProps);\n  }\n\n  function renderDescription(\n    selectedTargetOption: DaoAdapterConstants | DaoExtensionConstants | null\n  ) {\n    if (!selectedTargetOption) return null;\n\n    try {\n      const description: string =\n        adapterOrExtension?.options.find(\n          (selectedOption: any) =>\n            selectedOption.displayName === selectedTargetOption\n        ).description || '';\n\n      return <span className=\"adapter-extension__desc\">{description}</span>;\n    } catch (error) {\n      console.warn(error);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"adapter-extension__inner-wrapper \">\n        {/* CHECKBOX ACTIONS */}\n        {renderCheckboxAction({selectedTargetOption})}\n\n        <div className=\"adapter-extension__info\">\n          {/* ADAPTER/EXTENSION TARGET DEFAULT NAME */}\n          <span className=\"adapter-extension__name\">\n            {adapterOrExtension?.optionDefaultTarget}\n            {adapterOrExtension?.isExtension && '(EXTENSION)'}\n          </span>\n\n          {/* CHOOSE ADAPTER/EXTENSION TARGET */}\n          <select className=\"select\" onChange={handleSelectTargetChange}>\n            <option\n              key={'adapterOrExtensionSelect'}\n              value=\"\"\n              disabled={selectedTargetOption !== null}>\n              Select a {adapterOrExtension?.optionDefaultTarget} type&hellip;\n            </option>\n\n            {adapterOrExtension?.options.map((option: any) => (\n              <option key={option.displayName} value={option.displayName}>\n                {option.displayName.toUpperCase()}\n              </option>\n            ))}\n          </select>\n\n          {renderDescription(selectedTargetOption)}\n        </div>\n      </div>\n\n      {/* BUTTON ACTIONS */}\n      {renderActions({selectedTargetOption, selectedTargetOptionProps})}\n    </>\n  );\n}\n","import React, {Fragment} from 'react';\n\ninterface IProps {\n  checked: boolean;\n  id: string;\n  label: string;\n  name: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\ntype OtherProps = {[key: string]: any; size?: CheckboxSize};\n\nexport enum CheckboxSize {\n  LARGE = 'large',\n  SMALL = 'small',\n}\n\nexport default function Checkbox({size, ...props}: IProps & OtherProps) {\n  return (\n    <Fragment>\n      <input\n        {...props}\n        aria-checked={props.checked}\n        checked={props.checked}\n        className={`checkbox-input ${props.className || ''} `}\n        id={props.id}\n        name={props.name}\n        onChange={props.onChange}\n        type=\"checkbox\"\n      />\n\n      <label className={`checkbox-label`} htmlFor={props.id}>\n        <span className={`checkbox-box ${size || CheckboxSize.SMALL}`}></span>\n        <span className={`checkbox-text`}>{props.label}</span>\n      </label>\n    </Fragment>\n  );\n}\n","import React from 'react';\n\nimport FadeIn from './FadeIn';\n\ntype InputErrorProps = {\n  error: string;\n};\n\nexport default function InputError(\n  props: InputErrorProps & React.HtmlHTMLAttributes<HTMLParagraphElement>\n) {\n  const {error, ...restProps} = props;\n\n  return (\n    <>\n      {error && (\n        <FadeIn>\n          <p\n            {...restProps}\n            className={`error-message ${restProps.className || ''}`}>\n            {error}\n          </p>\n        </FadeIn>\n      )}\n    </>\n  );\n}\n","import {AbiItem} from 'web3-utils/types';\nimport {useForm} from 'react-hook-form';\nimport {useSelector} from 'react-redux';\nimport {useState} from 'react';\n\nimport {AdaptersOrExtensions} from './types';\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {DaoAdapterConstants} from './enums';\nimport {FormFieldErrors} from '../../util/enums';\nimport {getValidationError} from '../../util/helpers';\nimport {ParamInputType, ParamType} from './hooks/useValidation';\nimport {StoreState} from '../../store/types';\nimport {useAdaptersOrExtensions, useValidation} from './hooks';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport InputError from '../common/InputError';\nimport Loader from '../feedback/Loader';\n\ntype ConfigurationFormProps = {\n  abiConfigurationInputs: Record<string, any> | undefined;\n  abiMethodName: string;\n  adapterOrExtension: Pick<AdaptersOrExtensions, any> | undefined;\n  closeHandler?: () => void;\n};\n\ntype RemoveExtensionArgument = [\n  //`extensionId`\n  string\n];\n\ntype RemoveAdapterArguments = [\n  // `adapterId`\n  string,\n  // set to `BURN_ADDRESS` zero address\n  string,\n  // acl set to `0` - no access/permissions\n  number,\n  // keys\n  [],\n  // values\n  []\n];\n\nexport default function ConfigurationForm({\n  abiConfigurationInputs,\n  abiMethodName,\n  adapterOrExtension,\n  closeHandler,\n}: ConfigurationFormProps) {\n  /**\n   * Selectors\n   */\n  const {DaoRegistryContract} = useSelector(\n    (state: StoreState) => state.contracts\n  );\n\n  /**\n   * State\n   */\n  const [submitError, setSubmitError] = useState<Error>();\n  const [configureAdapterStatus, setConfigureAdapterStatus] =\n    useState<Web3TxStatus>(Web3TxStatus.STANDBY);\n  const [removeStatus, setRemoveStatus] = useState<Web3TxStatus>(\n    Web3TxStatus.STANDBY\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    txError,\n    // txEtherscanURL,\n    txIsPromptOpen,\n    txSend,\n    txStatus,\n  } = useContractSend();\n\n  const {isParamInputValid, getFormFieldError, formatInputByType} =\n    useValidation();\n\n  const {connected, account} = useWeb3Modal();\n  const {getAdapterOrExtensionFromRedux} = useAdaptersOrExtensions();\n  const {average: gasPrice} = useETHGasPrice();\n\n  /**\n   * Their hooks\n   */\n  const form = useForm<Record<string, any>>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n\n  /**\n   * Variables\n   */\n  const {errors, formState, getValues, setValue, register, trigger} = form;\n  const configureAdapterError = submitError || txError;\n  const isConnected = connected && account;\n  const adapterOrExtensionText = adapterOrExtension?.isExtension\n    ? 'extension'\n    : 'adapter';\n\n  /**\n   * @note From the docs: \"Read the formState before render to subscribe the form state through Proxy\"\n   * @see https://react-hook-form.com/api#formState\n   */\n  const {isValid} = formState;\n\n  const isConfigureInProcess =\n    (txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      txStatus === Web3TxStatus.PENDING) &&\n    (configureAdapterStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      configureAdapterStatus === Web3TxStatus.PENDING);\n\n  const isRemoveInProcess =\n    (txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      txStatus === Web3TxStatus.PENDING) &&\n    (removeStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      removeStatus === Web3TxStatus.PENDING);\n\n  const isConfigureDone =\n    txStatus === Web3TxStatus.FULFILLED &&\n    configureAdapterStatus === Web3TxStatus.FULFILLED;\n\n  const isRemoveDone =\n    txStatus === Web3TxStatus.FULFILLED &&\n    removeStatus === Web3TxStatus.FULFILLED;\n\n  const isConfigureInProcessOrDone =\n    (isConfigureInProcess || isConfigureDone) && txIsPromptOpen;\n\n  const isRemoveInProcessOrDone =\n    (isRemoveInProcess || isRemoveDone) && txIsPromptOpen;\n\n  /**\n   * handleRemove()\n   */\n  async function handleRemove(): Promise<void> {\n    if (!DaoRegistryContract) return;\n\n    try {\n      setRemoveStatus(Web3TxStatus.AWAITING_CONFIRM);\n\n      const removeExtensionArgument: RemoveExtensionArgument = [\n        adapterOrExtension?.extensionId,\n      ];\n\n      const removeAdapterArguments: RemoveAdapterArguments = [\n        adapterOrExtension?.adapterId,\n        BURN_ADDRESS,\n        0,\n        [],\n        [],\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call to `removeExtension` or `replaceAdapter`\n      await txSend(\n        adapterOrExtension?.isExtension ? 'removeExtension' : 'replaceAdapter',\n        DaoRegistryContract.instance.methods,\n        adapterOrExtension?.isExtension\n          ? removeExtensionArgument\n          : removeAdapterArguments,\n        txArguments\n      );\n\n      setRemoveStatus(Web3TxStatus.FULFILLED);\n\n      // Close modal\n      closeHandler &&\n        setTimeout(() => {\n          closeHandler();\n          // @todo Display closing modal message\n        }, 3000);\n    } catch (error) {\n      setSubmitError(error);\n      setRemoveStatus(Web3TxStatus.REJECTED);\n    }\n  }\n\n  /**\n   * handleSubmit()\n   * @param values\n   */\n  async function handleSubmit(values: Record<string, any>) {\n    try {\n      setConfigureAdapterStatus(Web3TxStatus.PENDING);\n\n      const {\n        contractAddress,\n        instance: {methods},\n      } = getAdapterOrExtensionFromRedux(\n        adapterOrExtension?.name as DaoAdapterConstants\n      );\n\n      if (!isConnected) {\n        throw new Error(\n          'No user account was found. Please make sure your wallet is connected.'\n        );\n      }\n\n      if (!contractAddress) {\n        throw new Error(`No ${adapterOrExtension?.name} contract found.`);\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      let adapterConfigArguments: Array<ParamInputType> = [];\n      // construct method arguments\n      abiConfigurationInputs?.forEach((abiInput: AbiItem) => {\n        const inputValue = Object.entries(values).find(\n          (v: any) => v[0] === abiInput.name\n        );\n\n        if (inputValue) {\n          const formattedValue: ParamInputType = formatInputByType(\n            inputValue[1] as ParamInputType,\n            abiInput.type as ParamType\n          );\n\n          adapterConfigArguments.push(formattedValue);\n        }\n      });\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      setConfigureAdapterStatus(Web3TxStatus.AWAITING_CONFIRM);\n\n      // Execute contract call\n      await txSend(abiMethodName, methods, adapterConfigArguments, txArguments);\n\n      setConfigureAdapterStatus(Web3TxStatus.FULFILLED);\n    } catch (error) {\n      // Set any errors from Web3 utils or explicitly set above.\n      setSubmitError(error);\n      setConfigureAdapterStatus(Web3TxStatus.REJECTED);\n    }\n  }\n\n  return (\n    <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n      {/* INPUT PARAMETERS */}\n      {abiConfigurationInputs &&\n        abiConfigurationInputs.map((input: Record<string, any>) => (\n          <div className=\"form__input-row\" key={input.name}>\n            <label className=\"form__input-row-label\">{input.name}</label>\n            <div className=\"form__input-row-fieldwrap\">\n              <input\n                aria-describedby={`error-${input.name}`}\n                aria-invalid={errors[input.name] ? 'true' : 'false'}\n                name={input.name}\n                placeholder={input.type}\n                type=\"text\"\n                onChange={() =>\n                  setValue(input.name[0], getValues()[input.name])\n                }\n                ref={register({\n                  validate: (value: string): string | boolean => {\n                    return value === ''\n                      ? FormFieldErrors.REQUIRED\n                      : isParamInputValid(value, input.type)\n                      ? true\n                      : getFormFieldError(input.type);\n                  },\n                })}\n                disabled={isConfigureInProcessOrDone}\n              />\n\n              <InputError\n                error={getValidationError(input.name, errors)}\n                id={`error-${input.name}`}\n              />\n            </div>\n          </div>\n        ))}\n\n      {/* SUBMIT */}\n      <button\n        className=\"button\"\n        disabled={isConfigureInProcessOrDone || isRemoveInProcessOrDone}\n        onClick={() => {\n          if (isConfigureInProcessOrDone) return;\n\n          if (!isValid) {\n            trigger();\n            return;\n          }\n\n          handleSubmit(getValues());\n        }}\n        type=\"submit\">\n        {isConfigureInProcess ? (\n          <Loader />\n        ) : isConfigureDone ? (\n          'Done'\n        ) : (\n          'Submit'\n        )}\n      </button>\n\n      {/* SUBMIT ERROR */}\n      {configureAdapterError && (\n        <div className=\"form__submit-error-container\">\n          <ErrorMessageWithDetails\n            renderText=\"Something went wrong while submitting the adapter configuration.\"\n            error={configureAdapterError}\n          />\n        </div>\n      )}\n\n      {/** REMOVE EXTENSION BUTTON - @todo only show if DAO isn't finalized */}\n      <div className=\"adapter-extension__remove\">\n        <p>\n          Delete this {adapterOrExtensionText}. Once you delete this{' '}\n          {adapterOrExtensionText}, it can be re-added if the DAO isn't\n          finalized.\n        </p>\n        <button\n          className=\"button--secondary\"\n          disabled={isRemoveInProcessOrDone || isConfigureInProcessOrDone}\n          onClick={() => (isRemoveDone ? {} : handleRemove())}>\n          {isRemoveInProcess ? <Loader /> : isRemoveDone ? 'Done' : 'Remove'}\n        </button>\n      </div>\n    </form>\n  );\n}\n","import {AdaptersOrExtensions} from './types';\nimport ConfigurationForm from './ConfigurationForm';\nimport Modal from '../common/Modal';\n\nimport TimesSVG from '../../assets/svg/TimesSVG';\n\ntype ConfigurationModalProps = {\n  abiMethodName: string;\n  adapterOrExtension: AdaptersOrExtensions | undefined;\n  configurationInputs: Record<string, any> | undefined;\n  isOpen: boolean;\n  closeHandler: () => void;\n};\n\nexport default function ConfigurationModal({\n  abiMethodName,\n  adapterOrExtension,\n  configurationInputs,\n  isOpen,\n  closeHandler,\n}: ConfigurationModalProps) {\n  return (\n    <Modal\n      keyProp=\"adapter-extension-configuration\"\n      modalClassNames=\"adapter-extension-configure-modal\"\n      isOpen={isOpen}\n      isOpenHandler={() => {\n        closeHandler();\n      }}>\n      {/* MODEL CLOSE BUTTON */}\n      <>\n        <span\n          className=\"modal__close-button\"\n          onClick={() => {\n            closeHandler();\n          }}>\n          <TimesSVG />\n        </span>\n\n        <h1>{adapterOrExtension?.name.toUpperCase()}</h1>\n        <p>{adapterOrExtension?.description}</p>\n\n        <ConfigurationForm\n          abiConfigurationInputs={configurationInputs}\n          abiMethodName={abiMethodName}\n          adapterOrExtension={adapterOrExtension as AdaptersOrExtensions}\n          closeHandler={closeHandler}\n        />\n      </>\n    </Modal>\n  );\n}\n","import {useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {CycleEllipsis} from '../feedback';\nimport {StoreState} from '../../store/types';\nimport {truncateEthAddress} from '../../util/helpers';\nimport {TX_CYCLE_MESSAGES} from '../web3/config';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {useDao} from '../../hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport CycleMessage from '../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../web3/EtherscanURL';\nimport FadeIn from '../common/FadeIn';\nimport Loader from '../feedback/Loader';\nimport Modal from '../common/Modal';\nimport TimesSVG from '../../assets/svg/TimesSVG';\n\ntype FinalizeModalProps = {\n  isOpen: boolean;\n  closeHandler: () => void;\n};\n\nexport default function FinalizeModal({\n  isOpen,\n  closeHandler,\n}: FinalizeModalProps) {\n  /**\n   * State\n   */\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Selectors\n   */\n  const {DaoRegistryContract} = useSelector(\n    (state: StoreState) => state.contracts\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {txError, txEtherscanURL, txIsPromptOpen, txSend, txStatus} =\n    useContractSend();\n\n  const {dao} = useDao();\n  const {connected, account} = useWeb3Modal();\n  const {average: gasPrice} = useETHGasPrice();\n\n  /**\n   * Variables\n   */\n\n  const TIMEOUT_INTERVAL = 3000;\n  const isConnected = connected && account;\n\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n\n  const isDone = txStatus === Web3TxStatus.FULFILLED;\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n  const finalizeError = submitError || txError;\n\n  function renderSubmitStatus(): React.ReactNode {\n    // Only for chain tx\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Awaiting your confirmation\n            <CycleEllipsis />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>{'Finalized!'}</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  function configureExtensions() {\n    // @todo if any adapters have the `setAclToExtensionForAdapter` flag set we need to call\n    //  `configureExtension(\n    //     DaoRegistry dao,\n    //     address extension,\n    //     Adapter[] calldata adapters\n    // )` to set the permission for those adapters for the bank before finalizing the DAO\n    /**\n     * STEPS\n     * - get all added adapters from the subgraph\n     * - check the `setAclToExtensionForAdapter` flag against the added adpaters\n     * - set the permission for any adapters that are required\n     */\n  }\n\n  async function finalizeDao(): Promise<void> {\n    try {\n      if (!isConnected) {\n        throw new Error(\n          'No user account was found. Please make sure your wallet is connected.'\n        );\n      }\n\n      if (!DaoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      // @todo set permissions for adapters\n      configureExtensions();\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `finalizeDao`\n      await txSend(\n        'finalizeDao',\n        DaoRegistryContract.instance.methods,\n        [],\n        txArguments\n      );\n\n      // Close modal\n      closeHandler &&\n        setTimeout(() => {\n          closeHandler();\n        }, TIMEOUT_INTERVAL);\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  return (\n    <Modal\n      keyProp=\"adapter-extension-finalize\"\n      isOpen={isOpen}\n      isOpenHandler={() => {\n        closeHandler();\n      }}>\n      {/* MODEL CLOSE BUTTON */}\n      <>\n        <span\n          className=\"modal__close-button\"\n          onClick={() => {\n            closeHandler();\n          }}>\n          <TimesSVG />\n        </span>\n\n        <h1>Finalize</h1>\n        <h2>\n          {dao && dao.name}{' '}\n          <small>{dao && truncateEthAddress(dao.daoAddress, 7)}</small>\n        </h2>\n        <p>\n          After your DAO is finalized you will need to submit a proposal to make\n          changes.\n        </p>\n\n        {/* SUBMIT */}\n        <button\n          className=\"button\"\n          disabled={isInProcessOrDone}\n          onClick={() => {\n            if (isInProcessOrDone) return;\n\n            finalizeDao();\n          }}\n          type=\"submit\">\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {finalizeError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while trying to finalize the DAO.\"\n              error={finalizeError}\n            />\n          </div>\n        )}\n      </>\n    </Modal>\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {\n  defaultAdaptersAndExtensions,\n  AdaptersAndExtensionsType,\n} from './config';\nimport {\n  useAdaptersOrExtensions,\n  useInitAdapterExtensionContracts,\n} from './hooks';\nimport {\n  AddAdapterArguments,\n  AddAdaptersArguments,\n  AddExtensionArguments,\n  AdaptersOrExtensions,\n} from './types';\nimport {\n  useContractSend,\n  useWeb3Modal,\n  useIsDefaultChain,\n  useETHGasPrice,\n} from '../web3/hooks';\nimport {AsyncStatus} from '../../util/types';\nimport {DaoAdapterConstants, DaoExtensionConstants} from './enums';\nimport {getAdapterOrExtensionId, getAccessControlLayer} from './helpers';\nimport {getDaoState, DaoState} from '../web3/helpers';\nimport {StoreState} from '../../store/types';\nimport {truncateEthAddress} from '../../util/helpers';\nimport {useDao, useMemberActionDisabled} from '../../hooks';\nimport AdapterExtensionSelectTarget from './AdapterOrExtensionSelectTarget';\nimport Checkbox, {CheckboxSize} from '../common/Checkbox';\nimport ConfigurationModal from './ConfigurationModal';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport FadeIn from '../common/FadeIn';\nimport FinalizeModal from './FinalizeModal';\nimport Loader from '../feedback/Loader';\nimport Wrap from '../common/Wrap';\n\nenum WhyDisableModalTitles {\n  FINALIZED_REASON = 'Why is finalizing disabled?',\n  CONFIGURATION_REASON = 'Why are configurations disabled?',\n}\n\n/**\n * AdapterOrExtensionManager()\n *\n * This components lists all the registered and unregistered adapters/extensions\n * from the list of available adapters in the `defaultAdaptersAndExtensions` in `./config.ts`\n *\n * It allows for adding unreigsterd adapters and extensions, configurating\n * registered adapters and extensions, and finalizing the DAO.\n *\n * @note it is not possible to manage the adapters/extensions if the DAO is finalized.\n */\nexport default function AdapterOrExtensionManager() {\n  /**\n   * Selectors\n   */\n  const {DaoRegistryContract, DaoFactoryContract} = useSelector(\n    (s: StoreState) => s.contracts\n  );\n  const isActiveMember = useSelector(\n    (s: StoreState) => s.connectedMember?.isActiveMember\n  );\n\n  /**\n   * States\n   */\n  const [abiMethodName, setABIMethodName] = useState<string>('');\n  const [daoState, setDaoState] = useState<DaoState>();\n  const [isDone, setIsDone] = useState<Record<string, boolean> | undefined>();\n  const [inputParameters, setInputParameters] = useState<Record<string, any>>();\n  const [submitError, setSubmitError] = useState<Error>();\n  const [openConfigureModal, setOpenConfigureModal] = useState<boolean>(false);\n  const [openFinalizeModal, setOpenFinalizeModal] = useState<boolean>(false);\n  const [selectAll, setSelectAll] = useState<boolean>(false);\n  const [selectionCount, setSelectionCount] = useState<number>(0);\n  const [selections, setSelections] = useState<\n    Record<string, boolean> | undefined\n  >();\n  const [configureAdapterOrExtension, setConfigureAdapterOrExtension] =\n    useState<AdaptersOrExtensions | undefined>();\n  const [isInProcess, setIsInProcess] = useState<\n    Record<string, boolean> | undefined\n  >();\n  const [whyDisabledReason, setWhyDisabledReason] = useState<\n    WhyDisableModalTitles | undefined\n  >();\n\n  /**\n   * Our hooks\n   */\n\n  const {defaultChainError} = useIsDefaultChain();\n  const {connected, account, web3Instance} = useWeb3Modal();\n  const {dao, gqlError} = useDao();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {\n    adapterExtensionStatus,\n    getAdapterOrExtensionFromRedux,\n    registeredAdaptersOrExtensions,\n    unRegisteredAdaptersOrExtensions,\n  } = useAdaptersOrExtensions();\n\n  const {initAdapterExtensionContract} = useInitAdapterExtensionContracts();\n\n  const {txSend} = useContractSend();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    setOtherDisabledReasons,\n    WhyDisabledModal,\n  } = useMemberActionDisabled();\n\n  /**\n   * Variables\n   */\n\n  const isConnected = connected && account;\n  const isDAOExisting: Record<string, any> | undefined = dao;\n  const isDAOReady: boolean = daoState === DaoState.READY;\n\n  const isUnavailable: boolean =\n    adapterExtensionStatus === AsyncStatus.REJECTED &&\n    registeredAdaptersOrExtensions === undefined &&\n    unRegisteredAdaptersOrExtensions === undefined;\n\n  const isLoading: boolean = adapterExtensionStatus === AsyncStatus.PENDING;\n  const nothingToAdd = unRegisteredAdaptersOrExtensions?.length === 0;\n  // @todo track the prior selection of a dropdown target\n  // let priorSelectedTargetOption: DaoAdapterConstants | null = null;\n\n  /**\n   * Cached callbacks\n   */\n  const checkDaoStateCached = useCallback(checkDaoState, [\n    DaoRegistryContract,\n    dao?.name,\n    setOtherDisabledReasons,\n  ]);\n\n  /**\n   * Effects\n   */\n  // Check the Dao state\n  useEffect(() => {\n    checkDaoStateCached();\n  }, [checkDaoStateCached, DaoRegistryContract]);\n\n  useEffect(() => {\n    // Set the select all check to false by default\n    setSelectAll(false);\n\n    if (!unRegisteredAdaptersOrExtensions) return;\n\n    /**\n     * @note Select all functionality is for adding adapters only.\n     * Extensions must be added separately.\n     *\n     * Sets the initial checkbox selections for non-registered adapters to `false`\n     * and sets the `Select All` checkbox to disabled if no adapters are available\n     */\n    unRegisteredAdaptersOrExtensions &&\n      unRegisteredAdaptersOrExtensions?.forEach(\n        (adapterOrExtension: Record<string, any>) => {\n          // only add a selection if it doesn't have nested `options`\n          // and if it's not an extension\n          !adapterOrExtension?.options &&\n            !adapterOrExtension.isExtension &&\n            setSelections((prevState: Record<string, boolean> | undefined) => ({\n              ...prevState,\n              [adapterOrExtension.name]: false,\n            }));\n        }\n      );\n  }, [isDisabled, unRegisteredAdaptersOrExtensions]);\n\n  // Updates checkbox selection counter when user selects a checkbox\n  useEffect(() => {\n    selections &&\n      setSelectionCount(\n        Object.values(selections).filter((adapter: boolean) => adapter === true)\n          .length\n      );\n  }, [selections]);\n\n  /**\n   * Functions\n   */\n  async function checkDaoState() {\n    if (!DaoRegistryContract) {\n      return;\n    }\n\n    try {\n      const finalizedMessage = `${dao?.name} is already finalized`;\n\n      const daoRegistryState = await getDaoState(DaoRegistryContract.instance);\n\n      setDaoState(daoRegistryState);\n\n      daoRegistryState === DaoState.READY &&\n        setOtherDisabledReasons([finalizedMessage]);\n    } catch (error) {\n      setDaoState(undefined);\n    }\n  }\n\n  /**\n   * handleAddAdapter\n   *\n   * Handles adding an `adapter`\n   *\n   * @param adapter\n   */\n  function handleAddAdapter(adapter: Record<string, any>): void {\n    const adapterOrExtensionAddress = new Promise<any>((resolve, reject) => {\n      try {\n        // Get contract address\n        const {contractAddress} = getAdapterOrExtensionFromRedux(\n          adapter.name as DaoAdapterConstants\n        );\n\n        resolve(contractAddress);\n      } catch (error) {\n        // try and get the default contract address from the arg `adapter`\n        const contractAddress = adapter.contractAddress;\n\n        if (contractAddress) {\n          resolve(contractAddress);\n        } else {\n          reject(error);\n        }\n      }\n    });\n\n    adapterOrExtensionAddress\n      .then((contractAddress: string) => {\n        addAdapterOrExtension(contractAddress, adapter.name, 'ADAPTER');\n      })\n      .catch((error) => {\n        console.warn(\n          `Dao adapter contract not found, try adding the default \"${adapter.name}\" contract`\n        );\n      });\n  }\n\n  /**\n   * handleAddExtension\n   *\n   * Handle adding an `extension`\n   * @param extension\n   */\n  function handleAddExtension(extension: any): void {\n    const adapterOrExtensionAddress = new Promise<any>((resolve, reject) => {\n      try {\n        // Get contract address\n        const {contractAddress} = getAdapterOrExtensionFromRedux(\n          extension.name as DaoExtensionConstants\n        );\n\n        resolve(contractAddress);\n      } catch (error) {\n        // try and get the default contract address\n        // from the arg `adapter` or  `extension`\n        const contractAddress = extension.contractAddress;\n\n        if (contractAddress) {\n          resolve(contractAddress);\n        } else {\n          reject(error);\n        }\n      }\n    });\n\n    adapterOrExtensionAddress\n      .then((contractAddress: string) => {\n        addAdapterOrExtension(contractAddress, extension.name, 'EXTENSION');\n      })\n      .catch((error) => {\n        console.warn(\n          `Dao extension contract not found, try adding the default \"${extension.name}\" contract`,\n          error\n        );\n      });\n  }\n\n  async function addAdapterOrExtension(\n    adapterOrExtensionAddress: string,\n    adapterOrExtensionName: DaoAdapterConstants | DaoExtensionConstants,\n    adapterOrExtensionType: 'ADAPTER' | 'EXTENSION'\n  ): Promise<void> {\n    setSubmitError(undefined);\n\n    if (!DaoRegistryContract) {\n      throw new Error('No DAO Registry contract was found.');\n    }\n\n    if (!web3Instance) {\n      throw new Error('No Web3 instance was found.');\n    }\n\n    try {\n      setIsInProcess((prevState) => ({\n        ...prevState,\n        [adapterOrExtensionName]: true,\n      }));\n\n      if (!adapterOrExtensionAddress) {\n        throw new Error(`${adapterOrExtensionType} address must not be empty`);\n      }\n\n      // 1. Get the bytes32 hash of the adapter name\n      const adapterOrExtensionId = getAdapterOrExtensionId(\n        adapterOrExtensionName\n      );\n\n      // 2. Get adapters access control layer (acl)\n      // these are the functions the adapter will have access to\n      const {acl} = getAccessControlLayer(adapterOrExtensionName);\n\n      // 3. Contract the function arguments base of its type\n      const addAdapterOrExtensionArguments:\n        | AddAdapterArguments\n        | AddExtensionArguments =\n        adapterOrExtensionType === 'ADAPTER'\n          ? ([\n              adapterOrExtensionId,\n              adapterOrExtensionAddress,\n              acl,\n              [],\n              [],\n            ] as AddAdapterArguments)\n          : ([\n              adapterOrExtensionId,\n              adapterOrExtensionAddress,\n              account,\n            ] as AddExtensionArguments);\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      const txSendMethod =\n        adapterOrExtensionType === 'ADAPTER'\n          ? 'replaceAdapter'\n          : 'addExtension';\n\n      // Execute contract call for `addAdapter` or `addExtension`\n      await txSend(\n        txSendMethod,\n        DaoRegistryContract.instance.methods,\n        addAdapterOrExtensionArguments,\n        txArguments\n      );\n\n      setIsInProcess((prevState) => ({\n        ...prevState,\n        [adapterOrExtensionName]: false,\n      }));\n      setIsDone((prevState) => ({\n        ...prevState,\n        [adapterOrExtensionName]: true,\n      }));\n\n      // init adapter/extension contracts\n      initAdapterExtensionContract(adapterOrExtensionName, web3Instance);\n    } catch (error) {\n      setIsInProcess((prevState) => ({\n        ...prevState,\n        [adapterOrExtensionName]: false,\n      }));\n\n      const errorMessage = new Error(\n        error && error?.code === 4001\n          ? error.message\n          : `Unable to add ${adapterOrExtensionName} ${adapterOrExtensionType}; ${error}`\n      );\n      setSubmitError(errorMessage);\n    }\n  }\n\n  /**\n   * handleAddSelectedAdapters()\n   *\n   * This function only adds adapters, not extensions\n   */\n  async function handleAddSelectedAdapters(): Promise<void> {\n    setSubmitError(undefined);\n\n    if (!DaoFactoryContract) {\n      throw new Error('DaoFactoryContract not found');\n    }\n\n    if (!web3Instance) {\n      throw new Error('No Web3 instance was found.');\n    }\n\n    try {\n      let adaptersArguments: AddAdaptersArguments[] = [];\n\n      // Set the `Add` button states to true for all selected adapters\n      for (const adapterName in selections) {\n        if (selections[adapterName]) {\n          // Get adapterOrExtensionId from `defaultAdaptersAndExtensions`\n          const {adapterId, contractAddress}: AdaptersAndExtensionsType =\n            defaultAdaptersAndExtensions.filter(\n              (a: AdaptersAndExtensionsType) => a.name === adapterName\n            )[0];\n\n          let adapterContractAddress = contractAddress;\n\n          if (!adapterContractAddress) {\n            // Get adapter contract address from redux\n            let contractAddressFromRedux = getAdapterOrExtensionFromRedux(\n              adapterName as DaoAdapterConstants\n            );\n\n            adapterContractAddress = contractAddressFromRedux?.contractAddress;\n          }\n\n          // Get adapters access control layer (acl)\n          // these are the functions the adapter will have access to\n          const {acl} = getAccessControlLayer(adapterName);\n\n          // skip if `adapterId` or `adapterContractAddress` are undefined\n          if (adapterId && adapterContractAddress) {\n            adaptersArguments.push([\n              adapterId,\n              adapterContractAddress,\n              acl,\n            ] as AddAdaptersArguments);\n\n            setIsInProcess((prevState) => ({\n              ...prevState,\n              [adapterName]: true,\n            }));\n          }\n        }\n      }\n\n      const addAdaptersArguments: [string, AddAdaptersArguments[]] = [\n        dao?.daoAddress,\n        adaptersArguments,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `addAdapters`\n      await txSend(\n        'addAdapters',\n        DaoFactoryContract.instance.methods,\n        addAdaptersArguments,\n        txArguments\n      );\n\n      // init adapter contracts to the store for all added adapters\n      for (const adapterName in selections) {\n        if (selections[adapterName]) {\n          adapterName &&\n            initAdapterExtensionContract(\n              adapterName as DaoAdapterConstants,\n              web3Instance\n            );\n        }\n      }\n    } catch (error) {\n      const errorMessage = new Error(\n        error && error?.code === 4001\n          ? error.message\n          : `Unable to add adapters; ${error}`\n      );\n      setSubmitError(errorMessage);\n\n      // reset all the checkboxes for the selected adapters\n      checkboxesSelection(false);\n      // reset all the buttons for the selected adapters\n      for (const adapterName in selections) {\n        setIsInProcess((prevState) => ({\n          ...prevState,\n          [adapterName]: false,\n        }));\n      }\n    }\n  }\n\n  /**\n   * configureAdapter\n   *\n   * @param adapter\n   */\n  async function handleConfigure(\n    adapterOrExtension: AdaptersOrExtensions\n  ): Promise<void> {\n    setSubmitError(undefined);\n\n    try {\n      const {abiFunctionName, name} = adapterOrExtension;\n\n      if (!abiFunctionName) {\n        throw new Error(`ABI function not found for ${name}`);\n      }\n\n      // Get adapters/extension ABI\n      const {abi} = getAdapterOrExtensionFromRedux(name);\n      // Get adapters/extension configure function input parameters\n      const {inputs} = abi.filter(\n        (p: Record<string, any>) => p.name === abiFunctionName\n      )[0];\n\n      setABIMethodName(abiFunctionName);\n      setConfigureAdapterOrExtension(adapterOrExtension);\n      setInputParameters(inputs);\n      setOpenConfigureModal(true);\n    } catch (error) {\n      const errorMessage = new Error(\n        error && error?.code === 4001\n          ? error.message\n          : `${adapterOrExtension.name} contract not found`\n      );\n      setSubmitError(errorMessage);\n    }\n  }\n\n  // Handles the select all checkbox event\n  function handleOnChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    checkboxesSelection(event.target.checked);\n  }\n\n  function checkboxesSelection(checked: boolean): void {\n    // Update the select all checkbox\n    setSelectAll(checked);\n\n    // Update all un-registered adapters only\n    for (const key in selections) {\n      setSelections((s) => ({\n        ...s,\n        [key]: checked,\n      }));\n    }\n  }\n\n  function handleSelectTargetChange({event, selectedTargetOption}: any): void {\n    // @todo Remove previously selected target if its from an `options` list\n    // update the prior selected target to track the change\n    // so we can remove the old target from checkbox `selections`\n\n    setSelections((s) => ({\n      ...s,\n      [selectedTargetOption]: event.target.checked,\n    }));\n  }\n\n  function renderDaoName() {\n    if (!dao && gqlError) {\n      window.scrollTo({\n        top: 0,\n        left: 200,\n        behavior: 'smooth',\n      });\n\n      return (\n        <ErrorMessageWithDetails\n          error={gqlError}\n          renderText=\"Something went wrong\"\n        />\n      );\n    }\n\n    if (dao) {\n      return (\n        <h3>\n          {dao.name} <small>{truncateEthAddress(dao.daoAddress, 7)}</small>\n        </h3>\n      );\n    }\n  }\n\n  function renderErrorMessage() {\n    if (submitError) {\n      window.scrollTo({\n        top: 0,\n        left: 200,\n        behavior: 'smooth',\n      });\n\n      return (\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n      );\n    } else {\n      return <></>;\n    }\n  }\n\n  function getUnauthorizedMessage() {\n    // user is not connected\n    if (!isConnected) {\n      return 'Connect your wallet to manage the DAO adapters and extensions.';\n    }\n\n    // user is on wrong network\n    if (defaultChainError) {\n      return defaultChainError.message;\n    }\n\n    // user is not an active member\n    if (!isActiveMember) {\n      return 'Either you are not a member, or your membership is not active.';\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // Render unauthorized message\n  if (!isConnected || !isActiveMember || defaultChainError) {\n    return (\n      <RenderWrapper>\n        <div className=\"adapter-extension__unauthorized-message\">\n          <p>{getUnauthorizedMessage()}</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  /* @todo\n   * disable when selection is processing\n   * disable when there are no more unused adapters to select\n   */\n  return (\n    <RenderWrapper>\n      <div className=\"adaptermanager\">\n        {renderDaoName()}\n        {renderErrorMessage()}\n        <p>\n          Nulla aliquet porttitor venenatis. Donec a dui et dui fringilla\n          consectetur id nec massa. Aliquam erat volutpat. Sed ut dui ut lacus\n          dictum fermentum vel tincidunt neque. Sed sed lacinia...\n        </p>\n        <div className=\"adapter-extension__selection\">\n          <div>\n            <Checkbox\n              data-testid=\"selectall\"\n              role=\"checkbox\"\n              id=\"selectall\"\n              label={`${selectionCount} selected`}\n              checked={selectAll === true}\n              disabled={\n                isDisabled || // connected user is not an active member\n                isUnavailable ||\n                nothingToAdd || // nothing left to register\n                !isDAOExisting\n              }\n              name=\"selectall\"\n              size={CheckboxSize.LARGE}\n              onChange={handleOnChange}\n            />\n          </div>\n          <div>\n            <button\n              className=\"button--secondary\"\n              disabled={selectionCount === 0 || isDisabled}\n              onClick={handleAddSelectedAdapters}>\n              Add selected\n            </button>\n          </div>\n        </div>\n\n        {isLoading && (\n          <div className=\"adapter-extension__loader\">\n            <Loader text=\"Loading data from subgraph...\" />\n          </div>\n        )}\n        {isUnavailable && <p>No adapters/extensions available</p>}\n\n        {/** UNUSED ADAPTERS AND EXTENSIONS TO ADD */}\n        {isDAOExisting &&\n          unRegisteredAdaptersOrExtensions &&\n          unRegisteredAdaptersOrExtensions?.length > 0 &&\n          unRegisteredAdaptersOrExtensions.map(\n            (adapterOrExtension: Record<string, any>, idx: number) => (\n              <div className=\"adapter-extension__grid unregistered\" key={idx}>\n                {/** RENDER ADAPTER/EXTENSION DROPDOWN */}\n                {adapterOrExtension?.options ? (\n                  <AdapterExtensionSelectTarget\n                    adapterOrExtension={adapterOrExtension}\n                    renderCheckboxAction={({selectedTargetOption}) => {\n                      return (\n                        <>\n                          <div className=\"adapter-extension__checkbox\">\n                            <Checkbox\n                              id={selectedTargetOption || 'empty'}\n                              label={''}\n                              checked={\n                                (selectedTargetOption &&\n                                  selections &&\n                                  selections[selectedTargetOption] === true) ||\n                                false\n                              }\n                              disabled={\n                                isDisabled ||\n                                selectedTargetOption === null ||\n                                adapterOrExtension?.isExtension\n                              }\n                              name={selectedTargetOption || ''}\n                              size={CheckboxSize.LARGE}\n                              onChange={(event) => {\n                                selectedTargetOption &&\n                                  handleSelectTargetChange({\n                                    event,\n                                    selectedTargetOption,\n                                  });\n                              }}\n                            />\n                          </div>\n                        </>\n                      );\n                    }}\n                    renderActions={({\n                      selectedTargetOption,\n                      selectedTargetOptionProps,\n                    }) => {\n                      return (\n                        <>\n                          <div className=\"adapter-extension__add\">\n                            <button\n                              className=\"button--secondary\"\n                              disabled={\n                                selectedTargetOption === null ||\n                                (isInProcess &&\n                                  isInProcess[\n                                    selectedTargetOptionProps.name\n                                  ]) ||\n                                isDisabled\n                              }\n                              onClick={() =>\n                                selectedTargetOptionProps?.isExtension\n                                  ? handleAddExtension(\n                                      selectedTargetOptionProps\n                                    )\n                                  : handleAddAdapter(selectedTargetOptionProps)\n                              }>\n                              {isInProcess &&\n                              isInProcess[selectedTargetOptionProps.name] ? (\n                                <Loader />\n                              ) : isDone &&\n                                isDone[selectedTargetOptionProps.name] ? (\n                                'Done'\n                              ) : (\n                                'Add'\n                              )}\n                            </button>\n                          </div>\n                        </>\n                      );\n                    }}\n                  />\n                ) : (\n                  <>\n                    {/** RENDER ADAPTER/EXTENSION */}\n                    <div className=\"adapter-extension__inner-wrapper \">\n                      <div className=\"adapter-extension__checkbox\">\n                        {!adapterOrExtension?.isExtension && (\n                          <Checkbox\n                            id={adapterOrExtension.name}\n                            label={''}\n                            checked={\n                              (selections &&\n                                selections[adapterOrExtension.name] === true) ||\n                              false\n                            }\n                            disabled={isDisabled}\n                            name={adapterOrExtension.name}\n                            size={CheckboxSize.LARGE}\n                            onChange={(event) => {\n                              setSelections((s) => ({\n                                ...s,\n                                [adapterOrExtension.name]: event.target.checked,\n                              }));\n                            }}\n                          />\n                        )}\n                      </div>\n\n                      <div className=\"adapter-extension__info\">\n                        <span className=\"adapter-extension__name\">\n                          {adapterOrExtension.name}{' '}\n                          {adapterOrExtension?.isExtension && '(EXTENSION)'}\n                        </span>\n                        <span className=\"adapter-extension__desc\">\n                          {adapterOrExtension.description}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"adapter-extension__add\">\n                      <button\n                        className=\"button--secondary\"\n                        disabled={\n                          (isInProcess &&\n                            isInProcess[adapterOrExtension.name]) ||\n                          (isDone && isDone[adapterOrExtension.name]) ||\n                          isDisabled\n                        }\n                        onClick={() =>\n                          adapterOrExtension?.isExtension\n                            ? handleAddExtension(adapterOrExtension)\n                            : handleAddAdapter(adapterOrExtension)\n                        }>\n                        {isInProcess && isInProcess[adapterOrExtension.name] ? (\n                          <Loader />\n                        ) : isDone && isDone[adapterOrExtension.name] ? (\n                          'Done'\n                        ) : (\n                          'Add'\n                        )}\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          )}\n\n        {/** USED ADAPTERS/EXTENSIONS TO CONFIGURE OR REMOVE */}\n        {isDAOExisting &&\n          registeredAdaptersOrExtensions &&\n          registeredAdaptersOrExtensions?.length > 0 &&\n          registeredAdaptersOrExtensions.map(\n            (adapterOrExtension: Record<string, any>, idx: number) => (\n              <div\n                className=\"adapter-extension__grid registered\"\n                key={`${adapterOrExtension.id}-${idx}`}>\n                <div className=\"adapter-extension__info\">\n                  <span className=\"adapter-extension__name\">\n                    {adapterOrExtension.name}{' '}\n                    {adapterOrExtension?.isExtension && '(EXTENSION)'}\n                  </span>\n                  <span className=\"adapter-extension__desc\">\n                    {adapterOrExtension.description}\n                  </span>\n                </div>\n\n                <div className=\"adapter-extension__configure\">\n                  <button\n                    className=\"button--secondary\"\n                    disabled={isDisabled || adapterOrExtension?.isExtension}\n                    onClick={() =>\n                      handleConfigure(\n                        adapterOrExtension as AdaptersOrExtensions\n                      )\n                    }>\n                    Configure\n                  </button>\n                </div>\n              </div>\n            )\n          )}\n\n        {isDisabled && (\n          <div>\n            <button\n              className=\"button--help\"\n              onClick={() => {\n                openWhyDisabledModal();\n                setWhyDisabledReason(\n                  WhyDisableModalTitles.CONFIGURATION_REASON\n                );\n              }}>\n              {WhyDisableModalTitles.CONFIGURATION_REASON}\n            </button>\n          </div>\n        )}\n\n        <div className=\"adapter-adapter-extension__finalize\">\n          <p>\n            If you're happy with your setup, you can finalize your DAO. After\n            your DAO is finalized you will need to submit a proposal to make\n            changes.\n          </p>\n          <div>\n            <button\n              data-testid=\"finalizedao\"\n              className=\"button--secondary finalize\"\n              disabled={\n                isUnavailable || !isDAOExisting || isDAOReady\n                /* @todo \n              - also disable when selection is processing \n              - when there are no more unused adapters to select\n              */\n              }\n              onClick={() => setOpenFinalizeModal(true)}>\n              Finalize Dao\n            </button>\n          </div>\n\n          {isDisabled && (\n            <div>\n              <button\n                className=\"button--help\"\n                onClick={() => {\n                  openWhyDisabledModal();\n\n                  setWhyDisabledReason(WhyDisableModalTitles.FINALIZED_REASON);\n                }}>\n                {WhyDisableModalTitles.FINALIZED_REASON}\n              </button>\n            </div>\n          )}\n\n          <WhyDisabledModal title={whyDisabledReason} />\n        </div>\n\n        {openConfigureModal && (\n          <ConfigurationModal\n            abiMethodName={abiMethodName}\n            adapterOrExtension={configureAdapterOrExtension}\n            configurationInputs={inputParameters}\n            isOpen={openConfigureModal}\n            closeHandler={() => {\n              setOpenConfigureModal(false);\n            }}\n          />\n        )}\n\n        {openFinalizeModal && (\n          <FinalizeModal\n            isOpen={openFinalizeModal}\n            closeHandler={() => {\n              setOpenFinalizeModal(false);\n\n              // check the state of the dao\n              checkDaoStateCached();\n            }}\n          />\n        )}\n      </div>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Adapter/Extension Manager</h2>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import React, {ReactNode} from 'react';\n\ninterface WrapProps {\n  children: ReactNode;\n  className?: string;\n}\n\nconst Wrap = ({\n  children,\n  ...rest\n}: WrapProps & React.HTMLAttributes<HTMLDivElement>) => (\n  <div style={{position: 'relative'}} {...rest}>\n    {children}\n  </div>\n);\n\nexport default Wrap;\n","import {useDispatch} from 'react-redux';\nimport Web3 from 'web3';\n\nimport {\n  initContractBankAdapter,\n  initContractConfiguration,\n  initContractCouponOnboarding,\n  initContractDaoRegistryAdapter,\n  initContractDistribute,\n  initContractERC20Extension,\n  initContractFinancing,\n  initContractGuildKick,\n  initContractManaging,\n  initContractNFTAdapter,\n  initContractNFTExtension,\n  initContractOnboarding,\n  initContractRagequit,\n  initContractTribute,\n  initContractTributeNFT,\n  initRegisteredVotingAdapter,\n} from '../../../store/actions';\n\nimport {DaoAdapterConstants, DaoExtensionConstants} from '../enums';\nimport {ReduxDispatch} from '../../../store/types';\n\ntype UseInitAdapterExtensionContractsReturn = {\n  initAdapterExtensionContract: (\n    adapterExtensionName: DaoAdapterConstants | DaoExtensionConstants,\n    web3Instance: Web3\n  ) => void;\n};\n\nexport function useInitAdapterExtensionContracts(): UseInitAdapterExtensionContractsReturn {\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Functions\n   */\n\n  async function initAdapterExtensionContract(\n    adapterExtensionName: DaoAdapterConstants | DaoExtensionConstants,\n    web3Instance: Web3\n  ) {\n    switch (adapterExtensionName) {\n      case DaoAdapterConstants.CONFIGURATION:\n        await dispatch(initContractConfiguration(web3Instance));\n        break;\n      case DaoAdapterConstants.FINANCING:\n        await dispatch(initContractFinancing(web3Instance));\n        break;\n      case DaoAdapterConstants.GUILDKICK:\n        await dispatch(initContractGuildKick(web3Instance));\n        break;\n      case DaoAdapterConstants.MANAGING:\n        await dispatch(initContractManaging(web3Instance));\n        break;\n      case DaoAdapterConstants.RAGEQUIT:\n        await dispatch(initContractRagequit(web3Instance));\n        break;\n      case DaoAdapterConstants.BANK:\n        await dispatch(initContractBankAdapter(web3Instance));\n        break;\n      case DaoExtensionConstants.NFT:\n        await dispatch(initContractNFTExtension(web3Instance));\n        break;\n      case DaoAdapterConstants.ONBOARDING:\n        await dispatch(initContractOnboarding(web3Instance));\n        break;\n      case DaoAdapterConstants.TRIBUTE:\n        await dispatch(initContractTribute(web3Instance));\n        break;\n      case DaoAdapterConstants.DISTRIBUTE:\n        await dispatch(initContractDistribute(web3Instance));\n        break;\n      case DaoAdapterConstants.VOTING:\n        await dispatch(initRegisteredVotingAdapter(web3Instance));\n        break;\n      case DaoAdapterConstants.COUPON_ONBOARDING:\n        await dispatch(initContractCouponOnboarding(web3Instance));\n        break;\n      case DaoAdapterConstants.TRIBUTE_NFT:\n        await dispatch(initContractTributeNFT(web3Instance));\n        break;\n      case DaoAdapterConstants.NFT:\n        await dispatch(initContractNFTAdapter(web3Instance));\n        break;\n      case DaoAdapterConstants.DAO_REGISTRY:\n        await dispatch(initContractDaoRegistryAdapter(web3Instance));\n        break;\n      case DaoExtensionConstants.ERC20:\n        await dispatch(initContractERC20Extension(web3Instance));\n        break;\n    }\n  }\n\n  return {\n    initAdapterExtensionContract,\n  };\n}\n","import React, {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router';\nimport {useSelector} from 'react-redux';\nimport {SnapshotType} from '@openlaw/snapshot-js-erc712';\n\nimport {CycleEllipsis} from '../../components/feedback';\nimport {FormFieldErrors} from '../../util/enums';\nimport {getValidationError} from '../../util/helpers';\nimport {SnapshotMetadataType} from '../../components/proposals/types';\nimport {StoreState} from '../../store/types';\nimport {useSignAndSubmitProposal} from '../../components/proposals/hooks';\nimport {useWeb3Modal, useIsDefaultChain} from '../../components/web3/hooks';\nimport {Web3TxStatus} from '../../components/web3/types';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport InputError from '../../components/common/InputError';\nimport Loader from '../../components/feedback/Loader';\nimport PreviewInputMarkdown from '../../components/common/PreviewInputMarkdown';\nimport Wrap from '../../components/common/Wrap';\n\nenum Fields {\n  title = 'title',\n  description = 'description',\n}\n\ntype FormInputs = {\n  title: string;\n  description: string;\n};\n\nexport default function CreateGovernanceProposal() {\n  /**\n   * Selectors\n   */\n\n  const isActiveMember = useSelector(\n    (s: StoreState) => s.connectedMember?.isActiveMember\n  );\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Our hooks\n   */\n\n  const {connected, account} = useWeb3Modal();\n  const {proposalSignAndSendStatus, signAndSendProposal} =\n    useSignAndSubmitProposal<SnapshotType.proposal>();\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Their hooks\n   */\n\n  const form = useForm<FormInputs>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n  const history = useHistory();\n\n  /**\n   * Variables\n   */\n\n  const {errors, getValues, register, trigger, watch} = form;\n  const isConnected = connected && account;\n  const isInProcess =\n    proposalSignAndSendStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    proposalSignAndSendStatus === Web3TxStatus.PENDING;\n\n  const isDone = proposalSignAndSendStatus === Web3TxStatus.FULFILLED;\n  const isInProcessOrDone = isInProcess || isDone;\n\n  /**\n   * Functions\n   */\n\n  function getUnauthorizedMessage() {\n    // user is not connected\n    if (!isConnected) {\n      return 'Connect your wallet to submit a governance proposal.';\n    }\n\n    // user is on wrong network\n    if (defaultChainError) {\n      return defaultChainError.message;\n    }\n\n    // user is not an active member\n    if (!isActiveMember) {\n      return 'Either you are not a member, or your membership is not active.';\n    }\n  }\n\n  async function handleSubmit(values: FormInputs) {\n    try {\n      // Sign and submit proposal for Snapshot Hub\n      const {uniqueId} = await signAndSendProposal({\n        partialProposalData: {\n          name: values.title,\n          body: values.description,\n          metadata: {\n            type: SnapshotMetadataType.Governance,\n          },\n        },\n        type: SnapshotType.proposal,\n      });\n\n      // Go to newly creatd governance proposal's page\n      history.push(`/governance/${uniqueId}`);\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    switch (proposalSignAndSendStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Awaiting your confirmation\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            Submitting\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return 'Done!';\n      default:\n        return '';\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // Render unauthorized message\n  if (!isConnected || !isActiveMember || defaultChainError) {\n    return (\n      <RenderWrapper>\n        <div className=\"form__description--unauthorized\">\n          <p>{getUnauthorizedMessage()}</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n        {/* PROPOSAL TITLE */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\" htmlFor={Fields.title}>\n            Title\n          </label>\n          <div className=\"form__input-row-fieldwrap\">\n            <input\n              aria-describedby={`error-${Fields.title}`}\n              aria-invalid={errors.title ? 'true' : 'false'}\n              id={Fields.title}\n              name={Fields.title}\n              ref={register({\n                required: FormFieldErrors.REQUIRED,\n              })}\n              type=\"text\"\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.title, errors)}\n              id={`error-${Fields.title}`}\n            />\n          </div>\n        </div>\n\n        {/* PROPOSAL DESCRIPTION */}\n        <div className=\"form__textarea-row\">\n          <label className=\"form__input-row-label\" htmlFor={Fields.description}>\n            Description\n          </label>\n          <div className=\"form__input-row-fieldwrap\">\n            <textarea\n              aria-describedby={`error-${Fields.description}`}\n              aria-invalid={errors.description ? 'true' : 'false'}\n              id={Fields.description}\n              name={Fields.description}\n              placeholder=\"Say something about your governance proposal...\"\n              ref={register({\n                required: FormFieldErrors.REQUIRED,\n              })}\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.description, errors)}\n              id={`error-${Fields.description}`}\n            />\n\n            <PreviewInputMarkdown value={watch(Fields.description)} />\n          </div>\n        </div>\n\n        {/* SUBMIT */}\n        <button\n          aria-label={isInProcess ? 'Submitting your proposal...' : ''}\n          className=\"button\"\n          disabled={isInProcessOrDone}\n          onClick={async () => {\n            if (isInProcessOrDone) return;\n\n            if (!(await trigger())) {\n              return;\n            }\n\n            handleSubmit(getValues());\n          }}\n          type=\"submit\">\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {submitError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while submitting the proposal.\"\n              error={submitError}\n            />\n          </div>\n        )}\n      </form>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Governance Proposal</h2>\n        </div>\n\n        <div className=\"form-wrapper\">\n          <div className=\"form__description\">\n            <p>\n              Nulla aliquet porttitor venenatis. Donec a dui et dui fringilla\n              consectetur id nec massa. Aliquam erat volutpat. Sed ut dui ut\n              lacus dictum fermentum vel tincidunt neque. Sed sed lacinia...\n            </p>\n          </div>\n\n          {/* RENDER CHILDREN */}\n          {props.children}\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import Markdown from 'markdown-to-jsx';\n\ntype PreviewInputMarkdownProps = {\n  value: string;\n};\n\nexport default function PreviewInputMarkdown(props: PreviewInputMarkdownProps) {\n  const {value} = props;\n\n  if (!value) return null;\n\n  return (\n    <details>\n      <summary style={{cursor: 'pointer', outline: 'none'}}>\n        <small>Preview Markdown</small>\n      </summary>\n\n      <div style={{marginTop: '1em'}}>\n        <Markdown>{value}</Markdown>\n      </div>\n    </details>\n  );\n}\n","import React, {useState, useCallback, useEffect} from 'react';\nimport {SnapshotType} from '@openlaw/snapshot-js-erc712';\nimport {useForm} from 'react-hook-form';\nimport {toWei, toChecksumAddress} from 'web3-utils';\nimport {useHistory} from 'react-router-dom';\n\nimport {\n  getValidationError,\n  stripFormatNumber,\n  formatNumber,\n  formatDecimal,\n  truncateEthAddress,\n  normalizeString,\n} from '../../util/helpers';\nimport {useIsDefaultChain, useWeb3Modal} from '../../components/web3/hooks';\nimport {ContractAdapterNames, Web3TxStatus} from '../../components/web3/types';\nimport {FormFieldErrors} from '../../util/enums';\nimport {isEthAddressValid} from '../../util/validation';\nimport {AsyncStatus} from '../../util/types';\nimport {UNITS_ADDRESS} from '../../config';\nimport {CycleEllipsis} from '../../components/feedback';\nimport {\n  useCheckApplicant,\n  useSignAndSubmitProposal,\n} from '../../components/proposals/hooks';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport InputError from '../../components/common/InputError';\nimport Loader from '../../components/feedback/Loader';\nimport Wrap from '../../components/common/Wrap';\n\nenum Fields {\n  ethAddress = 'ethAddress',\n  ethAmount = 'ethAmount',\n}\n\ntype FormInputs = {\n  ethAddress: string;\n  ethAmount: string;\n};\n\ntype SubmitActionArguments = [\n  string, // `applicant`\n  string, // `tokenToMint`\n  string // `tokenAmount`\n];\n\nexport default function CreateMembershipProposal() {\n  /**\n   * Our hooks\n   */\n\n  const {defaultChainError} = useIsDefaultChain();\n  const {connected, account, web3Instance} = useWeb3Modal();\n  const {\n    proposalData,\n    proposalSignAndSendError,\n    proposalSignAndSendStatus,\n    signAndSendProposal,\n  } = useSignAndSubmitProposal<SnapshotType.draft>();\n\n  /**\n   * Their hooks\n   */\n\n  const form = useForm<FormInputs>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n  const history = useHistory();\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n  const [userAccountBalance, setUserAccountBalance] = useState<string>();\n\n  /**\n   * Variables\n   */\n\n  const {errors, getValues, setValue, register, trigger, watch} = form;\n\n  const ethAddressValue = watch(Fields.ethAddress);\n\n  const createMemberError = submitError || proposalSignAndSendError;\n  const isConnected = connected && account;\n\n  const isInProcess =\n    proposalSignAndSendStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    proposalSignAndSendStatus === Web3TxStatus.PENDING;\n\n  const isDone = proposalSignAndSendStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone;\n\n  const {\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n  } = useCheckApplicant(ethAddressValue);\n\n  /**\n   * Cached callbacks\n   */\n\n  const getUserAccountBalanceCached = useCallback(getUserAccountBalance, [\n    account,\n    web3Instance,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getUserAccountBalanceCached();\n  }, [getUserAccountBalanceCached]);\n\n  // Set the value of `ethAddress` if the `account` changes\n  useEffect(() => {\n    setValue(Fields.ethAddress, account);\n  }, [account, setValue]);\n\n  /**\n   * Functions\n   */\n\n  async function getUserAccountBalance() {\n    if (!web3Instance || !account) {\n      setUserAccountBalance(undefined);\n      return;\n    }\n\n    try {\n      // Ether wallet balance\n      const accountBalanceInWei = await web3Instance.eth.getBalance(account);\n      setUserAccountBalance(\n        web3Instance.utils.fromWei(accountBalanceInWei, 'ether')\n      );\n    } catch (error) {\n      setUserAccountBalance(undefined);\n    }\n  }\n\n  async function handleSubmit(values: FormInputs) {\n    try {\n      if (!isConnected) {\n        throw new Error(\n          'No user account was found. Please make sure your wallet is connected.'\n        );\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (checkApplicantError) {\n        // Just log the error (don't throw) because it is not a blocker for the\n        // snapshot draft to be submitted. The applicant address validity will\n        // be checked again when the proposal is submitted onchain.\n        console.warn(\n          `Error checking if the applicant address is valid: ${checkApplicantError.message}`\n        );\n      }\n\n      if (\n        checkApplicantStatus === AsyncStatus.FULFILLED &&\n        !isApplicantValid &&\n        checkApplicantInvalidMsg\n      ) {\n        throw new Error(checkApplicantInvalidMsg);\n      }\n\n      // Maybe set proposal ID from previous attempt\n      let proposalId: string = proposalData?.uniqueId || '';\n\n      const {ethAddress, ethAmount} = values;\n      const ethAddressToChecksum = toChecksumAddress(ethAddress);\n      const ethAmountInWei = toWei(stripFormatNumber(ethAmount), 'ether');\n      const proposerAddressToChecksum = toChecksumAddress(account);\n\n      // Values needed to display relevant proposal amounts in the proposal\n      // details page are set in the snapshot draft metadata. (We can no longer\n      // rely on getting this data from onchain because the proposal may not\n      // exist there yet.)\n      const proposalAmountValues = {\n        tributeAmount: ethAmount,\n        tributeAmountUnit: 'ETH',\n      };\n\n      // Arguments needed to submit the proposal onchain are set in the snapshot\n      // draft metadata.\n      const submitActionArgs: SubmitActionArguments = [\n        ethAddressToChecksum,\n        UNITS_ADDRESS,\n        ethAmountInWei,\n      ];\n\n      // Only submit to snapshot if there is not already a proposal ID returned from a previous attempt.\n      if (!proposalId) {\n        const body =\n          normalizeString(ethAddress) === normalizeString(account)\n            ? `Membership for ${truncateEthAddress(ethAddressToChecksum, 7)}.`\n            : `Membership proposal from ${truncateEthAddress(\n                proposerAddressToChecksum,\n                7\n              )} for applicant ${truncateEthAddress(ethAddressToChecksum, 7)}.`;\n\n        // Sign and submit draft for snapshot-hub\n        const {uniqueId} = await signAndSendProposal({\n          partialProposalData: {\n            name: ethAddressToChecksum,\n            body,\n            metadata: {\n              proposalAmountValues,\n              submitActionArgs,\n              accountAuthorizedToProcessPassedProposal:\n                proposerAddressToChecksum,\n            },\n          },\n          adapterName: ContractAdapterNames.onboarding,\n          type: SnapshotType.draft,\n        });\n\n        proposalId = uniqueId;\n      }\n\n      // go to MembershipDetails page for newly created member proposal\n      history.push(`/membership/${proposalId}`);\n    } catch (error) {\n      // Set any errors from Web3 utils or explicitly set above.\n      setSubmitError(error);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    switch (proposalSignAndSendStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Awaiting your confirmation\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            Submitting\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return 'Done!';\n      default:\n        return '';\n    }\n  }\n\n  function renderUserAccountBalance() {\n    if (!userAccountBalance) {\n      return '---';\n    }\n\n    const isBalanceInt = Number.isInteger(Number(userAccountBalance));\n    return isBalanceInt\n      ? userAccountBalance\n      : formatDecimal(Number(userAccountBalance));\n  }\n\n  function getUnauthorizedMessage() {\n    // user is not connected\n    if (!isConnected) {\n      return 'Connect your wallet to submit a membership proposal.';\n    }\n\n    // user is on wrong network\n    if (defaultChainError) {\n      return defaultChainError.message;\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // Render unauthorized message\n  if (!isConnected || defaultChainError) {\n    return (\n      <RenderWrapper>\n        <div className=\"form__description--unauthorized\">\n          <p>{getUnauthorizedMessage()}</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n        {/* ETH ADDRESS */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\" htmlFor={Fields.ethAddress}>\n            Applicant Address\n          </label>\n          <div className=\"form__input-row-fieldwrap\">\n            {/* @note We don't need the default value as it's handled in the useEffect above. */}\n            <input\n              aria-describedby={`error-${Fields.ethAddress}`}\n              aria-invalid={errors.ethAddress ? 'true' : 'false'}\n              id={Fields.ethAddress}\n              name={Fields.ethAddress}\n              ref={register({\n                validate: (ethAddress: string): string | boolean => {\n                  return !ethAddress\n                    ? FormFieldErrors.REQUIRED\n                    : !isEthAddressValid(ethAddress)\n                    ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n                    : true;\n                },\n              })}\n              type=\"text\"\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.ethAddress, errors)}\n              id={`error-${Fields.ethAddress}`}\n            />\n          </div>\n        </div>\n\n        {/* ETH AMOUNT */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\" htmlFor={Fields.ethAmount}>\n            Amount\n          </label>\n          <div className=\"form__input-row-fieldwrap--narrow\">\n            <div className=\"input__suffix-wrap\">\n              <input\n                className=\"input__suffix\"\n                aria-describedby={`error-${Fields.ethAmount}`}\n                aria-invalid={errors.ethAmount ? 'true' : 'false'}\n                id={Fields.ethAmount}\n                name={Fields.ethAmount}\n                onChange={() =>\n                  setValue(\n                    Fields.ethAmount,\n                    formatNumber(getValues().ethAmount)\n                  )\n                }\n                ref={register({\n                  validate: (value: string): string | boolean => {\n                    const amount = Number(stripFormatNumber(value));\n\n                    return value === ''\n                      ? FormFieldErrors.REQUIRED\n                      : isNaN(amount)\n                      ? FormFieldErrors.INVALID_NUMBER\n                      : amount <= 0\n                      ? 'The value must be greater than 0 ETH.'\n                      : amount >= Number(userAccountBalance)\n                      ? 'Insufficient funds.'\n                      : true;\n                  },\n                })}\n                type=\"text\"\n                disabled={isInProcessOrDone}\n              />\n              <div className=\"input__suffix-item\">ETH</div>\n            </div>\n\n            <InputError\n              error={getValidationError(Fields.ethAmount, errors)}\n              id={`error-${Fields.ethAmount}`}\n            />\n          </div>\n          <div className=\"form__input-addon\">\n            available: <span>{renderUserAccountBalance()}</span>\n          </div>\n        </div>\n\n        {/* SUBMIT */}\n        <button\n          aria-label={isInProcess ? 'Submitting your proposal.' : ''}\n          className=\"button\"\n          disabled={isInProcessOrDone}\n          onClick={async () => {\n            if (isInProcessOrDone) return;\n\n            if (!(await trigger())) {\n              return;\n            }\n\n            handleSubmit(getValues());\n          }}\n          type=\"submit\">\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {createMemberError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while submitting the proposal.\"\n              error={createMemberError}\n            />\n          </div>\n        )}\n      </form>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Join</h2>\n        </div>\n\n        <div className=\"form-wrapper\">\n          <div className=\"form__description\">\n            <p>\n              Nulla aliquet porttitor venenatis. Donec a dui et dui fringilla\n              consectetur id nec massa. Aliquam erat volutpat. Sed ut dui ut\n              lacus dictum fermentum vel tincidunt neque. Sed sed lacinia...\n            </p>\n          </div>\n\n          {/* RENDER CHILDREN */}\n          {props.children}\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {\n  SnapshotType,\n  SnapshotProposalData,\n  prepareVoteProposalData,\n} from '@openlaw/snapshot-js-erc712';\nimport {toBN, AbiItem, toWei, toChecksumAddress} from 'web3-utils';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport {useState, useCallback, useEffect} from 'react';\n\nimport {\n  useContractSend,\n  useETHGasPrice,\n  useIsDefaultChain,\n  useWeb3Modal,\n} from '../../components/web3/hooks';\nimport {\n  getValidationError,\n  stripFormatNumber,\n  formatNumber,\n  formatDecimal,\n  truncateEthAddress,\n} from '../../util/helpers';\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {ContractAdapterNames, Web3TxStatus} from '../../components/web3/types';\nimport {default as ERC20ABI} from '../../abis/ERC20.json';\nimport {ETH_TOKEN_ADDRESS, GUILD_ADDRESS, UNITS_ADDRESS} from '../../config';\nimport {FormFieldErrors} from '../../util/enums';\nimport {isEthAddressValid} from '../../util/validation';\nimport {multicall, MulticallTuple} from '../../components/web3/helpers';\nimport {StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES} from '../../components/web3/config';\nimport {useSignAndSubmitProposal} from '../../components/proposals/hooks';\nimport CycleMessage from '../../components/feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport EtherscanURL from '../../components/web3/EtherscanURL';\nimport FadeIn from '../../components/common/FadeIn';\nimport InputError from '../../components/common/InputError';\nimport Loader from '../../components/feedback/Loader';\nimport Wrap from '../../components/common/Wrap';\n\nenum Fields {\n  type = 'type',\n  selectedToken = 'selectedToken',\n  memberAddress = 'memberAddress',\n  amount = 'amount',\n  notes = 'notes',\n}\n\ntype FormInputs = {\n  type: string;\n  selectedToken: string;\n  memberAddress: string;\n  amount: string;\n  notes: string;\n};\n\ntype TransferArguments = [\n  string, // `dao`\n  string, // `proposalId`\n  string, // `unitHolderAddr`\n  string, // `token`\n  string, // `amount`\n  string // `data`\n];\n\ntype InitialTokenDetails = {\n  address: string;\n  daoBalance: string;\n};\n\ntype TokenDetails = InitialTokenDetails & {\n  name: string;\n  symbol: string;\n  decimals: number;\n};\n\nexport default function CreateTransferProposal() {\n  /**\n   * Selectors\n   */\n\n  const DistributeContract = useSelector(\n    (state: StoreState) => state.contracts?.DistributeContract\n  );\n  const DaoRegistryContract = useSelector(\n    (state: StoreState) => state.contracts?.DaoRegistryContract\n  );\n  const BankExtensionContract = useSelector(\n    (state: StoreState) => state.contracts?.BankExtensionContract\n  );\n  const isActiveMember = useSelector(\n    (s: StoreState) => s.connectedMember?.isActiveMember\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {defaultChainError} = useIsDefaultChain();\n  const {connected, account, web3Instance} = useWeb3Modal();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {txError, txEtherscanURL, txIsPromptOpen, txSend, txStatus} =\n    useContractSend();\n\n  const {proposalData, proposalSignAndSendStatus, signAndSendProposal} =\n    useSignAndSubmitProposal<SnapshotType.proposal>();\n\n  /**\n   * Their hooks\n   */\n\n  const form = useForm<FormInputs>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n  const history = useHistory();\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n  const [daoTokens, setDaoTokens] = useState<TokenDetails[]>();\n  const [selectedTokenBalance, setSelectedTokenBalance] = useState<string>();\n\n  /**\n   * Variables\n   */\n\n  const {errors, getValues, setValue, register, trigger, watch} = form;\n  const typeValue = watch('type');\n  const isTypeAllMembers = typeValue === 'all members';\n  const selectedTokenValue = watch('selectedToken');\n\n  const createTransferError = submitError || txError;\n  const isConnected = connected && account;\n  const erc20ABI: AbiItem[] = ERC20ABI as any;\n\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING ||\n    proposalSignAndSendStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    proposalSignAndSendStatus === Web3TxStatus.PENDING;\n\n  const isDone =\n    txStatus === Web3TxStatus.FULFILLED &&\n    proposalSignAndSendStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n\n  /**\n   * Cached callbacks\n   */\n\n  const getDaoTokensCached = useCallback(getDaoTokens, [\n    BankExtensionContract,\n    account,\n    erc20ABI,\n    web3Instance,\n  ]);\n\n  const getSelectedTokenBalanceCached = useCallback(getSelectedTokenBalance, [\n    account,\n    selectedTokenValue,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getDaoTokensCached();\n  }, [getDaoTokensCached]);\n\n  useEffect(() => {\n    getSelectedTokenBalanceCached();\n  }, [getSelectedTokenBalanceCached]);\n\n  /**\n   * Functions\n   */\n\n  async function getDaoTokens() {\n    if (!account || !BankExtensionContract || !web3Instance) {\n      setDaoTokens(undefined);\n      return;\n    }\n\n    try {\n      const {\n        abi: bankABI,\n        contractAddress: bankAddress,\n        instance: {methods: bankMethods},\n      } = BankExtensionContract;\n\n      const nbTokens = await bankMethods.nbTokens().call();\n\n      if (Number(nbTokens) < 1) {\n        setDaoTokens([]);\n      } else {\n        let parsedAndSortedTokens: TokenDetails[] = [];\n\n        // Build calls to get DAO token list with details\n        const getTokenABI = bankABI.find((item) => item.name === 'getToken');\n        const getTokenCalls = [...Array(Number(nbTokens)).keys()].map(\n          (index): MulticallTuple => [\n            bankAddress,\n            getTokenABI as AbiItem,\n            [index.toString()],\n          ]\n        );\n        const fetchedTokens: string[] = await multicall({\n          calls: getTokenCalls,\n          web3Instance,\n        });\n\n        const balanceOfABI = bankABI.find((item) => item.name === 'balanceOf');\n        const getDaoTokenBalanceCalls = fetchedTokens.map(\n          (token): MulticallTuple => [\n            bankAddress,\n            balanceOfABI as AbiItem,\n            [GUILD_ADDRESS, token],\n          ]\n        );\n        const daoTokenBalances: string[] = await multicall({\n          calls: getDaoTokenBalanceCalls,\n          web3Instance,\n        });\n\n        const tokensArray: InitialTokenDetails[] = fetchedTokens\n          .map((token, index) => ({\n            address: token,\n            daoBalance: daoTokenBalances[index],\n          }))\n          // Don't need to include tokens that have 0 balance\n          .filter((tokenObj) => toBN(tokenObj.daoBalance).gt(toBN(0)));\n\n        const ethToken = tokensArray.find(\n          (token) => token.address === ETH_TOKEN_ADDRESS\n        );\n        if (ethToken) {\n          parsedAndSortedTokens.push({\n            ...ethToken,\n            name: 'Ether',\n            symbol: 'ETH',\n            decimals: 18,\n          });\n        }\n\n        // Filter out Ether to handle ERC20 tokens\n        const erc20Tokens = tokensArray.filter(\n          (token) => token.address !== ETH_TOKEN_ADDRESS\n        );\n\n        if (erc20Tokens.length > 0) {\n          const nameABI = erc20ABI.find((item) => item.name === 'name');\n          const nameCalls = erc20Tokens.map(\n            (token): MulticallTuple => [\n              token.address as string,\n              nameABI as AbiItem,\n              [],\n            ]\n          );\n          const symbolABI = erc20ABI.find((item) => item.name === 'symbol');\n          const symbolCalls = erc20Tokens.map(\n            (token): MulticallTuple => [\n              token.address as string,\n              symbolABI as AbiItem,\n              [],\n            ]\n          );\n          const decimalsABI = erc20ABI.find((item) => item.name === 'decimals');\n          const decimalsCalls = erc20Tokens.map(\n            (token): MulticallTuple => [\n              token.address as string,\n              decimalsABI as AbiItem,\n              [],\n            ]\n          );\n          const erc20DetailsCalls = [\n            ...nameCalls,\n            ...symbolCalls,\n            ...decimalsCalls,\n          ];\n          let results = await multicall({\n            calls: erc20DetailsCalls,\n            web3Instance,\n          });\n          let chunkedResults = [];\n          while (results.length) {\n            chunkedResults.push(results.splice(0, erc20Tokens.length));\n          }\n          const [names, symbols, decimals] = chunkedResults;\n\n          const parsedAndSortedERC20Tokens = erc20Tokens\n            .map((token, index) => ({\n              ...token,\n              name: names[index],\n              symbol: symbols[index],\n              decimals: decimals[index],\n            }))\n            .sort((a, b) => a.name.localeCompare(b.name));\n\n          parsedAndSortedTokens = [\n            ...parsedAndSortedTokens,\n            ...parsedAndSortedERC20Tokens,\n          ];\n        }\n\n        setDaoTokens(parsedAndSortedTokens);\n      }\n    } catch (error) {\n      console.error(error);\n      setDaoTokens(undefined);\n    }\n  }\n\n  async function getSelectedTokenBalance() {\n    if (!account || !selectedTokenValue) {\n      setSelectedTokenBalance(undefined);\n      return;\n    }\n\n    try {\n      const selectedTokenObj = JSON.parse(selectedTokenValue);\n      const balance = selectedTokenObj.daoBalance;\n      const balanceBN = toBN(balance);\n      const decimals = selectedTokenObj.decimals;\n      const divisor = toBN(10).pow(toBN(decimals));\n      const beforeDecimal = balanceBN.div(divisor);\n      const afterDecimal = balanceBN.mod(divisor);\n      const balanceReadable = afterDecimal.eq(toBN(0))\n        ? beforeDecimal.toString()\n        : `${beforeDecimal.toString()}.${afterDecimal.toString()}`;\n\n      setSelectedTokenBalance(balanceReadable);\n    } catch (error) {\n      console.error(error);\n      setSelectedTokenBalance(undefined);\n    }\n  }\n\n  async function handleSubmit(values: FormInputs) {\n    try {\n      if (!isConnected) {\n        throw new Error(\n          'No user account was found. Please make sure your wallet is connected.'\n        );\n      }\n\n      if (!DistributeContract) {\n        throw new Error('No DistributeContract found.');\n      }\n\n      if (!DaoRegistryContract) {\n        throw new Error('No DaoRegistryContract found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      const {selectedToken, memberAddress, amount, notes} = values;\n      const memberAddressToChecksum = toChecksumAddress(memberAddress);\n      const selectedTokenObj = JSON.parse(selectedToken);\n      const {symbol, decimals, address: tokenAddress} = selectedTokenObj;\n      let amountArg;\n      if (tokenAddress === ETH_TOKEN_ADDRESS) {\n        amountArg = toWei(stripFormatNumber(amount), 'ether');\n      } else {\n        const multiplier = toBN(10).pow(toBN(decimals));\n        const amountWithDecimals = toBN(stripFormatNumber(amount)).mul(\n          multiplier\n        );\n        amountArg = amountWithDecimals.toString();\n      }\n\n      // Maybe set proposal info from previous attempt\n      let proposalId: string = proposalData?.uniqueId || '';\n      let data: SnapshotProposalData | undefined = proposalData?.data;\n      let signature: string = proposalData?.signature || '';\n\n      const bodyIntro = isTypeAllMembers\n        ? 'Transfer to all members pro rata.'\n        : `Transfer to ${truncateEthAddress(memberAddressToChecksum, 7)}.`;\n\n      // Values needed to display relevant proposal amounts in the proposal\n      // details page are set in the snapshot draft metadata. (We can no longer\n      // rely on getting this data from onchain because the proposal may not\n      // exist there yet.)\n      const proposalAmountValues = {\n        transferAmount: amount,\n        transferAmountUnit: symbol,\n      };\n\n      // Only submit to snapshot if there is not already a proposal ID returned from a previous attempt.\n      if (!proposalId) {\n        const body = notes ? `${bodyIntro}\\n${notes}` : bodyIntro;\n        const name = isTypeAllMembers ? 'All members' : memberAddressToChecksum;\n        const now = Math.floor(Date.now() / 1000);\n\n        // Sign and submit proposal for snapshot-hub\n        const {\n          uniqueId,\n          data: returnData,\n          signature: returnSignature,\n        } = await signAndSendProposal({\n          partialProposalData: {\n            name,\n            body,\n            metadata: {\n              proposalAmountValues,\n              isTypeAllMembers,\n            },\n            timestamp: now.toString(),\n          },\n          adapterName: ContractAdapterNames.distribute,\n          type: SnapshotType.proposal,\n        });\n\n        proposalId = uniqueId;\n        data = returnData;\n        signature = returnSignature;\n      }\n\n      const memberAddressArg = isTypeAllMembers\n        ? BURN_ADDRESS // 0x0 address indicates distribution to all active members\n        : memberAddressToChecksum;\n      /**\n       * Prepare `data` argument for submission to DAO\n       *\n       * For information about which data the smart contract needs for signature verification (e.g. `hashMessage`):\n       * @link https://github.com/openlawteam/tribute-contracts/blob/master/contracts/adapters/voting/OffchainVoting.sol\n       */\n      const preparedVoteVerificationBytes = data\n        ? prepareVoteProposalData(\n            {\n              payload: {\n                name: data.payload.name,\n                body: data.payload.body,\n                choices: data.payload.choices,\n                snapshot: data.payload.snapshot.toString(),\n                start: data.payload.start,\n                end: data.payload.end,\n              },\n              sig: signature,\n              space: data.space,\n              timestamp: parseInt(data.timestamp),\n            },\n            web3Instance\n          )\n        : '';\n\n      const transferArguments: TransferArguments = [\n        DaoRegistryContract.contractAddress,\n        proposalId,\n        memberAddressArg,\n        tokenAddress,\n        amountArg,\n        preparedVoteVerificationBytes,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `submitProposal`\n      await txSend(\n        'submitProposal',\n        DistributeContract.instance.methods,\n        transferArguments,\n        txArguments\n      );\n\n      // go to TransferDetails page for newly created transfer proposal\n      history.push(`/transfers/${proposalId}`);\n    } catch (error) {\n      // Set any errors from Web3 utils or explicitly set above.\n      setSubmitError(error);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    // Either Snapshot or chain tx\n    if (\n      txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n      proposalSignAndSendStatus === Web3TxStatus.AWAITING_CONFIRM\n    ) {\n      return 'Awaiting your confirmation\\u2026';\n    }\n\n    // Only for chain tx\n    switch (txStatus) {\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Proposal submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  function renderSelectedTokenBalance() {\n    if (!selectedTokenBalance) {\n      return '---';\n    }\n\n    const isBalanceInt = Number.isInteger(Number(selectedTokenBalance));\n    return isBalanceInt\n      ? selectedTokenBalance\n      : formatDecimal(Number(selectedTokenBalance));\n  }\n\n  function getUnauthorizedMessage() {\n    // user is not connected\n    if (!isConnected) {\n      return 'Connect your wallet to submit a transfer proposal.';\n    }\n\n    // user is on wrong network\n    if (defaultChainError) {\n      return defaultChainError.message;\n    }\n\n    // user is not an active member\n    if (!isActiveMember) {\n      return 'Either you are not a member, or your membership is not active.';\n    }\n  }\n\n  async function isActiveMemberWithUnits(address: string) {\n    if (!BankExtensionContract) {\n      console.error('No BankExtensionContract found.');\n      return false;\n    }\n\n    const unitsBalance = await BankExtensionContract.instance.methods\n      .balanceOf(address, UNITS_ADDRESS)\n      .call();\n\n    return toBN(unitsBalance).gt(toBN(0));\n  }\n\n  /**\n   * Render\n   */\n\n  // Render unauthorized message\n  if (!isConnected || defaultChainError || !isActiveMember) {\n    return (\n      <RenderWrapper>\n        <div className=\"form__description--unauthorized\">\n          <p>{getUnauthorizedMessage()}</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n        {/* TYPE */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Type</label>\n          <div className=\"form__input-row-fieldwrap\">\n            <select\n              name={Fields.type}\n              ref={register}\n              disabled={isInProcessOrDone}>\n              <option value=\"single member\">Single member</option>\n              <option value=\"all members\">All members</option>\n            </select>\n          </div>\n        </div>\n\n        {/* MEMBER ADDRESS */}\n        {!isTypeAllMembers && (\n          <div className=\"form__input-row\">\n            <label className=\"form__input-row-label\">Member Address</label>\n            <div className=\"form__input-row-fieldwrap\">\n              <input\n                aria-describedby={`error-${Fields.memberAddress}`}\n                aria-invalid={errors.memberAddress ? 'true' : 'false'}\n                name={Fields.memberAddress}\n                ref={register({\n                  validate: async (\n                    memberAddress: string\n                  ): Promise<string | boolean> => {\n                    return !memberAddress\n                      ? FormFieldErrors.REQUIRED\n                      : !isEthAddressValid(memberAddress)\n                      ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n                      : !(await isActiveMemberWithUnits(memberAddress))\n                      ? 'The address is not an active member with membership tokens.'\n                      : true;\n                  },\n                })}\n                type=\"text\"\n                disabled={isInProcessOrDone}\n              />\n\n              <InputError\n                error={getValidationError(Fields.memberAddress, errors)}\n                id={`error-${Fields.memberAddress}`}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* SELECTED TOKEN */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Asset</label>\n          <div className=\"form__input-row-fieldwrap\">\n            <select\n              aria-describedby={`error-${Fields.selectedToken}`}\n              aria-invalid={errors.selectedToken ? 'true' : 'false'}\n              name={Fields.selectedToken}\n              ref={register({\n                validate: (token: string): string | boolean => {\n                  return !daoTokens || daoTokens.length < 1\n                    ? 'No tokens available for distribution.'\n                    : !token\n                    ? FormFieldErrors.REQUIRED\n                    : true;\n                },\n              })}\n              disabled={isInProcessOrDone}>\n              <option value=\"\">Select from DAO assets</option>\n              {daoTokens?.map((token) => (\n                <option\n                  key={token.address}\n                  value={JSON.stringify(\n                    token\n                  )}>{`${token.name} (${token.symbol})`}</option>\n              ))}\n            </select>\n\n            <InputError\n              error={getValidationError(Fields.selectedToken, errors)}\n              id={`error-${Fields.selectedToken}`}\n            />\n          </div>\n        </div>\n\n        {/* AMOUNT */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Amount</label>\n          <div className=\"form__input-row-fieldwrap--narrow\">\n            <div className=\"input__suffix-wrap\">\n              <input\n                className=\"input__suffix\"\n                aria-describedby={`error-${Fields.amount}`}\n                aria-invalid={errors.amount ? 'true' : 'false'}\n                name={Fields.amount}\n                onChange={() =>\n                  setValue(Fields.amount, formatNumber(getValues().amount))\n                }\n                ref={register({\n                  validate: (amount: string): string | boolean => {\n                    const amountToNumber = Number(stripFormatNumber(amount));\n                    const selectedTokenObj =\n                      selectedTokenValue && JSON.parse(selectedTokenValue);\n                    const isSelectedTokenEth =\n                      selectedTokenObj?.address === ETH_TOKEN_ADDRESS;\n\n                    return amount === ''\n                      ? FormFieldErrors.REQUIRED\n                      : isNaN(amountToNumber)\n                      ? FormFieldErrors.INVALID_NUMBER\n                      : amountToNumber <= 0\n                      ? 'The value must be greater than 0.'\n                      : amountToNumber > Number(selectedTokenBalance)\n                      ? 'Insufficient funds.'\n                      : isSelectedTokenEth\n                      ? true\n                      : !Number.isInteger(amountToNumber)\n                      ? 'The value must be an integer for an ERC20 token.'\n                      : true;\n                  },\n                })}\n                type=\"text\"\n                disabled={isInProcessOrDone}\n              />\n\n              <div className=\"input__suffix-item\">\n                {(selectedTokenValue &&\n                  JSON.parse(selectedTokenValue).symbol) ||\n                  '___'}\n              </div>\n            </div>\n\n            <InputError\n              error={getValidationError(Fields.amount, errors)}\n              id={`error-${Fields.amount}`}\n            />\n\n            <div className=\"form__input-description\">\n              {isTypeAllMembers\n                ? \"If the proposal passes, this total amount will be distributed pro rata to all members' internal accounts, based on the current number of membership tokens held by each member.\"\n                : \"If the proposal passes, this amount will be distributed to the member's internal account.\"}\n            </div>\n          </div>\n\n          <div className=\"form__input-addon\">\n            available: <span>{renderSelectedTokenBalance()}</span>\n          </div>\n        </div>\n\n        {/* NOTES */}\n        <div className=\"form__textarea-row\">\n          <label className=\"form__input-row-label\">Notes</label>\n          <div className=\"form__input-row-fieldwrap\">\n            <textarea\n              name={Fields.notes}\n              placeholder=\"Transactions purpose...\"\n              ref={register}\n              disabled={isInProcessOrDone}\n            />\n          </div>\n        </div>\n\n        {/* SUBMIT */}\n        <button\n          className=\"button\"\n          disabled={isInProcessOrDone}\n          onClick={async () => {\n            if (isInProcessOrDone) return;\n\n            if (!(await trigger())) {\n              return;\n            }\n\n            handleSubmit(getValues());\n          }}\n          type=\"submit\">\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {createTransferError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while submitting the proposal.\"\n              error={createTransferError}\n            />\n          </div>\n        )}\n      </form>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Transfer Proposal</h2>\n        </div>\n\n        <div className=\"form-wrapper\">\n          <div className=\"form__description\">\n            <p>\n              Nulla aliquet porttitor venenatis. Donec a dui et dui fringilla\n              consectetur id nec massa. Aliquam erat volutpat. Sed ut dui ut\n              lacus dictum fermentum vel tincidunt neque. Sed sed lacinia...\n            </p>\n          </div>\n\n          {/* RENDER CHILDREN */}\n          {props.children}\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {useState, useCallback, useEffect} from 'react';\nimport {useSelector} from 'react-redux';\nimport {SnapshotType} from '@openlaw/snapshot-js-erc712';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router-dom';\nimport {Contract as Web3Contract} from 'web3-eth-contract/types';\nimport {toBN, AbiItem, toChecksumAddress} from 'web3-utils';\n\nimport {\n  getValidationError,\n  stripFormatNumber,\n  formatNumber,\n  formatDecimal,\n  normalizeString,\n  truncateEthAddress,\n} from '../../util/helpers';\nimport {useIsDefaultChain, useWeb3Modal} from '../../components/web3/hooks';\nimport {ContractAdapterNames, Web3TxStatus} from '../../components/web3/types';\nimport {FormFieldErrors} from '../../util/enums';\nimport {isEthAddressValid} from '../../util/validation';\nimport {AsyncStatus} from '../../util/types';\nimport {UNITS_ADDRESS} from '../../config';\nimport {StoreState} from '../../store/types';\nimport {\n  useCheckApplicant,\n  useSignAndSubmitProposal,\n} from '../../components/proposals/hooks';\nimport {CycleEllipsis} from '../../components/feedback';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport InputError from '../../components/common/InputError';\nimport Loader from '../../components/feedback/Loader';\nimport Wrap from '../../components/common/Wrap';\n\nenum Fields {\n  applicantAddress = 'applicantAddress',\n  erc20Address = 'erc20Address',\n  tributeAmount = 'tributeAmount',\n  requestAmount = 'requestAmount',\n  description = 'description',\n}\n\ntype FormInputs = {\n  applicantAddress: string;\n  erc20Address: string;\n  tributeAmount: string;\n  requestAmount: string;\n  description: string;\n};\n\ntype SubmitActionArguments = [\n  string, // `applicant`\n  string, // `tokenToMint`\n  string, // `requestAmount`\n  string, // `tokenAddr`\n  string, // `tributeAmount`\n  string // `tributeTokenOwner`\n];\n\ntype ERC20Details = {\n  symbol: string;\n  decimals: number;\n};\n\nexport default function CreateTributeProposal() {\n  /**\n   * Selectors\n   */\n\n  const ERC20ExtensionContract = useSelector(\n    (state: StoreState) => state.contracts?.ERC20ExtensionContract\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {defaultChainError} = useIsDefaultChain();\n  const {connected, account, web3Instance} = useWeb3Modal();\n  const {\n    proposalData,\n    proposalSignAndSendError,\n    proposalSignAndSendStatus,\n    signAndSendProposal,\n  } = useSignAndSubmitProposal<SnapshotType.draft>();\n\n  /**\n   * Their hooks\n   */\n\n  const form = useForm<FormInputs>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n  const history = useHistory();\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n  const [userERC20Balance, setUserERC20Balance] = useState<string>();\n  const [erc20Details, setERC20Details] = useState<ERC20Details>();\n  const [erc20Contract, setERC20Contract] = useState<Web3Contract>();\n\n  /**\n   * Variables\n   */\n\n  const {errors, getValues, setValue, register, trigger, watch} = form;\n\n  const erc20AddressValue = watch(Fields.erc20Address);\n\n  const applicantAddressValue = watch(Fields.applicantAddress);\n\n  const createTributeError = submitError || proposalSignAndSendError;\n\n  const isConnected = connected && account;\n\n  const isInProcess =\n    proposalSignAndSendStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    proposalSignAndSendStatus === Web3TxStatus.PENDING;\n\n  const isDone = proposalSignAndSendStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone = isInProcess || isDone;\n\n  const {\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n  } = useCheckApplicant(applicantAddressValue);\n\n  /**\n   * Cached callbacks\n   */\n\n  const getERC20ContractCached = useCallback(getERC20Contract, [\n    erc20AddressValue,\n    web3Instance,\n  ]);\n\n  const getERC20DetailsCached = useCallback(getERC20Details, [\n    account,\n    erc20Contract,\n  ]);\n\n  const getUserERC20BalanceCached = useCallback(getUserERC20Balance, [\n    account,\n    erc20Contract,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getERC20ContractCached();\n  }, [getERC20ContractCached]);\n\n  useEffect(() => {\n    getERC20DetailsCached();\n  }, [getERC20DetailsCached]);\n\n  useEffect(() => {\n    getUserERC20BalanceCached();\n  }, [getUserERC20BalanceCached]);\n\n  // Set the value of `applicantAddress` if the `account` changes\n  useEffect(() => {\n    setValue(Fields.applicantAddress, account);\n  }, [account, setValue]);\n\n  /**\n   * Functions\n   */\n\n  async function getERC20Contract() {\n    if (!web3Instance || !erc20AddressValue) {\n      setERC20Contract(undefined);\n      return;\n    }\n\n    try {\n      const {default: lazyERC20ABI} = await import('../../abis/ERC20.json');\n      const erc20Contract: AbiItem[] = lazyERC20ABI as any;\n      const instance = new web3Instance.eth.Contract(\n        erc20Contract,\n        erc20AddressValue\n      );\n      setERC20Contract(instance);\n    } catch (error) {\n      console.error(error);\n      setERC20Contract(undefined);\n    }\n  }\n\n  async function getERC20Details() {\n    if (!account || !erc20Contract) {\n      setERC20Details(undefined);\n      return;\n    }\n\n    try {\n      const symbol = await erc20Contract.methods.symbol().call();\n      const decimals = await erc20Contract.methods.decimals().call();\n      setERC20Details({symbol, decimals: Number(decimals)});\n    } catch (error) {\n      console.error(error);\n      setERC20Details(undefined);\n    }\n  }\n\n  async function getUserERC20Balance() {\n    if (!account || !erc20Contract) {\n      setUserERC20Balance(undefined);\n      return;\n    }\n\n    try {\n      const balance = await erc20Contract.methods.balanceOf(account).call();\n      const balanceBN = toBN(balance);\n      const decimals = await erc20Contract.methods.decimals().call();\n      const divisor = toBN(10).pow(toBN(decimals));\n      const beforeDecimal = balanceBN.div(divisor);\n      const afterDecimal = balanceBN.mod(divisor);\n      const balanceReadable = afterDecimal.eq(toBN(0))\n        ? beforeDecimal.toString()\n        : `${beforeDecimal.toString()}.${afterDecimal.toString()}`;\n\n      setUserERC20Balance(balanceReadable);\n    } catch (error) {\n      console.error(error);\n      setUserERC20Balance(undefined);\n    }\n  }\n\n  async function getRequestAmountUnit() {\n    if (!ERC20ExtensionContract) {\n      return 'UNITS';\n    } else {\n      try {\n        return await ERC20ExtensionContract.instance.methods.symbol().call();\n      } catch (error) {\n        console.log(error);\n        return 'UNITS';\n      }\n    }\n  }\n\n  async function handleSubmit(values: FormInputs) {\n    try {\n      if (!isConnected) {\n        throw new Error(\n          'No user account was found. Please make sure your wallet is connected.'\n        );\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!erc20Contract) {\n        throw new Error('No ERC20Contract found.');\n      }\n\n      if (!erc20Details) {\n        throw new Error('No ERC20 details found.');\n      }\n\n      if (checkApplicantError) {\n        // Just log the error (don't throw) because it is not a blocker for the\n        // snapshot draft to be submitted. The applicant address validity will\n        // be checked again when the proposal is submitted onchain.\n        console.warn(\n          `Error checking if the applicant address is valid: ${checkApplicantError.message}`\n        );\n      }\n\n      if (\n        checkApplicantStatus === AsyncStatus.FULFILLED &&\n        !isApplicantValid &&\n        checkApplicantInvalidMsg\n      ) {\n        throw new Error(checkApplicantInvalidMsg);\n      }\n\n      const {\n        applicantAddress,\n        erc20Address,\n        tributeAmount,\n        requestAmount,\n        description,\n      } = values;\n      const multiplier = toBN(10).pow(toBN(erc20Details.decimals));\n      const tributeAmountWithDecimals = toBN(\n        stripFormatNumber(tributeAmount)\n      ).mul(multiplier);\n      const requestAmountArg = stripFormatNumber(requestAmount);\n      const applicantAddressToChecksum = toChecksumAddress(applicantAddress);\n      const proposerAddressToChecksum = toChecksumAddress(account);\n\n      // Maybe set proposal ID from previous attempt\n      let proposalId: string = proposalData?.uniqueId || '';\n\n      // Only submit to snapshot if there is not already a proposal ID returned from a previous attempt.\n      if (!proposalId) {\n        const bodyIntro =\n          normalizeString(applicantAddress) === normalizeString(account)\n            ? `Tribute from ${truncateEthAddress(\n                applicantAddressToChecksum,\n                7\n              )}.`\n            : `Tribute from ${truncateEthAddress(\n                proposerAddressToChecksum,\n                7\n              )} for applicant ${truncateEthAddress(\n                applicantAddressToChecksum,\n                7\n              )}.`;\n        const body = description ? `${bodyIntro}\\n${description}` : bodyIntro;\n\n        // Values needed to display relevant proposal amounts in the proposal\n        // details page are set in the snapshot draft metadata. (We can no\n        // longer rely on getting this data from onchain because the proposal\n        // may not exist there yet.)\n        const proposalAmountValues = {\n          requestAmount,\n          requestAmountUnit: await getRequestAmountUnit(),\n          tributeAmount,\n          tributeAmountUnit: erc20Details.symbol,\n        };\n\n        // Arguments needed to submit the proposal onchain are set in the\n        // snapshot draft metadata.\n        const submitActionArgs: SubmitActionArguments = [\n          applicantAddressToChecksum,\n          UNITS_ADDRESS,\n          requestAmountArg,\n          toChecksumAddress(erc20Address),\n          tributeAmountWithDecimals.toString(),\n          proposerAddressToChecksum,\n        ];\n\n        // Sign and submit draft for snapshot-hub\n        const {uniqueId} = await signAndSendProposal({\n          partialProposalData: {\n            name: applicantAddressToChecksum,\n            body,\n            metadata: {\n              proposalAmountValues,\n              submitActionArgs,\n              accountAuthorizedToProcessPassedProposal:\n                proposerAddressToChecksum,\n            },\n          },\n          adapterName: ContractAdapterNames.tribute,\n          type: SnapshotType.draft,\n        });\n\n        proposalId = uniqueId;\n      }\n\n      // go to TributeDetails page for newly created tribute proposal\n      history.push(`/tributes/${proposalId}`);\n    } catch (error) {\n      // Set any errors from Web3 utils or explicitly set above.\n      setSubmitError(error);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    switch (proposalSignAndSendStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Awaiting your confirmation\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            Submitting\n            <CycleEllipsis intervalMs={500} />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return 'Done!';\n      default:\n        return '';\n    }\n  }\n\n  function renderUserERC20Balance() {\n    if (!userERC20Balance) {\n      return '---';\n    }\n\n    const isBalanceInt = Number.isInteger(Number(userERC20Balance));\n    return isBalanceInt\n      ? userERC20Balance\n      : formatDecimal(Number(userERC20Balance));\n  }\n\n  function getUnauthorizedMessage() {\n    // user is not connected\n    if (!isConnected) {\n      return 'Connect your wallet to submit a tribute proposal.';\n    }\n\n    // user is on wrong network\n    if (defaultChainError) {\n      return defaultChainError.message;\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // Render unauthorized message\n  if (!isConnected || defaultChainError) {\n    return (\n      <RenderWrapper>\n        <div className=\"form__description--unauthorized\">\n          <p>{getUnauthorizedMessage()}</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n        {/* APPLICANT ADDRESS */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Applicant Address</label>\n          <div className=\"form__input-row-fieldwrap\">\n            {/* @note We don't need the default value as it's handled in the useEffect above. */}\n            <input\n              aria-describedby={`error-${Fields.applicantAddress}`}\n              aria-invalid={errors.applicantAddress ? 'true' : 'false'}\n              name={Fields.applicantAddress}\n              ref={register({\n                validate: (applicantAddress: string): string | boolean => {\n                  return !applicantAddress\n                    ? FormFieldErrors.REQUIRED\n                    : !isEthAddressValid(applicantAddress)\n                    ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n                    : true;\n                },\n              })}\n              type=\"text\"\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.applicantAddress, errors)}\n              id={`error-${Fields.applicantAddress}`}\n            />\n          </div>\n        </div>\n\n        {/* ERC20 ADDRESS */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">ERC20 Address</label>\n          <div className=\"form__input-row-fieldwrap\">\n            <input\n              aria-describedby={`error-${Fields.erc20Address}`}\n              aria-invalid={errors.erc20Address ? 'true' : 'false'}\n              name={Fields.erc20Address}\n              ref={register({\n                validate: (erc20Address: string): string | boolean => {\n                  return !erc20Address\n                    ? FormFieldErrors.REQUIRED\n                    : !isEthAddressValid(erc20Address)\n                    ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n                    : true;\n                },\n              })}\n              type=\"text\"\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.erc20Address, errors)}\n              id={`error-${Fields.erc20Address}`}\n            />\n          </div>\n        </div>\n\n        {/* TRIBUTE AMOUNT */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Amount</label>\n          <div className=\"form__input-row-fieldwrap--narrow\">\n            <div className=\"input__suffix-wrap\">\n              <input\n                className=\"input__suffix\"\n                aria-describedby={`error-${Fields.tributeAmount}`}\n                aria-invalid={errors.tributeAmount ? 'true' : 'false'}\n                name={Fields.tributeAmount}\n                onChange={() =>\n                  setValue(\n                    Fields.tributeAmount,\n                    formatNumber(getValues().tributeAmount)\n                  )\n                }\n                ref={register({\n                  validate: (tributeAmount: string): string | boolean => {\n                    const amount = Number(stripFormatNumber(tributeAmount));\n\n                    return tributeAmount === ''\n                      ? FormFieldErrors.REQUIRED\n                      : isNaN(amount)\n                      ? FormFieldErrors.INVALID_NUMBER\n                      : amount <= 0\n                      ? 'The value must be greater than 0.'\n                      : amount > Number(userERC20Balance)\n                      ? 'Insufficient funds.'\n                      : !Number.isInteger(amount)\n                      ? 'The value must be an integer for an ERC20 token.'\n                      : true;\n                  },\n                })}\n                type=\"text\"\n                disabled={isInProcessOrDone}\n              />\n\n              <div className=\"input__suffix-item\">\n                {erc20Details?.symbol || '___'}\n              </div>\n            </div>\n\n            <InputError\n              error={getValidationError(Fields.tributeAmount, errors)}\n              id={`error-${Fields.tributeAmount}`}\n            />\n\n            <div className=\"form__input-description\">\n              This amount will be held in escrow pending a member vote. If the\n              proposal passes, the funds will automatically be sent to the DAO.\n              If the proposal fails, the funds will be refunded to you.\n            </div>\n          </div>\n\n          <div className=\"form__input-addon\">\n            available: <span>{renderUserERC20Balance()}</span>\n          </div>\n        </div>\n\n        {/* REQUEST AMOUNT */}\n        <div className=\"form__input-row\">\n          <label className=\"form__input-row-label\">Request Amount</label>\n          <div className=\"form__input-row-fieldwrap--narrow\">\n            <input\n              aria-describedby={`error-${Fields.requestAmount}`}\n              aria-invalid={errors.requestAmount ? 'true' : 'false'}\n              name={Fields.requestAmount}\n              onChange={() =>\n                setValue(\n                  Fields.requestAmount,\n                  formatNumber(getValues().requestAmount)\n                )\n              }\n              ref={register({\n                validate: (requestAmount: string): string | boolean => {\n                  const amount = Number(stripFormatNumber(requestAmount));\n\n                  return requestAmount === ''\n                    ? FormFieldErrors.REQUIRED\n                    : isNaN(amount)\n                    ? FormFieldErrors.INVALID_NUMBER\n                    : amount < 0\n                    ? 'The value must be at least 0.'\n                    : true;\n                },\n              })}\n              type=\"text\"\n              disabled={isInProcessOrDone}\n            />\n\n            <InputError\n              error={getValidationError(Fields.requestAmount, errors)}\n              id={`error-${Fields.requestAmount}`}\n            />\n\n            <div className=\"form__input-description\">\n              This is the amount of DAO membership tokens you are requesting be\n              sent to the Applicant Address in exchange for your tribute.\n            </div>\n          </div>\n        </div>\n\n        {/* DESCRIPTION */}\n        <div className=\"form__textarea-row\">\n          <label className=\"form__input-row-label\">Description</label>\n          <div className=\"form__input-row-fieldwrap\">\n            <textarea\n              name={Fields.description}\n              placeholder=\"Say something about your tribute...\"\n              ref={register}\n              disabled={isInProcessOrDone}\n            />\n          </div>\n        </div>\n\n        {/* SUBMIT */}\n        <button\n          className=\"button\"\n          disabled={isInProcessOrDone}\n          onClick={async () => {\n            if (isInProcessOrDone) return;\n\n            if (!(await trigger())) {\n              return;\n            }\n\n            handleSubmit(getValues());\n          }}\n          type=\"submit\">\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Submit'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {createTributeError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while submitting the proposal.\"\n              error={createTributeError}\n            />\n          </div>\n        )}\n      </form>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Tribute Proposal</h2>\n        </div>\n\n        <div className=\"form-wrapper\">\n          <div className=\"form__description\">\n            <p>\n              Nulla aliquet porttitor venenatis. Donec a dui et dui fringilla\n              consectetur id nec massa. Aliquam erat volutpat. Sed ut dui ut\n              lacus dictum fermentum vel tincidunt neque. Sed sed lacinia...\n            </p>\n          </div>\n\n          {/* RENDER CHILDREN */}\n          {props.children}\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {memo, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport AOS from 'aos';\nimport '../../../node_modules/aos/dist/aos.css';\n\nimport {CenterLogo} from '../../components/logo';\nimport {NavHamburger} from '../../components/Nav';\nimport FadeIn from '../../components/common/FadeIn';\nimport SocialMedia from '../../components/common/SocialMedia';\nimport Wrap from '../../components/common/Wrap';\n\nconst TributeCube = memo(() => {\n  return (\n    <div\n      className=\"cube\"\n      data-testid=\"cube\"\n      data-aos=\"fade-up\"\n      data-aos-delay=\"150\">\n      <div className=\"cube__segment--top\"></div>\n      <div className=\"cube__segment--left\"></div>\n      <div className=\"cube__segment--right\"></div>\n    </div>\n  );\n});\n\nfunction GetStartedHeader() {\n  return (\n    <div data-testid=\"get-started-header\" className=\"landing__header\">\n      <SocialMedia />\n      <NavHamburger />\n    </div>\n  );\n}\n\nexport default function GetStarted() {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    AOS.init({\n      duration: 800,\n      offset: 40,\n      delay: 120,\n      mirror: false,\n      once: true,\n    });\n  }, []);\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <GetStartedHeader />\n      <Wrap className=\"section-wrapper\">\n        <FadeIn>\n          <CenterLogo />\n\n          <div className=\"landing\">\n            <div className=\"landing__subtitle\">\n              A next generation DAO framework\n            </div>\n\n            <div className=\"landing__img\">\n              <TributeCube />\n            </div>\n\n            <div className=\"landing__button\">\n              <button\n                className=\"button\"\n                onClick={() => {\n                  history.push('/join');\n                }}>\n                Join\n              </button>\n            </div>\n          </div>\n        </FadeIn>\n      </Wrap>\n    </>\n  );\n}\n","import {useCallback, useState} from 'react';\n\nimport {\n  OffchainVotingAction,\n  OffchainVotingStatus,\n  OnVotingPeriodChangeProps,\n} from '../proposals/voting';\nimport {ProposalData} from '../proposals/types';\nimport {useOffchainVotingResults} from '../proposals/hooks';\n\ntype GovernanceActionsProps = {\n  proposal: ProposalData;\n};\n\nexport function GovernanceActions(props: GovernanceActionsProps) {\n  const {proposal} = props;\n  const {snapshotProposal} = proposal;\n\n  const votingStartMs: number | undefined =\n    Number(snapshotProposal?.msg.payload.start || 0) * 1000;\n\n  const votingEndMs: number =\n    Number(snapshotProposal?.msg.payload.end || 0) * 1000;\n\n  /**\n   * State\n   */\n\n  const [votingPeriodData, setVotingPeriodData] =\n    useState<OnVotingPeriodChangeProps>({\n      hasVotingStarted: false,\n      hasVotingEnded: false,\n      votingStartEndInitReady: false,\n    });\n\n  /**\n   * Our hooks\n   */\n\n  const {offchainVotingResults} = useOffchainVotingResults(snapshotProposal);\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleOnVotingPeriodChangeCached = useCallback(\n    handleOnVotingPeriodChange,\n    []\n  );\n\n  /**\n   * Variables\n   */\n\n  const votingResult = offchainVotingResults[0]?.[1];\n\n  const {hasVotingEnded, hasVotingStarted, votingStartEndInitReady} =\n    votingPeriodData;\n\n  /**\n   * Functions\n   */\n\n  function handleOnVotingPeriodChange(\n    votingPeriodProps: OnVotingPeriodChangeProps\n  ) {\n    setVotingPeriodData(votingPeriodProps);\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <OffchainVotingStatus\n        countdownVotingEndMs={votingEndMs}\n        countdownVotingStartMs={votingStartMs}\n        onVotingPeriodChange={handleOnVotingPeriodChangeCached}\n        votingResult={votingResult}\n      />\n\n      {votingStartEndInitReady && hasVotingStarted && !hasVotingEnded && (\n        <OffchainVotingAction proposal={proposal} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport Wrap from '../../components/common/Wrap';\nimport FadeIn from '../../components/common/FadeIn';\n\nexport default function NotFound() {\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div style={{textAlign: 'center', fontSize: '5rem'}}>\n          <h3>\n            4\n            <span\n              className=\"pulse\"\n              role=\"img\"\n              aria-label=\"404, not found\"\n              style={{display: 'inline-block'}}>\n              😵\n            </span>\n            4\n          </h3>\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {ProposalData} from './types';\n\nimport {truncateEthAddress} from '../../util/helpers';\nimport Markdown from 'markdown-to-jsx';\n\ntype ProposalDetailsProps = {\n  proposal: ProposalData;\n  /**\n   * A render prop to render amount(s) badge.\n   */\n  renderAmountBadge?: () => React.ReactNode;\n  /**\n   * A render prop to render any action button flows for a proposal.\n   */\n  renderActions: () => React.ReactNode;\n};\n\nexport default function ProposalDetails(props: ProposalDetailsProps) {\n  const {proposal, renderAmountBadge, renderActions} = props;\n\n  const commonData = proposal.getCommonSnapshotProposalData();\n\n  /**\n   * Render\n   */\n\n  if (!commonData) {\n    return null;\n  }\n\n  return (\n    <>\n      <div className=\"proposaldetails__header\">Proposal Details</div>\n      <div className=\"proposaldetails\">\n        {/* PROPOSAL NAME (an address in most cases) AND BODY */}\n        <div className=\"proposaldetails__content\">\n          <h3>\n            {/* @note If the proposal title is not an address it will fall back to a normal, non-truncated string. */}\n            {truncateEthAddress(commonData.msg.payload.name || '', 7)}\n          </h3>\n\n          <Markdown>{commonData.msg.payload.body}</Markdown>\n        </div>\n\n        {/* SIDEBAR */}\n        <div className=\"proposaldetails__status\">\n          {/* AMOUNT(S) IF RELEVANT FOR PROPOSAL */}\n          {renderAmountBadge && renderAmountBadge()}\n\n          {/* SPONSOR & VOTING ACTIONS */}\n          {renderActions()}\n        </div>\n      </div>\n    </>\n  );\n}\n","import {SnapshotType} from '@openlaw/snapshot-js-erc712';\nimport React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {AsyncStatus} from '../../util/types';\nimport {GovernanceActions} from '../../components/governance';\nimport {useIsDefaultChain} from '../../components/web3/hooks';\nimport {useProposalOrDraft} from '../../components/proposals/hooks';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport NotFound from '../subpages/NotFound';\nimport ProposalDetails from '../../components/proposals/ProposalDetails';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function GovernanceProposalDetails() {\n  /**\n   * Their hooks\n   */\n\n  // Get hash for fetching the proposal.\n  const {proposalId} = useParams<{proposalId: string}>();\n\n  /**\n   * Our hooks\n   */\n\n  const {proposalData, proposalError, proposalNotFound, proposalStatus} =\n    useProposalOrDraft(proposalId, SnapshotType.proposal);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const isLoading: boolean = proposalStatus === AsyncStatus.PENDING;\n  const error: Error | undefined = proposalError || defaultChainError;\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render 404 no proposal found\n  if (proposalNotFound) {\n    return (\n      <RenderWrapper>\n        <NotFound />\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong while getting the proposal.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render proposal\n  if (proposalData) {\n    return (\n      <RenderWrapper>\n        <ProposalDetails\n          proposal={proposalData}\n          renderActions={() => <GovernanceActions proposal={proposalData} />}\n        />\n      </RenderWrapper>\n    );\n  }\n\n  // Render nothing. Should never reach this case.\n  return <></>;\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function viewAll(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    history.push('/governance');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Governance</h2>\n\n          <button className=\"titlebar__action\" onClick={viewAll}>\n            View all\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {Link, useHistory} from 'react-router-dom';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC';\n\nimport {isEthAddressValid} from '../../util/validation';\nimport {truncateEthAddress} from '../../util/helpers';\n\ntype ProposalCardProps = {\n  buttonText?: string;\n  /**\n   * The path to link to. Defaults to `${location.pathname}/${proposalOnClickId}`.\n   */\n  linkPath?: string | ((id: string) => string);\n  /**\n   * Take arbitrary actions on click\n   */\n  onClick?: (proposalOnClickId: string) => void;\n  /**\n   * The ID for the proposal to be used for navigation.\n   * As there can be a few different options, it's best to provide it\n   * explicitly.\n   */\n  proposalOnClickId: string;\n  name: string;\n  /**\n   * Render a custom status via render prop\n   */\n  renderStatus?: () => React.ReactNode;\n};\n\nconst DEFAULT_BUTTON_TEXT: string = 'View Proposal';\n\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\n\n/**\n * Shows a preview of a proposal's details\n *\n * @param {ProposalCardProps} props\n * @returns {JSX.Element}\n */\nexport default function ProposalCard(props: ProposalCardProps): JSX.Element {\n  const {\n    buttonText = DEFAULT_BUTTON_TEXT,\n    proposalOnClickId,\n    linkPath,\n    onClick,\n    name,\n    renderStatus,\n  } = props;\n\n  /**\n   * Their hooks\n   */\n\n  const {location} = useHistory();\n\n  /**\n   * Variables\n   */\n\n  const pathname: string = location.pathname === '/' ? '' : location.pathname;\n\n  const path: string =\n    typeof linkPath === 'function'\n      ? linkPath(proposalOnClickId)\n      : linkPath || `${pathname}/${proposalOnClickId}`;\n\n  /**\n   * Functions\n   */\n\n  function handleClick() {\n    onClick?.(proposalOnClickId);\n  }\n\n  function renderName(name: string) {\n    if (isEthAddressValid(name)) {\n      return truncateEthAddress(name, 7);\n    } else {\n      return (\n        <ResponsiveEllipsis\n          text={name}\n          maxLine={1}\n          ellipsis=\"...\"\n          trimRight\n          basedOn=\"letters\"\n        />\n      );\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Link className=\"proposalcard__link\" to={path} onClick={handleClick}>\n      <div className=\"proposalcard\">\n        {/* TITLE */}\n        <h3 className=\"proposalcard__title\">{renderName(name)}</h3>\n\n        {/* E.G. VOTING PROGRESS STATUS AND BAR */}\n        {renderStatus && renderStatus()}\n\n        {/**\n         * BUTTON (no click handler)\n         *\n         * @todo Set to a `<span>` as `<button>` is invalid as a descendent of `<a>`.\n         */}\n        <button className=\"proposalcard__button\">\n          {buttonText || DEFAULT_BUTTON_TEXT}\n        </button>\n      </div>\n    </Link>\n  );\n}\n","import React, {Fragment, useEffect, useState} from 'react';\n\nimport {AsyncStatus} from '../../util/types';\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {normalizeString} from '../../util/helpers';\nimport {OffchainVotingStatus} from '../proposals/voting';\nimport {ProposalData, VotingResult} from '../proposals/types';\nimport {ProposalHeaderNames} from '../../util/enums';\nimport {useGovernanceProposals} from './hooks';\nimport {useIsDefaultChain} from '../web3/hooks';\nimport {useOffchainVotingResults} from '../proposals/hooks';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport LoaderLarge from '../feedback/LoaderLarge';\nimport ProposalCard from '../proposals/ProposalCard';\n\ntype GovernanceProposalsListProps = {\n  /**\n   * The `actionId` to get proposals for in Snapshot Hub.\n   */\n  actionId?: string;\n  /**\n   * Optionally provide a click handler for `ProposalCard`.\n   * The proposal's id (in Snapshot) will be provided as an argument.\n   * Defaults to noop: `() => {}`\n   */\n  onProposalClick?: (id: string) => void;\n  /**\n   * The path to link to. Defaults to `${location.pathname}/${proposalOnClickId}`.\n   */\n  proposalLinkPath?: Parameters<typeof ProposalCard>['0']['linkPath'];\n  /**\n   * Optionally render a custom proposal card.\n   */\n  renderProposalCard?: (data: {\n    proposalData: ProposalData;\n    votingResult?: VotingResult;\n  }) => React.ReactNode;\n};\n\ntype FilteredProposals = {\n  failedProposals: ProposalData[];\n  passedProposals: ProposalData[];\n  votingProposals: ProposalData[];\n};\n\nexport default function GovernanceProposalsList(\n  props: GovernanceProposalsListProps\n): JSX.Element {\n  const {\n    actionId = BURN_ADDRESS,\n    onProposalClick = () => {},\n    proposalLinkPath,\n    renderProposalCard,\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [proposalsForVotingResults, setProposalsForVotingResults] = useState<\n    ProposalData['snapshotProposal'][]\n  >([]);\n  const [filteredProposals, setFilteredProposals] = useState<FilteredProposals>(\n    {\n      failedProposals: [],\n      passedProposals: [],\n      votingProposals: [],\n    }\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    governanceProposals,\n    governanceProposalsError,\n    governanceProposalsStatus,\n  } = useGovernanceProposals({\n    actionId,\n  });\n\n  const {\n    offchainVotingResults,\n    offchainVotingResultsError,\n    offchainVotingResultsStatus,\n  } = useOffchainVotingResults(proposalsForVotingResults);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const {failedProposals, passedProposals, votingProposals} = filteredProposals;\n\n  const isLoading: boolean =\n    governanceProposalsStatus === AsyncStatus.STANDBY ||\n    governanceProposalsStatus === AsyncStatus.PENDING ||\n    // Getting ready to fetch using `useOffchainVotingResults`; helps to show continuous loader.\n    (offchainVotingResultsStatus === AsyncStatus.STANDBY &&\n      proposalsForVotingResults.length > 0) ||\n    offchainVotingResultsStatus === AsyncStatus.PENDING;\n\n  const error: Error | undefined =\n    governanceProposalsError || offchainVotingResultsError || defaultChainError;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    setProposalsForVotingResults(\n      governanceProposals.map((gp) => gp.snapshotProposal)\n    );\n  }, [governanceProposals]);\n\n  // Separate proposals into categories: voting, passed, failed\n  useEffect(() => {\n    if (governanceProposalsStatus !== AsyncStatus.FULFILLED) return;\n\n    const filteredProposalsToSet: FilteredProposals = {\n      failedProposals: [],\n      passedProposals: [],\n      votingProposals: [],\n    };\n\n    governanceProposals.forEach((p) => {\n      const end = p.snapshotProposal?.msg.payload.end || 0;\n      const hasVoteEnded = end < Math.ceil(Date.now() / 1000);\n\n      // voting proposal\n      if (!hasVoteEnded) {\n        filteredProposalsToSet.votingProposals.push(p);\n\n        return;\n      }\n\n      const offchainResult = offchainVotingResults.find(\n        ([proposalHash, _result]) =>\n          normalizeString(proposalHash) ===\n          normalizeString(p.snapshotProposal?.idInSnapshot || '')\n      )?.[1];\n\n      // Did the vote pass by a simple majority?\n      const didPassSimpleMajority: boolean = offchainResult\n        ? offchainResult.Yes.units > offchainResult.No.units\n        : false;\n\n      // passed proposal\n      if (didPassSimpleMajority) {\n        filteredProposalsToSet.passedProposals.push(p);\n\n        return;\n      }\n\n      // failed proposal\n      if (!didPassSimpleMajority) {\n        filteredProposalsToSet.failedProposals.push(p);\n\n        return;\n      }\n    });\n\n    setFilteredProposals((prevState) => ({\n      ...prevState,\n      ...filteredProposalsToSet,\n    }));\n  }, [governanceProposals, governanceProposalsStatus, offchainVotingResults]);\n\n  /**\n   * Functions\n   */\n\n  function renderProposalCards(\n    proposals: ProposalData[]\n  ): React.ReactNode | null {\n    return proposals.map((proposal) => {\n      const {snapshotProposal} = proposal;\n      const proposalId = snapshotProposal?.idInSnapshot;\n      const proposalName = snapshotProposal?.msg.payload.name || '';\n\n      const votingStartMs: number =\n        Number(snapshotProposal?.msg.payload.start || 0) * 1000;\n\n      const votingEndMs: number =\n        Number(snapshotProposal?.msg.payload.end || 0) * 1000;\n\n      if (!proposalId) return null;\n\n      const offchainResult = offchainVotingResults.find(\n        ([proposalHash, _result]) =>\n          normalizeString(proposalHash) === normalizeString(proposalId)\n      )?.[1];\n\n      if (renderProposalCard) {\n        return (\n          <Fragment key={proposalId}>\n            {renderProposalCard({\n              proposalData: proposal,\n              votingResult: offchainResult,\n            })}\n          </Fragment>\n        );\n      }\n\n      return (\n        <ProposalCard\n          key={proposalId}\n          name={proposalName}\n          linkPath={proposalLinkPath}\n          onClick={onProposalClick}\n          proposalOnClickId={proposalId}\n          renderStatus={() => (\n            <OffchainVotingStatus\n              votingResult={offchainResult}\n              countdownVotingEndMs={votingEndMs}\n              countdownVotingStartMs={votingStartMs}\n            />\n          )}\n        />\n      );\n    });\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <div className=\"loader--large-container\">\n        <LoaderLarge />\n      </div>\n    );\n  }\n\n  // Render no proposals\n  if (\n    !governanceProposals.length &&\n    !Object.values(filteredProposals).flatMap((p) => p).length &&\n    governanceProposalsStatus === AsyncStatus.FULFILLED\n  ) {\n    return <p className=\"text-center\">No proposals, yet!</p>;\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <div className=\"text-center\">\n        <ErrorMessageWithDetails\n          error={error}\n          renderText=\"Something went wrong while getting the proposals.\"\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid--fluid grid-container\">\n      {/* VOTING PROPOSALS */}\n      {votingProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.VOTING}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(votingProposals)}\n          </div>\n        </>\n      )}\n\n      {/* PASSED PROPOSALS */}\n      {passedProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.PASSED}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(passedProposals)}\n          </div>\n        </>\n      )}\n\n      {/* FAILED PROPOSALS */}\n      {failedProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.FAILED}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(failedProposals)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {\n  SnapshotProposalResponse,\n  SnapshotType,\n} from '@openlaw/snapshot-js-erc712';\nimport {useQuery} from 'react-query';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {BURN_ADDRESS} from '../../../util/constants';\nimport {ProposalData} from '../../proposals/types';\nimport {SNAPSHOT_HUB_API_URL, SPACE} from '../../../config';\nimport {useIsMounted} from '../../../hooks';\n\ntype UseGovernanceProposalsReturn = {\n  governanceProposals: ProposalData[];\n  governanceProposalsStatus: AsyncStatus;\n  governanceProposalsError: Error | undefined;\n};\n\n/**\n * useGovernanceProposals\n *\n * Provides an array of id->proposal tuples of governance-style proposals which are not submitted on-chain.\n *\n * @param {{actionId : string}}\n *   - `actionId`: Name of the ERC-712 `actionId` to get Governance proposals by. Defaults to `BURN_ADDRESS`.\n * @returns `UseGovernanceProposalsReturn` An object with the governance proposals, and the current async status.\n */\nexport function useGovernanceProposals({\n  actionId = BURN_ADDRESS,\n}: {\n  actionId?: string;\n}): UseGovernanceProposalsReturn {\n  /**\n   * State\n   */\n\n  const [governanceProposals, setGovernanceProposals] = useState<\n    ProposalData[]\n  >([]);\n  const [governanceProposalsError, setGovernanceProposalsError] =\n    useState<Error>();\n  const [governanceProposalsStatus, setGovernanceProposalsStatus] =\n    useState<AsyncStatus>(AsyncStatus.STANDBY);\n\n  /**\n   * Our hooks\n   */\n\n  const {isMountedRef} = useIsMounted();\n\n  /**\n   * React Query\n   */\n\n  const {\n    data: snapshotProposalEntriesData,\n    error: snapshotProposalEntriesError,\n  } = useQuery(\n    ['snapshotProposalEntries', actionId],\n    async () => await getSnapshotProposalsByActionId(actionId),\n    {\n      enabled: !!actionId,\n    }\n  );\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleGetProposalsCached = useCallback(handleGetProposals, [\n    isMountedRef,\n    snapshotProposalEntriesData,\n    snapshotProposalEntriesError,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    handleGetProposalsCached();\n  }, [handleGetProposalsCached]);\n\n  /**\n   * Functions\n   */\n\n  /**\n   * Gets Proposals from Snapshot Hub\n   */\n  async function getSnapshotProposalsByActionId(\n    actionId: string\n  ): Promise<ProposalData[]> {\n    try {\n      const baseURL = `${SNAPSHOT_HUB_API_URL}/api/${SPACE}`;\n\n      const proposals = await fetch(\n        `${baseURL}/proposals/${actionId}?includeVotes=true`\n      );\n\n      if (!proposals.ok) {\n        throw new Error(\n          'Something went wrong while fetching the Snapshot proposals.'\n        );\n      }\n\n      const proposalsJSON: SnapshotProposalResponse = await proposals.json();\n\n      /**\n       * @note The id of the proposal is used and we do not consider any Draft id,\n       *   as we do for Snapshot->on-chain proposals.\n       *\n       * @todo Fix type of return so we don't need to add so many empty key/value pairs.\n       */\n      return Object.entries(proposalsJSON).map(\n        ([id, snapshotProposal]): ProposalData => ({\n          daoProposal: undefined,\n          snapshotDraft: undefined,\n          snapshotProposal: {\n            ...snapshotProposal,\n            idInSnapshot: id,\n            idInDAO: '',\n          },\n          getCommonSnapshotProposalData: () => undefined,\n          refetchProposalOrDraft: () => undefined,\n          snapshotType: SnapshotType.proposal,\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async function handleGetProposals() {\n    try {\n      setGovernanceProposalsStatus(AsyncStatus.PENDING);\n\n      if (snapshotProposalEntriesError) {\n        throw snapshotProposalEntriesError;\n      }\n\n      if (snapshotProposalEntriesData) {\n        if (!isMountedRef.current) return;\n\n        setGovernanceProposalsStatus(AsyncStatus.FULFILLED);\n        setGovernanceProposals(snapshotProposalEntriesData);\n      }\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setGovernanceProposalsStatus(AsyncStatus.REJECTED);\n      setGovernanceProposals([]);\n      setGovernanceProposalsError(error);\n    }\n  }\n\n  return {\n    governanceProposals,\n    governanceProposalsError,\n    governanceProposalsStatus,\n  };\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {BURN_ADDRESS} from '../../util/constants';\nimport FadeIn from '../../components/common/FadeIn';\nimport GovernanceProposalsList from '../../components/governance/GovernanceProposalsList';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function GovernanceProposals() {\n  /**\n   * Functions\n   */\n\n  function proposalLinkPath(id: string) {\n    return `/governance/${id}`;\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <RenderWrapper>\n      <GovernanceProposalsList\n        actionId={BURN_ADDRESS}\n        proposalLinkPath={proposalLinkPath}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToNewProposal(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    history.push('/governance-proposal');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Governance</h2>\n          <button className=\"titlebar__action\" onClick={goToNewProposal}>\n            New Proposal\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {useEffect, useRef} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport ReactTooltip from 'react-tooltip';\nimport useClipboard from 'react-use-clipboard';\n\ntype CopyWithTooltipProps = {\n  /**\n   * How long to wait before resetting `isCopied` in milliseconds. Defaults to `3000`.\n   */\n  copySuccessResetMs?: number;\n  render: (p: CopyWithTooltipRenderProps) => JSX.Element;\n  textToCopy: string;\n  /**\n   * Props for `react-tooltip`\n   */\n  tooltipProps?: ReactTooltip['props'];\n};\n\ntype CopyWithTooltipRenderProps = {\n  /**\n   * Ref for attaching to the rendered element's `ref` prop\n   */\n  elementRef: React.RefObject<any>;\n  /**\n   * Whether or not a copy event has completed. Can be reset using `copySuccessResetMs`.\n   */\n  isCopied: boolean;\n  /**\n   * Callback to trigger a copy event\n   */\n  setCopied: ReturnType<typeof useClipboard>[1];\n  /**\n   * ID for attaching to the rendered element's `data-for` prop\n   */\n  tooltipID: string;\n};\n\nexport function CopyWithTooltip(props: CopyWithTooltipProps): JSX.Element {\n  const {\n    copySuccessResetMs = 3000,\n    render,\n    textToCopy = '',\n    tooltipProps,\n  } = props;\n\n  /**\n   * Their hooks\n   */\n\n  const [isCopied, setCopied] = useClipboard(textToCopy, {\n    // `isCopied` will go back to `false` after 3 seconds.\n    successDuration: copySuccessResetMs,\n  });\n\n  /**\n   * Effects\n   */\n\n  /**\n   * Workaround to handle tooltip positioning after text update\n   *\n   * @see https://github.com/wwayne/react-tooltip/issues/638\n   */\n  useEffect(() => {\n    if (!elementRef.current) return;\n\n    if (isCopied) {\n      ReactTooltip.show(elementRef.current);\n    }\n\n    if (!isCopied && isTooltipShownRef.current) {\n      ReactTooltip.show(elementRef.current);\n    }\n  }, [isCopied]);\n\n  /**\n   * Refs\n   */\n\n  const elementRef = useRef<any>(null);\n  const isTooltipShownRef = useRef<boolean>(false);\n  const tooltipIDRef = useRef<string>(uuidv4());\n\n  return (\n    <>\n      {render({\n        elementRef,\n        isCopied,\n        setCopied,\n        tooltipID: tooltipIDRef.current,\n      })}\n\n      <ReactTooltip\n        delayShow={200}\n        effect=\"solid\"\n        {...tooltipProps}\n        afterHide={(args) => {\n          isTooltipShownRef.current = false;\n\n          tooltipProps?.afterHide?.(args);\n        }}\n        afterShow={(args) => {\n          isTooltipShownRef.current = true;\n\n          tooltipProps?.afterShow?.(args);\n        }}\n        id={tooltipIDRef.current}\n      />\n    </>\n  );\n}\n","import {useState, useEffect, useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useForm} from 'react-hook-form';\nimport {toChecksumAddress} from 'web3-utils';\n\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {CheckboxSize} from '../../components/common/Checkbox';\nimport {FormFieldErrors} from '../../util/enums';\nimport {getConnectedMember} from '../../store/actions';\nimport {getValidationError, truncateEthAddress} from '../../util/helpers';\nimport {isEthAddressValid} from '../../util/validation';\nimport {ReduxDispatch, StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES} from '../../components/web3/config';\nimport {\n  useWeb3Modal,\n  useContractSend,\n  useETHGasPrice,\n} from '../../components/web3/hooks';\nimport {Web3TxStatus} from '../../components/web3/types';\nimport CycleMessage from '../../components/feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport EtherscanURL from '../../components/web3/EtherscanURL';\nimport FadeIn from '../../components/common/FadeIn';\nimport InputError from '../../components/common/InputError';\nimport Loader from '../../components/feedback/Loader';\nimport Modal from '../../components/common/Modal';\nimport TimesSVG from '../../assets/svg/TimesSVG';\nimport UserSVG from '../../assets/svg/UserSVG';\n\nenum DelegationStatus {\n  DELEGATE_VOTES = 'Delegate Votes',\n  REVOKE_DELEGATION = 'Revoke Delegation',\n}\n\nenum DelegationStep {\n  SET_DELEGATION = 'setDelegation',\n  REVOKE_DELEGATION = 'revokeDelegation',\n}\n\nenum Fields {\n  delegateAddress = 'delegateAddress',\n  confirmDelegation = 'confirmDelegation',\n}\n\ntype Steps = 'setDelegation' | 'revokeDelegation';\n\ntype StepsType = {[S in Steps]: () => JSX.Element};\n\ntype FormInputs = {\n  delegateAddress: string;\n  confirmDelegation: boolean;\n};\n\ntype UpdateDelegateKeyArguments = [\n  string, // `dao`\n  string // `delegateKey`\n];\n\ntype DelegationModalProps = {\n  isOpen: boolean;\n  closeHandler: () => void;\n  currentStep: string;\n};\n\nfunction DelegationModal({\n  isOpen,\n  closeHandler,\n  currentStep,\n}: DelegationModalProps): JSX.Element {\n  /**\n   * Selectors\n   */\n\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n  const daoRegistryAdapterContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryAdapterContract\n  );\n  const connectedMember = useSelector((s: StoreState) => s.connectedMember);\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {txError, txEtherscanURL, txIsPromptOpen, txSend, txStatus} =\n    useContractSend();\n\n  /**\n   * Their hooks\n   */\n\n  const form = useForm<FormInputs>({\n    mode: 'onBlur',\n    reValidateMode: 'onChange',\n  });\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Variables\n   */\n\n  const {errors, getValues, register, trigger, watch} = form;\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n  const isDone = txStatus === Web3TxStatus.FULFILLED;\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n  const delegateError = submitError || txError;\n\n  const delegateAddressValue = watch(Fields.delegateAddress);\n  const confirmDelegationValue = watch(Fields.confirmDelegation);\n  const isFormFieldEmpty = !delegateAddressValue || !confirmDelegationValue;\n  const steps: StepsType = {\n    setDelegation: renderSetDelegation,\n    revokeDelegation: renderRevokeDelegation,\n  };\n\n  /**\n   * Functions\n   */\n\n  function renderCurrentStep() {\n    return steps[currentStep]();\n  }\n\n  function renderSetDelegation() {\n    return (\n      <>\n        {/* TITLE */}\n        <div className=\"modal__title\">Delegate</div>\n\n        <p>Transfer your voting rights</p>\n        <div className=\"delegation-modal__arrow-down\">&darr;</div>\n        <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n          {/* DELEGATE ADDRESS */}\n          <div className=\"form__input-row\">\n            <div className=\"form__input-row-fieldwrap\">\n              <input\n                aria-describedby={`error-${Fields.delegateAddress}`}\n                aria-invalid={errors.delegateAddress ? 'true' : 'false'}\n                name={Fields.delegateAddress}\n                ref={register({\n                  validate: (delegateAddress: string): string | boolean => {\n                    return !delegateAddress\n                      ? FormFieldErrors.REQUIRED\n                      : !isEthAddressValid(delegateAddress) ||\n                        delegateAddress === BURN_ADDRESS\n                      ? FormFieldErrors.INVALID_ETHEREUM_ADDRESS\n                      : true;\n                  },\n                })}\n                type=\"text\"\n                disabled={isInProcessOrDone}\n                placeholder=\"Enter delegate address\"\n              />\n\n              {getValidationError(Fields.delegateAddress, errors).includes(\n                'invalid'\n              ) && (\n                <InputError\n                  error={getValidationError(Fields.delegateAddress, errors)}\n                  id={`error-${Fields.delegateAddress}`}\n                />\n              )}\n            </div>\n          </div>\n\n          {/* CONFIRM DELEGATION */}\n          <div className=\"form__input-row\" style={{marginTop: 0}}>\n            <div className=\"form__input-row-fieldwrap\">\n              <input\n                className=\"checkbox-input\"\n                aria-describedby={`error-${Fields.confirmDelegation}`}\n                aria-invalid={errors.confirmDelegation ? 'true' : 'false'}\n                id={Fields.confirmDelegation}\n                name={Fields.confirmDelegation}\n                ref={register({\n                  required: FormFieldErrors.REQUIRED,\n                })}\n                type=\"checkbox\"\n                disabled={isInProcessOrDone}\n              />\n\n              <label\n                className=\"checkbox-label\"\n                htmlFor={Fields.confirmDelegation}>\n                <span className={`checkbox-box ${CheckboxSize.SMALL}`}></span>\n                <span className=\"checkbox-text\">\n                  Confirm delegation to the above address. You can revoke this\n                  at any time from your profile.\n                </span>\n              </label>\n            </div>\n          </div>\n\n          {/* SUBMIT */}\n          <button\n            aria-label={isInProcess ? 'Updating your delegate key...' : ''}\n            className=\"button\"\n            disabled={isInProcessOrDone || isFormFieldEmpty}\n            onClick={async () => {\n              if (isInProcessOrDone) return;\n\n              if (!(await trigger())) {\n                return;\n              }\n\n              handleConfirmDelegation(getValues());\n            }}\n            type=\"submit\">\n            {isInProcess ? <Loader /> : isDone ? 'Done' : 'Confirm'}\n          </button>\n\n          {/* SUBMIT STATUS */}\n          {isInProcessOrDone && (\n            <div className=\"form__submit-status-container\">\n              {renderSubmitStatus()}\n            </div>\n          )}\n\n          {/* SUBMIT ERROR */}\n          {delegateError && (\n            <div className=\"form__submit-error-container\">\n              <ErrorMessageWithDetails\n                renderText=\"Something went wrong with your delegation.\"\n                error={delegateError}\n              />\n            </div>\n          )}\n        </form>\n      </>\n    );\n  }\n\n  function renderRevokeDelegation() {\n    if (connectedMember) {\n      return (\n        <>\n          {/* TITLE */}\n          <div className=\"modal__title\">Revoke Delegation</div>\n\n          <p>{truncateEthAddress(connectedMember.delegateKey, 7)}</p>\n          <div className=\"delegation-modal__arrow-down\">&darr;</div>\n          <p>\n            <UserSVG />\n            Back to you\n          </p>\n          <div className=\"delegation-modal__text\">\n            You&apos;ll be able to resume voting from your account. You can\n            delegate again at any time from your profile.\n          </div>\n\n          {/* SUBMIT */}\n          <button\n            aria-label={isInProcess ? 'Updating your delegate key...' : ''}\n            className=\"button\"\n            disabled={isInProcessOrDone}\n            onClick={handleRevokeDelegation}>\n            {isInProcess ? <Loader /> : isDone ? 'Done' : 'Confirm'}\n          </button>\n\n          {/* SUBMIT STATUS */}\n          {isInProcessOrDone && (\n            <div className=\"form__submit-status-container\">\n              {renderSubmitStatus()}\n            </div>\n          )}\n\n          {/* SUBMIT ERROR */}\n          {delegateError && (\n            <div className=\"form__submit-error-container\">\n              <ErrorMessageWithDetails\n                renderText=\"Something went wrong with your revocation.\"\n                error={delegateError}\n              />\n            </div>\n          )}\n        </>\n      );\n    }\n\n    return <></>;\n  }\n\n  async function handleConfirmDelegation(values: FormInputs) {\n    try {\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!daoRegistryAdapterContract) {\n        throw new Error('No DAO Registry Adapter contract was found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      const {delegateAddress} = values;\n\n      const updateDelegateKeyArguments: UpdateDelegateKeyArguments = [\n        daoRegistryContract.contractAddress,\n        toChecksumAddress(delegateAddress),\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `updateDelegateKey`\n      const tx = await txSend(\n        'updateDelegateKey',\n        daoRegistryAdapterContract.instance.methods,\n        updateDelegateKeyArguments,\n        txArguments\n      );\n\n      if (tx) {\n        setTimeout(async () => {\n          // re-fetch member\n          await dispatch(\n            getConnectedMember({\n              account,\n              daoRegistryContract,\n              web3Instance,\n            })\n          );\n\n          closeHandler();\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n      let parsedError = error;\n\n      if (\n        error.message.includes('cannot overwrite existing delegated keys') ||\n        error.message.includes('address already taken as delegated key')\n      ) {\n        parsedError = new Error(\n          'The provided address cannot be another member or already in use as a delegate.'\n        );\n      }\n\n      setSubmitError(parsedError);\n    }\n  }\n\n  async function handleRevokeDelegation() {\n    try {\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!daoRegistryAdapterContract) {\n        throw new Error('No DAO Registry Adapter contract was found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      const updateDelegateKeyArguments: UpdateDelegateKeyArguments = [\n        daoRegistryContract.contractAddress,\n        toChecksumAddress(account),\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      // Execute contract call for `updateDelegateKey`\n      const tx = await txSend(\n        'updateDelegateKey',\n        daoRegistryAdapterContract.instance.methods,\n        updateDelegateKeyArguments,\n        txArguments\n      );\n\n      if (tx) {\n        setTimeout(async () => {\n          // re-fetch member\n          await dispatch(\n            getConnectedMember({\n              account,\n              daoRegistryContract,\n              web3Instance,\n            })\n          );\n\n          closeHandler();\n        }, 2000);\n      }\n    } catch (error) {\n      console.log(error);\n\n      setSubmitError(error);\n    }\n  }\n\n  function renderSubmitStatus(): React.ReactNode {\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return 'Awaiting your confirmation\\u2026';\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Modal\n      keyProp=\"delegation\"\n      isOpen={isOpen}\n      // Require user to click on close button to avoid accidental modal close\n      // during transaction\n      isOpenHandler={() => {}}\n      modalClassNames=\"delegation-modal\">\n      {/* MODEL CLOSE BUTTON */}\n      <span\n        className=\"modal__close-button\"\n        onClick={() => {\n          closeHandler();\n        }}>\n        <TimesSVG />\n      </span>\n      {renderCurrentStep()}\n    </Modal>\n  );\n}\n\nexport default function Delegation() {\n  /**\n   * Selectors\n   */\n\n  const connectedMember = useSelector((s: StoreState) => s.connectedMember);\n\n  /**\n   * State\n   */\n\n  const [currentStep, setCurrentStep] = useState<string>(\n    DelegationStep.SET_DELEGATION\n  );\n  const [delegationStatus, setDelegationStatus] = useState<string>('');\n  const [showDelegationModal, setShowDelegationModal] =\n    useState<boolean>(false);\n\n  /**\n   * Cached callbacks\n   */\n\n  const fetchDelegationInfoCached = useCallback(fetchDelegationInfo, [\n    connectedMember,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    fetchDelegationInfoCached();\n  }, [fetchDelegationInfoCached]);\n\n  /**\n   * Functions\n   */\n\n  async function fetchDelegationInfo() {\n    try {\n      if (!connectedMember) {\n        throw new Error('No connected account found.');\n      }\n\n      const currentStep = connectedMember.isAddressDelegated\n        ? DelegationStep.REVOKE_DELEGATION\n        : DelegationStep.SET_DELEGATION;\n      setCurrentStep(currentStep);\n\n      const delegationStatus = connectedMember.isAddressDelegated\n        ? DelegationStatus.REVOKE_DELEGATION\n        : DelegationStatus.DELEGATE_VOTES;\n      setDelegationStatus(delegationStatus);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  if (connectedMember) {\n    return (\n      <>\n        {delegationStatus !== '' && (\n          <>\n            <div className=\"memberprofile__action-description\">\n              {connectedMember.isAddressDelegated ? (\n                // CURRENT DELEGATION\n                <>\n                  Your voting rights have been delegated to{' '}\n                  <span className=\"delegation__delegate-address-text\">\n                    {truncateEthAddress(connectedMember.delegateKey, 7)}\n                  </span>\n                  . You can revoke this at any time.\n                </>\n              ) : (\n                <>\n                  You can delegate your voting rights to a different ETH\n                  address. The address cannot be another member or already in\n                  use as a delegate.\n                </>\n              )}\n            </div>\n\n            {/* OPEN DELEGATION MODAL BUTTON */}\n            <button\n              className=\"memberprofile__action-button\"\n              onClick={() => setShowDelegationModal(true)}>\n              {delegationStatus}\n            </button>\n          </>\n        )}\n\n        {showDelegationModal && (\n          <DelegationModal\n            isOpen={showDelegationModal}\n            closeHandler={() => {\n              setShowDelegationModal(false);\n            }}\n            currentStep={currentStep}\n          />\n        )}\n      </>\n    );\n  }\n\n  return <></>;\n}\n","import {SVGAttributes} from 'react';\n\nexport default function CopySVG(props: SVGAttributes<HTMLOrSVGElement>) {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-icon=\"copy\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M433.941 65.941l-51.882-51.882A48 48 0 0 0 348.118 0H176c-26.51 0-48 21.49-48 48v48H48c-26.51 0-48 21.49-48 48v320c0 26.51 21.49 48 48 48h224c26.51 0 48-21.49 48-48v-48h80c26.51 0 48-21.49 48-48V99.882a48 48 0 0 0-14.059-33.941zM266 464H54a6 6 0 0 1-6-6V150a6 6 0 0 1 6-6h74v224c0 26.51 21.49 48 48 48h96v42a6 6 0 0 1-6 6zm128-96H182a6 6 0 0 1-6-6V54a6 6 0 0 1 6-6h106v88c0 13.255 10.745 24 24 24h88v202a6 6 0 0 1-6 6zm6-256h-64V48h9.632c1.591 0 3.117.632 4.243 1.757l48.368 48.368a6 6 0 0 1 1.757 4.243V112z\"></path>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport default function ArrowsSVG(props: React.SVGAttributes<SVGElement>) {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-icon=\"wallet\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M461.2 128H80c-8.84 0-16-7.16-16-16s7.16-16 16-16h384c8.84 0 16-7.16 16-16 0-26.51-21.49-48-48-48H64C28.65 32 0 60.65 0 96v320c0 35.35 28.65 64 64 64h397.2c28.02 0 50.8-21.53 50.8-48V176c0-26.47-22.78-48-50.8-48zM416 336c-17.67 0-32-14.33-32-32s14.33-32 32-32 32 14.33 32 32-14.33 32-32 32z\"></path>\n    </svg>\n  );\n}\n","import ReactTooltip from 'react-tooltip';\n\nimport {CopyWithTooltip} from '../common/CopyWithTooltip';\nimport {truncateEthAddress} from '../../util/helpers/truncateEthAddress';\nimport CopySVG from '../../assets/svg/CopySVG';\nimport WalletSVG from '../../assets/svg/WalletSVG';\n\nexport type ERC20RegisterDetails = {\n  address: string;\n  symbol: string;\n  decimals: number;\n  image: string;\n};\n\ntype DaoTokenProps = {\n  daoTokenDetails?: ERC20RegisterDetails;\n};\n\nexport default function DaoToken({\n  daoTokenDetails,\n}: DaoTokenProps): JSX.Element {\n  /**\n   * Functions\n   */\n\n  async function addTokenToWallet() {\n    if (!daoTokenDetails) return;\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: daoTokenDetails,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  if (daoTokenDetails) {\n    return (\n      <div>\n        Token:{' '}\n        <CopyWithTooltip\n          render={({elementRef, isCopied, setCopied, tooltipID}) => (\n            <span\n              data-for={tooltipID}\n              data-tip={isCopied ? 'copied!' : daoTokenDetails.address}\n              onClick={setCopied}\n              ref={elementRef}>\n              {truncateEthAddress(daoTokenDetails.address, 5)}\n            </span>\n          )}\n          textToCopy={daoTokenDetails.address}\n        />\n        <ReactTooltip effect=\"solid\" id=\"daotoken-address\" />\n        {/* Copy */}\n        <CopyWithTooltip\n          render={({elementRef, isCopied, setCopied, tooltipID}) => (\n            <button\n              className=\"daotoken__button\"\n              data-for={tooltipID}\n              data-tip={isCopied ? 'copied!' : 'copy address'}\n              onClick={setCopied}\n              ref={elementRef}>\n              <CopySVG aria-label=\"copy address\" />\n            </button>\n          )}\n          textToCopy={daoTokenDetails.address}\n        />\n        {/* Wallet */}\n        <button\n          className=\"daotoken__button\"\n          data-for=\"daotoken-wallet\"\n          data-tip=\"add to wallet\"\n          onClick={addTokenToWallet}>\n          <WalletSVG aria-label=\"add to wallet\" />\n        </button>\n        <ReactTooltip delayShow={200} effect=\"solid\" id=\"daotoken-wallet\" />\n      </div>\n    );\n  }\n\n  return <></>;\n}\n","import {SVGAttributes} from 'react';\n\nexport default function UserSVG(props: SVGAttributes<HTMLOrSVGElement>) {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      data-icon=\"user\"\n      role=\"img\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M313.6 304c-28.7 0-42.5 16-89.6 16-47.1 0-60.8-16-89.6-16C60.2 304 0 364.2 0 438.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-25.6c0-74.2-60.2-134.4-134.4-134.4zM400 464H48v-25.6c0-47.6 38.8-86.4 86.4-86.4 14.6 0 38.3 16 89.6 16 51.7 0 74.9-16 89.6-16 47.6 0 86.4 38.8 86.4 86.4V464zM224 288c79.5 0 144-64.5 144-144S303.5 0 224 0 80 64.5 80 144s64.5 144 144 144zm0-240c52.9 0 96 43.1 96 96s-43.1 96-96 96-96-43.1-96-96 43.1-96 96-96z\"></path>\n    </svg>\n  );\n}\n","import {AbiItem, toBN, toChecksumAddress} from 'web3-utils';\nimport {useCallback, useEffect, useState} from 'react';\nimport {useLazyQuery} from '@apollo/react-hooks';\nimport {useSelector} from 'react-redux';\n\nimport {AsyncStatus} from '../../../util/types';\nimport {GET_MEMBERS} from '../../../gql';\nimport {Member} from '../types';\nimport {multicall, MulticallTuple} from '../../../components/web3/helpers';\nimport {normalizeString} from '../../../util/helpers';\nimport {StoreState} from '../../../store/types';\nimport {SubgraphNetworkStatus} from '../../../store/subgraphNetworkStatus/types';\nimport {UNITS_ADDRESS} from '../../../config';\nimport {useENSName, useWeb3Modal} from '../../../components/web3/hooks';\n\ntype UseMembersReturn = {\n  members: Member[];\n  membersError: Error | undefined;\n  membersStatus: AsyncStatus;\n};\n\n/**\n * useMembers\n *\n * Gets DAO members from subgraph with direct onchain fallback.\n *\n * @returns {UseMembersReturn} An object with the members and the current async status.\n */\nexport default function useMembers(): UseMembersReturn {\n  /**\n   * Selectors\n   */\n\n  const DaoRegistryContract = useSelector(\n    (state: StoreState) => state.contracts.DaoRegistryContract\n  );\n  const BankExtensionContract = useSelector(\n    (state: StoreState) => state.contracts.BankExtensionContract\n  );\n  const subgraphNetworkStatus = useSelector(\n    (state: StoreState) => state.subgraphNetworkStatus.status\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {web3Instance} = useWeb3Modal();\n\n  const [ensReverseResolvedAddresses, setAddressesToENSReverseResolve] =\n    useENSName();\n\n  /**\n   * GQL Query\n   */\n\n  const [getMembersFromSubgraphResult, {called, loading, data, error}] =\n    useLazyQuery(GET_MEMBERS, {\n      variables: {\n        daoAddress: DaoRegistryContract?.contractAddress.toLowerCase(),\n      },\n    });\n\n  /**\n   * State\n   */\n\n  const [members, setMembers] = useState<Member[]>([]);\n  const [membersError, setMembersError] = useState<Error>();\n\n  const [membersStatus, setMembersStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  /**\n   * Cached callbacks\n   */\n\n  const getMembersFromRegistryCached = useCallback(getMembersFromRegistry, [\n    BankExtensionContract,\n    DaoRegistryContract,\n    setAddressesToENSReverseResolve,\n    web3Instance,\n  ]);\n\n  const getMembersFromSubgraphCached = useCallback(getMembersFromSubgraph, [\n    data,\n    error,\n    getMembersFromRegistryCached,\n    loading,\n    setAddressesToENSReverseResolve,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!called) {\n      getMembersFromSubgraphResult();\n    }\n  }, [called, getMembersFromSubgraphResult]);\n\n  useEffect(() => {\n    if (subgraphNetworkStatus === SubgraphNetworkStatus.OK) {\n      if (!loading && DaoRegistryContract?.contractAddress) {\n        getMembersFromSubgraphCached();\n      }\n    } else {\n      // If there is a subgraph network error fallback to fetching members info\n      // directly from smart contracts\n      getMembersFromRegistryCached();\n    }\n  }, [\n    DaoRegistryContract?.contractAddress,\n    getMembersFromRegistryCached,\n    getMembersFromSubgraphCached,\n    loading,\n    subgraphNetworkStatus,\n  ]);\n\n  /**\n   * Set `Member.addressENS`\n   *\n   * Will be the same as the `Member.address` if no ENS reverse resolution found.\n   */\n  useEffect(() => {\n    if (membersStatus !== AsyncStatus.FULFILLED) return;\n\n    setMembers((members) =>\n      members.map(\n        (m, i): Member => ({...m, addressENS: ensReverseResolvedAddresses[i]})\n      )\n    );\n  }, [ensReverseResolvedAddresses, membersStatus]);\n\n  /**\n   * Functions\n   */\n\n  function getMembersFromSubgraph() {\n    try {\n      setMembersStatus(AsyncStatus.PENDING);\n\n      if (!loading && data) {\n        // extract members from gql data\n        const {members} = data.tributeDaos[0] as Record<string, any>;\n\n        // Filter out any member that has fully ragequit (no positive balance in\n        // UNITS)\n        const filteredMembers = members.filter(\n          (member: Record<string, any>) => !member.didFullyRagequit\n        );\n\n        const filteredMembersWithDetails = filteredMembers.map(\n          (member: Record<string, any>) => {\n            // remove gql data that is no longer needed\n            const {createdAt, didFullyRagequit, ...parsedMember} = member;\n\n            return {\n              ...parsedMember,\n              // use formatted addresses\n              address: toChecksumAddress(member.address),\n              delegateKey: toChecksumAddress(member.delegateKey),\n            };\n          }\n        );\n\n        setMembersStatus(AsyncStatus.FULFILLED);\n        setMembers(filteredMembersWithDetails);\n\n        setAddressesToENSReverseResolve(\n          filteredMembersWithDetails.map((m: Member) => m.address)\n        );\n      } else {\n        if (error) {\n          throw new Error(error.message);\n        }\n      }\n    } catch (error) {\n      const {message} = error as Error;\n\n      // If there is a subgraph query error fallback to fetching members info\n      // directly from smart contracts\n      console.log(`subgraph query error: ${message}`);\n\n      getMembersFromRegistryCached();\n    }\n  }\n\n  async function getMembersFromRegistry() {\n    if (!DaoRegistryContract || !BankExtensionContract || !web3Instance) {\n      return;\n    }\n\n    try {\n      setMembersStatus(AsyncStatus.PENDING);\n\n      const {\n        abi: daoRegistryABI,\n        contractAddress: daoRegistryAddress,\n        instance: {methods: daoRegistryMethods},\n      } = DaoRegistryContract;\n\n      const nbMembers = await daoRegistryMethods.getNbMembers().call();\n\n      if (Number(nbMembers) > 0) {\n        // Build calls to get list of member addresses\n        const getMemberAddressABI = daoRegistryABI.find(\n          (item) => item.name === 'getMemberAddress'\n        );\n\n        const getMemberAddressCalls = [...Array(Number(nbMembers)).keys()].map(\n          (index): MulticallTuple => [\n            daoRegistryAddress,\n            getMemberAddressABI as AbiItem,\n            [index.toString()],\n          ]\n        );\n\n        const memberAddresses: string[] = await multicall({\n          calls: getMemberAddressCalls,\n          web3Instance,\n        });\n\n        // Build calls to get list of member addresses by delegated key\n        const memberAddressesByDelegatedKeyABI = daoRegistryABI.find(\n          (item) => item.name === 'memberAddressesByDelegatedKey'\n        );\n\n        const memberAddressesByDelegatedKeyCalls = memberAddresses.map(\n          (address): MulticallTuple => [\n            daoRegistryAddress,\n            memberAddressesByDelegatedKeyABI as AbiItem,\n            [address],\n          ]\n        );\n\n        const memberAddressesByDelegatedKey: string[] = await multicall({\n          calls: memberAddressesByDelegatedKeyCalls,\n          web3Instance,\n        });\n\n        // Build calls to get member balances in UNITS\n        const {abi: bankABI, contractAddress: bankAddress} =\n          BankExtensionContract;\n\n        const balanceOfABI = bankABI.find((item) => item.name === 'balanceOf');\n\n        const unitsBalanceOfCalls = memberAddressesByDelegatedKey.map(\n          (address): MulticallTuple => [\n            bankAddress,\n            balanceOfABI as AbiItem,\n            [address, UNITS_ADDRESS],\n          ]\n        );\n\n        const unitsBalances: string[] = await multicall({\n          calls: unitsBalanceOfCalls,\n          web3Instance,\n        });\n\n        const membersWithDetails = memberAddresses.map((address, index) => ({\n          address,\n          delegateKey: memberAddressesByDelegatedKey[index],\n          isDelegated:\n            normalizeString(address) !==\n            normalizeString(memberAddressesByDelegatedKey[index]),\n          units: unitsBalances[index],\n        }));\n\n        // Filter out any member addresses that don't have a positive balance in\n        // UNITS\n        const filteredMembersWithDetails = membersWithDetails\n          .filter((member) => toBN(member.units).gt(toBN(0)))\n          // display in descending order of when the member joined (e.g., newest\n          // member first)\n          .reverse();\n\n        setMembers(filteredMembersWithDetails);\n\n        setAddressesToENSReverseResolve(\n          filteredMembersWithDetails.map((m: Member) => m.address)\n        );\n      }\n\n      setMembersStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      const e = error as Error;\n\n      setMembersStatus(AsyncStatus.REJECTED);\n      setMembers([]);\n      setMembersError(e);\n    }\n  }\n\n  return {members, membersError, membersStatus};\n}\n","import {useEffect, useState} from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {useIsDefaultChain, useWeb3Modal} from '../../components/web3/hooks';\nimport {AsyncStatus} from '../../util/types';\nimport {CopyWithTooltip} from '../../components/common/CopyWithTooltip';\nimport {formatNumber, normalizeString} from '../../util/helpers';\nimport {Member} from './types';\nimport {useDaoTokenDetails} from '../../components/dao-token/hooks';\nimport {useDaoTotalUnits} from '../../hooks';\nimport DaoToken from '../../components/dao-token/DaoToken';\nimport Delegation from './Delegation';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport useMembers from './hooks/useMembers';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function MemberProfile() {\n  /**\n   * Our hooks\n   */\n\n  const {account} = useWeb3Modal();\n  const {daoTokenDetails, daoTokenDetailsStatus} = useDaoTokenDetails();\n  const {defaultChainError} = useIsDefaultChain();\n  const {members, membersError, membersStatus} = useMembers();\n  const {totalUnits, totalUnitsStatus} = useDaoTotalUnits();\n\n  /**\n   * Their hooks\n   */\n\n  // Get ethereumAddress for fetching the member.\n  const {ethereumAddress} = useParams<{ethereumAddress: string}>();\n\n  /**\n   * State\n   */\n\n  const [memberDetails, setMemberDetails] = useState<Member>();\n  const [memberNotFound, setMemberNotFound] = useState<boolean>(false);\n\n  /**\n   * Effects\n   */\n\n  // Set member details\n  useEffect(() => {\n    if (membersStatus !== AsyncStatus.FULFILLED) return;\n\n    const activeMember = members.find(\n      (member) =>\n        normalizeString(member.address) === normalizeString(ethereumAddress)\n    );\n\n    setMemberDetails(activeMember);\n\n    if (!activeMember) {\n      setMemberNotFound(true);\n    }\n  }, [ethereumAddress, members, membersStatus]);\n\n  /**\n   * Variables\n   */\n\n  const error: Error | undefined = membersError || defaultChainError;\n  const isLoadingDone: boolean = membersStatus === AsyncStatus.FULFILLED;\n\n  const ensNameFound: boolean =\n    memberDetails?.addressENS &&\n    normalizeString(memberDetails?.addressENS) !==\n      normalizeString(memberDetails?.address)\n      ? true\n      : false;\n\n  const isLoading: boolean =\n    membersStatus === AsyncStatus.STANDBY ||\n    membersStatus === AsyncStatus.PENDING ||\n    daoTokenDetailsStatus === AsyncStatus.STANDBY ||\n    daoTokenDetailsStatus === AsyncStatus.PENDING ||\n    totalUnitsStatus === AsyncStatus.STANDBY ||\n    totalUnitsStatus === AsyncStatus.PENDING;\n\n  const isCurrentMemberConnected: boolean =\n    account &&\n    memberDetails &&\n    normalizeString(account) === normalizeString(memberDetails.address)\n      ? true\n      : false;\n\n  const votingWeight =\n    memberDetails && typeof totalUnits === 'number'\n      ? ((Number(memberDetails.units) / totalUnits) * 100).toFixed(2)\n      : '';\n\n  /**\n   * Functions\n   */\n\n  function renderMemberInfo() {\n    if (!memberDetails) return;\n\n    return (\n      <div>\n        <div className=\"memberprofile__info-item\">\n          {daoTokenDetails ? (\n            <>\n              <div>DAO Tokens</div>\n              <div>{`${formatNumber(memberDetails.units)} ${\n                daoTokenDetails.symbol || 'tokens'\n              }`}</div>\n              {isCurrentMemberConnected && (\n                <small>\n                  <DaoToken daoTokenDetails={daoTokenDetails} />\n                </small>\n              )}\n            </>\n          ) : (\n            <>\n              <div>Membership Units</div>\n              <div>{formatNumber(memberDetails.units)}</div>\n            </>\n          )}\n        </div>\n        <div className=\"memberprofile__info-item\">\n          <div>Voting Weight</div>\n          <div>{`${votingWeight}%`}</div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderMemberActions() {\n    if (isCurrentMemberConnected) {\n      return (\n        <div>\n          <div className=\"memberprofile__action\">\n            <div className=\"memberprofile__action-header\">Delegation</div>\n            <Delegation />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"memberprofile__actions-unavailable\">\n          Connect your wallet with this member address to view available\n          actions.\n        </div>\n      );\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong while getting the member.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render no member found\n  if (memberNotFound && isLoadingDone) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center error-message\">\n          <p>Member not found.</p>\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      {memberDetails ? (\n        <>\n          <div className=\"memberprofile__header\">Member Profile</div>\n          <div className=\"proposaldetails\">\n            {/* LEFT COLUMN */}\n\n            <div className=\"memberprofile__left-column\">\n              {/* MEMBER ADDRESS */}\n              <CopyWithTooltip\n                render={({elementRef, isCopied, setCopied, tooltipID}) => (\n                  <h3 onClick={setCopied}>\n                    <span\n                      data-for={tooltipID}\n                      data-tip={\n                        isCopied\n                          ? 'copied!'\n                          : ensNameFound\n                          ? `${memberDetails.addressENS} (${memberDetails.address})`\n                          : 'copy'\n                      }\n                      ref={elementRef}>\n                      {memberDetails.addressENS || memberDetails.address}\n                    </span>\n                  </h3>\n                )}\n                textToCopy={memberDetails.address}\n              />\n\n              {/* MEMBER INFO */}\n              {renderMemberInfo()}\n            </div>\n\n            {/* RIGHT COLUMN */}\n            <div className=\"memberprofile__right-column\">\n              {/* MEMBER ACTIONS */}\n              {renderMemberActions()}\n            </div>\n          </div>\n        </>\n      ) : (\n        // Render nothing. Should never reach this case.\n        <></>\n      )}\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function viewAll(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    history.push('/members');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Members</h2>\n          <button className=\"titlebar__action\" onClick={viewAll}>\n            View all\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {Link} from 'react-router-dom';\nimport {v4 as uuidv4} from 'uuid';\n\nimport {Member} from './types';\nimport {normalizeString} from '../../util/helpers';\nimport {useRef} from 'react';\nimport {useWeb3Modal} from '../../components/web3/hooks';\nimport ReactTooltip from 'react-tooltip';\n\ntype MemberCardProps = {\n  member: Member;\n  to?: string;\n};\n\nconst DEFAULT_CARD_LINK: string = '#';\n\n/**\n * Shows a preview of a member's profile\n *\n * @param {MemberCardProps} props\n * @returns {JSX.Element}\n */\nexport default function MemberCard(props: MemberCardProps): JSX.Element {\n  const {member, to = DEFAULT_CARD_LINK} = props;\n\n  /**\n   * Our hooks\n   */\n\n  const {account} = useWeb3Modal();\n\n  /**\n   * Refs\n   */\n\n  const tooltipIDRef = useRef<string>(uuidv4());\n\n  /**\n   * Variables\n   */\n\n  const ensNameFound: boolean =\n    member?.addressENS &&\n    normalizeString(member?.addressENS) !== normalizeString(member?.address)\n      ? true\n      : false;\n\n  /**\n   * Render\n   */\n\n  return (\n    <Link className={'membercard__link'} to={to}>\n      <div\n        className={`membercard ${\n          account &&\n          normalizeString(account) === normalizeString(member.address)\n            ? `membercard--connected-account`\n            : ''\n        }`}>\n        {/* TITLE */}\n        <h3\n          className=\"membercard__title\"\n          data-for={tooltipIDRef.current}\n          data-tip={\n            ensNameFound\n              ? `${member.addressENS} (${member.address})`\n              : member.address\n          }>\n          {member?.addressENS || member.address}\n        </h3>\n\n        <ReactTooltip\n          delayShow={200}\n          effect=\"solid\"\n          id={tooltipIDRef.current}\n        />\n      </div>\n    </Link>\n  );\n}\n","import {AsyncStatus} from '../../util/types';\nimport {Member} from './types';\nimport {useIsDefaultChain} from '../../components/web3/hooks';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport MemberCard from './MemberCard';\nimport useMembers from './hooks/useMembers';\nimport Wrap from '../../components/common/Wrap';\n\nfunction renderMemberCards(members: Member[]): JSX.Element[] {\n  return members.map((member) => {\n    return (\n      <MemberCard\n        key={member.address}\n        to={`/members/${member.address}`}\n        member={member}\n      />\n    );\n  });\n}\n\nexport default function Members() {\n  /**\n   * Our hooks\n   */\n\n  const {members, membersError, membersStatus} = useMembers();\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const isLoading: boolean =\n    membersStatus === AsyncStatus.STANDBY ||\n    membersStatus === AsyncStatus.PENDING;\n\n  const isLoadingDone: boolean = membersStatus === AsyncStatus.FULFILLED;\n\n  const error: Error | undefined = membersError || defaultChainError;\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong while getting the members.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render no members\n  if (!Object.values(members).length && isLoadingDone) {\n    return (\n      <RenderWrapper>\n        <p className=\"text-center\">No members, yet!</p>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <div className=\"grid--fluid grid-container\">\n        {/* ACTIVE MEMBERS */}\n        <div>\n          <div className=\"grid__header\">Active Members</div>\n          <div className=\"grid__cards\">{renderMemberCards(members)}</div>\n        </div>\n      </div>\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Members</h2>\n        </div>\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {Fragment, useEffect, useMemo, useState} from 'react';\n\nimport {\n  DaoAdapterConstants,\n  VotingAdapterName,\n} from '../adapters-extensions/enums';\nimport {\n  calculateVotingTimeRanges,\n  proposalHasFlag,\n  proposalHasVotingState,\n} from './helpers';\nimport {AsyncStatus} from '../../util/types';\nimport {BURN_ADDRESS} from '../../util/constants';\nimport {ContractDAOConfigKeys} from '../web3/types';\nimport {normalizeString} from '../../util/helpers';\nimport {OffchainVotingStatus} from './voting';\nimport {ProposalData, ProposalFlag} from './types';\nimport {ProposalHeaderNames} from '../../util/enums';\nimport {useDaoConfigurations} from '../../hooks';\nimport {useIsDefaultChain} from '../web3/hooks';\nimport {useProposals, useOffchainVotingResults} from './hooks';\nimport {VotingState} from './voting/types';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport LoaderLarge from '../feedback/LoaderLarge';\nimport ProposalCard from './ProposalCard';\n\ntype ProposalsProps = {\n  adapterName: DaoAdapterConstants;\n  /**\n   * Optionally provide a click handler for `ProposalCard`.\n   * The proposal's id (in the DAO) will be provided as an argument.\n   * Defaults to noop: `() => {}`\n   */\n  onProposalClick?: (id: string) => void;\n  /**\n   * The path to link to. Defaults to `${location.pathname}/${proposalOnClickId}`.\n   */\n  proposalLinkPath?: Parameters<typeof ProposalCard>['0']['linkPath'];\n  /**\n   * Optionally render a custom proposal card.\n   */\n  renderProposalCard?: (data: {proposalData: ProposalData}) => React.ReactNode;\n  /**\n   * To handle proposal types where the first step is creating a snapshot\n   * draft/offchain proposal only (no onchain proposal exists)\n   */\n  includeProposalsExistingOnlyOffchain?: boolean;\n};\n\ntype FilteredProposals = {\n  failedProposals: ProposalData[];\n  nonsponsoredProposals: ProposalData[];\n  passedProposals: ProposalData[];\n  votingProposals: ProposalData[];\n};\n\nconst configurationKeysToGet: ContractDAOConfigKeys[] = [\n  ContractDAOConfigKeys.offchainVotingVotingPeriod,\n  ContractDAOConfigKeys.offchainVotingGracePeriod,\n];\n\nexport default function Proposals(props: ProposalsProps): JSX.Element {\n  const {\n    adapterName,\n    onProposalClick = () => {},\n    proposalLinkPath,\n    renderProposalCard,\n    includeProposalsExistingOnlyOffchain = false,\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [proposalsForVotingResults, setProposalsForVotingResults] = useState<\n    ProposalData['snapshotProposal'][]\n  >([]);\n\n  const [filteredProposals, setFilteredProposals] = useState<FilteredProposals>(\n    {\n      failedProposals: [],\n      nonsponsoredProposals: [],\n      passedProposals: [],\n      votingProposals: [],\n    }\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    daoConfigurations: [offchainVotingPeriod, offchainGracePeriod],\n  } = useDaoConfigurations(configurationKeysToGet);\n\n  const {proposals, proposalsError, proposalsStatus} = useProposals(\n    useMemo(\n      () => ({\n        adapterName,\n        includeProposalsExistingOnlyOffchain,\n      }),\n      [adapterName, includeProposalsExistingOnlyOffchain]\n    )\n  );\n\n  const {\n    offchainVotingResults,\n    offchainVotingResultsError,\n    offchainVotingResultsStatus,\n  } = useOffchainVotingResults(proposalsForVotingResults);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const {\n    failedProposals,\n    nonsponsoredProposals,\n    passedProposals,\n    votingProposals,\n  } = filteredProposals;\n\n  const isLoading: boolean =\n    proposalsStatus === AsyncStatus.STANDBY ||\n    proposalsStatus === AsyncStatus.PENDING ||\n    // Getting ready to fetch using `useOffchainVotingResults`; helps to show\n    // continuous loader.\n    (offchainVotingResultsStatus === AsyncStatus.STANDBY &&\n      proposalsForVotingResults.length > 0) ||\n    offchainVotingResultsStatus === AsyncStatus.PENDING;\n\n  const error: Error | undefined =\n    proposalsError || offchainVotingResultsError || defaultChainError;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    setProposalsForVotingResults(proposals.map((p) => p.snapshotProposal));\n  }, [proposals]);\n\n  // Separate proposals into categories: non-sponsored, voting, passed, failed\n  useEffect(() => {\n    if (proposalsStatus !== AsyncStatus.FULFILLED) return;\n\n    const filteredProposalsToSet: FilteredProposals = {\n      failedProposals: [],\n      nonsponsoredProposals: [],\n      passedProposals: [],\n      votingProposals: [],\n    };\n\n    proposals.forEach((p) => {\n      const {\n        daoProposal,\n        daoProposalVotingState: voteState,\n        daoProposalVote: votesData,\n      } = p;\n\n      if (!daoProposal) return;\n\n      const noSnapshotVotes: boolean = p.snapshotProposal?.votes?.length === 0;\n\n      const offchainResultNotYetSubmitted: boolean =\n        voteState !== undefined &&\n        (proposalHasVotingState(VotingState.GRACE_PERIOD, voteState) ||\n          proposalHasVotingState(VotingState.TIE, voteState)) &&\n        proposalHasFlag(ProposalFlag.SPONSORED, daoProposal.flags) &&\n        votesData?.OffchainVotingContract?.reporter === BURN_ADDRESS;\n\n      // Non-sponsored proposal\n      if (voteState === undefined) {\n        if (includeProposalsExistingOnlyOffchain) {\n          filteredProposalsToSet.nonsponsoredProposals.push(p);\n        } else if (proposalHasFlag(ProposalFlag.EXISTS, daoProposal.flags)) {\n          filteredProposalsToSet.nonsponsoredProposals.push(p);\n        }\n\n        return;\n      }\n\n      // Passed proposal\n      if (\n        voteState !== undefined &&\n        proposalHasVotingState(VotingState.PASS, voteState) &&\n        (proposalHasFlag(ProposalFlag.SPONSORED, daoProposal.flags) ||\n          proposalHasFlag(ProposalFlag.PROCESSED, daoProposal.flags))\n      ) {\n        filteredProposalsToSet.passedProposals.push(p);\n\n        return;\n      }\n\n      const offchainResult = offchainVotingResults.find(\n        ([proposalHash, _result]) =>\n          normalizeString(proposalHash) ===\n          normalizeString(p.snapshotProposal?.idInDAO || '')\n      )?.[1];\n\n      // Did the vote pass by a simple majority?\n      const didPassSimpleMajority: boolean = offchainResult\n        ? offchainResult.Yes.units > offchainResult.No.units\n        : false;\n\n      /**\n       * Voting proposal: voting has ended, off-chain result was not submitted,\n       * and there are votes with a passing result (need to submit to get true\n       * \"passed\" result).\n       *\n       * @note For now, we can assume across all adapters that if the vote did\n       * not pass then the result does not need to be submitted (proposal would\n       * fall back to \"failed\" logic).\n       *\n       * @note Should be placed before \"failed\" logic.\n       */\n      if (\n        offchainResultNotYetSubmitted &&\n        noSnapshotVotes === false &&\n        didPassSimpleMajority\n      ) {\n        filteredProposalsToSet.votingProposals.push(p);\n\n        return;\n      }\n\n      // Failed proposal\n      if (\n        voteState !== undefined &&\n        (proposalHasVotingState(VotingState.NOT_PASS, voteState) ||\n          proposalHasVotingState(VotingState.TIE, voteState)) &&\n        (proposalHasFlag(ProposalFlag.SPONSORED, daoProposal.flags) ||\n          proposalHasFlag(ProposalFlag.PROCESSED, daoProposal.flags))\n      ) {\n        filteredProposalsToSet.failedProposals.push(p);\n\n        return;\n      }\n\n      // Failed proposal: no Snapshot votes\n      if (\n        voteState !== undefined &&\n        offchainResultNotYetSubmitted &&\n        noSnapshotVotes\n      ) {\n        filteredProposalsToSet.failedProposals.push(p);\n\n        return;\n      }\n\n      // Failed proposal: result not submitted; vote did not pass\n      if (\n        voteState !== undefined &&\n        offchainResultNotYetSubmitted &&\n        !didPassSimpleMajority\n      ) {\n        filteredProposalsToSet.failedProposals.push(p);\n\n        return;\n      }\n\n      // Voting proposal\n      if (\n        voteState !== undefined &&\n        (proposalHasVotingState(VotingState.GRACE_PERIOD, voteState) ||\n          proposalHasVotingState(VotingState.IN_PROGRESS, voteState)) &&\n        proposalHasFlag(ProposalFlag.SPONSORED, daoProposal.flags)\n      ) {\n        filteredProposalsToSet.votingProposals.push(p);\n\n        return;\n      }\n    });\n\n    setFilteredProposals((prevState) => ({\n      ...prevState,\n      ...filteredProposalsToSet,\n    }));\n  }, [\n    includeProposalsExistingOnlyOffchain,\n    offchainVotingResults,\n    proposals,\n    proposalsStatus,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  function renderProposalCards(\n    proposals: ProposalData[]\n  ): React.ReactNode | null {\n    return proposals.map((proposal) => {\n      const {\n        daoProposalVote,\n        daoProposalVotingAdapter,\n        snapshotDraft,\n        snapshotProposal,\n      } = proposal;\n\n      const proposalId = snapshotDraft?.idInDAO || snapshotProposal?.idInDAO;\n      const votingAdapterName = daoProposalVotingAdapter?.votingAdapterName;\n\n      let gracePeriodEndMs: number = 0;\n      let gracePeriodStartMs: number = 0;\n      let voteEndMs: number = 0;\n      let voteStartMs: number = 0;\n\n      switch (votingAdapterName) {\n        case VotingAdapterName.OffchainVotingContract:\n          const {startingTime, gracePeriodStartingTime} =\n            daoProposalVote?.[VotingAdapterName.OffchainVotingContract] || {};\n\n          const times = calculateVotingTimeRanges({\n            gracePeriodLength: offchainGracePeriod,\n            gracePeriodStartingTime,\n            votePeriodLength: offchainVotingPeriod,\n            voteStartingTime: startingTime,\n          });\n\n          gracePeriodEndMs = times.gracePeriodEndMs;\n          gracePeriodStartMs = times.gracePeriodStartMs;\n          voteEndMs = times.voteEndMs;\n          voteStartMs = times.voteStartMs;\n\n          break;\n\n        // @todo On-chain Voting\n        // case VotingAdapterName.VotingContract:\n        //   return <></>\n        default:\n          break;\n      }\n\n      if (!proposalId) return null;\n\n      if (renderProposalCard) {\n        return (\n          <Fragment key={proposalId}>\n            {renderProposalCard({proposalData: proposal})}\n          </Fragment>\n        );\n      }\n\n      const proposalName =\n        snapshotDraft?.msg.payload.name ||\n        snapshotProposal?.msg.payload.name ||\n        '';\n\n      const votingResult = offchainVotingResults.find(\n        ([proposalHash, _result]) =>\n          normalizeString(proposalHash) === normalizeString(proposalId)\n      )?.[1];\n\n      return (\n        <ProposalCard\n          key={proposalId}\n          linkPath={proposalLinkPath}\n          name={proposalName}\n          onClick={onProposalClick}\n          proposalOnClickId={proposalId}\n          renderStatus={() => {\n            switch (votingAdapterName) {\n              case VotingAdapterName.OffchainVotingContract:\n                return (\n                  <OffchainVotingStatus\n                    countdownGracePeriodEndMs={gracePeriodEndMs}\n                    countdownGracePeriodStartMs={gracePeriodStartMs}\n                    countdownVotingEndMs={voteEndMs}\n                    countdownVotingStartMs={voteStartMs}\n                    votingResult={votingResult}\n                  />\n                );\n              // @todo On-chain Voting\n              // case VotingAdapterName.VotingContract:\n              //   return <></>\n              default:\n                return <></>;\n            }\n          }}\n        />\n      );\n    });\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <div className=\"loader--large-container\">\n        <LoaderLarge />\n      </div>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <div className=\"text-center\">\n        <ErrorMessageWithDetails\n          error={error}\n          renderText=\"Something went wrong while getting the proposals.\"\n        />\n      </div>\n    );\n  }\n\n  // Render no proposals\n  if (\n    !Object.values(filteredProposals).flatMap((p) => p).length &&\n    proposalsStatus === AsyncStatus.FULFILLED\n  ) {\n    return <p className=\"text-center\">No proposals, yet!</p>;\n  }\n\n  // Render proposals\n  return (\n    <div className=\"grid--fluid grid-container\">\n      {/* VOTING PROPOSALS */}\n      {votingProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.VOTING}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(votingProposals)}\n          </div>\n        </>\n      )}\n\n      {/* PENDING PROPOSALS (DRAFTS, NOT SPONSORED) */}\n      {nonsponsoredProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.REQUESTS}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(nonsponsoredProposals)}\n          </div>\n        </>\n      )}\n\n      {/* PASSED PROPOSALS */}\n      {passedProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.PASSED}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(passedProposals)}\n          </div>\n        </>\n      )}\n\n      {/* FAILED PROPOSALS */}\n      {failedProposals.length > 0 && (\n        <>\n          <div className=\"grid__header\">{ProposalHeaderNames.FAILED}</div>\n          <div className=\"grid__cards\">\n            {renderProposalCards(failedProposals)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {DaoAdapterConstants} from '../../components/adapters-extensions/enums';\nimport FadeIn from '../../components/common/FadeIn';\nimport Proposals from '../../components/proposals/Proposals';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function Membership() {\n  /**\n   * Functions\n   */\n\n  function proposalLinkPath(id: string) {\n    return `/membership/${id}`;\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <RenderWrapper>\n      <Proposals\n        adapterName={DaoAdapterConstants.ONBOARDING}\n        proposalLinkPath={proposalLinkPath}\n        includeProposalsExistingOnlyOffchain={true}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function viewMembers(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    history.push('/members');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Membership</h2>\n          <button className=\"titlebar__action\" onClick={viewMembers}>\n            View members\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {useState, useRef, useEffect, useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {CycleEllipsis} from '../feedback';\nimport {getConnectedMember} from '../../store/actions';\nimport {ProposalData, SnapshotProposal} from './types';\nimport {ReduxDispatch, StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES} from '../web3/config';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {useDaoTokenDetails} from '../dao-token/hooks';\nimport {useMemberActionDisabled} from '../../hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport CycleMessage from '../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../web3/EtherscanURL';\nimport FadeIn from '../common/FadeIn';\nimport Loader from '../feedback/Loader';\n\ntype ProcessArguments = [\n  string, // `dao`\n  string // `proposalId`\n];\n\ntype ProcessActionMembershipProps = {\n  disabled?: boolean;\n  proposal: ProposalData;\n};\n\ntype ActionDisabledReasons = {\n  notProposerMessage: string;\n};\n\n/**\n * Cached outside the component to prevent infinite re-renders.\n *\n * The same can be accomplished inside the component using\n * `useState`, `useRef`, etc., depending on the use case.\n */\nconst useMemberActionDisabledProps = {\n  // Anyone can process a proposal - it's just a question of gas payment.\n  skipIsActiveMemberCheck: true,\n};\n\nexport default function ProcessActionMembership(\n  props: ProcessActionMembershipProps\n) {\n  const {\n    disabled: propsDisabled,\n    proposal: {snapshotProposal},\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n  const [membershipProposalAmount, setMembershipProposalAmount] =\n    useState<string>();\n\n  /**\n   * Refs\n   */\n\n  const actionDisabledReasonsRef = useRef<ActionDisabledReasons>({\n    notProposerMessage: '',\n  });\n\n  /**\n   * Selectors\n   */\n\n  const OnboardingContract = useSelector(\n    (s: StoreState) => s.contracts?.OnboardingContract\n  );\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {txEtherscanURL, txIsPromptOpen, txSend, txStatus} = useContractSend();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    WhyDisabledModal,\n    setOtherDisabledReasons,\n  } = useMemberActionDisabled(useMemberActionDisabledProps);\n\n  const {daoTokenDetails} = useDaoTokenDetails();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Variables\n   */\n\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n  const isDone = txStatus === Web3TxStatus.FULFILLED;\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n  const areSomeDisabled = isDisabled || isInProcessOrDone || propsDisabled;\n\n  /**\n   * Cached callbacks\n   */\n\n  const getMembershipProposalAmountCached = useCallback(\n    getMembershipProposalAmount,\n    [OnboardingContract, daoRegistryContract?.contractAddress, snapshotProposal]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getMembershipProposalAmountCached();\n  }, [getMembershipProposalAmountCached]);\n\n  useEffect(() => {\n    // 1. Determine and set reasons why action would be disabled\n\n    // Reason: For some proposal types, a passed proposal can only be\n    // processed by its original proposer (e.g., the owner of the asset to be\n    // transferred)\n\n    // Proposals with this restriction will have this value stored in its\n    // snapshot metadata.\n    const {accountAuthorizedToProcessPassedProposal} = (\n      snapshotProposal as SnapshotProposal\n    ).msg.payload.metadata;\n\n    if (accountAuthorizedToProcessPassedProposal && account) {\n      actionDisabledReasonsRef.current = {\n        ...actionDisabledReasonsRef.current,\n        notProposerMessage:\n          accountAuthorizedToProcessPassedProposal.toLowerCase() !==\n          account.toLowerCase()\n            ? 'Only the original proposer can process the proposal.'\n            : '',\n      };\n    }\n\n    // 2. Set reasons\n    setOtherDisabledReasons(Object.values(actionDisabledReasonsRef.current));\n  }, [account, setOtherDisabledReasons, snapshotProposal]);\n\n  /**\n   * Functions\n   */\n\n  async function getMembershipProposalAmount() {\n    try {\n      if (\n        !daoRegistryContract?.contractAddress ||\n        !OnboardingContract ||\n        !snapshotProposal\n      ) {\n        return;\n      }\n\n      const proposalDetails = await OnboardingContract.instance.methods\n        .proposals(\n          daoRegistryContract.contractAddress,\n          snapshotProposal.idInDAO\n        )\n        .call();\n\n      setMembershipProposalAmount(proposalDetails.amount);\n    } catch (error) {\n      console.error(error);\n      setMembershipProposalAmount(undefined);\n    }\n  }\n\n  async function handleSubmit() {\n    try {\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!snapshotProposal) {\n        throw new Error('No Snapshot proposal was found.');\n      }\n\n      if (!OnboardingContract) {\n        throw new Error('No OnboardingContract found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      const processArguments: ProcessArguments = [\n        daoRegistryContract.contractAddress,\n        snapshotProposal.idInDAO,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        value: membershipProposalAmount,\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      const tx = await txSend(\n        'processProposal',\n        OnboardingContract.instance.methods,\n        processArguments,\n        txArguments\n      );\n\n      if (tx) {\n        // re-fetch member\n        await dispatch(\n          getConnectedMember({\n            account,\n            daoRegistryContract,\n            web3Instance,\n          })\n        );\n\n        // if connected account is the applicant (the address that will receive\n        // the membership units) suggest adding DAO token to wallet\n        if (\n          account.toLowerCase() ===\n          snapshotProposal.msg.payload.metadata.submitActionArgs[0].toLowerCase()\n        ) {\n          await addTokenToWallet();\n        }\n      }\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  async function addTokenToWallet() {\n    if (!daoTokenDetails) return;\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: daoTokenDetails,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  function renderSubmitStatus(): React.ReactNode {\n    // process proposal transaction statuses\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Confirm to process the proposal\n            <CycleEllipsis />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Proposal submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <button\n          className=\"proposaldetails__button\"\n          disabled={areSomeDisabled}\n          onClick={areSomeDisabled ? () => {} : handleSubmit}>\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Process'}\n        </button>\n\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n\n        {/* SUBMIT STATUS */}\n\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}>\n            Why is processing disabled?\n          </button>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is processing disabled?\" />\n    </>\n  );\n}\n","import {lazy, Suspense} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {ContractAdapterNames} from '../web3/types';\nimport {CycleEllipsis} from '../feedback';\nimport {ProposalData, RenderActionPropArguments} from './types';\nimport {StoreState} from '../../store/types';\nimport {VotingAdapterName} from '../adapters-extensions/enums';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\n\ntype ProposalActionsProps = {\n  adapterName: ContractAdapterNames;\n  proposal: ProposalData;\n  /**\n   * A render prop which can render any action desired.\n   * It is passed inner state and data from\n   * the child action wrapper component.\n   *\n   * - If it renders `null`, it will fall back to the component's actions.\n   * - If it renders `<></>` (`React.Fragment`) then nothing is shown in the UI.\n   */\n  renderAction?: (data: RenderActionPropArguments) => React.ReactNode;\n};\n\n/**\n * Lazy load action component tree\n */\nconst ProposalWithOffchainVoteActions = lazy(\n  () => import('./ProposalWithOffchainVoteActions')\n);\n\nconst fadeInProps = {duration: 150};\nconst cycleEllipsisStyles = {\n  display: 'inline-block',\n  width: '100%',\n  fontSize: '1.5rem',\n};\n\n/**\n * ProposalActions\n *\n * A container for various propsal action flows.\n * Which flow is chosen is determined by either the proposal's,\n * or the DAO's, voting adapter name.\n *\n * @param {ProposalActionsProps} props\n * @returns {JSX.Element}\n */\nexport default function ProposalActions(\n  props: ProposalActionsProps\n): JSX.Element {\n  const {adapterName, proposal, renderAction} = props;\n\n  /**\n   * Selectors\n   */\n\n  const daoVotingAdapterName = useSelector(\n    (s: StoreState) => s.contracts.VotingContract?.adapterOrExtensionName\n  ) as VotingAdapterName | undefined;\n\n  /**\n   * Variables\n   */\n\n  // Use the proposal's voting adapter (has been sponsored), or fall back to the DAO's (not-yet-sponsored).\n  const votingAdapterName: VotingAdapterName | undefined =\n    proposal.daoProposalVotingAdapter?.votingAdapterName ||\n    daoVotingAdapterName;\n\n  /**\n   * Functions\n   */\n\n  function renderActions() {\n    if (!votingAdapterName) {\n      return <></>;\n    }\n\n    switch (votingAdapterName) {\n      case VotingAdapterName.OffchainVotingContract:\n        return (\n          <ProposalWithOffchainVoteActions\n            adapterName={adapterName}\n            proposal={proposal}\n            renderAction={renderAction}\n          />\n        );\n\n      // @todo On-chain Voting\n      case VotingAdapterName.VotingContract:\n        return <></>;\n\n      default:\n        return (\n          <ErrorMessageWithDetails\n            error={\n              new Error(\n                `\"${votingAdapterName}\" is not a valid voting adapter name.`\n              )\n            }\n            renderText=\"Something went wrong\"\n          />\n        );\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Suspense\n      fallback={\n        <span className=\"text-center\" style={cycleEllipsisStyles}>\n          <CycleEllipsis intervalMs={200} fadeInProps={fadeInProps} />\n        </span>\n      }>\n      {renderActions()}\n    </Suspense>\n  );\n}\n","type ProposalAmountProps = {\n  amount: string;\n  amountUnit: string;\n  amount2?: string;\n  amount2Unit?: string;\n};\n\nexport default function ProposalAmount(props: ProposalAmountProps) {\n  const {amount, amountUnit, amount2, amount2Unit} = props;\n\n  /**\n   * Render\n   */\n\n  return (\n    <div className=\"proposaldetails__amount\">\n      <span>\n        {`${amount} ${amountUnit}`}\n        {/* assumes second amount is value requested from the DAO */}\n        {amount2 && (\n          <>\n            <br />\n            <small>for</small>\n            <br />\n            {`${amount2} ${amount2Unit}`}\n          </>\n        )}\n      </span>\n    </div>\n  );\n}\n","import React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {\n  ProposalFlowStatus,\n  RenderActionPropArguments,\n} from '../../components/proposals/types';\nimport {AsyncStatus} from '../../util/types';\nimport {ContractAdapterNames} from '../../components/web3/types';\nimport {useIsDefaultChain} from '../../components/web3/hooks';\nimport {useProposalOrDraft} from '../../components/proposals/hooks';\nimport {VotingState} from '../../components/proposals/voting/types';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport NotFound from '../subpages/NotFound';\nimport ProcessActionMembership from '../../components/proposals/ProcessActionMembership';\nimport ProposalActions from '../../components/proposals/ProposalActions';\nimport SubmitAction from '../../components/proposals/SubmitAction';\nimport ProposalAmount from '../../components/proposals/ProposalAmount';\nimport ProposalDetails from '../../components/proposals/ProposalDetails';\nimport Wrap from '../../components/common/Wrap';\n\nconst PLACEHOLDER = '\\u2014'; /* em dash */\n\nexport default function MembershipDetails() {\n  /**\n   * @todo\n   *\n   * 1. Fetch proposal by ID from the subgraph.\n   * 2. Determine if sponsored\n   * 3. Get Snapshot data\n   *   3.1 If sponsored, get data about proposal from Snapshot (use flag to also search by draft hash).\n   *   3.2 If not sponsored, get data about draft from Snapshot.\n   */\n\n  /**\n   * Their hooks\n   */\n\n  // Get hash for fetching the proposal.\n  const {proposalId} = useParams<{proposalId: string}>();\n\n  /**\n   * @todo Get subgraph proposal and determine if it has been sponsored\n   *   so we know how to search snapshot-hub.\n   */\n\n  // ...\n\n  /**\n   * Our hooks\n   */\n\n  // @todo Use dynamic `SnapshotType` depending on subgraph data for `type` arg.\n  const {proposalData, proposalError, proposalNotFound, proposalStatus} =\n    useProposalOrDraft(proposalId);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const isLoading: boolean = proposalStatus === AsyncStatus.PENDING;\n  const error: Error | undefined = proposalError || defaultChainError;\n\n  /**\n   * Functions\n   */\n\n  // Render any adapter-specific actions\n  function renderAction(data: RenderActionPropArguments): React.ReactNode {\n    const {\n      OffchainVotingContract: {daoProposalVoteResult, proposal, status},\n    } = data;\n\n    // Submit/Sponsor button (for proposals that have not been submitted onchain yet)\n    if (status === ProposalFlowStatus.Submit) {\n      const {snapshotDraft} = proposal;\n      const applicant = snapshotDraft?.msg.payload.metadata.submitActionArgs[0];\n\n      return <SubmitAction checkApplicant={applicant} proposal={proposal} />;\n    }\n\n    // Process button\n    if (\n      status === ProposalFlowStatus.Process ||\n      status === ProposalFlowStatus.OffchainVotingGracePeriod\n    ) {\n      if (\n        daoProposalVoteResult &&\n        VotingState[daoProposalVoteResult] !== VotingState[VotingState.PASS]\n      ) {\n        // Return a React.Fragment to hide the process button if proposal failed.\n        return <></>;\n      }\n\n      return (\n        <ProcessActionMembership\n          // Show during DAO proposal grace period, but set to disabled\n          disabled={status === ProposalFlowStatus.OffchainVotingGracePeriod}\n          proposal={proposal}\n        />\n      );\n    }\n\n    // Return `null` to signal to use default actions\n    return null;\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render 404 no proposal found\n  if (proposalNotFound) {\n    return (\n      <RenderWrapper>\n        <NotFound />\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong while getting the proposal.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render proposal\n  if (proposalData) {\n    const commonData = proposalData.getCommonSnapshotProposalData();\n\n    // Handle just in case metadata was not properly set\n    let tributeAmount = PLACEHOLDER;\n    let tributeAmountUnit = '';\n    try {\n      ({tributeAmount, tributeAmountUnit} =\n        commonData?.msg.payload.metadata.proposalAmountValues);\n    } catch (error) {\n      tributeAmount = PLACEHOLDER;\n      tributeAmountUnit = '';\n    }\n\n    return (\n      <RenderWrapper>\n        <ProposalDetails\n          proposal={proposalData}\n          renderAmountBadge={() => (\n            <ProposalAmount\n              amount={tributeAmount}\n              amountUnit={tributeAmountUnit}\n            />\n          )}\n          renderActions={() => (\n            <ProposalActions\n              adapterName={ContractAdapterNames.onboarding}\n              proposal={proposalData}\n              renderAction={renderAction}\n            />\n          )}\n        />\n      </RenderWrapper>\n    );\n  }\n\n  // Render nothing. Should never reach this case.\n  return <></>;\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToAll(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    history.push('/membership');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Membership</h2>\n          <button className=\"titlebar__action\" onClick={goToAll}>\n            View all\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {useState, useEffect} from 'react';\n\ntype LoaderWithEmojiProps = {\n  emoji: string;\n  // Show waiting effect after some time has elapsed. Prevents the \"sudden\n  // spinner\" UI/UX no-no. Esp. if we could have cached data.\n  showAfterMs?: number;\n};\n\nexport default function LoaderWithEmoji(props: LoaderWithEmojiProps) {\n  const {showAfterMs} = props;\n  const [showLoaderAfterMs, setShowLoaderAfterMs] = useState<boolean>(false);\n\n  useEffect(() => {\n    /* 200ms is approx. the time a user will notice a stalled, blank screen */\n    const timeoutId =\n      showAfterMs && setTimeout(() => setShowLoaderAfterMs(true), showAfterMs);\n\n    return function cleanup() {\n      timeoutId && clearTimeout(timeoutId);\n    };\n  }, [showAfterMs]);\n\n  return !showAfterMs || (showAfterMs && showLoaderAfterMs) ? (\n    <div className=\"loader--emoji\">\n      <span role=\"img\" aria-label=\"Loading content...\">\n        {props.emoji}\n      </span>\n    </div>\n  ) : null;\n}\n","import {useRef, useEffect} from 'react';\nimport {toChecksumAddress} from 'web3-utils';\n\nimport {CycleEllipsis} from '../../components/feedback/CycleEllipsis';\nimport CycleMessage from '../../components/feedback/CycleMessage';\nimport EtherscanURL from '../../components/web3/EtherscanURL';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport Loader from '../../components/feedback/Loader';\nimport DaoToken, {\n  ERC20RegisterDetails,\n} from '../../components/dao-token/DaoToken';\nimport {useCheckApplicant} from '../../components/proposals/hooks';\nimport {useRedeemCoupon, FetchStatus} from '../../hooks/useRedeemCoupon';\nimport {useMemberActionDisabled} from '../../hooks';\nimport {formatNumber, truncateEthAddress} from '../../util/helpers';\nimport {Web3TxStatus} from '../../components/web3/types';\nimport {TX_CYCLE_MESSAGES} from '../../components/web3/config';\nimport {AsyncStatus} from '../../util/types';\n\ntype RedeemManagerProps = {\n  redeemables: Record<string, any>;\n  daoTokenDetails?: ERC20RegisterDetails;\n};\n\ntype RedeemCardProps = {\n  redeemable: Record<string, any>;\n  daoTokenDetails?: ERC20RegisterDetails;\n};\n\ntype ActionDisabledReasons = {\n  invalidApplicantMessage: string;\n};\n\n/**\n * Cached outside the component to prevent infinite re-renders.\n *\n * The same can be accomplished inside the component using\n * `useState`, `useRef`, etc., depending on the use case.\n */\nconst useMemberActionDisabledProps = {\n  // Anyone can process a proposal - it's just a question of gas payment.\n  skipIsActiveMemberCheck: true,\n};\n\nexport default function RedeemManager({\n  redeemables,\n  daoTokenDetails,\n}: RedeemManagerProps) {\n  /**\n   *  Render\n   */\n\n  // show the redeem card, if only one coupon available\n  return (\n    <RenderWrapper>\n      <RedeemCard\n        redeemable={redeemables[0]}\n        daoTokenDetails={daoTokenDetails}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RedeemCard({redeemable, daoTokenDetails}: RedeemCardProps) {\n  /**\n   * Refs\n   */\n\n  const actionDisabledReasonsRef = useRef<ActionDisabledReasons>({\n    invalidApplicantMessage: '',\n  });\n\n  /**\n   * Our hooks\n   */\n\n  const {\n    redeemCoupon,\n    submitStatus,\n    submitError,\n    txStatus,\n    txEtherscanURL,\n    txIsPromptOpen,\n  } = useRedeemCoupon();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    WhyDisabledModal,\n    setOtherDisabledReasons,\n  } = useMemberActionDisabled(useMemberActionDisabledProps);\n\n  const {\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n  } = useCheckApplicant(redeemable.recipient);\n\n  /**\n   * Variables\n   */\n\n  const isInProcess =\n    submitStatus === FetchStatus.PENDING ||\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n  const isDone =\n    submitStatus === FetchStatus.FULFILLED ||\n    txStatus === Web3TxStatus.FULFILLED ||\n    redeemable.isRedeemd;\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (redeemable.recipient) {\n      // 1. Determine and set reasons why action would be disabled\n\n      // Reason: If the applicant address is invalid (see `useCheckApplicant`\n      // hook for reasons) the `submitProposal` smart contract transaction will\n      // fail.\n      if (checkApplicantError) {\n        console.warn(\n          `Error checking if the applicant address '${redeemable.recipient}' is valid: ${checkApplicantError.message}`\n        );\n      }\n\n      if (\n        checkApplicantStatus === AsyncStatus.FULFILLED &&\n        !isApplicantValid &&\n        checkApplicantInvalidMsg\n      ) {\n        actionDisabledReasonsRef.current = {\n          ...actionDisabledReasonsRef.current,\n          invalidApplicantMessage: checkApplicantInvalidMsg,\n        };\n      }\n\n      // 2. Set reasons\n      setOtherDisabledReasons(Object.values(actionDisabledReasonsRef.current));\n    }\n  }, [\n    checkApplicantError,\n    checkApplicantInvalidMsg,\n    checkApplicantStatus,\n    isApplicantValid,\n    redeemable.recipient,\n    setOtherDisabledReasons,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  function renderSubmitStatus(): React.ReactNode {\n    // Only for chain tx\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Awaiting your confirmation\n            <CycleEllipsis />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message: string) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>{'Finalized!'}</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      <div\n        className={`redeemcard redeemcard__content ${\n          isDone ? 'fireworks' : ''\n        } `}>\n        <p className=\"redeemcard__recipient\">\n          Recipient:{' '}\n          {truncateEthAddress(toChecksumAddress(redeemable.recipient), 7)}\n        </p>\n        <p className=\"redeemcard__unit\">\n          {formatNumber(redeemable.amount)}\n          <sup>\n            <small>{daoTokenDetails?.symbol || 'tokens'}</small>\n          </sup>\n        </p>\n\n        <DaoToken daoTokenDetails={daoTokenDetails} />\n\n        {isDone && (\n          <p className=\"redeemcard__redeemed\">\n            <span\n              className=\"pulse\"\n              role=\"img\"\n              aria-label=\"Redeemed!\"\n              style={{display: 'inline-block'}}>\n              🥳\n            </span>\n          </p>\n        )}\n\n        <button\n          className=\"button\"\n          style={{marginTop: isDone ? '1rem' : '1.5rem'}}\n          onClick={async () => {\n            await redeemCoupon(redeemable, daoTokenDetails);\n          }}\n          disabled={isDisabled || isInProcessOrDone}>\n          {isInProcess ? <Loader /> : isDone ? 'Redeemed!' : 'Redeem'}\n        </button>\n\n        {/* SUBMIT STATUS */}\n        {isInProcessOrDone && !redeemable.isRedeemd && (\n          <div\n            className=\"form__submit-status-container\"\n            style={{marginTop: '1rem'}}>\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}\n            style={{margin: '1rem auto 0'}}>\n            Why is redeeming disabled?\n          </button>\n        )}\n\n        {/* SUBMIT ERROR */}\n        {submitError && (\n          <div className=\"form__submit-error-container\">\n            <ErrorMessageWithDetails\n              renderText=\"Something went wrong while redeeming the coupon.\"\n              error={submitError}\n            />\n          </div>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is redeeming disabled?\" />\n    </>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  return (\n    <FadeIn>\n      <div className=\"grid--fluid grid-container\">\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </div>\n    </FadeIn>\n  );\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport {useLocation} from 'react-router-dom';\n\nimport {AsyncStatus} from '../../util/types';\nimport {COUPON_API_URL} from '../../config';\nimport {useAbortController} from '../../hooks';\nimport {useIsDefaultChain, useWeb3Modal} from '../../components/web3/hooks';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderWithEmoji from '../../components/feedback/LoaderWithEmoji';\nimport RedeemManager from './RedeemManager';\nimport Wrap from '../../components/common/Wrap';\nimport {useDaoTokenDetails} from '../../components/dao-token/hooks';\n\ntype RedeemCouponType = {\n  amount: number;\n  dao: {daoAddress: string};\n  isRedeemed: boolean;\n  nonce: number;\n  recipient: string;\n  signature: string;\n};\n\nexport default function RedeemCoupon() {\n  /**\n   * State\n   */\n\n  const [redeemableCoupon, setReedemableCoupon] = useState<RedeemCouponType[]>(\n    []\n  );\n  const [couponStatus, setCouponStatus] = useState<AsyncStatus>(\n    AsyncStatus.STANDBY\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {connected, account} = useWeb3Modal();\n  const {defaultChainError} = useIsDefaultChain();\n  const {abortController, isMountedRef} = useAbortController();\n  const {daoTokenDetails, daoTokenDetailsStatus} = useDaoTokenDetails();\n\n  /**\n   * Their hooks\n   */\n\n  const location = useLocation<{coupon: string}>();\n\n  /**\n   * Variables\n   */\n\n  const coupon = new URLSearchParams(location.search).get('coupon');\n\n  const isInProcess =\n    couponStatus === AsyncStatus.STANDBY ||\n    couponStatus === AsyncStatus.PENDING ||\n    daoTokenDetailsStatus === AsyncStatus.STANDBY ||\n    daoTokenDetailsStatus === AsyncStatus.PENDING;\n\n  /**\n   * Cached callbacks\n   */\n\n  const checkBySigOrAddrCached = useCallback(checkBySigOrAddr, [\n    abortController?.signal,\n    coupon,\n    isMountedRef,\n  ]);\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    if (!account || !connected || defaultChainError) return;\n\n    checkBySigOrAddrCached();\n  }, [account, connected, checkBySigOrAddrCached, defaultChainError]);\n\n  /**\n   * Functions\n   */\n\n  // check using signature or eth addr\n  async function checkBySigOrAddr() {\n    try {\n      if (!abortController?.signal) return;\n\n      setCouponStatus(AsyncStatus.PENDING);\n\n      // handle adding new authorized user to thee `auth` tbl\n      const response = await fetch(`${COUPON_API_URL}/api/coupon/redeem`, {\n        method: 'POST',\n        body: JSON.stringify({\n          signature: coupon,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        signal: abortController.signal,\n      });\n\n      if (!isMountedRef.current) return;\n\n      const coupons = await response.json();\n\n      setReedemableCoupon(coupons);\n      setCouponStatus(AsyncStatus.FULFILLED);\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setCouponStatus(AsyncStatus.REJECTED);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  // check if user doesn't have a connected wallet\n  if (!connected) {\n    return (\n      <RenderWrapper>\n        <p className=\"color-brightsalmon\">\n          Connect your wallet to view the coupon.\n        </p>\n      </RenderWrapper>\n    );\n  }\n\n  if (defaultChainError) {\n    return (\n      <RenderWrapper>\n        <p className=\"color-brightsalmon\">{defaultChainError.message}</p>\n      </RenderWrapper>\n    );\n  }\n\n  if (connected && isInProcess) {\n    return (\n      <RenderWrapper>\n        <LoaderWithEmoji emoji={'🎟'} />\n        <p>Checking&hellip; please wait.</p>\n      </RenderWrapper>\n    );\n  }\n\n  if (coupon === undefined || !coupon) {\n    return (\n      <RenderWrapper>\n        <p className=\"color-brightsalmon\">Coupon signature missing.</p>\n      </RenderWrapper>\n    );\n  }\n\n  if (!redeemableCoupon || !redeemableCoupon.length) {\n    return (\n      <RenderWrapper>\n        <p className=\"color-brightsalmon\">Coupon not found.</p>\n      </RenderWrapper>\n    );\n  }\n\n  return (\n    <RenderWrapper>\n      <RedeemManager\n        daoTokenDetails={daoTokenDetails}\n        redeemables={redeemableCoupon}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Redeem Coupon</h2>\n        </div>\n\n        <div className=\"form-wrapper\">\n          <div className=\"form__description\">\n            <p>Redeem coupon to issue the membership tokens.</p>\n          </div>\n\n          {/* RENDER CHILDREN */}\n          {props.children}\n        </div>\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {useEffect, useState, useRef} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {CycleEllipsis} from '../feedback';\nimport {getConnectedMember} from '../../store/actions';\nimport {ProposalData, DistributionStatus} from './types';\nimport {ReduxDispatch, StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES} from '../web3/config';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {useMemberActionDisabled} from '../../hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport CycleMessage from '../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../web3/EtherscanURL';\nimport FadeIn from '../common/FadeIn';\nimport Loader from '../feedback/Loader';\n\ntype DistributeArguments = [\n  string, // `dao`\n  string // `toIndex`\n];\n\ntype PostProcessActionTransferProps = {\n  proposal: ProposalData;\n};\n\ntype ActionDisabledReasons = {\n  alreadyCompletedMessage: string;\n};\n\nexport default function PostProcessActionTransfer(\n  props: PostProcessActionTransferProps\n) {\n  const {\n    proposal: {snapshotProposal},\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  /**\n   * Refs\n   */\n\n  const actionDisabledReasonsRef = useRef<ActionDisabledReasons>({\n    alreadyCompletedMessage: '',\n  });\n\n  /**\n   * Selectors\n   */\n\n  const DistributeContract = useSelector(\n    (s: StoreState) => s.contracts?.DistributeContract\n  );\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {txEtherscanURL, txIsPromptOpen, txSend, txStatus} = useContractSend();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    WhyDisabledModal,\n    setOtherDisabledReasons,\n  } = useMemberActionDisabled();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Variables\n   */\n\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING;\n\n  const isDone = txStatus === Web3TxStatus.FULFILLED;\n  const isInProcessOrDone = isInProcess || isDone || txIsPromptOpen;\n  const areSomeDisabled = isDisabled || isInProcessOrDone;\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    async function getActionDisabledReasons() {\n      // 1. Determine and set reasons why action would be disabled\n\n      // Reason: distribution already completed\n      try {\n        if (!snapshotProposal) {\n          throw new Error('No Snapshot proposal was found.');\n        }\n\n        if (!daoRegistryContract) {\n          throw new Error('No DAO Registry contract was found.');\n        }\n\n        if (!DistributeContract) {\n          throw new Error('No DistributeContract found.');\n        }\n\n        const distributeProposal = await DistributeContract.instance.methods\n          .distributions(\n            daoRegistryContract.contractAddress,\n            snapshotProposal.idInDAO\n          )\n          .call();\n\n        actionDisabledReasonsRef.current = {\n          ...actionDisabledReasonsRef.current,\n          alreadyCompletedMessage:\n            DistributionStatus[distributeProposal.status] !==\n            DistributionStatus[DistributionStatus.IN_PROGRESS]\n              ? 'The transfer has already been completed.'\n              : '',\n        };\n      } catch (error) {\n        console.error(error);\n      }\n\n      // 2. Set reasons\n      setOtherDisabledReasons(Object.values(actionDisabledReasonsRef.current));\n    }\n\n    getActionDisabledReasons();\n  }, [\n    DistributeContract,\n    daoRegistryContract,\n    setOtherDisabledReasons,\n    snapshotProposal,\n  ]);\n\n  /**\n   * Functions\n   */\n\n  async function handleSubmit() {\n    try {\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!snapshotProposal) {\n        throw new Error('No Snapshot proposal was found.');\n      }\n\n      if (!DistributeContract) {\n        throw new Error('No DistributeContract found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      let toIndexArg = '0';\n\n      const isTypeAllMembers =\n        snapshotProposal?.msg.payload.metadata.isTypeAllMembers;\n\n      if (isTypeAllMembers) {\n        try {\n          const nbMembers = await daoRegistryContract.instance.methods\n            .getNbMembers()\n            .call();\n          toIndexArg = nbMembers.toString();\n        } catch (error) {\n          throw new Error('Error while retrieving number of DAO members');\n        }\n      }\n\n      const distributeArguments: DistributeArguments = [\n        daoRegistryContract.contractAddress,\n        toIndexArg,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      const tx = await txSend(\n        'distribute',\n        DistributeContract.instance.methods,\n        distributeArguments,\n        txArguments\n      );\n\n      if (tx) {\n        // re-fetch member\n        await dispatch(\n          getConnectedMember({\n            account,\n            daoRegistryContract,\n            web3Instance,\n          })\n        );\n      }\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  function renderSubmitStatus(): React.ReactNode {\n    // distribute transaction statuses\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Confirm to transfer assets\n            <CycleEllipsis />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Assets transferred!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <button\n          className=\"proposaldetails__button\"\n          disabled={areSomeDisabled}\n          onClick={areSomeDisabled ? () => {} : handleSubmit}>\n          {isInProcess ? (\n            <Loader />\n          ) : isDone ? (\n            'Transfer done'\n          ) : (\n            'Transfer assets'\n          )}\n        </button>\n\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n\n        {/* SUBMIT STATUS */}\n\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}>\n            Why is action disabled?\n          </button>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is transfer disabled?\" />\n    </>\n  );\n}\n","import React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {\n  ProposalFlowStatus,\n  RenderActionPropArguments,\n} from '../../components/proposals/types';\nimport {AsyncStatus} from '../../util/types';\nimport {ContractAdapterNames} from '../../components/web3/types';\nimport {useIsDefaultChain} from '../../components/web3/hooks';\nimport {useProposalOrDraft} from '../../components/proposals/hooks';\nimport {VotingState} from '../../components/proposals/voting/types';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport NotFound from '../subpages/NotFound';\nimport PostProcessActionTransfer from '../../components/proposals/PostProcessActionTransfer';\nimport ProposalActions from '../../components/proposals/ProposalActions';\nimport ProposalAmount from '../../components/proposals/ProposalAmount';\nimport ProposalDetails from '../../components/proposals/ProposalDetails';\nimport Wrap from '../../components/common/Wrap';\n\nconst PLACEHOLDER = '\\u2014'; /* em dash */\n\nexport default function TransferDetails() {\n  /**\n   * @todo\n   *\n   * 1. Fetch proposal by ID from the subgraph.\n   * 2. Determine if sponsored\n   * 3. Get Snapshot data\n   *   3.1 If sponsored, get data about proposal from Snapshot (use flag to also search by draft hash).\n   *   3.2 If not sponsored, get data about draft from Snapshot.\n   */\n\n  /**\n   * Their hooks\n   */\n\n  // Get hash for fetching the proposal.\n  const {proposalId} = useParams<{proposalId: string}>();\n\n  /**\n   * @todo Get subgraph proposal and determine if it has been sponsored\n   *   so we know how to search snapshot-hub.\n   */\n\n  // ...\n\n  /**\n   * Our hooks\n   */\n\n  // @todo Use dynamic `SnapshotType` depending on subgraph data for `type` arg.\n  const {proposalData, proposalError, proposalNotFound, proposalStatus} =\n    useProposalOrDraft(proposalId);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const isLoading: boolean = proposalStatus === AsyncStatus.PENDING;\n  const error: Error | undefined = proposalError || defaultChainError;\n\n  /**\n   * Functions\n   */\n\n  // Render any adapter-specific actions\n  function renderAction(data: RenderActionPropArguments): React.ReactNode {\n    const {\n      OffchainVotingContract: {daoProposalVoteResult, proposal, status},\n    } = data;\n\n    //  The Distribute adapter has an additional action after a passed proposal\n    //  is processed to handle the actual asset distribution.\n    if (\n      status === ProposalFlowStatus.Completed &&\n      daoProposalVoteResult &&\n      VotingState[daoProposalVoteResult] === VotingState[VotingState.PASS]\n    ) {\n      return <PostProcessActionTransfer proposal={proposal} />;\n    }\n\n    // Return `null` to signal to use default actions\n    return null;\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render 404 no proposal found\n  if (proposalNotFound) {\n    return (\n      <RenderWrapper>\n        <NotFound />\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render proposal\n  if (proposalData) {\n    const commonData = proposalData.getCommonSnapshotProposalData();\n\n    // Handle just in case metadata was not properly set\n    let transferAmount = PLACEHOLDER;\n    let transferAmountUnit = '';\n    try {\n      ({transferAmount, transferAmountUnit} =\n        commonData?.msg.payload.metadata.proposalAmountValues);\n    } catch (error) {\n      transferAmount = PLACEHOLDER;\n      transferAmountUnit = '';\n    }\n\n    return (\n      <RenderWrapper>\n        <ProposalDetails\n          proposal={proposalData}\n          renderAmountBadge={() => (\n            <ProposalAmount\n              amount={transferAmount}\n              amountUnit={transferAmountUnit}\n            />\n          )}\n          renderActions={() => (\n            <ProposalActions\n              adapterName={ContractAdapterNames.distribute}\n              proposal={proposalData}\n              renderAction={renderAction}\n            />\n          )}\n        />\n      </RenderWrapper>\n    );\n  }\n\n  // Render nothing. Should never reach this case.\n  return <></>;\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToAll(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    history.push('/transfers');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Transfers</h2>\n          <button className=\"titlebar__action\" onClick={goToAll}>\n            View all\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {DaoAdapterConstants} from '../../components/adapters-extensions/enums';\nimport FadeIn from '../../components/common/FadeIn';\nimport Proposals from '../../components/proposals/Proposals';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function Transfers() {\n  /**\n   * Functions\n   */\n\n  function proposalLinkPath(id: string) {\n    return `/transfers/${id}`;\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <RenderWrapper>\n      <Proposals\n        adapterName={DaoAdapterConstants.DISTRIBUTE}\n        proposalLinkPath={proposalLinkPath}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToNewProposal(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    history.push('/transfer');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Transfers</h2>\n          <button className=\"titlebar__action\" onClick={goToNewProposal}>\n            Make Transfer\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {toBN, AbiItem} from 'web3-utils';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useState, useRef, useEffect, useCallback} from 'react';\n\nimport {CycleEllipsis} from '../feedback';\nimport {ERC20} from '../../../abi-types/ERC20';\nimport {getConnectedMember} from '../../store/actions';\nimport {ProposalData, SnapshotProposal} from './types';\nimport {ReduxDispatch, StoreState} from '../../store/types';\nimport {TX_CYCLE_MESSAGES} from '../web3/config';\nimport {useContractSend, useETHGasPrice, useWeb3Modal} from '../web3/hooks';\nimport {useDaoTokenDetails} from '../dao-token/hooks';\nimport {useMemberActionDisabled} from '../../hooks';\nimport {Web3TxStatus} from '../web3/types';\nimport CycleMessage from '../feedback/CycleMessage';\nimport ErrorMessageWithDetails from '../common/ErrorMessageWithDetails';\nimport EtherscanURL from '../web3/EtherscanURL';\nimport FadeIn from '../common/FadeIn';\nimport Loader from '../feedback/Loader';\n\ntype ProcessArguments = [\n  string, // `dao`\n  string // `proposalId`\n];\n\ntype TokenApproveArguments = [\n  string, // `spender`\n  string // `value`\n];\n\ntype TributeProposalDetails = {\n  tokenAddress: string;\n  tributeAmount: string;\n};\n\ntype ProcessActionTributeProps = {\n  disabled?: boolean;\n  proposal: ProposalData;\n};\n\ntype ActionDisabledReasons = {\n  notProposerMessage: string;\n};\n\n/**\n * Cached outside the component to prevent infinite re-renders.\n *\n * The same can be accomplished inside the component using\n * `useState`, `useRef`, etc., depending on the use case.\n */\nconst useMemberActionDisabledProps = {\n  // Anyone can process a proposal - it's just a question of gas payment.\n  skipIsActiveMemberCheck: true,\n};\n\nexport default function ProcessActionTribute(props: ProcessActionTributeProps) {\n  const {\n    disabled: propsDisabled,\n    proposal: {snapshotProposal},\n  } = props;\n\n  /**\n   * State\n   */\n\n  const [submitError, setSubmitError] = useState<Error>();\n\n  const [tributeProposalDetails, setTributeProposalDetails] =\n    useState<TributeProposalDetails>();\n\n  /**\n   * Refs\n   */\n\n  const actionDisabledReasonsRef = useRef<ActionDisabledReasons>({\n    notProposerMessage: '',\n  });\n\n  /**\n   * Selectors\n   */\n\n  const TributeContract = useSelector(\n    (s: StoreState) => s.contracts?.TributeContract\n  );\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {txEtherscanURL, txIsPromptOpen, txSend, txStatus} = useContractSend();\n  const {average: gasPrice} = useETHGasPrice();\n\n  const {\n    txEtherscanURL: txEtherscanURLTokenApprove,\n    txIsPromptOpen: txIsPromptOpenTokenApprove,\n    txSend: txSendTokenApprove,\n    txStatus: txStatusTokenApprove,\n  } = useContractSend();\n\n  const {\n    isDisabled,\n    openWhyDisabledModal,\n    WhyDisabledModal,\n    setOtherDisabledReasons,\n  } = useMemberActionDisabled(useMemberActionDisabledProps);\n\n  const {daoTokenDetails} = useDaoTokenDetails();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Variables\n   */\n\n  const isInProcess =\n    txStatus === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatus === Web3TxStatus.PENDING ||\n    txStatusTokenApprove === Web3TxStatus.AWAITING_CONFIRM ||\n    txStatusTokenApprove === Web3TxStatus.PENDING;\n\n  const isDone = txStatus === Web3TxStatus.FULFILLED;\n\n  const isInProcessOrDone =\n    isInProcess || isDone || txIsPromptOpen || txIsPromptOpenTokenApprove;\n\n  const areSomeDisabled = isDisabled || isInProcessOrDone || propsDisabled;\n\n  /**\n   * Cached callbacks\n   */\n\n  const getTributeProposalDetailsCached = useCallback(\n    getTributeProposalDetails,\n    [TributeContract, daoRegistryContract?.contractAddress, snapshotProposal]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    getTributeProposalDetailsCached();\n  }, [getTributeProposalDetailsCached]);\n\n  useEffect(() => {\n    // 1. Determine and set reasons why action would be disabled\n\n    // Reason: For some proposal types, a passed proposal can only be\n    // processed by its original proposer (e.g., the owner of the asset to be\n    // transferred)\n\n    // Proposals with this restriction will have this value stored in its\n    // snapshot metadata.\n    const {accountAuthorizedToProcessPassedProposal} = (\n      snapshotProposal as SnapshotProposal\n    ).msg.payload.metadata;\n\n    if (accountAuthorizedToProcessPassedProposal && account) {\n      actionDisabledReasonsRef.current = {\n        ...actionDisabledReasonsRef.current,\n        notProposerMessage:\n          accountAuthorizedToProcessPassedProposal.toLowerCase() !==\n          account.toLowerCase()\n            ? 'Only the original proposer can process the proposal.'\n            : '',\n      };\n    }\n\n    // 2. Set reasons\n    setOtherDisabledReasons(Object.values(actionDisabledReasonsRef.current));\n  }, [account, setOtherDisabledReasons, snapshotProposal]);\n\n  /**\n   * Functions\n   */\n\n  async function getTributeProposalDetails() {\n    try {\n      if (\n        !daoRegistryContract?.contractAddress ||\n        !snapshotProposal ||\n        !TributeContract\n      ) {\n        return;\n      }\n\n      const proposalDetails = await TributeContract.instance.methods\n        .proposals(\n          daoRegistryContract.contractAddress,\n          snapshotProposal.idInDAO\n        )\n        .call();\n\n      const {token: tokenAddress, tributeAmount} = proposalDetails;\n\n      setTributeProposalDetails({tokenAddress, tributeAmount});\n    } catch (error) {\n      console.error(error);\n      setTributeProposalDetails(undefined);\n    }\n  }\n\n  async function handleSubmitTokenApprove() {\n    try {\n      if (!tributeProposalDetails) {\n        throw new Error('No Tribute proposal details found.');\n      }\n\n      if (!TributeContract) {\n        throw new Error('No TributeContract found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      const {tokenAddress, tributeAmount} = tributeProposalDetails;\n\n      const {default: lazyERC20ABI} = await import('../../abis/ERC20.json');\n      const erc20Contract: AbiItem[] = lazyERC20ABI as any;\n\n      const erc20Instance = new web3Instance.eth.Contract(\n        erc20Contract,\n        tokenAddress\n      ) as any as ERC20; // TypeChain: for Web3 we need to cast\n\n      // Value to check if adapter is allowed to spend amount of tribute tokens\n      // on behalf of owner. If allowance is not sufficient, the owner will approve the adapter to spend the amount of\n      // tokens needed for the owner to provide the full tribute amount.\n      const allowance = await erc20Instance.methods\n        .allowance(account, TributeContract.contractAddress)\n        .call();\n\n      const tributeAmountBN = toBN(tributeAmount);\n      const allowanceBN = toBN(allowance);\n\n      if (tributeAmountBN.gt(allowanceBN)) {\n        try {\n          const difference = tributeAmountBN.sub(allowanceBN);\n          const approveValue = allowanceBN.add(difference);\n          const tokenApproveArguments: TokenApproveArguments = [\n            TributeContract.contractAddress,\n            approveValue.toString(),\n          ];\n          const txArguments = {\n            from: account || '',\n            ...(gasPrice ? {gasPrice} : null),\n          };\n\n          // Execute contract call for `approve`\n          await txSendTokenApprove(\n            'approve',\n            erc20Instance.methods,\n            tokenApproveArguments,\n            txArguments\n          );\n        } catch (error) {\n          throw error;\n        }\n      }\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async function handleSubmit() {\n    try {\n      if (!daoRegistryContract) {\n        throw new Error('No DAO Registry contract was found.');\n      }\n\n      if (!snapshotProposal) {\n        throw new Error('No Snapshot proposal was found.');\n      }\n\n      if (!TributeContract) {\n        throw new Error('No TributeContract found.');\n      }\n\n      if (!account) {\n        throw new Error('No account found.');\n      }\n\n      if (!web3Instance) {\n        throw new Error('No Web3 instance was found.');\n      }\n\n      await handleSubmitTokenApprove();\n\n      const processArguments: ProcessArguments = [\n        daoRegistryContract.contractAddress,\n        snapshotProposal.idInDAO,\n      ];\n\n      const txArguments = {\n        from: account || '',\n        ...(gasPrice ? {gasPrice} : null),\n      };\n\n      const tx = await txSend(\n        'processProposal',\n        TributeContract.instance.methods,\n        processArguments,\n        txArguments\n      );\n\n      if (tx) {\n        // re-fetch member\n        await dispatch(\n          getConnectedMember({\n            account,\n            daoRegistryContract,\n            web3Instance,\n          })\n        );\n\n        // if connected account is the applicant (the address that will receive\n        // the membership units) suggest adding DAO token to wallet\n        if (\n          account.toLowerCase() ===\n          snapshotProposal.msg.payload.metadata.submitActionArgs[0].toLowerCase()\n        ) {\n          await addTokenToWallet();\n        }\n      }\n    } catch (error) {\n      setSubmitError(error);\n    }\n  }\n\n  async function addTokenToWallet() {\n    if (!daoTokenDetails) return;\n\n    try {\n      await window.ethereum.request({\n        method: 'wallet_watchAsset',\n        params: {\n          type: 'ERC20',\n          options: daoTokenDetails,\n        },\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Render\n   */\n\n  function renderSubmitStatus(): React.ReactNode {\n    // token approve transaction statuses\n    if (txStatusTokenApprove === Web3TxStatus.AWAITING_CONFIRM) {\n      return (\n        <>\n          Confirm to transfer your tokens\n          <CycleEllipsis />\n        </>\n      );\n    }\n\n    if (txStatusTokenApprove === Web3TxStatus.PENDING) {\n      return (\n        <>\n          <div>\n            Approving your tokens for transfer\n            <CycleEllipsis />\n          </div>\n          <EtherscanURL url={txEtherscanURLTokenApprove} isPending />\n        </>\n      );\n    }\n\n    // process proposal transaction statuses\n    switch (txStatus) {\n      case Web3TxStatus.AWAITING_CONFIRM:\n        return (\n          <>\n            Confirm to process the proposal\n            <CycleEllipsis />\n          </>\n        );\n      case Web3TxStatus.PENDING:\n        return (\n          <>\n            <CycleMessage\n              intervalMs={2000}\n              messages={TX_CYCLE_MESSAGES}\n              useFirstItemStart\n              render={(message) => {\n                return <FadeIn key={message}>{message}</FadeIn>;\n              }}\n            />\n\n            <EtherscanURL url={txEtherscanURL} isPending />\n          </>\n        );\n      case Web3TxStatus.FULFILLED:\n        return (\n          <>\n            <div>Proposal submitted!</div>\n\n            <EtherscanURL url={txEtherscanURL} />\n          </>\n        );\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <>\n      <div>\n        <button\n          className=\"proposaldetails__button\"\n          disabled={areSomeDisabled}\n          onClick={areSomeDisabled ? () => {} : handleSubmit}>\n          {isInProcess ? <Loader /> : isDone ? 'Done' : 'Process'}\n        </button>\n\n        <ErrorMessageWithDetails\n          error={submitError}\n          renderText=\"Something went wrong\"\n        />\n\n        {/* SUBMIT STATUS */}\n\n        {isInProcessOrDone && (\n          <div className=\"form__submit-status-container\">\n            {renderSubmitStatus()}\n          </div>\n        )}\n\n        {isDisabled && (\n          <button\n            className=\"button--help-centered\"\n            onClick={openWhyDisabledModal}>\n            Why is processing disabled?\n          </button>\n        )}\n      </div>\n\n      <WhyDisabledModal title=\"Why is processing disabled?\" />\n    </>\n  );\n}\n","import React from 'react';\nimport {useHistory, useParams} from 'react-router-dom';\n\nimport {\n  RenderActionPropArguments,\n  ProposalFlowStatus,\n} from '../../components/proposals/types';\nimport {AsyncStatus} from '../../util/types';\nimport {ContractAdapterNames} from '../../components/web3/types';\nimport {useIsDefaultChain} from '../../components/web3/hooks';\nimport {useProposalOrDraft} from '../../components/proposals/hooks';\nimport {VotingState} from '../../components/proposals/voting/types';\nimport ErrorMessageWithDetails from '../../components/common/ErrorMessageWithDetails';\nimport FadeIn from '../../components/common/FadeIn';\nimport LoaderLarge from '../../components/feedback/LoaderLarge';\nimport NotFound from '../subpages/NotFound';\nimport ProcessActionTribute from '../../components/proposals/ProcessActionTribute';\nimport ProposalActions from '../../components/proposals/ProposalActions';\nimport SubmitAction from '../../components/proposals/SubmitAction';\nimport ProposalAmount from '../../components/proposals/ProposalAmount';\nimport ProposalDetails from '../../components/proposals/ProposalDetails';\nimport Wrap from '../../components/common/Wrap';\n\nconst PLACEHOLDER = '\\u2014'; /* em dash */\n\nexport default function TributeDetails() {\n  /**\n   * @todo\n   *\n   * 1. Fetch proposal by ID from the subgraph.\n   * 2. Determine if sponsored\n   * 3. Get Snapshot data\n   *   3.1 If sponsored, get data about proposal from Snapshot (use flag to also search by draft hash).\n   *   3.2 If not sponsored, get data about draft from Snapshot.\n   */\n\n  /**\n   * Their hooks\n   */\n\n  // Get hash for fetching the proposal.\n  const {proposalId} = useParams<{proposalId: string}>();\n\n  /**\n   * @todo Get subgraph proposal and determine if it has been sponsored\n   *   so we know how to search snapshot-hub.\n   */\n\n  // ...\n\n  /**\n   * Our hooks\n   */\n\n  // @todo Use dynamic `SnapshotType` depending on subgraph data for `type` arg.\n  const {proposalData, proposalError, proposalNotFound, proposalStatus} =\n    useProposalOrDraft(proposalId);\n\n  const {defaultChainError} = useIsDefaultChain();\n\n  /**\n   * Variables\n   */\n\n  const isLoading: boolean = proposalStatus === AsyncStatus.PENDING;\n  const error: Error | undefined = proposalError || defaultChainError;\n\n  /**\n   * Functions\n   */\n\n  // Render any adapter-specific actions\n  function renderAction(data: RenderActionPropArguments): React.ReactNode {\n    const {\n      OffchainVotingContract: {daoProposalVoteResult, proposal, status},\n    } = data;\n\n    // Submit/Sponsor button (for proposals that have not been submitted onchain yet)\n    if (status === ProposalFlowStatus.Submit) {\n      const {snapshotDraft} = proposal;\n      const applicant = snapshotDraft?.msg.payload.metadata.submitActionArgs[0];\n\n      return <SubmitAction checkApplicant={applicant} proposal={proposal} />;\n    }\n\n    // Process button\n    if (\n      status === ProposalFlowStatus.Process ||\n      status === ProposalFlowStatus.OffchainVotingGracePeriod\n    ) {\n      if (\n        daoProposalVoteResult &&\n        VotingState[daoProposalVoteResult] !== VotingState[VotingState.PASS]\n      ) {\n        // Return a React.Fragment to hide the process button if proposal failed.\n        return <></>;\n      }\n\n      return (\n        <ProcessActionTribute\n          // Show during DAO proposal grace period, but set to disabled\n          disabled={status === ProposalFlowStatus.OffchainVotingGracePeriod}\n          proposal={proposal}\n        />\n      );\n    }\n\n    // Return `null` to signal to use default actions\n    return null;\n  }\n\n  /**\n   * Render\n   */\n\n  // Render loading\n  if (isLoading && !error) {\n    return (\n      <RenderWrapper>\n        <div className=\"loader--large-container\">\n          <LoaderLarge />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render 404 no proposal found\n  if (proposalNotFound) {\n    return (\n      <RenderWrapper>\n        <NotFound />\n      </RenderWrapper>\n    );\n  }\n\n  // Render error\n  if (error) {\n    return (\n      <RenderWrapper>\n        <div className=\"text-center\">\n          <ErrorMessageWithDetails\n            error={error}\n            renderText=\"Something went wrong.\"\n          />\n        </div>\n      </RenderWrapper>\n    );\n  }\n\n  // Render proposal\n  if (proposalData) {\n    const commonData = proposalData.getCommonSnapshotProposalData();\n\n    // Handle just in case metadata was not properly set\n    let tributeAmount = PLACEHOLDER;\n    let tributeAmountUnit = '';\n    let requestAmount = PLACEHOLDER;\n    let requestAmountUnit = '';\n    try {\n      ({tributeAmount, tributeAmountUnit, requestAmount, requestAmountUnit} =\n        commonData?.msg.payload.metadata.proposalAmountValues);\n    } catch (error) {\n      tributeAmount = PLACEHOLDER;\n      tributeAmountUnit = '';\n      requestAmount = PLACEHOLDER;\n      requestAmountUnit = '';\n    }\n\n    return (\n      <RenderWrapper>\n        <ProposalDetails\n          proposal={proposalData}\n          renderAmountBadge={() => (\n            <ProposalAmount\n              amount={tributeAmount}\n              amountUnit={tributeAmountUnit}\n              amount2={requestAmount}\n              amount2Unit={requestAmountUnit}\n            />\n          )}\n          renderActions={() => (\n            <ProposalActions\n              adapterName={ContractAdapterNames.tribute}\n              proposal={proposalData}\n              renderAction={renderAction}\n            />\n          )}\n        />\n      </RenderWrapper>\n    );\n  }\n\n  // Render nothing. Should never reach this case.\n  return <></>;\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToAll(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n\n    history.push('/tributes');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Tributes</h2>\n          <button className=\"titlebar__action\" onClick={goToAll}>\n            View all\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nimport {DaoAdapterConstants} from '../../components/adapters-extensions/enums';\nimport FadeIn from '../../components/common/FadeIn';\nimport Proposals from '../../components/proposals/Proposals';\nimport Wrap from '../../components/common/Wrap';\n\nexport default function Tributes() {\n  /**\n   * Functions\n   */\n\n  function proposalLinkPath(id: string) {\n    return `/tributes/${id}`;\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <RenderWrapper>\n      <Proposals\n        adapterName={DaoAdapterConstants.TRIBUTE}\n        proposalLinkPath={proposalLinkPath}\n        includeProposalsExistingOnlyOffchain={true}\n      />\n    </RenderWrapper>\n  );\n}\n\nfunction RenderWrapper(props: React.PropsWithChildren<any>): JSX.Element {\n  /**\n   * Their hooks\n   */\n\n  const history = useHistory();\n\n  /**\n   * Functions\n   */\n\n  function goToNewProposal(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    history.push('/tribute');\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <Wrap className=\"section-wrapper\">\n      <FadeIn>\n        <div className=\"titlebar\">\n          <h2 className=\"titlebar__title\">Tributes</h2>\n          <button className=\"titlebar__action\" onClick={goToNewProposal}>\n            Provide Tribute\n          </button>\n        </div>\n\n        {/* RENDER CHILDREN */}\n        {props.children}\n      </FadeIn>\n    </Wrap>\n  );\n}\n","import {Route, Switch} from 'react-router-dom';\n\nimport AdapterOrExtensionManager from './components/adapters-extensions/AdapterOrExtensionManager';\nimport CreateGovernanceProposal from './pages/governance/CreateGovernanceProposal';\nimport CreateMembershipProposal from './pages/membership/CreateMembershipProposal';\nimport CreateTransferProposal from './pages/transfers/CreateTransferProposal';\nimport CreateTributeProposal from './pages/tributes/CreateTributeProposal';\nimport GetStarted from './pages/start/GetStarted';\nimport GovernanceProposalDetails from './pages/governance/GovernanceProposalDetails';\nimport GovernanceProposals from './pages/governance/GovernanceProposals';\nimport MemberProfile from './pages/members/MemberProfile';\nimport Members from './pages/members/Members';\nimport Membership from './pages/membership/Membership';\nimport MembershipDetails from './pages/membership/MembershipDetails';\nimport NotFound from './pages/subpages/NotFound';\nimport Redeem from './pages/redeem/Redeem';\nimport TransferDetails from './pages/transfers/TransferDetails';\nimport Transfers from './pages/transfers/Transfers';\nimport TributeDetails from './pages/tributes/TributeDetails';\nimport Tributes from './pages/tributes/Tributes';\n\nconst proposalIdParameter: string = ':proposalId';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      {[\n        // Index page\n        <Route key=\"splash\" exact path=\"/\" render={() => <GetStarted />} />,\n        <Route\n          key=\"join\"\n          exact\n          path=\"/join\"\n          render={() => <CreateMembershipProposal />}\n        />,\n        <Route\n          key=\"membership\"\n          exact\n          path=\"/membership\"\n          render={() => <Membership />}\n        />,\n        <Route\n          key=\"membership-details\"\n          exact\n          path={`/membership/${proposalIdParameter}`}\n          render={() => <MembershipDetails />}\n        />,\n        <Route\n          key=\"transfer\"\n          exact\n          path=\"/transfer\"\n          render={() => <CreateTransferProposal />}\n        />,\n        <Route\n          key=\"transfers\"\n          exact\n          path=\"/transfers\"\n          render={() => <Transfers />}\n        />,\n        <Route\n          key=\"transfer-details\"\n          exact\n          path={`/transfers/${proposalIdParameter}`}\n          render={() => <TransferDetails />}\n        />,\n        <Route\n          key=\"tribute\"\n          exact\n          path=\"/tribute\"\n          render={() => <CreateTributeProposal />}\n        />,\n        <Route\n          key=\"tributes\"\n          exact\n          path=\"/tributes\"\n          render={() => <Tributes />}\n        />,\n        <Route\n          key=\"tribute-details\"\n          exact\n          path={`/tributes/${proposalIdParameter}`}\n          render={() => <TributeDetails />}\n        />,\n        <Route\n          key=\"governance-proposal\"\n          exact\n          path=\"/governance-proposal\"\n          render={() => <CreateGovernanceProposal />}\n        />,\n        <Route\n          key=\"governance-proposals\"\n          exact\n          path=\"/governance\"\n          render={() => <GovernanceProposals />}\n        />,\n        <Route\n          key=\"governance-proposal-details\"\n          exact\n          path={`/governance/${proposalIdParameter}`}\n          render={() => <GovernanceProposalDetails />}\n        />,\n        <Route\n          key=\"members\"\n          exact\n          path=\"/members\"\n          render={() => <Members />}\n        />,\n        <Route\n          key=\"member-profile\"\n          exact\n          path=\"/members/:ethereumAddress\"\n          render={() => <MemberProfile />}\n        />,\n        <Route\n          key=\"dao-manager\"\n          exact\n          path=\"/dao-manager\"\n          render={() => <AdapterOrExtensionManager />}\n        />,\n        <Route key=\"redeem\" exact path=\"/redeem\" render={() => <Redeem />} />,\n        // 404 component (note: does not redirect to a route to maintain original path)\n        <Route key=\"no-match\" component={NotFound} />,\n      ]}\n    </Switch>\n  );\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getApiStatus as getSnapshotAPIStatus} from '@openlaw/snapshot-js-erc712';\n\nimport {AsyncStatus} from './util/types';\nimport {getConnectedMember} from './store/actions';\nimport {ReduxDispatch, StoreState} from './store/types';\nimport {SNAPSHOT_HUB_API_URL} from './config';\nimport {useInitContracts, useIsDefaultChain} from './components/web3/hooks';\nimport {useIsMounted} from './hooks';\nimport {useWeb3Modal} from './components/web3/hooks';\n\ntype InitPropsRenderProps = {\n  error: Error | undefined;\n  isInitComplete: boolean;\n};\n\ntype InitProps = {\n  render: (p: InitPropsRenderProps) => React.ReactElement | null;\n};\n\n/**\n * Register any new async process names here.\n * It is mainly to check their progress before rendering.\n *\n * If the app is not dependent on a process before starting\n * do not add it here.\n */\nenum ProcessName {\n  initSnapshotAPI = 'initSnapshotAPI',\n}\n\n/**\n * Init Component\n *\n * Init will run any designated sync/async\n * setup processes and then render any child component\n * upon completion.\n *\n * In our case the children prop component to render is our app.\n *\n * @param {InitProps} props\n */\nexport default function Init(props: InitProps) {\n  const {render} = props;\n\n  /**\n   * Selectors\n   */\n\n  const daoRegistryContract = useSelector(\n    (s: StoreState) => s.contracts.DaoRegistryContract\n  );\n\n  /**\n   * State\n   */\n\n  const [error, setError] = useState<Error>();\n  const [isInitComplete, setIsInitComplete] = useState<boolean>(false);\n  const [processReadyMap, setProcessReadyMap] = useState<\n    Record<ProcessName, AsyncStatus>\n  >({\n    [ProcessName.initSnapshotAPI]: AsyncStatus.STANDBY,\n  });\n\n  /**\n   * Our hooks\n   */\n\n  const {account, web3Instance} = useWeb3Modal();\n  const {isDefaultChain} = useIsDefaultChain();\n  const {isMountedRef} = useIsMounted();\n  const initContracts = useInitContracts();\n\n  /**\n   * Their hooks\n   */\n\n  const dispatch = useDispatch<ReduxDispatch>();\n\n  /**\n   * Cached callbacks\n   */\n\n  const handleInitContractsCached = useCallback(handleInitContracts, [\n    initContracts,\n    isDefaultChain,\n    web3Instance,\n  ]);\n\n  const handleGetMemberCached = useCallback(handleGetMember, [\n    account,\n    daoRegistryContract,\n    dispatch,\n    isDefaultChain,\n    web3Instance,\n  ]);\n\n  const handleGetSnapshotAPIStatusCached = useCallback(\n    handleGetSnapshotAPIStatus,\n    [isMountedRef]\n  );\n\n  /**\n   * Effects\n   */\n\n  useEffect(() => {\n    setIsInitComplete(\n      Object.values(processReadyMap).every((fs) => fs === AsyncStatus.FULFILLED)\n    );\n  }, [processReadyMap]);\n\n  useEffect(() => {\n    handleInitContractsCached();\n  }, [handleInitContractsCached, web3Instance]);\n\n  useEffect(() => {\n    handleGetMemberCached();\n  }, [handleGetMemberCached]);\n\n  useEffect(() => {\n    handleGetSnapshotAPIStatusCached();\n  }, [handleGetSnapshotAPIStatusCached]);\n\n  /**\n   * Functions\n   */\n\n  async function handleGetSnapshotAPIStatus() {\n    try {\n      if (!SNAPSHOT_HUB_API_URL) {\n        throw new Error('No Snapshot Hub API URL was found.');\n      }\n\n      const {data} = await getSnapshotAPIStatus(SNAPSHOT_HUB_API_URL);\n\n      // Choosing a slice of the data to make sure we have a response, not just 200 OK.\n      if (!data.version) {\n        throw new Error('Snapshot API is not ready.');\n      }\n\n      if (!isMountedRef.current) return;\n\n      setProcessReadyMap((p) => ({\n        ...p,\n        [ProcessName.initSnapshotAPI]: AsyncStatus.FULFILLED,\n      }));\n    } catch (error) {\n      if (!isMountedRef.current) return;\n\n      setError(new Error('Snapshot API is not responding.'));\n    }\n  }\n\n  async function handleInitContracts() {\n    try {\n      if (!isDefaultChain || !web3Instance) {\n        return;\n      }\n\n      await initContracts({web3Instance});\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  async function handleGetMember() {\n    try {\n      if (\n        !account ||\n        !daoRegistryContract ||\n        !isDefaultChain ||\n        !web3Instance\n      ) {\n        return;\n      }\n\n      await dispatch(\n        getConnectedMember({\n          account,\n          daoRegistryContract,\n          web3Instance,\n        })\n      );\n    } catch (error) {\n      setError(error);\n    }\n  }\n\n  // Render children\n  return render({error, isInitComplete});\n}\n","import {useLocation} from 'react-router-dom';\n\nimport Footer from './components/Footer';\nimport GlobalConnectWalletModal from './GlobalConnectWalletModal';\nimport Head from './Head';\nimport Header from './components/Header';\nimport Routes from './Routes';\n\ntype AppProps = {\n  /**\n   * Optionally provide a component to render for the main content.\n   */\n  renderMainContent?: () => React.ReactNode;\n};\n\nexport default function App(props?: AppProps) {\n  /**\n   * Their hooks\n   */\n\n  const {pathname} = useLocation();\n\n  /**\n   * Variables\n   */\n\n  const {renderMainContent} = props || {};\n\n  const mainContent: React.ReactNode = (\n    <main>{renderMainContent ? renderMainContent() : <Routes />}</main>\n  );\n\n  /**\n   * Functions\n   */\n\n  function renderContent() {\n    // The index path has its own template\n    if (pathname === '/') {\n      return <>{mainContent}</>;\n    }\n\n    // Render default template\n    return (\n      <>\n        <Header />\n        {mainContent}\n        <Footer />\n      </>\n    );\n  }\n\n  /**\n   * Render\n   */\n\n  return (\n    <>\n      {/* HTML `<head>` (react-helmet) */}\n      <Head />\n\n      {/* CONTENT */}\n      {renderContent()}\n\n      {/* GLOBAL MODALS */}\n      <GlobalConnectWalletModal />\n    </>\n  );\n}\n","import ErrorMessageWithDetails from './components/common/ErrorMessageWithDetails';\nimport FadeIn from './components/common/FadeIn';\n\ntype InitErrorProps = {\n  error: Error;\n};\n\n/**\n * InitError\n *\n * An error component that is meant to be used if the <Init /> component\n * could not complete any of its processes to provide the app with vital data.\n *\n * @param {InitErrorProps} props\n */\nexport default function InitError(props: InitErrorProps) {\n  const {error} = props;\n\n  return (\n    <FadeIn>\n      <div\n        style={{\n          padding: '2em 1em 1em',\n          textAlign: 'center',\n        }}>\n        <h1 style={{fontSize: '2rem'}}>\n          <span\n            className=\"pulse\"\n            role=\"img\"\n            aria-label=\"Emoji with eyes crossed out.\"\n            style={{display: 'inline-block'}}>\n            😵\n          </span>{' '}\n          Oops, something went wrong.\n        </h1>\n      </div>\n\n      <div\n        style={{\n          textAlign: 'center',\n          maxWidth: 600,\n          display: 'block',\n          margin: '0 auto',\n        }}>\n        <ErrorMessageWithDetails error={error} renderText=\"\" />\n      </div>\n    </FadeIn>\n  );\n}\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {render} from 'react-dom';\nimport {Store} from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport {\n  ApolloClient,\n  concat,\n  InMemoryCache,\n  NormalizedCacheObject,\n  HttpLink,\n} from '@apollo/client';\nimport {QueryClient, QueryClientProvider} from 'react-query';\n\nimport {\n  ENVIRONMENT,\n  GRAPH_API_URL,\n  WALLETCONNECT_PROVIDER_OPTIONS,\n} from './config';\nimport {clearConnectedMember, clearContracts} from './store/actions';\nimport {disableReactDevTools} from './util/helpers';\nimport {handleSubgraphError} from './gql';\nimport {store} from './store';\nimport App from './App';\nimport Init from './Init';\nimport InitError from './InitError';\nimport reportWebVitals from './reportWebVitals';\nimport Web3ModalManager from './components/web3/Web3ModalManager';\n\nimport './assets/scss/style.scss';\n\nconst root = document.getElementById('root');\n\n// disable React dev tools for production\nENVIRONMENT === 'production' && disableReactDevTools();\n\n// will be deprecated eventually, for now we set it to false to silence the\n// console warning\nwindow.ethereum &&\n  window.ethereum.autoRefreshOnNetworkChange &&\n  (window.ethereum.autoRefreshOnNetworkChange = false);\n\n// Create `ApolloClient`\nexport const getApolloClient = (\n  store: Store\n): ApolloClient<NormalizedCacheObject> =>\n  new ApolloClient({\n    link: concat(\n      handleSubgraphError(store),\n      new HttpLink({\n        uri: ({operationName}) => `${GRAPH_API_URL}?${operationName}`,\n      })\n    ),\n    cache: new InMemoryCache({\n      // Cache data may be lost when replacing the `adapters|extensions`\n      // field of a Query object. To address this problem\n      // (which is not a bug in Apollo Client), define a custom\n      // merge function for the Query.adapters|extensions field, so\n      // InMemoryCache can safely merge these objects\n      // https://www.apollographql.com/docs/react/caching/cache-field-behavior/#the-merge-function\n      typePolicies: {\n        Adapter: {\n          fields: {\n            adapters: {\n              merge(existing = [], incoming: any[]) {\n                return [...existing, ...incoming];\n              },\n            },\n          },\n        },\n        Extension: {\n          fields: {\n            extensions: {\n              merge(existing = [], incoming: any[]) {\n                return [...existing, ...incoming];\n              },\n            },\n          },\n        },\n      },\n    }),\n  });\n\n// Create `QueryClient`\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nif (root !== null) {\n  render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <Web3ModalManager\n          onBeforeDisconnect={() => {\n            // Clear out `connectedMember` and `contracts` Redux state\n            store.dispatch(clearConnectedMember());\n            store.dispatch(clearContracts());\n          }}\n          onBeforeConnect={() => {\n            // Clear out `contracts` Redux state\n            store.dispatch(clearContracts());\n          }}\n          providerOptions={WALLETCONNECT_PROVIDER_OPTIONS}>\n          <ApolloProvider client={getApolloClient(store)}>\n            <QueryClientProvider client={queryClient}>\n              <Init\n                render={({error, isInitComplete}) =>\n                  error ? (\n                    <App\n                      renderMainContent={() => <InitError error={error} />}\n                    />\n                  ) : isInitComplete ? (\n                    <App />\n                  ) : null\n                }\n              />\n            </QueryClientProvider>\n          </ApolloProvider>\n        </Web3ModalManager>\n      </BrowserRouter>\n    </Provider>,\n    root\n  );\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}