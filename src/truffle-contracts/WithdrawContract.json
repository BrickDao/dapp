{
  "contractName": "WithdrawContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"withdraw(address,address,address)\":{\"params\":{\"account\":\"The account to receive the funds.\",\"dao\":\"The DAO address.\",\"token\":\"The token address to receive the funds.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdraw(address,address,address)\":{\"notice\":\"Allows the member/advisor of the DAO to withdraw the funds from their internal bank account.Only accounts that are not reserved can withdraw the funds.If theres is no available balance in the user's account, the transaction is reverted.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Withdraw.sol\":\"WithdrawContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Withdraw.sol\":{\"keccak256\":\"0x8f3f4bf6ffcf75c484a112a654570d841c5338adc588750c69396688333d64da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://250c41ba15750459703881f54c985fe713306bb59cf16042ddf7ae6457fc3922\",\"dweb:/ipfs/QmXxpwmJUVrwHbAo9oKwKSeKUxQizqX1MZHi7NkE59BTM5\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol\":{\"keccak256\":\"0xe7942eced62986e77dc84ff80b4d03cb3a5e38756e8ec117b47a5cfe0e9ef0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b708dcfe72670fe97b0f0029872a05b2a25cafdf431947f39065fca7869998b6\",\"dweb:/ipfs/QmUvWL9883RbS6N6HbZWkAqNdHtWHzK3QhYsndEVkpjamy\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x2b65fd03c04db3db5d73f5e007ca84075fc664c1da4d3f3c77b5c288c9d7bac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1728a85344abf1f3f11b0838c5b29169a38bfa9918f7b8f813079f79b9cbfb\",\"dweb:/ipfs/QmRSarYr4TDaAzPELomqWLTGxkvsbgKdjdd9GwKWDEr1vh\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506108f4806100206000396000f3fe6080604052600436106100385760003560e01c8063b244a41d1461007d578063fc258031146100b3578063ff7885e8146100e057610078565b36610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610690565b60405180910390fd5b600080fd5b34801561008957600080fd5b5061009d610098366004610568565b610102565b6040516100aa9190610619565b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610547565b61015e565b6040516100aa919061060e565b3480156100ec57600080fd5b506101006100fb3660046104e5565b61017b565b005b6000811515610111858561015e565b15151461015457811561013a57610129836002610725565b61013390856106c7565b9050610157565b610145836002610725565b610133908561080c565b610157565b50825b9392505050565b6000610171600260ff841685901c610823565b6001149392505050565b6040517fef6a249900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063ef6a2499906101cd908590600401610595565b60206040518083038186803b1580156101e557600080fd5b505afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d91906104c9565b610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610622565b6040517f593e96b600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063593e96b6906102c8907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401610619565b60206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031891906104ad565b905060008173ffffffffffffffffffffffffffffffffffffffff1663f7888aec85856040518363ffffffff1660e01b81526004016103579291906105b6565b60206040518083038186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a7919061052f565b9050600081116103e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610659565b6040517fd9caed1200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063d9caed1290610439908790879086906004016105dd565b600060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb84848360405161049e939291906105dd565b60405180910390a15050505050565b6000602082840312156104be578081fd5b81516101578161088b565b6000602082840312156104da578081fd5b8151610157816108b0565b6000806000606084860312156104f9578182fd5b83356105048161088b565b925060208401356105148161088b565b915060408401356105248161088b565b809150509250925092565b600060208284031215610540578081fd5b5051919050565b60008060408385031215610559578182fd5b50508035926020909101359150565b60008060006060848603121561057c578283fd5b83359250602084013591506040840135610524816108b0565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b901515815260200190565b90815260200190565b6020808252601a908201527f77697468647261773a3a72657365727665642061646472657373000000000000604082015260600190565b60208082526013908201527f6e6f7468696e6720746f20776974686472617700000000000000000000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b600082198211156106da576106da61085c565b500190565b80825b60018086116106f1575061071c565b8187048211156107035761070361085c565b8086161561071057918102915b9490941c9380026106e2565b94509492505050565b60006101577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848460008261075c57506001610157565b8161076957506000610157565b816001811461077f5760028114610789576107b6565b6001915050610157565b60ff84111561079a5761079a61085c565b6001841b9150848211156107b0576107b061085c565b50610157565b5060208310610133831016604e8410600b84101617156107e4575081810a8381111561014f5761014f61085c565b6107f184848460016106df565b8086048211156108035761080361085c565b02949350505050565b60008282101561081e5761081e61085c565b500390565b600082610857577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146108ad57600080fd5b50565b80151581146108ad57600080fdfea2646970667358221220ecd1abfa123a88baecc8da68c992fa2b5c344519510abf5810f74418f2b1e9f664736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c8063b244a41d1461007d578063fc258031146100b3578063ff7885e8146100e057610078565b36610078576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610690565b60405180910390fd5b600080fd5b34801561008957600080fd5b5061009d610098366004610568565b610102565b6040516100aa9190610619565b60405180910390f35b3480156100bf57600080fd5b506100d36100ce366004610547565b61015e565b6040516100aa919061060e565b3480156100ec57600080fd5b506101006100fb3660046104e5565b61017b565b005b6000811515610111858561015e565b15151461015457811561013a57610129836002610725565b61013390856106c7565b9050610157565b610145836002610725565b610133908561080c565b610157565b50825b9392505050565b6000610171600260ff841685901c610823565b6001149392505050565b6040517fef6a249900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063ef6a2499906101cd908590600401610595565b60206040518083038186803b1580156101e557600080fd5b505afa1580156101f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021d91906104c9565b610253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610622565b6040517f593e96b600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063593e96b6906102c8907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401610619565b60206040518083038186803b1580156102e057600080fd5b505afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031891906104ad565b905060008173ffffffffffffffffffffffffffffffffffffffff1663f7888aec85856040518363ffffffff1660e01b81526004016103579291906105b6565b60206040518083038186803b15801561036f57600080fd5b505afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a7919061052f565b9050600081116103e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006f90610659565b6040517fd9caed1200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063d9caed1290610439908790879086906004016105dd565b600060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050507f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb84848360405161049e939291906105dd565b60405180910390a15050505050565b6000602082840312156104be578081fd5b81516101578161088b565b6000602082840312156104da578081fd5b8151610157816108b0565b6000806000606084860312156104f9578182fd5b83356105048161088b565b925060208401356105148161088b565b915060408401356105248161088b565b809150509250925092565b600060208284031215610540578081fd5b5051919050565b60008060408385031215610559578182fd5b50508035926020909101359150565b60008060006060848603121561057c578283fd5b83359250602084013591506040840135610524816108b0565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b901515815260200190565b90815260200190565b6020808252601a908201527f77697468647261773a3a72657365727665642061646472657373000000000000604082015260600190565b60208082526013908201527f6e6f7468696e6720746f20776974686472617700000000000000000000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b600082198211156106da576106da61085c565b500190565b80825b60018086116106f1575061071c565b8187048211156107035761070361085c565b8086161561071057918102915b9490941c9380026106e2565b94509492505050565b60006101577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848460008261075c57506001610157565b8161076957506000610157565b816001811461077f5760028114610789576107b6565b6001915050610157565b60ff84111561079a5761079a61085c565b6001841b9150848211156107b0576107b061085c565b50610157565b5060208310610133831016604e8410600b84101617156107e4575081810a8381111561014f5761014f61085c565b6107f184848460016106df565b8086048211156108035761080361085c565b02949350505050565b60008282101561081e5761081e61085c565b500390565b600082610857577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146108ad57600080fd5b50565b80151581146108ad57600080fdfea2646970667358221220ecd1abfa123a88baecc8da68c992fa2b5c344519510abf5810f74418f2b1e9f664736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7585:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "214:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "214:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "256:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "266:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:34",
                "type": ""
              }
            ],
            "src": "14:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "406:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "415:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "423:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "408:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "408:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "408:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "381:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "390:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "377:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "377:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "402:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "373:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "370:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "441:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "460:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "454:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "445:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "503:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "479:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "479:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "518:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "528:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "518:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "326:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "337:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "349:6:34",
                "type": ""
              }
            ],
            "src": "282:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "676:441:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "722:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "731:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "739:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "724:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "724:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "724:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "697:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "706:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "693:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "693:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "718:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "689:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "686:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "757:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "783:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "770:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "761:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "829:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "802:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "802:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "844:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "854:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "844:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "868:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "900:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "911:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "883:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "883:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "872:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "951:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "924:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "924:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "924:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "968:17:34",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "978:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "968:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "994:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1026:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1037:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1009:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "998:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1077:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1050:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1050:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1094:17:34",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1104:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1094:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_address_payablet_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "626:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "637:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "649:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "657:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "665:6:34",
                "type": ""
              }
            ],
            "src": "544:573:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1203:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1249:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1258:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1266:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1251:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1251:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1251:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1224:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1233:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1220:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1216:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1216:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1213:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1284:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1300:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1294:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1294:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1284:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1169:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1180:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1192:6:34",
                "type": ""
              }
            ],
            "src": "1122:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1408:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1454:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1463:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1471:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1456:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1456:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1456:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1429:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1438:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1425:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1450:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1421:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1421:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1418:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1512:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1499:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1531:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1558:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1569:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1554:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1554:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1541:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1531:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1366:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1377:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1389:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1397:6:34",
                "type": ""
              }
            ],
            "src": "1321:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1685:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1731:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1740:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1748:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1733:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1733:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1733:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1706:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1715:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1702:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1702:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1727:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1698:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1698:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1695:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1766:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1789:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1776:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1776:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1766:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1808:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1835:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1846:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1831:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1831:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1818:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1808:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1859:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1889:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1900:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1885:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1885:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1872:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1872:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1863:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1937:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1913:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1913:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1913:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1952:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1962:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1952:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1635:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1646:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1658:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1666:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1674:6:34",
                "type": ""
              }
            ],
            "src": "1584:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2087:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2097:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2109:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2105:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2097:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2139:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2154:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2162:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2150:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2150:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2056:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2067:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2078:4:34",
                "type": ""
              }
            ],
            "src": "1978:234:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2354:198:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2364:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2376:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2387:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2372:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2372:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2364:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2399:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2409:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2403:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2467:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2482:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2490:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2478:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2478:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2460:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2460:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2514:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2525:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2510:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2510:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2534:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2542:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2503:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2503:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2315:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2326:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2334:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2345:4:34",
                "type": ""
              }
            ],
            "src": "2217:335:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2730:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2740:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2752:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2763:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2748:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2748:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2740:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2775:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2785:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2779:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2843:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2858:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2866:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2854:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2854:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2836:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2890:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2901:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2886:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2886:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2910:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2918:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2906:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2906:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2879:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2879:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2879:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2942:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2953:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2938:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2938:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2958:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2931:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2931:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2931:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_payable_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2683:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2694:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2702:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2710:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2721:4:34",
                "type": ""
              }
            ],
            "src": "2557:414:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3141:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3151:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3163:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3174:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3159:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3159:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3151:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3186:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3196:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3190:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3254:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3269:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3277:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3265:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3265:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3247:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3247:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3247:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3301:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3312:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3297:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3297:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3321:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3329:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3317:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3317:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3290:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3290:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3353:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3364:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3349:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3369:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3342:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3342:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3094:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3105:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3113:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3121:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3132:4:34",
                "type": ""
              }
            ],
            "src": "2976:406:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3482:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3492:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3504:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3515:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3500:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3500:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3492:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3534:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3559:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3552:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3552:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3545:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3545:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3527:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3527:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3527:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3451:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3462:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3473:4:34",
                "type": ""
              }
            ],
            "src": "3387:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3680:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3690:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3702:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3713:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3698:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3690:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3732:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3743:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3649:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3660:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3671:4:34",
                "type": ""
              }
            ],
            "src": "3579:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3935:176:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3952:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3963:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3945:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3945:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3945:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3986:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3997:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3982:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3982:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4002:2:34",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3975:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3975:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4025:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4036:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4021:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4021:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4041:28:34",
                        "type": "",
                        "value": "withdraw::reserved address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4014:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4014:56:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4014:56:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4079:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4091:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4102:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4087:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4087:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4079:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3912:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3926:4:34",
                "type": ""
              }
            ],
            "src": "3761:350:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4290:169:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4307:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4318:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4300:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4300:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4300:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4341:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4352:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4337:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4357:2:34",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4330:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4330:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4380:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4391:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4376:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4376:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4396:21:34",
                        "type": "",
                        "value": "nothing to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4369:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4369:49:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4369:49:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4427:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4439:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4450:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4435:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4435:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4427:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4267:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4281:4:34",
                "type": ""
              }
            ],
            "src": "4116:343:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4638:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4666:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4648:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4648:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4689:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4700:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4685:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4685:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4705:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4678:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4678:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4728:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4739:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4724:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4724:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4744:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4717:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4771:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4783:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4794:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4779:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4779:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4771:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4615:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4629:4:34",
                "type": ""
              }
            ],
            "src": "4464:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4909:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4919:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4931:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4942:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4927:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4927:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4919:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4961:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4972:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4954:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4954:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4954:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4878:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4889:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4900:4:34",
                "type": ""
              }
            ],
            "src": "4808:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5038:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5065:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5067:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5067:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5067:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5054:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5061:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5057:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5057:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5051:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5051:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "5048:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5096:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5107:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5110:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5103:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5103:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5096:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5021:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5024:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5030:3:34",
                "type": ""
              }
            ],
            "src": "4990:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5200:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5210:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "5219:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "5210:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5234:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "5242:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "5234:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5281:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5295:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5305:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "5299:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5347:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "5349:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "5332:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5342:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "5329:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5329:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5322:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5322:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "5319:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5397:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "5399:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5399:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5399:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5375:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "5385:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "5390:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "5381:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5381:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "5372:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5372:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "5369:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5453:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5455:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "5468:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "5475:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "5464:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5464:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "5455:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "5439:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5449:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "5435:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5435:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "5432:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5495:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5507:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "5513:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "5503:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5503:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "5495:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5531:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5547:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "5551:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "5543:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5543:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "5531:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "5264:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5269:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5260:3:34",
                    "statements": []
                  },
                  "src": "5256:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "5151:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "5159:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5166:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "5176:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5184:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5191:4:34",
                "type": ""
              }
            ],
            "src": "5123:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5651:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5661:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "5691:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5697:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5707:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "5670:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5670:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "5661:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5622:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5628:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5641:5:34",
                "type": ""
              }
            ],
            "src": "5581:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5849:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5887:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5901:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5910:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "5901:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "5924:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "5869:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5862:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5862:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "5859:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5972:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5986:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5995:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "5986:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6009:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "5958:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5951:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5951:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "5948:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6060:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6074:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6083:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6074:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6097:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6053:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6058:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6128:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6163:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6165:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6165:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6165:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6148:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6158:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "6145:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6145:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "6142:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "6198:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "6211:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6221:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6207:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6207:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "6198:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "6254:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "6256:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6256:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "6256:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "6242:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "6249:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "6239:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6239:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "6236:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "6289:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "6121:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6126:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "6040:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "6033:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6402:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6416:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "6429:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "6435:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "6425:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6425:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "6416:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6475:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "6477:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6477:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6477:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "6463:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "6470:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "6460:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6460:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "6457:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "6510:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6326:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6332:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6323:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6323:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6340:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6350:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6337:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6337:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6319:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6319:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "6363:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6369:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6360:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6360:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "6378:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6388:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6375:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6375:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6356:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6356:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6316:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6316:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6313:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6534:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6576:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "6579:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "6585:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "6595:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "6557:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6557:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "6538:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "6547:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6641:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6643:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6643:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6643:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6614:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "6627:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "6632:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "6623:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6623:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6611:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6611:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6608:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6672:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "6685:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "6694:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6681:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6681:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "6672:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "5815:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "5821:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "5831:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "5839:5:34",
                "type": ""
              }
            ],
            "src": "5785:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6761:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6783:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6785:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6785:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6785:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6777:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6780:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6774:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6774:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6771:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6814:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6826:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6829:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6822:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6822:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6814:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6743:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6746:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6752:4:34",
                "type": ""
              }
            ],
            "src": "6712:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6880:228:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6911:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "6932:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6935:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6925:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6925:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6925:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7033:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7036:4:34",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7026:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7026:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7026:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "7061:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7064:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7054:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7054:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7054:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6900:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6893:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6890:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7088:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7097:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7100:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "7093:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7093:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7088:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6865:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6868:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6874:1:34",
                "type": ""
              }
            ],
            "src": "6842:266:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7145:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7162:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7165:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7155:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7155:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7155:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7259:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7262:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7252:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7252:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7252:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7283:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7286:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7276:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7276:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7276:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7113:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7349:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7436:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7445:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7448:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7438:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7438:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7438:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7372:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7383:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7390:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7379:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7379:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7369:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7369:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7362:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7362:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "7359:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7338:5:34",
                "type": ""
              }
            ],
            "src": "7302:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7507:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7561:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7570:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7573:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7563:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7563:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7563:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7530:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7551:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7544:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7544:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7537:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7537:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7527:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7527:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7520:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "7517:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7496:5:34",
                "type": ""
              }
            ],
            "src": "7463:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_address_payablet_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_2)\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_payable_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"withdraw::reserved address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"nothing to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1357:1424:8:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1357:1424:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1628:25;;;;;;;;;;:::i;:::-;;;;;;;;1357:1424;;;;2421:363:20;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2287:128;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2117:662:8:-;;;;;;;;;;-1:-1:-1;2117:662:8;;;;;:::i;:::-;;:::i;:::-;;2421:363:20;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;2287:128::-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;2117:662:8:-;2262:33;;;;;:24;;;;;;:33;;2287:7;;2262:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2241:106;;;;;;;;;;;;:::i;:::-;2533:29;;;;;2498:18;;2533:23;;;;;;:29;;1763:17:20;;2533:29:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2498:65;;2573:15;2591:4;:14;;;2606:7;2615:5;2591:30;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2573:48;;2649:1;2639:7;:11;2631:43;;;;;;;;;;;;:::i;:::-;2685:38;;;;;:13;;;;;;:38;;2699:7;;2708:5;;2715:7;;2685:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2739:33;2748:7;2757:5;2764:7;2739:33;;;;;;;;:::i;:::-;;;;;;;;2117:662;;;;;:::o;14:263:34:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:33;241:5;214:33;:::i;282:257::-;;402:2;390:9;381:7;377:23;373:32;370:2;;;423:6;415;408:22;370:2;460:9;454:16;479:30;503:5;479:30;:::i;544:573::-;;;;718:2;706:9;697:7;693:23;689:32;686:2;;;739:6;731;724:22;686:2;783:9;770:23;802:33;829:5;802:33;:::i;:::-;854:5;-1:-1:-1;911:2:34;896:18;;883:32;924:35;883:32;924:35;:::i;:::-;978:7;-1:-1:-1;1037:2:34;1022:18;;1009:32;1050:35;1009:32;1050:35;:::i;:::-;1104:7;1094:17;;;676:441;;;;;:::o;1122:194::-;;1245:2;1233:9;1224:7;1220:23;1216:32;1213:2;;;1266:6;1258;1251:22;1213:2;-1:-1:-1;1294:16:34;;1203:113;-1:-1:-1;1203:113:34:o;1321:258::-;;;1450:2;1438:9;1429:7;1425:23;1421:32;1418:2;;;1471:6;1463;1456:22;1418:2;-1:-1:-1;;1499:23:34;;;1569:2;1554:18;;;1541:32;;-1:-1:-1;1408:171:34:o;1584:389::-;;;;1727:2;1715:9;1706:7;1702:23;1698:32;1695:2;;;1748:6;1740;1733:22;1695:2;1789:9;1776:23;1766:33;;1846:2;1835:9;1831:18;1818:32;1808:42;;1900:2;1889:9;1885:18;1872:32;1913:30;1937:5;1913:30;:::i;1978:234::-;2162:42;2150:55;;;;2132:74;;2120:2;2105:18;;2087:125::o;2217:335::-;2409:42;2478:15;;;2460:34;;2530:15;;2525:2;2510:18;;2503:43;2387:2;2372:18;;2354:198::o;2557:414::-;2785:42;2854:15;;;2836:34;;2906:15;;;;2901:2;2886:18;;2879:43;2953:2;2938:18;;2931:34;;;;2763:2;2748:18;;2730:241::o;3387:187::-;3552:14;;3545:22;3527:41;;3515:2;3500:18;;3482:92::o;3579:177::-;3725:25;;;3713:2;3698:18;;3680:76::o;3761:350::-;3963:2;3945:21;;;4002:2;3982:18;;;3975:30;4041:28;4036:2;4021:18;;4014:56;4102:2;4087:18;;3935:176::o;4116:343::-;4318:2;4300:21;;;4357:2;4337:18;;;4330:30;4396:21;4391:2;4376:18;;4369:49;4450:2;4435:18;;4290:169::o;4464:339::-;4666:2;4648:21;;;4705:2;4685:18;;;4678:30;4744:17;4739:2;4724:18;;4717:45;4794:2;4779:18;;4638:165::o;4990:128::-;;5061:1;5057:6;5054:1;5051:13;5048:2;;;5067:18;;:::i;:::-;-1:-1:-1;5103:9:34;;5038:80::o;5123:453::-;5219:6;5242:5;5256:314;5305:1;5342:2;5332:8;5329:16;5319:2;;5349:5;;;5319:2;5390:4;5385:3;5381:14;5375:4;5372:24;5369:2;;;5399:18;;:::i;:::-;5449:2;5439:8;5435:17;5432:2;;;5464:16;;;;5432:2;5543:17;;;;;5503:15;;5256:314;;;5200:376;;;;;;;:::o;5581:199::-;;5670:104;5707:66;5697:8;5691:4;5785:922;5869:8;5859:2;;-1:-1:-1;5910:1:34;5924:5;;5859:2;5958:4;5948:2;;-1:-1:-1;5995:1:34;6009:5;;5948:2;6040:4;6058:1;6053:59;;;;6126:1;6121:183;;;;6033:271;;6053:59;6083:1;6074:10;;6097:5;;;6121:183;6158:3;6148:8;6145:17;6142:2;;;6165:18;;:::i;:::-;6221:1;6211:8;6207:16;6198:25;;6249:3;6242:5;6239:14;6236:2;;;6256:18;;:::i;:::-;6289:5;;;6033:271;;6388:2;6378:8;6375:16;6369:3;6363:4;6360:13;6356:36;6350:2;6340:8;6337:16;6332:2;6326:4;6323:12;6319:35;6316:77;6313:2;;;-1:-1:-1;6425:19:34;;;6460:14;;;6457:2;;;6477:18;;:::i;6313:2::-;6557:42;6595:3;6585:8;6579:4;6576:1;6557:42;:::i;:::-;6632:6;6627:3;6623:16;6614:7;6611:29;6608:2;;;6643:18;;:::i;:::-;6681:20;;5849:858;-1:-1:-1;;;;5849:858:34:o;6712:125::-;;6780:1;6777;6774:8;6771:2;;;6785:18;;:::i;:::-;-1:-1:-1;6822:9:34;;6761:76::o;6842:266::-;;6900:1;6890:2;;6935:77;6932:1;6925:88;7036:4;7033:1;7026:15;7064:4;7061:1;7054:15;6890:2;-1:-1:-1;7093:9:34;;6880:228::o;7113:184::-;7165:77;7162:1;7155:88;7262:4;7259:1;7252:15;7286:4;7283:1;7276:15;7302:156;7390:42;7383:5;7379:54;7372:5;7369:65;7359:2;;7448:1;7445;7438:12;7359:2;7349:109;:::o;7463:120::-;7551:5;7544:13;7537:21;7530:5;7527:32;7517:2;;7573:1;7570;7563:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../extensions/Bank.sol\";\nimport \"../guards/MemberGuard.sol\";\nimport \"./interfaces/IConfiguration.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract WithdrawContract is DaoConstants, MemberGuard {\n    event Withdraw(address account, address token, uint256 amount);\n\n    /**\n     * @notice default fallback function to prevent from sending ether to the contract.\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Allows the member/advisor of the DAO to withdraw the funds from their internal bank account.\n     * @notice Only accounts that are not reserved can withdraw the funds.\n     * @notice If theres is no available balance in the user's account, the transaction is reverted.\n     * @param dao The DAO address.\n     * @param account The account to receive the funds.\n     * @param token The token address to receive the funds.\n     */\n    function withdraw(\n        DaoRegistry dao,\n        address payable account,\n        address token\n    ) external {\n        require(\n            dao.isNotReservedAddress(account),\n            \"withdraw::reserved address\"\n        );\n\n        // We do not need to check if the token is supported by the bank,\n        // because if it is not, the balance will always be zero.\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        uint256 balance = bank.balanceOf(account, token);\n        require(balance > 0, \"nothing to withdraw\");\n\n        bank.withdraw(account, token, balance);\n\n        emit Withdraw(account, token, balance);\n    }\n}\n",
  "sourcePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Withdraw.sol",
  "ast": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Withdraw.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "IConfiguration": [
        3507
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ],
      "WithdrawContract": [
        3470
      ]
    },
    "id": 3471,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3382,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 3383,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 6255,
        "src": "58:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 3384,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 8219,
        "src": "93:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 3385,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 9182,
        "src": "127:32:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 3386,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 9429,
        "src": "160:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol",
        "file": "./interfaces/IConfiguration.sol",
        "id": 3387,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 3508,
        "src": "196:41:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 3388,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 3782,
        "src": "238:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3390,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1386:12:8"
            },
            "id": 3391,
            "nodeType": "InheritanceSpecifier",
            "src": "1386:12:8"
          },
          {
            "baseName": {
              "id": 3392,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1400:11:8"
            },
            "id": 3393,
            "nodeType": "InheritanceSpecifier",
            "src": "1400:11:8"
          }
        ],
        "contractDependencies": [
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3389,
          "nodeType": "StructuredDocumentation",
          "src": "284:1071:8",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 3470,
        "linearizedBaseContracts": [
          3470,
          9428,
          6254
        ],
        "name": "WithdrawContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3401,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3395,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1433:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3397,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1450:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1465:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:48:8"
            },
            "src": "1418:63:8"
          },
          {
            "body": {
              "id": 3409,
              "nodeType": "Block",
              "src": "1618:42:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1635:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 3405,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1628:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3408,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:25:8"
                }
              ]
            },
            "documentation": {
              "id": 3402,
              "nodeType": "StructuredDocumentation",
              "src": "1487:99:8",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 3410,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:2:8"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1618:0:8"
            },
            "scope": 3470,
            "src": "1591:69:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3468,
              "nodeType": "Block",
              "src": "2231:548:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3424,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3416,
                            "src": "2287:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 3422,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3414,
                            "src": "2262:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7934,
                          "src": "2262:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 3425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2262:33:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261773a3a72657365727665642061646472657373",
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48",
                          "typeString": "literal_string \"withdraw::reserved address\""
                        },
                        "value": "withdraw::reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48",
                          "typeString": "literal_string \"withdraw::reserved address\""
                        }
                      ],
                      "id": 3421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2241:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:106:8"
                },
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 3468,
                      "src": "2498:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 3430,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3429,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "2498:13:8"
                        },
                        "referencedDeclaration": 9181,
                        "src": "2498:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3438,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3435,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "2557:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3433,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3414,
                            "src": "2533:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "2533:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3432,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "2519:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2498:65:8"
                },
                {
                  "assignments": [
                    3440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3440,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3468,
                      "src": "2573:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2573:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3446,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3443,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2606:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3444,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2615:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3441,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "2591:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "2591:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2591:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2573:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3448,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3440,
                          "src": "2639:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2649:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2639:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7468696e6720746f207769746864726177",
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2652:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0",
                          "typeString": "literal_string \"nothing to withdraw\""
                        },
                        "value": "nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0",
                          "typeString": "literal_string \"nothing to withdraw\""
                        }
                      ],
                      "id": 3447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2631:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3457,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2699:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3458,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2708:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3459,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "2715:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3454,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "2685:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8462,
                      "src": "2685:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,uint256) external"
                      }
                    },
                    "id": 3460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:38:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3463,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2748:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3464,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2757:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3465,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "2764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3462,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "2739:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3467,
                  "nodeType": "EmitStatement",
                  "src": "2734:38:8"
                }
              ]
            },
            "documentation": {
              "id": 3411,
              "nodeType": "StructuredDocumentation",
              "src": "1666:446:8",
              "text": " @notice Allows the member/advisor of the DAO to withdraw the funds from their internal bank account.\n @notice Only accounts that are not reserved can withdraw the funds.\n @notice If theres is no available balance in the user's account, the transaction is reverted.\n @param dao The DAO address.\n @param account The account to receive the funds.\n @param token The token address to receive the funds."
            },
            "functionSelector": "ff7885e8",
            "id": 3469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3414,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2144:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3413,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3412,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2144:11:8"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2144:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3416,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2169:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2202:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:87:8"
            },
            "returnParameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:0:8"
            },
            "scope": 3470,
            "src": "2117:662:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3471,
        "src": "1357:1424:8"
      }
    ],
    "src": "0:2782:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Withdraw.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "IConfiguration": [
        3507
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ],
      "WithdrawContract": [
        3470
      ]
    },
    "id": 3471,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3382,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 3383,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 6255,
        "src": "58:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 3384,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 8219,
        "src": "93:33:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 3385,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 9182,
        "src": "127:32:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 3386,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 9429,
        "src": "160:35:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol",
        "file": "./interfaces/IConfiguration.sol",
        "id": 3387,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 3508,
        "src": "196:41:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 3388,
        "nodeType": "ImportDirective",
        "scope": 3471,
        "sourceUnit": 3782,
        "src": "238:44:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3390,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1386:12:8"
            },
            "id": 3391,
            "nodeType": "InheritanceSpecifier",
            "src": "1386:12:8"
          },
          {
            "baseName": {
              "id": 3392,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1400:11:8"
            },
            "id": 3393,
            "nodeType": "InheritanceSpecifier",
            "src": "1400:11:8"
          }
        ],
        "contractDependencies": [
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3389,
          "nodeType": "StructuredDocumentation",
          "src": "284:1071:8",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 3470,
        "linearizedBaseContracts": [
          3470,
          9428,
          6254
        ],
        "name": "WithdrawContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "id": 3401,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3395,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1433:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3397,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1450:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1450:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3401,
                  "src": "1465:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1465:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:48:8"
            },
            "src": "1418:63:8"
          },
          {
            "body": {
              "id": 3409,
              "nodeType": "Block",
              "src": "1618:42:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 3406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1635:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 3405,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1628:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3408,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:25:8"
                }
              ]
            },
            "documentation": {
              "id": 3402,
              "nodeType": "StructuredDocumentation",
              "src": "1487:99:8",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 3410,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1598:2:8"
            },
            "returnParameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1618:0:8"
            },
            "scope": 3470,
            "src": "1591:69:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3468,
              "nodeType": "Block",
              "src": "2231:548:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3424,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3416,
                            "src": "2287:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 3422,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3414,
                            "src": "2262:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7934,
                          "src": "2262:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 3425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2262:33:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77697468647261773a3a72657365727665642061646472657373",
                        "id": 3426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2309:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48",
                          "typeString": "literal_string \"withdraw::reserved address\""
                        },
                        "value": "withdraw::reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4bf43ef2dfc418f4dc2a8b8bb82e43bf1bff90bca4bfa3726a8c6c2eae22fc48",
                          "typeString": "literal_string \"withdraw::reserved address\""
                        }
                      ],
                      "id": 3421,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2241:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:106:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:106:8"
                },
                {
                  "assignments": [
                    3431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3431,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 3468,
                      "src": "2498:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 3430,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3429,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "2498:13:8"
                        },
                        "referencedDeclaration": 9181,
                        "src": "2498:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3438,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3435,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "2557:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3433,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3414,
                            "src": "2533:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "2533:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2533:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3432,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "2519:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:44:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2498:65:8"
                },
                {
                  "assignments": [
                    3440
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3440,
                      "mutability": "mutable",
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 3468,
                      "src": "2573:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3439,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2573:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3446,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3443,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2606:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3444,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2615:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3441,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "2591:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "2591:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 3445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2591:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2573:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3448,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3440,
                          "src": "2639:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2649:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2639:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7468696e6720746f207769746864726177",
                        "id": 3451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2652:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0",
                          "typeString": "literal_string \"nothing to withdraw\""
                        },
                        "value": "nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d015b7d7782ab5f33f0b2a3f3ec5207107594fb24ec0023388f87a16a3862dc0",
                          "typeString": "literal_string \"nothing to withdraw\""
                        }
                      ],
                      "id": 3447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2631:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2631:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "2631:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3457,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2699:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3458,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2708:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3459,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "2715:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3454,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3431,
                        "src": "2685:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8462,
                      "src": "2685:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,uint256) external"
                      }
                    },
                    "id": 3460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:38:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3463,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3416,
                        "src": "2748:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3464,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "2757:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3465,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "2764:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3462,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3401,
                      "src": "2739:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:33:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3467,
                  "nodeType": "EmitStatement",
                  "src": "2734:38:8"
                }
              ]
            },
            "documentation": {
              "id": 3411,
              "nodeType": "StructuredDocumentation",
              "src": "1666:446:8",
              "text": " @notice Allows the member/advisor of the DAO to withdraw the funds from their internal bank account.\n @notice Only accounts that are not reserved can withdraw the funds.\n @notice If theres is no available balance in the user's account, the transaction is reverted.\n @param dao The DAO address.\n @param account The account to receive the funds.\n @param token The token address to receive the funds."
            },
            "functionSelector": "ff7885e8",
            "id": 3469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3414,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2144:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3413,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3412,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2144:11:8"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2144:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3416,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2169:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:15:8",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3469,
                  "src": "2202:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2134:87:8"
            },
            "returnParameters": {
              "id": 3420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:0:8"
            },
            "scope": 3470,
            "src": "2117:662:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3471,
        "src": "1357:1424:8"
      }
    ],
    "src": "0:2782:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T09:36:52.627Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "withdraw(address,address,address)": {
        "params": {
          "account": "The account to receive the funds.",
          "dao": "The DAO address.",
          "token": "The token address to receive the funds."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "withdraw(address,address,address)": {
        "notice": "Allows the member/advisor of the DAO to withdraw the funds from their internal bank account.Only accounts that are not reserved can withdraw the funds.If theres is no available balance in the user's account, the transaction is reverted."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}