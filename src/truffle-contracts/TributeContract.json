{
  "contractName": "TributeContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenToMint",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tributeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddrToMint",
          "type": "address"
        }
      ],
      "name": "configureDao",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenToMint",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "requestAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tributeAmount",
          "type": "uint256"
        }
      ],
      "name": "provideTribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sponsorProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "cancelProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "processProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"cancelProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddrToMint\",\"type\":\"address\"}],\"name\":\"configureDao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"processProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenToMint\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tributeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenToMint\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tributeAmount\",\"type\":\"uint256\"}],\"name\":\"provideTribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sponsorProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelProposal(address,bytes32)\":{\"details\":\"Proposal id must exist.Only proposals that have not already been sponsored can be cancelled.Only proposer can cancel a tribute proposal.\",\"params\":{\"dao\":\"The DAO address.\",\"proposalId\":\"The proposal id.\"}},\"configureDao(address,address)\":{\"details\":\"Only adapters registered to the DAO can execute the function call (or if the DAO is in creation mode).A DAO Bank extension must exist and be configured with proper access for this adapter.\",\"params\":{\"dao\":\"The DAO address.\",\"tokenAddrToMint\":\"The internal token address to be registered with the DAO Bank.\"}},\"processProposal(address,bytes32)\":{\"details\":\"Proposal id must exist.Only proposals that have not already been processed are accepted.Only sponsored proposals with completed voting are accepted.ERC-20 tribute tokens must be registered with the DAO Bank (a passed proposal will check and register the token if needed).\",\"params\":{\"dao\":\"The DAO address.\",\"proposalId\":\"The proposal id.\"}},\"provideTribute(address,bytes32,address,address,uint256,address,uint256)\":{\"details\":\"Applicant address must not be reserved.The proposer must first separately `approve` the adapter as spender of the ERC-20 tokens provided as tribute.\",\"params\":{\"applicant\":\"The applicant address (who will receive the DAO internal tokens and become a member).\",\"dao\":\"The DAO address.\",\"proposalId\":\"The proposal id (managed by the client).\",\"requestAmount\":\"The amount requested of DAO internal tokens.\",\"tokenAddr\":\"The address of the ERC-20 tokens provided as tribute by the proposer.\",\"tokenToMint\":\"The address of the DAO internal token to be minted to the applicant.\",\"tributeAmount\":\"The amount of tribute tokens.\"}},\"sponsorProposal(address,bytes32,bytes)\":{\"details\":\"Only members of the DAO can sponsor a tribute proposal.\",\"params\":{\"dao\":\"The DAO address.\",\"data\":\"Additional details about the proposal.\",\"proposalId\":\"The proposal id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelProposal(address,bytes32)\":{\"notice\":\"Cancels a tribute proposal which marks it as processed and initiates refund of the tribute tokens to the proposer.\"},\"configureDao(address,address)\":{\"notice\":\"Configures the adapter for a particular DAO.Registers the DAO internal token with the DAO Bank.\"},\"processProposal(address,bytes32)\":{\"notice\":\"Processes a tribute proposal to handle minting and exchange of DAO internal tokens for tribute tokens (passed vote) or the refund of tribute tokens (failed vote).\"},\"provideTribute(address,bytes32,address,address,uint256,address,uint256)\":{\"notice\":\"Creates a tribute proposal and escrows received tokens into the adapter.\"},\"sponsorProposal(address,bytes32,bytes)\":{\"notice\":\"Sponsors a tribute proposal to start the voting process.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/Tribute.sol\":\"TributeContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/Tribute.sol\":{\"keccak256\":\"0x3b4a4a14988e14ff9bfd0c7d233c429424fbdcac6bf0641f678ad2905af55bae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://152186f98af9fdf2d9ab4110981a23feea5bb3bd8abc843e44d928d4a747897c\",\"dweb:/ipfs/QmfUfHCo8miAuNTgvAudxXknVQWwK1ucLkx1znRHjF3JoM\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/ITribute.sol\":{\"keccak256\":\"0x77ac26daf98c1b44aeb73914390abce09b3f857d2042a511455dc1a35a43392b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c02c376c10f0179679055eb0113b8b3610556094fe5c332b1d03e6bb11f5ac1a\",\"dweb:/ipfs/QmfRToQAPjBtNdNQkq251TocToMq4gzGGtUwLbp23adYGi\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x2b65fd03c04db3db5d73f5e007ca84075fc664c1da4d3f3c77b5c288c9d7bac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1728a85344abf1f3f11b0838c5b29169a38bfa9918f7b8f813079f79b9cbfb\",\"dweb:/ipfs/QmRSarYr4TDaAzPELomqWLTGxkvsbgKdjdd9GwKWDEr1vh\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/jd/openlaw/openlawteam/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612409806100206000396000f3fe60806040526004361061007f5760003560e01c8063c0b62f451161004e578063c0b62f4514610155578063c9c35c0814610175578063cd0e42ed14610195578063fc258031146101b5576100a5565b806348020ae4146100aa5780635cb75276146100cc5780639573167d14610108578063b244a41d14610128576100a5565b366100a55760405162461bcd60e51b815260040161009c906120f1565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100ca6100c5366004611a02565b6101e2565b005b3480156100d857600080fd5b506100ec6100e7366004611983565b6103a6565b6040516100ff9796959493929190611d29565b60405180910390f35b34801561011457600080fd5b506100ca610123366004611a02565b6103fa565b34801561013457600080fd5b50610148610143366004611be2565b610a75565b6040516100ff9190611d09565b34801561016157600080fd5b506100ca610170366004611a14565b610ad1565b34801561018157600080fd5b506100ca6101903660046119ca565b610bb2565b3480156101a157600080fd5b506100ca6101b0366004611a8e565b610e54565b3480156101c157600080fd5b506101d56101d0366004611bc1565b610fa3565b6040516100ff9190611cfe565b6001600160a01b0382166000908152602081815260408083208484529091529020805482146102235760405162461bcd60e51b815260040161009c90611ec9565b6040517ff941f6910000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063f941f6919061026b908590600190600401611d64565b60206040518083038186803b15801561028357600080fd5b505afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb91906119ae565b156102d85760405162461bcd60e51b815260040161009c90611dfe565b60028101546001600160a01b031633146103045760405162461bcd60e51b815260040161009c90611f94565b6040517f30490e910000000000000000000000000000000000000000000000000000000081526001600160a01b038416906330490e9190610349908590600401611d09565b600060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506005810154600282015460068301546103a1926001600160a01b03908116921690610fc0565b505050565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169593851694928316939192169087565b6001600160a01b03821660009081526020818152604080832084845290915290208054821461043b5760405162461bcd60e51b815260040161009c90611ec9565b6040517ff941f6910000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063f941f69190610483908590600290600401611d64565b60206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d391906119ae565b156104f05760405162461bcd60e51b815260040161009c90611f00565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038516906317ba7d8590610558907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611d09565b60206040518083038186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190611967565b90506000816001600160a01b03166376225e7386866040518363ffffffff1660e01b81526004016105da929190611ce5565b602060405180830381600087803b1580156105f457600080fd5b505af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611b8a565b6040517f30490e910000000000000000000000000000000000000000000000000000000081529091506001600160a01b038616906330490e9190610674908790600401611d09565b600060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b50600292506106af915050565b8160058111156106e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109a7576040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063593e96b690610756907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190611967565b6001850154600286015460038701546004880154600589015460068a01549596506107e7958c956001600160a01b0390811695811694811693921690610fdb565b60058401546040517ff9eaee0d0000000000000000000000000000000000000000000000000000000081526001600160a01b039182169183169063f9eaee0d90610835908490600401611c80565b60206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088591906119ae565b610901576040517f69af242f0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906369af242f906108ce908490600401611c80565b600060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b505050505b60068501546040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b0384169163c57d5fe9916109509161dead91869190600401611c94565b600060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050600686015482915061099f906001600160a01b038316908a906112fb565b505050610a6e565b60038160058111156109e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480610a2657506001816005811115610a24577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b15610a5657600583015460028401546006850154610a51926001600160a01b03908116921690610fc0565b610a6e565b60405162461bcd60e51b815260040161009c90611f37565b5050505050565b6000811515610a848585610fa3565b151514610ac7578115610aad57610a9c8360026121bd565b610aa6908561215f565b9050610aca565b610ab88360026121bd565b610aa690856122a4565b610aca565b50825b9392505050565b6040517fef6a24990000000000000000000000000000000000000000000000000000000081526001600160a01b0388169063ef6a249990610b16908890600401611c80565b60206040518083038186803b158015610b2e57600080fd5b505afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6691906119ae565b610b825760405162461bcd60e51b815260040161009c90611e35565b81610b986001600160a01b03821633308561139c565b610ba888888833898989896113bd565b5050505050505050565b816000816001600160a01b031663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bee57600080fd5b505afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190611b6b565b6001811115610c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c6f5750610c6f81611517565b80610d0a57506040517f68c18beb0000000000000000000000000000000000000000000000000000000081526001600160a01b038216906368c18beb90610cba903390600401611c80565b60206040518083038186803b158015610cd257600080fd5b505afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a91906119ae565b610d265760405162461bcd60e51b815260040161009c90612128565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063593e96b690610d8e907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b158015610da657600080fd5b505afa158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190611967565b6040517ff7e15acf0000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063f7e15acf90610e26908690600401611c80565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610ba8573d6000803e3d6000fd5b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038516906317ba7d8590610ebc907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611d09565b60206040518083038186803b158015610ed457600080fd5b505afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190611967565b90506000816001600160a01b031663966917d0863086336040518563ffffffff1660e01b8152600401610f429493929190611d7b565b602060405180830381600087803b158015610f5c57600080fd5b505af1158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f949190611967565b9050610a6e85858584866116c7565b6000610fb6600260ff841685901c6122e7565b6001149392505050565b82610fd56001600160a01b03821684846112fb565b50505050565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0389169063593e96b690611043907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b15801561105b57600080fd5b505afa15801561106f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110939190611967565b6040517f14a332160000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906314a33216906110db908890600401611c80565b60206040518083038186803b1580156110f357600080fd5b505afa158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b91906119ae565b6111475760405162461bcd60e51b815260040161009c9061205f565b6040517fae7fdd670000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063ae7fdd679061118f908a90600190600401611cb8565b60206040518083038186803b1580156111a757600080fd5b505afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df91906119ae565b156111fc5760405162461bcd60e51b815260040161009c90612028565b6040517fdc929f4a0000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063dc929f4a90611241908a90600401611c80565b600060405180830381600087803b15801561125b57600080fd5b505af115801561126f573d6000803e3d6000fd5b50506040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b038416925063c57d5fe991506112bc908a9089908990600401611c94565b600060405180830381600087803b1580156112d657600080fd5b505af19250505080156112e7575060015b610ba8576112f6838784610fc0565b610ba8565b6103a18363a9059cbb60e01b848460405160240161131a929190611ce5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117c2565b610fd5846323b872dd60e01b85858560405160240161131a93929190611c94565b6040517fb73dc3890000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063b73dc38990611402908a90600401611d09565b600060405180830381600087803b15801561141c57600080fd5b505af1158015611430573d6000803e3d6000fd5b50506040805160e0810182528a81526001600160a01b03998a166020808301918252998b16828401908152988b166060830190815260808301988952968b1660a0830190815260c083019687529c8b166000908152808b528381209c81529b909952992098518955505093516001870180549187167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617905592516002870180549187169185169190911790555160038601805491861691841691909117905551600485015593516005840180549190931694169390931790559051600690910155565b6000816001600160a01b031663c67143666040518163ffffffff1660e01b815260040160206040518083038186803b15801561155257600080fd5b505afa158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a9190611ba9565b158061162657506040517f45ecd02f0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906345ecd02f906115d6903390600401611c80565b60206040518083038186803b1580156115ee57600080fd5b505afa158015611602573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162691906119ae565b806116c157506040517f68c18beb0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906368c18beb90611671903390600401611c80565b60206040518083038186803b15801561168957600080fd5b505afa15801561169d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c191906119ae565b92915050565b6040517f815a2bf40000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063815a2bf49061170e9087908690600401611d12565b600060405180830381600087803b15801561172857600080fd5b505af115801561173c573d6000803e3d6000fd5b50506040517f2b0974d00000000000000000000000000000000000000000000000000000000081526001600160a01b0384169250632b0974d0915061178990889088908890600401611dba565b600060405180830381600087803b1580156117a357600080fd5b505af11580156117b7573d6000803e3d6000fd5b505050505050505050565b6000611817826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118519092919063ffffffff16565b8051909150156103a1578080602001905181019061183591906119ae565b6103a15760405162461bcd60e51b815260040161009c90612094565b60606118608484600085611868565b949350505050565b60608247101561188a5760405162461bcd60e51b815260040161009c90611e6c565b61189385611928565b6118af5760405162461bcd60e51b815260040161009c90611ff1565b600080866001600160a01b031685876040516118cb9190611c64565b60006040518083038185875af1925050503d8060008114611908576040519150601f19603f3d011682016040523d82523d6000602084013e61190d565b606091505b509150915061191d82828661192e565b979650505050505050565b3b151590565b6060831561193d575081610aca565b82511561194d5782518084602001fd5b8160405162461bcd60e51b815260040161009c9190611deb565b600060208284031215611978578081fd5b8151610aca816123ad565b60008060408385031215611995578081fd5b82356119a0816123ad565b946020939093013593505050565b6000602082840312156119bf578081fd5b8151610aca816123c5565b600080604083850312156119dc578182fd5b82356119e7816123ad565b915060208301356119f7816123ad565b809150509250929050565b60008060408385031215611995578182fd5b600080600080600080600060e0888a031215611a2e578283fd5b8735611a39816123ad565b9650602088013595506040880135611a50816123ad565b94506060880135611a60816123ad565b93506080880135925060a0880135611a77816123ad565b8092505060c0880135905092959891949750929550565b600080600060608486031215611aa2578283fd5b8335611aad816123ad565b92506020848101359250604085013567ffffffffffffffff80821115611ad1578384fd5b818701915087601f830112611ae4578384fd5b813581811115611af657611af661237e565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715611b3757611b3761237e565b60405281815283820185018a1015611b4d578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215611b7c578081fd5b815160028110610aca578182fd5b600060208284031215611b9b578081fd5b815160068110610aca578182fd5b600060208284031215611bba578081fd5b5051919050565b60008060408385031215611bd3578182fd5b50508035926020909101359150565b600080600060608486031215611bf6578283fd5b83359250602084013591506040840135611c0f816123c5565b809150509250925092565b60008151808452611c328160208601602086016122bb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008251611c768184602087016122bb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03831681526040810160028310611cd857611cd861234f565b8260208301529392505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9687526001600160a01b03958616602088015293851660408701529184166060860152608085015290911660a083015260c082015260e00190565b8281526040810160038310611cd857611cd861234f565b60006001600160a01b038087168352808616602084015260806040840152611da66080840186611c1a565b915080841660608401525095945050505050565b60006001600160a01b038516825283602083015260606040830152611de26060830184611c1a565b95945050505050565b600060208252610aca6020830184611c1a565b6020808252601a908201527f70726f706f73616c20616c72656164792073706f6e736f726564000000000000604082015260600190565b6020808252601d908201527f6170706c6963616e742069732072657365727665642061646472657373000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f70726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b6020808252601a908201527f70726f706f73616c20616c72656164792070726f636573736564000000000000604082015260600190565b60208082526022908201527f70726f706f73616c20686173206e6f74206265656e20766f746564206f6e207960408201527f6574000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f6f6e6c792070726f706f7365722063616e2063616e63656c20612070726f706f60408201527f73616c0000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601c908201527f63616e6e6f742070726f63657373206a61696c6564206d656d62657200000000604082015260600190565b6020808252818101527f69742063616e206f6e6c79206d696e7420696e7465726e616c20746f6b656e73604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b6020808252600b908201527f6f6e6c7941646170746572000000000000000000000000000000000000000000604082015260600190565b6000821982111561217257612172612320565b500190565b80825b600180861161218957506121b4565b81870482111561219b5761219b612320565b808616156121a857918102915b9490941c93800261217a565b94509492505050565b6000610aca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826121f457506001610aca565b8161220157506000610aca565b816001811461221757600281146122215761224e565b6001915050610aca565b60ff84111561223257612232612320565b6001841b91508482111561224857612248612320565b50610aca565b5060208310610133831016604e8410600b841016171561227c575081810a83811115610ac257610ac2612320565b6122898484846001612177565b80860482111561229b5761229b612320565b02949350505050565b6000828210156122b6576122b6612320565b500390565b60005b838110156122d65781810151838201526020016122be565b83811115610fd55750506000910152565b60008261231b577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b03811681146123c257600080fd5b50565b80151581146123c257600080fdfea2646970667358221220108dcd883d81bb5908fe5cd01d98c24e9df39e93b819c62a519b68617ac2bbe364736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063c0b62f451161004e578063c0b62f4514610155578063c9c35c0814610175578063cd0e42ed14610195578063fc258031146101b5576100a5565b806348020ae4146100aa5780635cb75276146100cc5780639573167d14610108578063b244a41d14610128576100a5565b366100a55760405162461bcd60e51b815260040161009c906120f1565b60405180910390fd5b600080fd5b3480156100b657600080fd5b506100ca6100c5366004611a02565b6101e2565b005b3480156100d857600080fd5b506100ec6100e7366004611983565b6103a6565b6040516100ff9796959493929190611d29565b60405180910390f35b34801561011457600080fd5b506100ca610123366004611a02565b6103fa565b34801561013457600080fd5b50610148610143366004611be2565b610a75565b6040516100ff9190611d09565b34801561016157600080fd5b506100ca610170366004611a14565b610ad1565b34801561018157600080fd5b506100ca6101903660046119ca565b610bb2565b3480156101a157600080fd5b506100ca6101b0366004611a8e565b610e54565b3480156101c157600080fd5b506101d56101d0366004611bc1565b610fa3565b6040516100ff9190611cfe565b6001600160a01b0382166000908152602081815260408083208484529091529020805482146102235760405162461bcd60e51b815260040161009c90611ec9565b6040517ff941f6910000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063f941f6919061026b908590600190600401611d64565b60206040518083038186803b15801561028357600080fd5b505afa158015610297573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bb91906119ae565b156102d85760405162461bcd60e51b815260040161009c90611dfe565b60028101546001600160a01b031633146103045760405162461bcd60e51b815260040161009c90611f94565b6040517f30490e910000000000000000000000000000000000000000000000000000000081526001600160a01b038416906330490e9190610349908590600401611d09565b600060405180830381600087803b15801561036357600080fd5b505af1158015610377573d6000803e3d6000fd5b505050506005810154600282015460068301546103a1926001600160a01b03908116921690610fc0565b505050565b6000602081815292815260408082209093529081522080546001820154600283015460038401546004850154600586015460069096015494956001600160a01b039485169593851694928316939192169087565b6001600160a01b03821660009081526020818152604080832084845290915290208054821461043b5760405162461bcd60e51b815260040161009c90611ec9565b6040517ff941f6910000000000000000000000000000000000000000000000000000000081526001600160a01b0384169063f941f69190610483908590600290600401611d64565b60206040518083038186803b15801561049b57600080fd5b505afa1580156104af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d391906119ae565b156104f05760405162461bcd60e51b815260040161009c90611f00565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038516906317ba7d8590610558907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611d09565b60206040518083038186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190611967565b90506000816001600160a01b03166376225e7386866040518363ffffffff1660e01b81526004016105da929190611ce5565b602060405180830381600087803b1580156105f457600080fd5b505af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190611b8a565b6040517f30490e910000000000000000000000000000000000000000000000000000000081529091506001600160a01b038616906330490e9190610674908790600401611d09565b600060405180830381600087803b15801561068e57600080fd5b505af11580156106a2573d6000803e3d6000fd5b50600292506106af915050565b8160058111156106e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156109a7576040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063593e96b690610756907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b15801561076e57600080fd5b505afa158015610782573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a69190611967565b6001850154600286015460038701546004880154600589015460068a01549596506107e7958c956001600160a01b0390811695811694811693921690610fdb565b60058401546040517ff9eaee0d0000000000000000000000000000000000000000000000000000000081526001600160a01b039182169183169063f9eaee0d90610835908490600401611c80565b60206040518083038186803b15801561084d57600080fd5b505afa158015610861573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088591906119ae565b610901576040517f69af242f0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906369af242f906108ce908490600401611c80565b600060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b505050505b60068501546040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b0384169163c57d5fe9916109509161dead91869190600401611c94565b600060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050600686015482915061099f906001600160a01b038316908a906112fb565b505050610a6e565b60038160058111156109e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480610a2657506001816005811115610a24577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b15610a5657600583015460028401546006850154610a51926001600160a01b03908116921690610fc0565b610a6e565b60405162461bcd60e51b815260040161009c90611f37565b5050505050565b6000811515610a848585610fa3565b151514610ac7578115610aad57610a9c8360026121bd565b610aa6908561215f565b9050610aca565b610ab88360026121bd565b610aa690856122a4565b610aca565b50825b9392505050565b6040517fef6a24990000000000000000000000000000000000000000000000000000000081526001600160a01b0388169063ef6a249990610b16908890600401611c80565b60206040518083038186803b158015610b2e57600080fd5b505afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6691906119ae565b610b825760405162461bcd60e51b815260040161009c90611e35565b81610b986001600160a01b03821633308561139c565b610ba888888833898989896113bd565b5050505050505050565b816000816001600160a01b031663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bee57600080fd5b505afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c269190611b6b565b6001811115610c5e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b148015610c6f5750610c6f81611517565b80610d0a57506040517f68c18beb0000000000000000000000000000000000000000000000000000000081526001600160a01b038216906368c18beb90610cba903390600401611c80565b60206040518083038186803b158015610cd257600080fd5b505afa158015610ce6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0a91906119ae565b610d265760405162461bcd60e51b815260040161009c90612128565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063593e96b690610d8e907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b158015610da657600080fd5b505afa158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190611967565b6040517ff7e15acf0000000000000000000000000000000000000000000000000000000081529091506001600160a01b0382169063f7e15acf90610e26908690600401611c80565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610ba8573d6000803e3d6000fd5b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038516906317ba7d8590610ebc907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611d09565b60206040518083038186803b158015610ed457600080fd5b505afa158015610ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0c9190611967565b90506000816001600160a01b031663966917d0863086336040518563ffffffff1660e01b8152600401610f429493929190611d7b565b602060405180830381600087803b158015610f5c57600080fd5b505af1158015610f70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f949190611967565b9050610a6e85858584866116c7565b6000610fb6600260ff841685901c6122e7565b6001149392505050565b82610fd56001600160a01b03821684846112fb565b50505050565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0389169063593e96b690611043907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611d09565b60206040518083038186803b15801561105b57600080fd5b505afa15801561106f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110939190611967565b6040517f14a332160000000000000000000000000000000000000000000000000000000081529091506001600160a01b038216906314a33216906110db908890600401611c80565b60206040518083038186803b1580156110f357600080fd5b505afa158015611107573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112b91906119ae565b6111475760405162461bcd60e51b815260040161009c9061205f565b6040517fae7fdd670000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063ae7fdd679061118f908a90600190600401611cb8565b60206040518083038186803b1580156111a757600080fd5b505afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df91906119ae565b156111fc5760405162461bcd60e51b815260040161009c90612028565b6040517fdc929f4a0000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063dc929f4a90611241908a90600401611c80565b600060405180830381600087803b15801561125b57600080fd5b505af115801561126f573d6000803e3d6000fd5b50506040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b038416925063c57d5fe991506112bc908a9089908990600401611c94565b600060405180830381600087803b1580156112d657600080fd5b505af19250505080156112e7575060015b610ba8576112f6838784610fc0565b610ba8565b6103a18363a9059cbb60e01b848460405160240161131a929190611ce5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117c2565b610fd5846323b872dd60e01b85858560405160240161131a93929190611c94565b6040517fb73dc3890000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063b73dc38990611402908a90600401611d09565b600060405180830381600087803b15801561141c57600080fd5b505af1158015611430573d6000803e3d6000fd5b50506040805160e0810182528a81526001600160a01b03998a166020808301918252998b16828401908152988b166060830190815260808301988952968b1660a0830190815260c083019687529c8b166000908152808b528381209c81529b909952992098518955505093516001870180549187167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617905592516002870180549187169185169190911790555160038601805491861691841691909117905551600485015593516005840180549190931694169390931790559051600690910155565b6000816001600160a01b031663c67143666040518163ffffffff1660e01b815260040160206040518083038186803b15801561155257600080fd5b505afa158015611566573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158a9190611ba9565b158061162657506040517f45ecd02f0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906345ecd02f906115d6903390600401611c80565b60206040518083038186803b1580156115ee57600080fd5b505afa158015611602573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162691906119ae565b806116c157506040517f68c18beb0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906368c18beb90611671903390600401611c80565b60206040518083038186803b15801561168957600080fd5b505afa15801561169d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c191906119ae565b92915050565b6040517f815a2bf40000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063815a2bf49061170e9087908690600401611d12565b600060405180830381600087803b15801561172857600080fd5b505af115801561173c573d6000803e3d6000fd5b50506040517f2b0974d00000000000000000000000000000000000000000000000000000000081526001600160a01b0384169250632b0974d0915061178990889088908890600401611dba565b600060405180830381600087803b1580156117a357600080fd5b505af11580156117b7573d6000803e3d6000fd5b505050505050505050565b6000611817826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118519092919063ffffffff16565b8051909150156103a1578080602001905181019061183591906119ae565b6103a15760405162461bcd60e51b815260040161009c90612094565b60606118608484600085611868565b949350505050565b60608247101561188a5760405162461bcd60e51b815260040161009c90611e6c565b61189385611928565b6118af5760405162461bcd60e51b815260040161009c90611ff1565b600080866001600160a01b031685876040516118cb9190611c64565b60006040518083038185875af1925050503d8060008114611908576040519150601f19603f3d011682016040523d82523d6000602084013e61190d565b606091505b509150915061191d82828661192e565b979650505050505050565b3b151590565b6060831561193d575081610aca565b82511561194d5782518084602001fd5b8160405162461bcd60e51b815260040161009c9190611deb565b600060208284031215611978578081fd5b8151610aca816123ad565b60008060408385031215611995578081fd5b82356119a0816123ad565b946020939093013593505050565b6000602082840312156119bf578081fd5b8151610aca816123c5565b600080604083850312156119dc578182fd5b82356119e7816123ad565b915060208301356119f7816123ad565b809150509250929050565b60008060408385031215611995578182fd5b600080600080600080600060e0888a031215611a2e578283fd5b8735611a39816123ad565b9650602088013595506040880135611a50816123ad565b94506060880135611a60816123ad565b93506080880135925060a0880135611a77816123ad565b8092505060c0880135905092959891949750929550565b600080600060608486031215611aa2578283fd5b8335611aad816123ad565b92506020848101359250604085013567ffffffffffffffff80821115611ad1578384fd5b818701915087601f830112611ae4578384fd5b813581811115611af657611af661237e565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715611b3757611b3761237e565b60405281815283820185018a1015611b4d578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215611b7c578081fd5b815160028110610aca578182fd5b600060208284031215611b9b578081fd5b815160068110610aca578182fd5b600060208284031215611bba578081fd5b5051919050565b60008060408385031215611bd3578182fd5b50508035926020909101359150565b600080600060608486031215611bf6578283fd5b83359250602084013591506040840135611c0f816123c5565b809150509250925092565b60008151808452611c328160208601602086016122bb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008251611c768184602087016122bb565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03831681526040810160028310611cd857611cd861234f565b8260208301529392505050565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b9687526001600160a01b03958616602088015293851660408701529184166060860152608085015290911660a083015260c082015260e00190565b8281526040810160038310611cd857611cd861234f565b60006001600160a01b038087168352808616602084015260806040840152611da66080840186611c1a565b915080841660608401525095945050505050565b60006001600160a01b038516825283602083015260606040830152611de26060830184611c1a565b95945050505050565b600060208252610aca6020830184611c1a565b6020808252601a908201527f70726f706f73616c20616c72656164792073706f6e736f726564000000000000604082015260600190565b6020808252601d908201527f6170706c6963616e742069732072657365727665642061646472657373000000604082015260600190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60408201527f722063616c6c0000000000000000000000000000000000000000000000000000606082015260800190565b60208082526017908201527f70726f706f73616c20646f6573206e6f74206578697374000000000000000000604082015260600190565b6020808252601a908201527f70726f706f73616c20616c72656164792070726f636573736564000000000000604082015260600190565b60208082526022908201527f70726f706f73616c20686173206e6f74206265656e20766f746564206f6e207960408201527f6574000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f6f6e6c792070726f706f7365722063616e2063616e63656c20612070726f706f60408201527f73616c0000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252601c908201527f63616e6e6f742070726f63657373206a61696c6564206d656d62657200000000604082015260600190565b6020808252818101527f69742063616e206f6e6c79206d696e7420696e7465726e616c20746f6b656e73604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60408201527f6f74207375636365656400000000000000000000000000000000000000000000606082015260800190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b6020808252600b908201527f6f6e6c7941646170746572000000000000000000000000000000000000000000604082015260600190565b6000821982111561217257612172612320565b500190565b80825b600180861161218957506121b4565b81870482111561219b5761219b612320565b808616156121a857918102915b9490941c93800261217a565b94509492505050565b6000610aca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826121f457506001610aca565b8161220157506000610aca565b816001811461221757600281146122215761224e565b6001915050610aca565b60ff84111561223257612232612320565b6001841b91508482111561224857612248612320565b50610aca565b5060208310610133831016604e8410600b841016171561227c575081810a83811115610ac257610ac2612320565b6122898484846001612177565b80860482111561229b5761229b612320565b02949350505050565b6000828210156122b6576122b6612320565b500390565b60005b838110156122d65781810151838201526020016122be565b83811115610fd55750506000910152565b60008261231b577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6001600160a01b03811681146123c257600080fd5b50565b80151581146123c257600080fdfea2646970667358221220108dcd883d81bb5908fe5cd01d98c24e9df39e93b819c62a519b68617ac2bbe364736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18672:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "214:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "214:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "256:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "266:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:34",
                "type": ""
              }
            ],
            "src": "14:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "369:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "424:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "432:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "417:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "417:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "417:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "390:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "399:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "386:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "386:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "382:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "379:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "450:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "463:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "454:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "522:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "495:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "537:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "547:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "588:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "599:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "571:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "327:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "338:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "350:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "358:6:34",
                "type": ""
              }
            ],
            "src": "282:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "692:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "738:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "747:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "755:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "740:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "740:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "740:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "713:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "722:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "705:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "702:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "773:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "792:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "786:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "777:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "835:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "811:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "850:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "860:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "658:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "669:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "681:6:34",
                "type": ""
              }
            ],
            "src": "614:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "983:315:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1029:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1038:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1046:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1031:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1031:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1031:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1004:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1013:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1000:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1000:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1025:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "996:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "993:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1064:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1077:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1068:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1136:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1109:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1109:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1151:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1161:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1151:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1175:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1207:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1218:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1190:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1179:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1258:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1231:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1275:17:34",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1285:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1275:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8227t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "941:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "952:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "964:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "972:6:34",
                "type": ""
              }
            ],
            "src": "876:422:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1410:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1456:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1465:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1473:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1458:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1458:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1458:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1431:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1440:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1427:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1427:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1452:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1423:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1420:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1491:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1517:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1504:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1504:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1495:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1563:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1536:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1536:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1578:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1588:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1578:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1602:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1629:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1640:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1625:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1625:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1612:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1368:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1379:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1391:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1399:6:34",
                "type": ""
              }
            ],
            "src": "1303:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1847:724:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1894:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1903:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1911:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1896:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1896:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1896:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1868:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1877:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1864:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1889:3:34",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1860:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1860:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1857:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1929:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1955:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1942:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1933:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2001:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1974:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2016:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2026:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2016:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2040:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2067:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2078:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2063:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2050:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2050:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2040:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2091:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2123:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2134:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2119:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2119:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2106:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2095:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2174:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2147:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2147:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2191:17:34",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2201:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2191:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2217:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2249:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2260:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2245:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2245:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2232:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2232:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2221:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2300:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2273:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2273:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2317:17:34",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2327:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2317:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2343:43:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2370:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2381:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2366:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2353:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:33:34"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2343:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2395:48:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2427:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2438:3:34",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2423:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2423:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2410:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2410:33:34"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "2399:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "2479:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2452:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2452:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2452:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2496:17:34",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "2506:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2522:43:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2549:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2560:3:34",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2545:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2545:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2532:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:33:34"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "2522:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32t_addresst_addresst_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1765:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1776:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1788:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1796:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1804:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1812:6:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1820:6:34",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1828:6:34",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "1836:6:34",
                "type": ""
              }
            ],
            "src": "1655:916:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2709:1108:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2755:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2764:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2772:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2757:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2757:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2757:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2730:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2739:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2726:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2726:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2751:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2722:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2722:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2719:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2790:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2816:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2803:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2794:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2862:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2835:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2835:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2835:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2877:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2887:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2877:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2901:12:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2911:2:34",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2905:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2922:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2949:9:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2960:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2945:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2945:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2932:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2932:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2922:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2973:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3004:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3015:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3000:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2987:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2987:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2977:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3028:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3038:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3032:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3083:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3092:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3100:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3085:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3085:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3085:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3071:6:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3079:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3068:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3068:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3065:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3118:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3132:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3143:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3128:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:22:34"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "3122:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3198:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3207:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3215:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3200:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3200:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3200:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3177:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3181:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3173:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3173:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3188:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3169:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3169:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3162:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3162:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3159:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3233:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3256:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3243:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3243:16:34"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3237:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3282:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3284:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3284:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3284:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3274:2:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3278:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3271:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3271:10:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3268:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3313:23:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3333:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3327:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:9:34"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3317:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3345:126:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3371:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3387:2:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3391:4:34",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3383:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3383:13:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3398:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3379:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3379:86:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3367:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3367:99:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3468:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3363:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3363:108:34"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3349:10:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3530:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3532:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3532:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3532:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3489:10:34"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3501:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3486:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3509:10:34"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3521:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3506:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3506:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3483:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3483:46:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3480:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3568:2:34",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3572:10:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3561:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3561:22:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3561:22:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3599:6:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3607:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:18:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:18:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3656:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3665:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3673:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3658:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3658:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3658:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3633:2:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3637:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3629:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3629:11:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3642:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3625:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3625:20:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3647:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3622:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3622:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3619:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3708:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3716:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:15:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3725:2:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3729:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3721:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3721:11:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3734:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3691:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3691:46:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3691:46:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3761:6:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3769:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3757:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3757:15:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3774:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3753:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3753:24:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3779:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3746:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3746:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3746:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3795:16:34",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3805:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3795:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2659:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2670:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2682:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2690:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2698:6:34",
                "type": ""
              }
            ],
            "src": "2576:1241:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3916:199:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3962:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3971:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3979:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3964:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3964:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3964:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3937:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3946:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3933:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3933:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3929:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3926:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3997:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4016:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4010:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4001:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4059:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4068:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4076:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4061:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4061:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4061:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4048:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4055:1:34",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4045:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4045:12:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4038:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4038:20:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4035:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4094:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4104:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4094:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_DaoState_$6595_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3882:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3893:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3905:6:34",
                "type": ""
              }
            ],
            "src": "3822:293:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4217:199:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4263:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4272:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4280:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4265:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4265:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4265:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4238:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4247:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4234:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4234:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4259:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4230:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4227:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4298:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4317:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4311:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4302:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4360:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4369:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4377:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4362:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4362:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4362:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4349:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4356:1:34",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4346:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4346:12:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4339:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4339:20:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4336:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4395:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4405:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4395:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4183:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4194:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4206:6:34",
                "type": ""
              }
            ],
            "src": "4120:296:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4502:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4548:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4557:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4565:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4550:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4550:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4550:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4523:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4532:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4519:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4519:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4544:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4515:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4512:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4583:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4599:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4593:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4593:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4583:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4468:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4479:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4491:6:34",
                "type": ""
              }
            ],
            "src": "4421:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4707:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4753:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4762:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4770:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4755:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4755:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4755:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4728:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4737:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4724:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4724:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4749:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4720:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4720:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4717:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4788:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4811:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4798:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4798:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4788:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4830:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4857:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4868:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4853:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4853:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4840:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4840:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4830:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4665:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4676:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4688:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4696:6:34",
                "type": ""
              }
            ],
            "src": "4620:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4984:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5030:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5039:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "5047:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5032:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5032:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5032:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5005:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5014:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5001:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5001:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4997:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4997:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4994:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5065:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5088:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5075:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5075:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5065:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5107:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5134:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5145:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5130:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5130:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5117:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5107:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5158:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5188:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5199:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5184:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5184:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5171:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5162:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5236:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5212:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5212:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5212:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5251:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5261:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "5251:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4934:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4945:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4957:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4965:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4973:6:34",
                "type": ""
              }
            ],
            "src": "4883:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5328:267:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5338:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5358:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5352:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5352:12:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5342:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5380:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5385:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5373:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:19:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5373:19:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5427:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5434:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5423:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5423:16:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5445:3:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5450:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5441:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5441:14:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5457:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5401:21:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5401:63:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5401:63:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5473:116:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5488:3:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5501:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5509:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5497:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5497:15:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5514:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5493:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5493:88:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5484:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5484:98:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5584:4:34",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5480:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5480:109:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5473:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5305:5:34",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5312:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5320:3:34",
                "type": ""
              }
            ],
            "src": "5277:318:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5737:137:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5747:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5767:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5761:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5761:13:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5751:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5809:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5817:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5805:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5805:17:34"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5824:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5829:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5783:21:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5783:53:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5783:53:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5845:23:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5856:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5861:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5852:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5852:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5845:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5713:3:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5718:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5729:3:34",
                "type": ""
              }
            ],
            "src": "5600:274:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5980:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5990:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6002:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6013:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5998:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5998:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5990:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6032:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6047:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6055:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6043:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6043:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6025:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6025:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6025:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5949:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5960:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5971:4:34",
                "type": ""
              }
            ],
            "src": "5879:226:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6267:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6277:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6289:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6300:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6285:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6285:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6277:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6312:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6322:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6316:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6380:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6395:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6403:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6391:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6391:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6373:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6373:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6373:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6427:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6438:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6423:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6423:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6447:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6455:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6443:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6443:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6416:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6416:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6416:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6479:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6490:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6475:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6475:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6495:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6468:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6468:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6468:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6220:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6231:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6239:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6247:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6258:4:34",
                "type": ""
              }
            ],
            "src": "6110:398:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6655:224:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6665:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6677:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6688:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6673:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6673:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6665:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6707:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6722:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6730:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6718:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6718:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6700:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6700:74:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6808:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "6810:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6810:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6810:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6796:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6804:1:34",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6793:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6793:13:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6786:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6786:21:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6783:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6850:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6861:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6846:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6846:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6866:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6839:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6839:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6839:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_MemberFlag_$6666__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6616:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6627:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6635:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6646:4:34",
                "type": ""
              }
            ],
            "src": "6513:366:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7013:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7023:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7035:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7046:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7031:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7031:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7023:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7065:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7080:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7088:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7076:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7076:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7058:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7058:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7058:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7152:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7163:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7148:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7148:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7168:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7141:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7141:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6974:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6985:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6993:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7004:4:34",
                "type": ""
              }
            ],
            "src": "6884:297:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7281:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7291:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7303:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7314:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7299:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7291:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7333:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "7358:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7351:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7351:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7344:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7344:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7326:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7326:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7250:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7261:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7272:4:34",
                "type": ""
              }
            ],
            "src": "7186:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7479:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7489:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7501:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7512:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7497:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7497:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7489:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7531:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7542:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7524:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7524:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7448:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7459:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7470:4:34",
                "type": ""
              }
            ],
            "src": "7378:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7689:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7699:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7711:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7722:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7707:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7707:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7699:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7741:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7752:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7734:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7734:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7734:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7779:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7790:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7775:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7775:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7799:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7807:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7795:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7795:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7768:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:83:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7768:83:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7650:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7661:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7669:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7680:4:34",
                "type": ""
              }
            ],
            "src": "7560:297:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8131:435:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8141:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8153:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8164:3:34",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8149:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8149:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8141:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8184:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8195:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8177:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8177:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8177:25:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8211:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8221:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8215:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8283:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8294:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8279:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8279:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8303:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8311:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8299:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8299:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8272:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8272:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8272:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8335:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8346:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8331:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8331:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "8355:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8363:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8351:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8351:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8324:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8324:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8324:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8387:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8398:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8383:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8383:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "8407:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8415:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8403:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8403:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8376:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8376:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8376:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8439:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8450:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8435:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8435:19:34"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "8456:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8428:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8428:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8428:35:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8483:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8494:3:34",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8479:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8479:19:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value5",
                            "nodeType": "YulIdentifier",
                            "src": "8504:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8512:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8500:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8500:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8472:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8472:44:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8472:44:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8536:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8547:3:34",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8532:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:19:34"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "8553:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8525:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8525:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8525:35:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8052:9:34",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "8063:6:34",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "8071:6:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "8079:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8087:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8095:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8103:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8111:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8122:4:34",
                "type": ""
              }
            ],
            "src": "7862:704:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8715:175:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8725:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8737:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8748:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8733:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8733:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8725:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8767:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8778:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8760:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8760:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8760:25:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8819:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "8821:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8821:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8821:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8807:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8815:1:34",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8804:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8804:13:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8797:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8797:21:34"
                  },
                  "nodeType": "YulIf",
                  "src": "8794:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8861:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8872:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8857:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8857:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8877:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8850:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8850:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8850:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_enum$_ProposalFlag_$6670__to_t_bytes32_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8676:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8687:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8695:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8706:4:34",
                "type": ""
              }
            ],
            "src": "8571:319:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9126:319:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9136:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9146:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9140:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9204:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9219:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9227:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9215:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9215:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9197:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9197:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9197:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9251:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9262:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9247:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9247:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9271:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9279:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9267:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9267:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9240:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9240:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9240:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9303:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9314:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9299:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9299:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9319:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9292:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9292:31:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9292:31:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9332:55:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9359:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9371:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9382:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9367:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9367:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "9340:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9340:47:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9332:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9407:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9418:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9403:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9403:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "9427:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "9435:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9423:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9423:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9396:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9396:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9396:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9071:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "9082:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9090:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9098:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9106:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9117:4:34",
                "type": ""
              }
            ],
            "src": "8895:550:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9607:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9617:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9629:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9640:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9625:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9625:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9617:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9659:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9674:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9682:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9670:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9670:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9652:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9652:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9652:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9746:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9757:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9742:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9742:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9762:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9735:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9735:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9735:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9568:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9579:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9587:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9598:4:34",
                "type": ""
              }
            ],
            "src": "9450:325:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9983:235:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10000:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10015:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10023:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10011:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10011:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9993:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9993:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9993:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10087:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10098:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10083:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10083:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10103:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10076:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10076:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10076:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10130:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10141:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10126:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10126:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10146:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10119:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10119:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10119:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10158:54:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10185:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10197:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10208:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10193:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10193:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "10166:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10166:46:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10158:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9936:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9947:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9955:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9963:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9974:4:34",
                "type": ""
              }
            ],
            "src": "9780:438:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10344:100:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10361:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10372:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10354:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10354:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10354:21:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10384:54:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10411:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10423:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10434:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10419:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "10392:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10392:46:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10384:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10313:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10324:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10335:4:34",
                "type": ""
              }
            ],
            "src": "10223:221:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10623:176:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10640:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10651:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10633:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10633:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10633:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10674:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10685:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10670:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10670:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10690:2:34",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10663:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10663:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10663:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10713:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10724:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10709:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10709:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10729:28:34",
                        "type": "",
                        "value": "proposal already sponsored"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10702:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10702:56:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10702:56:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10767:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10779:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10790:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10775:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10775:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10767:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10600:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10614:4:34",
                "type": ""
              }
            ],
            "src": "10449:350:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10978:179:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10995:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11006:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10988:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10988:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10988:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11029:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11040:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11025:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11025:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11045:2:34",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11018:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11018:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11018:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11068:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11079:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11064:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11064:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11084:31:34",
                        "type": "",
                        "value": "applicant is reserved address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11057:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11057:59:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11057:59:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11125:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11137:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11148:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11133:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11133:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11125:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10955:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10969:4:34",
                "type": ""
              }
            ],
            "src": "10804:353:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11336:228:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11353:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11364:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11346:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11346:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11346:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11387:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11398:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11383:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11383:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11403:2:34",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11376:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11376:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11376:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11426:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11437:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11422:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11422:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11442:34:34",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11415:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11415:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11415:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11497:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11508:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11493:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11493:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11513:8:34",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11486:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11486:36:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11486:36:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11531:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11543:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11554:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11539:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11539:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11531:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11313:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11327:4:34",
                "type": ""
              }
            ],
            "src": "11162:402:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11743:173:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11760:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11771:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11753:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11753:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11753:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11794:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11805:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11790:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11790:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11810:2:34",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11783:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11783:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11783:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11833:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11844:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11829:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11829:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11849:25:34",
                        "type": "",
                        "value": "proposal does not exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11822:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11822:53:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11822:53:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11884:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11896:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11907:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11892:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11892:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11884:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11720:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11734:4:34",
                "type": ""
              }
            ],
            "src": "11569:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12095:176:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12112:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12123:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12105:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12105:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12105:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12146:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12157:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12142:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12142:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12162:2:34",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12135:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12135:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12135:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12185:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12196:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12181:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12181:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12201:28:34",
                        "type": "",
                        "value": "proposal already processed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12174:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12174:56:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12174:56:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12239:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12251:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12262:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12247:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12247:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12239:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12072:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12086:4:34",
                "type": ""
              }
            ],
            "src": "11921:350:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12450:224:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12467:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12478:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12460:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12460:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12460:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12501:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12512:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12497:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12497:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12517:2:34",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12490:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12490:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12490:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12540:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12551:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12536:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12536:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12556:34:34",
                        "type": "",
                        "value": "proposal has not been voted on y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12529:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12529:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12529:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12611:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12622:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12607:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12607:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12627:4:34",
                        "type": "",
                        "value": "et"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12600:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12600:32:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12600:32:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12641:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12653:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12664:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12649:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12649:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12641:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12427:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12441:4:34",
                "type": ""
              }
            ],
            "src": "12276:398:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12853:225:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12870:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12881:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12863:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12863:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12863:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12904:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12915:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12900:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12900:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12920:2:34",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12893:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12893:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12893:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12943:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12954:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12939:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12939:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12959:34:34",
                        "type": "",
                        "value": "only proposer can cancel a propo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12932:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12932:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12932:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13014:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13025:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13010:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13010:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13030:5:34",
                        "type": "",
                        "value": "sal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13003:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13003:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13003:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13045:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13057:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13068:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13053:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13053:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13045:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12830:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12844:4:34",
                "type": ""
              }
            ],
            "src": "12679:399:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13257:179:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13274:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13285:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13267:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13267:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13267:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13308:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13319:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13304:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13304:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13324:2:34",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13297:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13297:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13297:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13347:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13358:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13343:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13343:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13363:31:34",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13336:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13336:59:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13336:59:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13404:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13416:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13427:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13412:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13412:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13404:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13234:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13248:4:34",
                "type": ""
              }
            ],
            "src": "13083:353:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13615:178:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13632:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13643:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13625:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13625:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13625:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13666:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13677:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13662:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13662:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13682:2:34",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13655:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13655:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13655:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13705:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13716:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13701:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13701:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13721:30:34",
                        "type": "",
                        "value": "cannot process jailed member"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13694:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13694:58:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13694:58:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13761:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13773:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13784:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13769:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13769:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13761:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13592:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13606:4:34",
                "type": ""
              }
            ],
            "src": "13441:352:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13972:182:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13989:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14000:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13982:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13982:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13982:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14023:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14034:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14019:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14019:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14039:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14012:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14012:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14012:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14062:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14073:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14058:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14058:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14078:34:34",
                        "type": "",
                        "value": "it can only mint internal tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14051:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14051:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14051:62:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14122:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14134:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14145:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14130:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14130:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14122:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13949:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13963:4:34",
                "type": ""
              }
            ],
            "src": "13798:356:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14333:232:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14350:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14361:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14343:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14343:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14343:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14384:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14395:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14380:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14380:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14400:2:34",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14373:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14373:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14373:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14423:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14434:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14419:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14419:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14439:34:34",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14412:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14412:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14412:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14494:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14505:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14490:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14490:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14510:12:34",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14483:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14483:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14483:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14532:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14544:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14555:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14540:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14540:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14532:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14310:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14324:4:34",
                "type": ""
              }
            ],
            "src": "14159:406:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14744:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14761:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14772:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14754:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14754:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14754:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14795:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14806:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14791:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14791:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14811:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14784:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14784:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14784:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14834:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14845:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14830:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14830:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14850:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14823:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14823:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14823:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14877:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14889:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14900:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14885:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14885:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14877:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14721:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14735:4:34",
                "type": ""
              }
            ],
            "src": "14570:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15088:161:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15105:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15116:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15098:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15098:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15098:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15139:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15150:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15135:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15135:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15155:2:34",
                        "type": "",
                        "value": "11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15128:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15128:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15128:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15178:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15189:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15174:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15174:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15194:13:34",
                        "type": "",
                        "value": "onlyAdapter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15167:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15167:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15167:41:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15217:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15229:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15240:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15225:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15225:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15217:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e915e5f6c2e5af6aaf13d51c36e7ec320f9ef826bd9363aa8697b2da43266816__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15065:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15079:4:34",
                "type": ""
              }
            ],
            "src": "14914:335:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15355:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15365:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15377:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15388:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15373:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15373:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15365:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15407:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15418:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15400:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15400:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15400:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15324:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15335:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15346:4:34",
                "type": ""
              }
            ],
            "src": "15254:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15484:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15511:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15513:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15513:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15513:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15500:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15507:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "15503:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15503:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15497:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15497:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "15494:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15542:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15553:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15556:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15549:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15549:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "15542:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15467:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15470:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "15476:3:34",
                "type": ""
              }
            ],
            "src": "15436:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15646:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15656:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "15665:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "15656:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15680:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "15688:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "15680:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15727:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "15741:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "15751:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "15745:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15793:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "15795:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "15778:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "15788:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "15775:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15775:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "15768:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15768:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "15765:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15843:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "15845:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15845:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15845:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15821:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "15831:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "15836:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "15827:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15827:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "15818:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15818:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "15815:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15899:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15901:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "15914:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "15921:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "15910:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15910:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "15901:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "15885:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "15895:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "15881:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15881:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "15878:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15941:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15953:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "15959:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "15949:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15949:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "15941:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "15977:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "15993:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "15997:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "15989:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15989:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "15977:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "15710:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15715:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15706:3:34",
                    "statements": []
                  },
                  "src": "15702:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "15597:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "15605:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "15612:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "15622:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "15630:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "15637:4:34",
                "type": ""
              }
            ],
            "src": "15569:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16097:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16107:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16137:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "16143:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16153:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "16116:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16116:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "16107:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "16068:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "16074:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "16087:5:34",
                "type": ""
              }
            ],
            "src": "16027:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16295:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16333:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16347:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16356:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16347:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16370:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "16315:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16308:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16308:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "16305:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16418:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16432:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16441:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16432:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16455:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "16404:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16397:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16397:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "16394:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16506:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "16520:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16529:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16520:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "16543:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16499:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16504:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16574:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16609:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "16611:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16611:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16611:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "16594:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16604:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "16591:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16591:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "16588:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "16644:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "16657:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16667:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "16653:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16653:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "16644:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "16700:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "16702:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16702:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "16702:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "16688:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "16695:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "16685:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16685:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "16682:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "16735:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "16567:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16572:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "16486:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "16479:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16848:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "16862:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "16875:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "16881:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "16871:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16871:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "16862:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16921:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "16923:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16923:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16923:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "16909:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "16916:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "16906:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16906:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "16903:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "16956:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "16772:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16778:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16769:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16769:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "16786:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16796:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16783:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16783:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16765:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16765:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "16809:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16815:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16806:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16806:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "16824:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16834:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "16821:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16821:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16802:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16802:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "16762:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16762:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "16759:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16980:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17022:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "17025:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "17031:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "17041:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "17003:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17003:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "16984:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "16993:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17087:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17089:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17089:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17089:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "17060:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "17073:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "17078:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "17069:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17069:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17057:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17057:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "17054:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17118:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "17131:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "17140:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "17127:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17127:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "17118:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "16261:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "16267:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "16277:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "16285:5:34",
                "type": ""
              }
            ],
            "src": "16231:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17207:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17229:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17231:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17231:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17231:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17223:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17226:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17220:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17220:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "17217:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17260:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17272:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17275:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17268:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17268:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17260:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17189:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17192:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17198:4:34",
                "type": ""
              }
            ],
            "src": "17158:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17341:205:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17351:10:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17360:1:34",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "17355:1:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17420:63:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17445:3:34"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17450:1:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17441:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17441:11:34"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "17464:3:34"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17469:1:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "17460:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17460:11:34"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "17454:5:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17454:18:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17434:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17434:39:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17434:39:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17381:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17384:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17378:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17378:13:34"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "17392:19:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "17394:15:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "17403:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17406:2:34",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "17399:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17399:10:34"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "17394:1:34"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "17374:3:34",
                    "statements": []
                  },
                  "src": "17370:113:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17509:31:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "17522:3:34"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17527:6:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "17518:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17518:16:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17536:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17511:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17511:27:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17511:27:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "17498:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "17501:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17495:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17495:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "17492:2:34"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "17319:3:34",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "17324:3:34",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "17329:6:34",
                "type": ""
              }
            ],
            "src": "17288:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17589:228:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17620:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "17641:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17644:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17634:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17634:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17634:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17742:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17745:4:34",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "17735:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17735:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17735:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "17770:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17773:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "17763:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17763:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17763:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17609:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "17602:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17602:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "17599:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17797:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17806:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17809:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "17802:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17802:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "17797:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17574:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17577:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "17583:1:34",
                "type": ""
              }
            ],
            "src": "17551:266:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17854:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17871:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17874:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17864:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17864:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17864:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17968:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17971:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17961:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17961:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17961:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17992:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17995:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "17985:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17985:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17985:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "17822:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18043:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18060:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18063:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18053:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18053:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18053:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18157:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18160:4:34",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18150:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18150:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18150:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18181:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18184:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18174:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18174:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18174:15:34"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "18011:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18232:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18249:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18252:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18242:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18242:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18242:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18346:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18349:4:34",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18339:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18339:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18339:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18370:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18373:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18363:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18363:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18363:15:34"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "18200:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18436:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18523:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18532:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18535:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18525:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18525:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18525:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18459:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "18470:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18477:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "18466:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18466:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18456:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18456:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18449:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18449:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "18446:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18425:5:34",
                "type": ""
              }
            ],
            "src": "18389:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18594:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18648:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18657:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18660:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "18650:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18650:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18650:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "18617:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18638:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18631:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18631:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18624:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18624:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "18614:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18614:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18607:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18607:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "18604:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18583:5:34",
                "type": ""
              }
            ],
            "src": "18550:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8227t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32t_addresst_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_2)\n        value3 := value_2\n        value4 := calldataload(add(headStart, 128))\n        let value_3 := calldataload(add(headStart, 160))\n        validator_revert_t_address(value_3)\n        value5 := value_3\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8227t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        let offset := calldataload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value2, value2) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value2, value2) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value2)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_enum$_DaoState_$6595_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 2)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_enum$_MemberFlag_$6666__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        if iszero(lt(value1, 2)) { panic_error_0x21() }\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256__to_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), and(value5, _1))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_bytes32_t_enum$_ProposalFlag_$6670__to_t_bytes32_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        if iszero(lt(value1, 3)) { panic_error_0x21() }\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8227_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"proposal already sponsored\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"applicant is reserved address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"proposal does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"proposal already processed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"proposal has not been voted on y\")\n        mstore(add(headStart, 96), \"et\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"only proposer can cancel a propo\")\n        mstore(add(headStart, 96), \"sal\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"cannot process jailed member\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"it can only mint internal tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e915e5f6c2e5af6aaf13d51c36e7ec320f9ef826bd9363aa8697b2da43266816__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"onlyAdapter\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1489:12212:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1489:12212:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:25;;-1:-1:-1;;;2598:25:7;;;;;;;:::i;:::-;;;;;;;;1489:12212;;;;6836:749;;;;;;;;;;-1:-1:-1;6836:749:7;;;;;:::i;:::-;;:::i;:::-;;2378:72;;;;;;;;;;-1:-1:-1;2378:72:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;8185:1807;;;;;;;;;;-1:-1:-1;8185:1807:7;;;;;:::i;:::-;;:::i;2421:363:20:-;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4193:721:7:-;;;;;;;;;;-1:-1:-1;4193:721:7;;;;;:::i;:::-;;:::i;3121:257::-;;;;;;;;;;-1:-1:-1;3121:257:7;;;;;:::i;:::-;;:::i;5211:478::-;;;;;;;;;;-1:-1:-1;5211:478:7;;;;;:::i;:::-;;:::i;2287:128:20:-;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6836:749:7:-;-1:-1:-1;;;;;6980:23:7;;6945:32;6980:23;;;;;;;;;;;:35;;;;;;;;7033:11;;:25;;7025:61;;;;-1:-1:-1;;;7025:61:7;;;;;;;:::i;:::-;7118:113;;;;;-1:-1:-1;;;;;7118:19:7;;;;;:113;;7155:10;;7183:34;;7118:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7117:114;7096:187;;;;-1:-1:-1;;;7096:187:7;;;;;;;:::i;:::-;7314:17;;;;-1:-1:-1;;;;;7314:17:7;7335:10;7314:31;7293:113;;;;-1:-1:-1;;;7293:113:7;;;;;;;:::i;:::-;7417:31;;;;;-1:-1:-1;;;;;7417:19:7;;;;;:31;;7437:10;;7417:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;7487:14:7;;;;7515:17;;;;7546:22;;;;7459:119;;-1:-1:-1;;;;;7487:14:7;;;;7515:17;;7459:14;:119::i;:::-;6836:749;;;:::o;2378:72::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2378:72:7;;;;;;;;;;;;;;;;;:::o;8185:1807::-;-1:-1:-1;;;;;8330:23:7;;8295:32;8330:23;;;;;;;;;;;:35;;;;;;;;8383:11;;:25;;8375:61;;;;-1:-1:-1;;;8375:61:7;;;;;;;:::i;:::-;8468:113;;;;;-1:-1:-1;;;;;8468:19:7;;;;;:113;;8505:10;;8533:34;;8468:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8467:114;8446:187;;;;-1:-1:-1;;;8446:187:7;;;;;;;:::i;:::-;8677:29;;;;;8644:22;;-1:-1:-1;;;;;8677:21:7;;;;;:29;;1219:19:20;;8677:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8644:63;;8717:30;8762:14;-1:-1:-1;;;;;8762:25:7;;8788:3;8793:10;8762:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8815:31;;;;;8717:87;;-1:-1:-1;;;;;;8815:19:7;;;;;:31;;8835:10;;8815:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8875:24:7;;-1:-1:-1;8861:38:7;;-1:-1:-1;;8861:38:7;;:10;:38;;;;;;;;;;;;;;;;;8857:1129;;;8950:29;;;;;8915:18;;-1:-1:-1;;;;;8950:23:7;;;;;:29;;1763:17:20;;8950:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9052:18;;;;9088:17;;;;9123:20;;;;9161:22;;;;9201:14;;;;9233:22;;;;8915:65;;-1:-1:-1;8994:275:7;;9031:3;;-1:-1:-1;;;;;9052:18:7;;;;9088:17;;;9123:20;;;9161:22;9201:14;;8994:19;:275::i;:::-;9300:14;;;;9333:26;;;;;-1:-1:-1;;;;;9300:14:7;;;;9333:19;;;;;:26;;9300:14;;9333:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9328:103;;9379:37;;;;;-1:-1:-1;;;;;9379:30:7;;;;;:37;;9410:5;;9379:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:103;9476:22;;;;9444:55;;;;;-1:-1:-1;;;;;9444:17:7;;;;;:55;;1969:6:20;;9469:5:7;;9476:22;9444:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9588:22:7;;;;9535:5;;-1:-1:-1;9555:56:7;;-1:-1:-1;;;;;9555:18:7;;;9582:3;;9555:18;:56::i;:::-;8857:1129;;;;;;9659:28;9645:10;:42;;;;;;;;;;;;;;;;;:95;;;-1:-1:-1;9717:23:7;9703:10;:37;;;;;;;;;;;;;;;;;9645:95;9628:358;;;9797:14;;;;9829:17;;;;9864:22;;;;9765:135;;-1:-1:-1;;;;;9797:14:7;;;;9829:17;;9765:14;:135::i;:::-;9628:358;;;9931:44;;-1:-1:-1;;;9931:44:7;;;;;;;:::i;9628:358::-;8185:1807;;;;;:::o;2421:363:20:-;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;4193:721:7:-;4468:35;;;;;-1:-1:-1;;;;;4468:24:7;;;;;:35;;4493:9;;4468:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4447:111;;;;-1:-1:-1;;;4447:111:7;;;;;;;:::i;:::-;4590:9;4610:64;-1:-1:-1;;;;;4610:22:7;;4633:10;4653:4;4660:13;4610:22;:64::i;:::-;4685:222;4721:3;4738:10;4762:9;4785:10;4809:11;4834:13;4861:9;4884:13;4685:22;:222::i;:::-;4193:721;;;;;;;;:::o;3121:257::-;3222:3;1421:29:26;1406:3;-1:-1:-1;;;;;1406:9:26;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;;;;;;;;;;;;;;;:86;;;;;1470:22;1488:3;1470:17;:22::i;:::-;1405:117;;;-1:-1:-1;1497:25:26;;;;;-1:-1:-1;;;;;1497:13:26;;;;;:25;;1511:10;;1497:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1384:175;;;;-1:-1:-1;;;1384:175:26;;;;;;;:::i;:::-;3276:29:7::1;::::0;;;;3241:18:::1;::::0;-1:-1:-1;;;;;3276:23:7;::::1;::::0;::::1;::::0;:29:::1;::::0;1763:17:20::1;::::0;3276:29:7::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3316:55;::::0;;;;3241:65;;-1:-1:-1;;;;;;3316:38:7;::::1;::::0;::::1;::::0;:55:::1;::::0;3355:15;;3316:55:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;5211:478:::0;5383:29;;;;;5350:22;;-1:-1:-1;;;;;5383:21:7;;;;;:29;;1219:19:20;;5383:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5350:63;;5423:19;5457:14;-1:-1:-1;;;;;5457:31:7;;5506:3;5535:4;5558;5580:10;5457:147;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5423:181;;5614:68;5631:3;5636:10;5648:4;5654:11;5667:14;5614:16;:68::i;2287:128:20:-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;11605:211:7:-;11753:9;11773:36;-1:-1:-1;;;;;11773:18:7;;11792:8;11802:6;11773:18;:36::i;:::-;11605:211;;;;:::o;12762:937::-;13043:29;;;;;13008:18;;-1:-1:-1;;;;;13043:23:7;;;;;:29;;1763:17:20;;13043:29:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13104:33;;;;;13008:65;;-1:-1:-1;;;;;;13104:20:7;;;;;:33;;13125:11;;13104:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13083:112;;;;-1:-1:-1;;;13083:112:7;;;;;;;:::i;:::-;13227:59;;;;;-1:-1:-1;;;;;13227:17:7;;;;;:59;;13245:9;;13256:29;;13227:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13226:60;13205:135;;;;-1:-1:-1;;;13205:135:7;;;;;;;:::i;:::-;13351:33;;;;;-1:-1:-1;;;;;13351:22:7;;;;;:33;;13374:9;;13351:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13521:56:7;;;;;-1:-1:-1;;;;;13521:17:7;;;-1:-1:-1;13521:17:7;;-1:-1:-1;13521:56:7;;13539:9;;13550:11;;13563:13;;13521:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13517:176;;13636:46;13651:5;13658:8;13668:13;13636:14;:46::i;:::-;13517:176;;630:239:30;742:120;775:5;817:23;;;842:2;846:5;794:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;742:19;:120::i;875:275::-;1013:130;1046:5;1088:27;;;1117:4;1123:2;1127:5;1065:68;;;;;;;;;;:::i;10718:562:7:-;10999:30;;;;;-1:-1:-1;;;;;10999:18:7;;;;;:30;;11018:10;;10999:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11077:196:7;;;;;;;;;;;-1:-1:-1;;;;;11077:196:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11039:23;;;-1:-1:-1;11039:23:7;;;;;;;;;:35;;;;;;;;;:234;;;;-1:-1:-1;;11039:234:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10718:562::o;1881:219:26:-;1948:4;1983:3;-1:-1:-1;;;;;1983:16:26;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:23;;:69;;-1:-1:-1;2022:30:26;;;;;-1:-1:-1;;;;;2022:18:26;;;;;:30;;2041:10;;2022:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1983:110;;;-1:-1:-1;2068:25:26;;;;;-1:-1:-1;;;;;2068:13:26;;;;;:25;;2082:10;;2068:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1964:129;1881:219;-1:-1:-1;;1881:219:26:o;6116:316:7:-;6308:44;;;;;-1:-1:-1;;;;;6308:19:7;;;;;:44;;6328:10;;6340:11;;6308:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6362:63:7;;;;;-1:-1:-1;;;;;6362:40:7;;;-1:-1:-1;6362:40:7;;-1:-1:-1;6362:63:7;;6403:3;;6408:10;;6420:4;;6362:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6116:316;;;;;:::o;3307:867:30:-;3726:23;3764:115;3809:4;3764:115;;;;;;;;;;;;;;;;;3772:5;-1:-1:-1;;;;;3764:27:30;;;:115;;;;;:::i;:::-;3893:17;;3726:153;;-1:-1:-1;3893:21:30;3889:279;;4062:10;4051:30;;;;;;;;;;;;:::i;:::-;4026:131;;;;-1:-1:-1;;;4026:131:30;;;;;;;:::i;3681:223:28:-;3814:12;3845:52;3867:6;3875:4;3881:1;3884:12;3845:21;:52::i;:::-;3838:59;3681:223;-1:-1:-1;;;;3681:223:28:o;4858:605::-;5023:12;5093:5;5068:21;:30;;5047:115;;;;-1:-1:-1;;;5047:115:28;;;;;;;:::i;:::-;5180:18;5191:6;5180:10;:18::i;:::-;5172:60;;;;-1:-1:-1;;;5172:60:28;;;;;;;:::i;:::-;5303:12;5317:23;5356:6;-1:-1:-1;;;;;5356:11:28;5375:5;5382:4;5356:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5302:85;;;;5404:52;5422:7;5431:10;5443:12;5404:17;:52::i;:::-;5397:59;4858:605;-1:-1:-1;;;;;;;4858:605:28:o;718:433::-;1090:20;1136:8;;;718:433::o;7679:756::-;7825:12;7853:7;7849:580;;;-1:-1:-1;7883:10:28;7876:17;;7849:580;7994:17;;:21;7990:429;;8252:10;8246:17;8312:15;8299:10;8295:2;8291:19;8284:44;8201:145;8391:12;8384:20;;-1:-1:-1;;;8384:20:28;;;;;;;;:::i;14:263:34:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:33;241:5;214:33;:::i;282:327::-;;;411:2;399:9;390:7;386:23;382:32;379:2;;;432:6;424;417:22;379:2;476:9;463:23;495:33;522:5;495:33;:::i;:::-;547:5;599:2;584:18;;;;571:32;;-1:-1:-1;;;369:240:34:o;614:257::-;;734:2;722:9;713:7;709:23;705:32;702:2;;;755:6;747;740:22;702:2;792:9;786:16;811:30;835:5;811:30;:::i;876:422::-;;;1025:2;1013:9;1004:7;1000:23;996:32;993:2;;;1046:6;1038;1031:22;993:2;1090:9;1077:23;1109:33;1136:5;1109:33;:::i;:::-;1161:5;-1:-1:-1;1218:2:34;1203:18;;1190:32;1231:35;1190:32;1231:35;:::i;:::-;1285:7;1275:17;;;983:315;;;;;:::o;1303:347::-;;;1452:2;1440:9;1431:7;1427:23;1423:32;1420:2;;;1473:6;1465;1458:22;1655:916;;;;;;;;1889:3;1877:9;1868:7;1864:23;1860:33;1857:2;;;1911:6;1903;1896:22;1857:2;1955:9;1942:23;1974:33;2001:5;1974:33;:::i;:::-;2026:5;-1:-1:-1;2078:2:34;2063:18;;2050:32;;-1:-1:-1;2134:2:34;2119:18;;2106:32;2147:35;2106:32;2147:35;:::i;:::-;2201:7;-1:-1:-1;2260:2:34;2245:18;;2232:32;2273:35;2232:32;2273:35;:::i;:::-;2327:7;-1:-1:-1;2381:3:34;2366:19;;2353:33;;-1:-1:-1;2438:3:34;2423:19;;2410:33;2452:35;2410:33;2452:35;:::i;:::-;2506:7;2496:17;;;2560:3;2549:9;2545:19;2532:33;2522:43;;1847:724;;;;;;;;;;:::o;2576:1241::-;;;;2751:2;2739:9;2730:7;2726:23;2722:32;2719:2;;;2772:6;2764;2757:22;2719:2;2816:9;2803:23;2835:33;2862:5;2835:33;:::i;:::-;2887:5;-1:-1:-1;2911:2:34;2945:18;;;2932:32;;-1:-1:-1;3015:2:34;3000:18;;2987:32;3038:18;3068:14;;;3065:2;;;3100:6;3092;3085:22;3065:2;3143:6;3132:9;3128:22;3118:32;;3188:7;3181:4;3177:2;3173:13;3169:27;3159:2;;3215:6;3207;3200:22;3159:2;3256;3243:16;3278:2;3274;3271:10;3268:2;;;3284:18;;:::i;:::-;3333:2;3327:9;3468:2;3398:66;3391:4;3387:2;3383:13;3379:86;3371:6;3367:99;3363:108;3521:6;3509:10;3506:22;3501:2;3489:10;3486:18;3483:46;3480:2;;;3532:18;;:::i;:::-;3568:2;3561:22;3592:18;;;3629:11;;;3625:20;;3622:33;-1:-1:-1;3619:2:34;;;3673:6;3665;3658:22;3619:2;3734;3729;3725;3721:11;3716:2;3708:6;3704:15;3691:46;3779:6;3774:2;3769;3761:6;3757:15;3753:24;3746:40;3805:6;3795:16;;;;;;;2709:1108;;;;;:::o;3822:293::-;;3958:2;3946:9;3937:7;3933:23;3929:32;3926:2;;;3979:6;3971;3964:22;3926:2;4016:9;4010:16;4055:1;4048:5;4045:12;4035:2;;4076:6;4068;4061:22;4120:296;;4259:2;4247:9;4238:7;4234:23;4230:32;4227:2;;;4280:6;4272;4265:22;4227:2;4317:9;4311:16;4356:1;4349:5;4346:12;4336:2;;4377:6;4369;4362:22;4421:194;;4544:2;4532:9;4523:7;4519:23;4515:32;4512:2;;;4565:6;4557;4550:22;4512:2;-1:-1:-1;4593:16:34;;4502:113;-1:-1:-1;4502:113:34:o;4620:258::-;;;4749:2;4737:9;4728:7;4724:23;4720:32;4717:2;;;4770:6;4762;4755:22;4717:2;-1:-1:-1;;4798:23:34;;;4868:2;4853:18;;;4840:32;;-1:-1:-1;4707:171:34:o;4883:389::-;;;;5026:2;5014:9;5005:7;5001:23;4997:32;4994:2;;;5047:6;5039;5032:22;4994:2;5088:9;5075:23;5065:33;;5145:2;5134:9;5130:18;5117:32;5107:42;;5199:2;5188:9;5184:18;5171:32;5212:30;5236:5;5212:30;:::i;:::-;5261:5;5251:15;;;4984:288;;;;;:::o;5277:318::-;;5358:5;5352:12;5385:6;5380:3;5373:19;5401:63;5457:6;5450:4;5445:3;5441:14;5434:4;5427:5;5423:16;5401:63;:::i;:::-;5509:2;5497:15;5514:66;5493:88;5484:98;;;;5584:4;5480:109;;5328:267;-1:-1:-1;;5328:267:34:o;5600:274::-;;5767:6;5761:13;5783:53;5829:6;5824:3;5817:4;5809:6;5805:17;5783:53;:::i;:::-;5852:16;;;;;5737:137;-1:-1:-1;;5737:137:34:o;5879:226::-;-1:-1:-1;;;;;6043:55:34;;;;6025:74;;6013:2;5998:18;;5980:125::o;6110:398::-;-1:-1:-1;;;;;6391:15:34;;;6373:34;;6443:15;;;;6438:2;6423:18;;6416:43;6490:2;6475:18;;6468:34;;;;6300:2;6285:18;;6267:241::o;6513:366::-;-1:-1:-1;;;;;6718:55:34;;6700:74;;6688:2;6673:18;;6804:1;6793:13;;6783:2;;6810:18;;:::i;:::-;6866:6;6861:2;6850:9;6846:18;6839:34;6655:224;;;;;:::o;6884:297::-;-1:-1:-1;;;;;7076:55:34;;;;7058:74;;7163:2;7148:18;;7141:34;7046:2;7031:18;;7013:168::o;7186:187::-;7351:14;;7344:22;7326:41;;7314:2;7299:18;;7281:92::o;7378:177::-;7524:25;;;7512:2;7497:18;;7479:76::o;7560:297::-;7734:25;;;-1:-1:-1;;;;;7795:55:34;7790:2;7775:18;;7768:83;7722:2;7707:18;;7689:168::o;7862:704::-;8177:25;;;-1:-1:-1;;;;;8299:15:34;;;8294:2;8279:18;;8272:43;8351:15;;;8346:2;8331:18;;8324:43;8403:15;;;8398:2;8383:18;;8376:43;8450:3;8435:19;;8428:35;8500:15;;;8494:3;8479:19;;8472:44;8547:3;8532:19;;8525:35;8164:3;8149:19;;8131:435::o;8571:319::-;8760:25;;;8748:2;8733:18;;8815:1;8804:13;;8794:2;;8821:18;;:::i;8895:550::-;;-1:-1:-1;;;;;9227:2:34;9219:6;9215:15;9204:9;9197:34;9279:2;9271:6;9267:15;9262:2;9251:9;9247:18;9240:43;9319:3;9314:2;9303:9;9299:18;9292:31;9340:47;9382:3;9371:9;9367:19;9359:6;9340:47;:::i;:::-;9332:55;;9435:2;9427:6;9423:15;9418:2;9407:9;9403:18;9396:43;;9126:319;;;;;;;:::o;9780:438::-;;-1:-1:-1;;;;;10015:6:34;10011:55;10000:9;9993:74;10103:6;10098:2;10087:9;10083:18;10076:34;10146:2;10141;10130:9;10126:18;10119:30;10166:46;10208:2;10197:9;10193:18;10185:6;10166:46;:::i;:::-;10158:54;9983:235;-1:-1:-1;;;;;9983:235:34:o;10223:221::-;;10372:2;10361:9;10354:21;10392:46;10434:2;10423:9;10419:18;10411:6;10392:46;:::i;10449:350::-;10651:2;10633:21;;;10690:2;10670:18;;;10663:30;10729:28;10724:2;10709:18;;10702:56;10790:2;10775:18;;10623:176::o;10804:353::-;11006:2;10988:21;;;11045:2;11025:18;;;11018:30;11084:31;11079:2;11064:18;;11057:59;11148:2;11133:18;;10978:179::o;11162:402::-;11364:2;11346:21;;;11403:2;11383:18;;;11376:30;11442:34;11437:2;11422:18;;11415:62;11513:8;11508:2;11493:18;;11486:36;11554:3;11539:19;;11336:228::o;11569:347::-;11771:2;11753:21;;;11810:2;11790:18;;;11783:30;11849:25;11844:2;11829:18;;11822:53;11907:2;11892:18;;11743:173::o;11921:350::-;12123:2;12105:21;;;12162:2;12142:18;;;12135:30;12201:28;12196:2;12181:18;;12174:56;12262:2;12247:18;;12095:176::o;12276:398::-;12478:2;12460:21;;;12517:2;12497:18;;;12490:30;12556:34;12551:2;12536:18;;12529:62;12627:4;12622:2;12607:18;;12600:32;12664:3;12649:19;;12450:224::o;12679:399::-;12881:2;12863:21;;;12920:2;12900:18;;;12893:30;12959:34;12954:2;12939:18;;12932:62;13030:5;13025:2;13010:18;;13003:33;13068:3;13053:19;;12853:225::o;13083:353::-;13285:2;13267:21;;;13324:2;13304:18;;;13297:30;13363:31;13358:2;13343:18;;13336:59;13427:2;13412:18;;13257:179::o;13441:352::-;13643:2;13625:21;;;13682:2;13662:18;;;13655:30;13721;13716:2;13701:18;;13694:58;13784:2;13769:18;;13615:178::o;13798:356::-;14000:2;13982:21;;;14019:18;;;14012:30;14078:34;14073:2;14058:18;;14051:62;14145:2;14130:18;;13972:182::o;14159:406::-;14361:2;14343:21;;;14400:2;14380:18;;;14373:30;14439:34;14434:2;14419:18;;14412:62;14510:12;14505:2;14490:18;;14483:40;14555:3;14540:19;;14333:232::o;14570:339::-;14772:2;14754:21;;;14811:2;14791:18;;;14784:30;14850:17;14845:2;14830:18;;14823:45;14900:2;14885:18;;14744:165::o;14914:335::-;15116:2;15098:21;;;15155:2;15135:18;;;15128:30;15194:13;15189:2;15174:18;;15167:41;15240:2;15225:18;;15088:161::o;15436:128::-;;15507:1;15503:6;15500:1;15497:13;15494:2;;;15513:18;;:::i;:::-;-1:-1:-1;15549:9:34;;15484:80::o;15569:453::-;15665:6;15688:5;15702:314;15751:1;15788:2;15778:8;15775:16;15765:2;;15795:5;;;15765:2;15836:4;15831:3;15827:14;15821:4;15818:24;15815:2;;;15845:18;;:::i;:::-;15895:2;15885:8;15881:17;15878:2;;;15910:16;;;;15878:2;15989:17;;;;;15949:15;;15702:314;;;15646:376;;;;;;;:::o;16027:199::-;;16116:104;16153:66;16143:8;16137:4;16231:922;16315:8;16305:2;;-1:-1:-1;16356:1:34;16370:5;;16305:2;16404:4;16394:2;;-1:-1:-1;16441:1:34;16455:5;;16394:2;16486:4;16504:1;16499:59;;;;16572:1;16567:183;;;;16479:271;;16499:59;16529:1;16520:10;;16543:5;;;16567:183;16604:3;16594:8;16591:17;16588:2;;;16611:18;;:::i;:::-;16667:1;16657:8;16653:16;16644:25;;16695:3;16688:5;16685:14;16682:2;;;16702:18;;:::i;:::-;16735:5;;;16479:271;;16834:2;16824:8;16821:16;16815:3;16809:4;16806:13;16802:36;16796:2;16786:8;16783:16;16778:2;16772:4;16769:12;16765:35;16762:77;16759:2;;;-1:-1:-1;16871:19:34;;;16906:14;;;16903:2;;;16923:18;;:::i;16759:2::-;17003:42;17041:3;17031:8;17025:4;17022:1;17003:42;:::i;:::-;17078:6;17073:3;17069:16;17060:7;17057:29;17054:2;;;17089:18;;:::i;:::-;17127:20;;16295:858;-1:-1:-1;;;;16295:858:34:o;17158:125::-;;17226:1;17223;17220:8;17217:2;;;17231:18;;:::i;:::-;-1:-1:-1;17268:9:34;;17207:76::o;17288:258::-;17360:1;17370:113;17384:6;17381:1;17378:13;17370:113;;;17460:11;;;17454:18;17441:11;;;17434:39;17406:2;17399:10;17370:113;;;17501:6;17498:1;17495:13;17492:2;;;-1:-1:-1;;17536:1:34;17518:16;;17511:27;17341:205::o;17551:266::-;;17609:1;17599:2;;17644:77;17641:1;17634:88;17745:4;17742:1;17735:15;17773:4;17770:1;17763:15;17599:2;-1:-1:-1;17802:9:34;;17589:228::o;17822:184::-;17874:77;17871:1;17864:88;17971:4;17968:1;17961:15;17995:4;17992:1;17985:15;18011:184;18063:77;18060:1;18053:88;18160:4;18157:1;18150:15;18184:4;18181:1;18174:15;18200:184;18252:77;18249:1;18242:88;18349:4;18346:1;18339:15;18373:4;18370:1;18363:15;18389:156;-1:-1:-1;;;;;18470:5:34;18466:54;18459:5;18456:65;18446:2;;18535:1;18532;18525:12;18446:2;18436:109;:::o;18550:120::-;18638:5;18631:13;18624:21;18617:5;18614:32;18604:2;;18660:1;18657;18650:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./interfaces/ITribute.sol\";\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../extensions/Bank.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\nimport \"../guards/MemberGuard.sol\";\nimport \"../guards/AdapterGuard.sol\";\nimport \"../utils/IERC20.sol\";\nimport \"../helpers/AddressLib.sol\";\nimport \"../helpers/SafeERC20.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract TributeContract is ITribute, DaoConstants, MemberGuard, AdapterGuard {\n    using Address for address;\n    using SafeERC20 for IERC20;\n\n    struct ProposalDetails {\n        // The proposal id.\n        bytes32 id;\n        // The applicant address (who will receive the DAO internal tokens and become a member).\n        address applicant;\n        // The proposer address (who will provide the token tribute).\n        address proposer;\n        // The address of the DAO internal token to be minted to the applicant.\n        address tokenToMint;\n        // The amount requested of DAO internal tokens.\n        uint256 requestAmount;\n        // The address of the ERC-20 tokens provided as tribute by the proposer.\n        address token;\n        // The amount of tribute tokens.\n        uint256 tributeAmount;\n    }\n\n    // Keeps track of all tribute proposals handled by each DAO.\n    mapping(address => mapping(bytes32 => ProposalDetails)) public proposals;\n\n    /**\n     * @notice default fallback function to prevent from sending ether to the contract.\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Configures the adapter for a particular DAO.\n     * @notice Registers the DAO internal token with the DAO Bank.\n     * @dev Only adapters registered to the DAO can execute the function call (or if the DAO is in creation mode).\n     * @dev A DAO Bank extension must exist and be configured with proper access for this adapter.\n     * @param dao The DAO address.\n     * @param tokenAddrToMint The internal token address to be registered with the DAO Bank.\n     */\n    function configureDao(DaoRegistry dao, address tokenAddrToMint)\n        external\n        onlyAdapter(dao)\n    {\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        bank.registerPotentialNewInternalToken(tokenAddrToMint);\n    }\n\n    /**\n     * @notice Creates a tribute proposal and escrows received tokens into the adapter.\n     * @dev Applicant address must not be reserved.\n     * @dev The proposer must first separately `approve` the adapter as spender of the ERC-20 tokens provided as tribute.\n     * @param dao The DAO address.\n     * @param proposalId The proposal id (managed by the client).\n     * @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n     * @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n     * @param requestAmount The amount requested of DAO internal tokens.\n     * @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n     * @param tributeAmount The amount of tribute tokens.\n     */\n    function provideTribute(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        address applicant,\n        address tokenToMint,\n        uint256 requestAmount,\n        address tokenAddr,\n        uint256 tributeAmount\n    ) public override {\n        require(\n            dao.isNotReservedAddress(applicant),\n            \"applicant is reserved address\"\n        );\n        IERC20 token = IERC20(tokenAddr);\n        token.safeTransferFrom(msg.sender, address(this), tributeAmount);\n\n        _submitTributeProposal(\n            dao,\n            proposalId,\n            applicant,\n            msg.sender,\n            tokenToMint,\n            requestAmount,\n            tokenAddr,\n            tributeAmount\n        );\n    }\n\n    /**\n     * @notice Sponsors a tribute proposal to start the voting process.\n     * @dev Only members of the DAO can sponsor a tribute proposal.\n     * @param dao The DAO address.\n     * @param proposalId The proposal id.\n     * @param data Additional details about the proposal.\n     */\n    function sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data\n    ) external override {\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        address sponsoredBy =\n            votingContract.getSenderAddress(\n                dao,\n                address(this),\n                data,\n                msg.sender\n            );\n        _sponsorProposal(dao, proposalId, data, sponsoredBy, votingContract);\n    }\n\n    /**\n     * @notice Sponsors a tribute proposal to start the voting process.\n     * @dev Only members of the DAO can sponsor a tribute proposal.\n     * @param dao The DAO address.\n     * @param proposalId The proposal id.\n     * @param data Additional details about the proposal.\n     * @param sponsoredBy The address of the sponsoring member.\n     * @param votingContract The voting contract used by the DAO.\n     */\n    function _sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data,\n        address sponsoredBy,\n        IVoting votingContract\n    ) internal {\n        dao.sponsorProposal(proposalId, sponsoredBy);\n        votingContract.startNewVotingForProposal(dao, proposalId, data);\n    }\n\n    /**\n     * @notice Cancels a tribute proposal which marks it as processed and initiates refund of the tribute tokens to the proposer.\n     * @dev Proposal id must exist.\n     * @dev Only proposals that have not already been sponsored can be cancelled.\n     * @dev Only proposer can cancel a tribute proposal.\n     * @param dao The DAO address.\n     * @param proposalId The proposal id.\n     */\n    function cancelProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n    {\n        ProposalDetails storage proposal = proposals[address(dao)][proposalId];\n        require(proposal.id == proposalId, \"proposal does not exist\");\n        require(\n            !dao.getProposalFlag(\n                proposalId,\n                DaoRegistry.ProposalFlag.SPONSORED\n            ),\n            \"proposal already sponsored\"\n        );\n        require(\n            proposal.proposer == msg.sender,\n            \"only proposer can cancel a proposal\"\n        );\n\n        dao.processProposal(proposalId);\n\n        _refundTribute(\n            proposal.token,\n            proposal.proposer,\n            proposal.tributeAmount\n        );\n    }\n\n    /**\n     * @notice Processes a tribute proposal to handle minting and exchange of DAO internal tokens for tribute tokens (passed vote) or the refund of tribute tokens (failed vote).\n     * @dev Proposal id must exist.\n     * @dev Only proposals that have not already been processed are accepted.\n     * @dev Only sponsored proposals with completed voting are accepted.\n     * @dev ERC-20 tribute tokens must be registered with the DAO Bank (a passed proposal will check and register the token if needed).\n     * @param dao The DAO address.\n     * @param proposalId The proposal id.\n     */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n    {\n        ProposalDetails storage proposal = proposals[address(dao)][proposalId];\n        require(proposal.id == proposalId, \"proposal does not exist\");\n        require(\n            !dao.getProposalFlag(\n                proposalId,\n                DaoRegistry.ProposalFlag.PROCESSED\n            ),\n            \"proposal already processed\"\n        );\n\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        IVoting.VotingState voteResult =\n            votingContract.voteResult(dao, proposalId);\n\n        dao.processProposal(proposalId);\n\n        if (voteResult == IVoting.VotingState.PASS) {\n            BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n            _mintTokensToMember(\n                dao,\n                proposal.applicant,\n                proposal.proposer,\n                proposal.tokenToMint,\n                proposal.requestAmount,\n                proposal.token,\n                proposal.tributeAmount\n            );\n\n            address token = proposal.token;\n            if (!bank.isTokenAllowed(token)) {\n                bank.registerPotentialNewToken(token);\n            }\n            bank.addToBalance(GUILD, token, proposal.tributeAmount);\n            IERC20 erc20 = IERC20(token);\n            erc20.safeTransfer(address(dao), proposal.tributeAmount);\n        } else if (\n            voteResult == IVoting.VotingState.NOT_PASS ||\n            voteResult == IVoting.VotingState.TIE\n        ) {\n            _refundTribute(\n                proposal.token,\n                proposal.proposer,\n                proposal.tributeAmount\n            );\n        } else {\n            revert(\"proposal has not been voted on yet\");\n        }\n    }\n\n    /**\n     * @notice Submits a tribute proposal to the DAO.\n     * @dev Proposal ids must be valid and cannot be reused.\n     * @param dao The DAO address.\n     * @param proposalId The proposal id.\n     * @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n     * @param proposer The proposer address (who will provide the token tribute).\n     * @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n     * @param requestAmount The amount requested of DAO internal tokens.\n     * @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n     * @param tributeAmount The amount of tribute tokens.\n     */\n    function _submitTributeProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        address applicant,\n        address proposer,\n        address tokenToMint,\n        uint256 requestAmount,\n        address tokenAddr,\n        uint256 tributeAmount\n    ) internal {\n        dao.submitProposal(proposalId);\n        proposals[address(dao)][proposalId] = ProposalDetails(\n            proposalId,\n            applicant,\n            proposer,\n            tokenToMint,\n            requestAmount,\n            tokenAddr,\n            tributeAmount\n        );\n    }\n\n    /**\n     * @notice Refunds tribute tokens to the proposer.\n     * @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n     * @param proposer The proposer address (who will receive back the tribute tokens).\n     * @param amount The amount of tribute tokens to be refunded.\n     */\n    function _refundTribute(\n        address tokenAddr,\n        address proposer,\n        uint256 amount\n    ) internal {\n        IERC20 token = IERC20(tokenAddr);\n        token.safeTransfer(proposer, amount);\n    }\n\n    /**\n     * @notice Adds DAO internal tokens to applicant's balance and creates a new member entry (if applicant is not already a member).\n     * @dev Internal tokens to be minted to the applicant must be registered with the DAO Bank.\n     * @dev The applicant member cannot be jailed.\n     * @param dao The DAO address.\n     * @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n     * @param proposer The proposer address (who will be refunded the tribute tokens if the minting of internal tokens fails).\n     * @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n     * @param requestAmount The amount requested of DAO internal tokens.\n     * @param token The address of the ERC-20 tokens provided as tribute by the proposer.\n     * @param tributeAmount The amount of tribute tokens to be refunded if the minting of internal tokens fails.\n     */\n    function _mintTokensToMember(\n        DaoRegistry dao,\n        address applicant,\n        address proposer,\n        address tokenToMint,\n        uint256 requestAmount,\n        address token,\n        uint256 tributeAmount\n    ) internal {\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        require(\n            bank.isInternalToken(tokenToMint),\n            \"it can only mint internal tokens\"\n        );\n        require(\n            !dao.getMemberFlag(applicant, DaoRegistry.MemberFlag.JAILED),\n            \"cannot process jailed member\"\n        );\n\n        dao.potentialNewMember(applicant);\n\n        // Overflow risk may cause this to fail in which case the tribute tokens\n        // are refunded to the proposer.\n        try bank.addToBalance(applicant, tokenToMint, requestAmount) {\n            // do nothing\n        } catch {\n            _refundTribute(token, proposer, tributeAmount);\n        }\n    }\n}\n",
  "sourcePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/Tribute.sol",
  "ast": {
    "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/Tribute.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9349
      ],
      "Address": [
        9733
      ],
      "BankExtension": [
        9190
      ],
      "DaoConstants": [
        6263
      ],
      "DaoRegistry": [
        8227
      ],
      "IERC20": [
        10567
      ],
      "IExtension": [
        9253
      ],
      "ITribute": [
        3734
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9437
      ],
      "SafeERC20": [
        10004
      ],
      "TributeContract": [
        3380
      ]
    },
    "id": 3381,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2769,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/ITribute.sol",
        "file": "./interfaces/ITribute.sol",
        "id": 2770,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 3735,
        "src": "58:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2771,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 6264,
        "src": "94:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2772,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 8228,
        "src": "129:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 2773,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9191,
        "src": "163:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 2774,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 3782,
        "src": "196:44:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 2775,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9438,
        "src": "241:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/guards/AdapterGuard.sol",
        "file": "../guards/AdapterGuard.sol",
        "id": 2776,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9350,
        "src": "277:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/utils/IERC20.sol",
        "file": "../utils/IERC20.sol",
        "id": 2777,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 10568,
        "src": "314:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/AddressLib.sol",
        "file": "../helpers/AddressLib.sol",
        "id": 2778,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9734,
        "src": "344:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/SafeERC20.sol",
        "file": "../helpers/SafeERC20.sol",
        "id": 2779,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 10005,
        "src": "380:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2781,
              "name": "ITribute",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3734,
              "src": "1517:8:7"
            },
            "id": 2782,
            "nodeType": "InheritanceSpecifier",
            "src": "1517:8:7"
          },
          {
            "baseName": {
              "id": 2783,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6263,
              "src": "1527:12:7"
            },
            "id": 2784,
            "nodeType": "InheritanceSpecifier",
            "src": "1527:12:7"
          },
          {
            "baseName": {
              "id": 2785,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9437,
              "src": "1541:11:7"
            },
            "id": 2786,
            "nodeType": "InheritanceSpecifier",
            "src": "1541:11:7"
          },
          {
            "baseName": {
              "id": 2787,
              "name": "AdapterGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9349,
              "src": "1554:12:7"
            },
            "id": 2788,
            "nodeType": "InheritanceSpecifier",
            "src": "1554:12:7"
          }
        ],
        "contractDependencies": [
          3734,
          6263,
          9349,
          9437
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2780,
          "nodeType": "StructuredDocumentation",
          "src": "416:1071:7",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 3380,
        "linearizedBaseContracts": [
          3380,
          9349,
          9437,
          6263,
          3734
        ],
        "name": "TributeContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2791,
            "libraryName": {
              "id": 2789,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9733,
              "src": "1579:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1573:26:7",
            "typeName": {
              "id": 2790,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1591:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2795,
            "libraryName": {
              "id": 2792,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10004,
              "src": "1610:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1604:27:7",
            "typeName": {
              "id": 2794,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2793,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10567,
                "src": "1624:6:7"
              },
              "referencedDeclaration": 10567,
              "src": "1624:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10567",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "TributeContract.ProposalDetails",
            "id": 2810,
            "members": [
              {
                "constant": false,
                "id": 2797,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1698:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2796,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1698:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2799,
                "mutability": "mutable",
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1815:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2798,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1815:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2801,
                "mutability": "mutable",
                "name": "proposer",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1912:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2800,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1912:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2803,
                "mutability": "mutable",
                "name": "tokenToMint",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2018:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2802,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2805,
                "mutability": "mutable",
                "name": "requestAmount",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2103:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2804,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2807,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2215:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2215:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2809,
                "mutability": "mutable",
                "name": "tributeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2279:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2808,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2279:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 3380,
            "src": "1637:670:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 2817,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 3380,
            "src": "2378:72:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails))"
            },
            "typeName": {
              "id": 2816,
              "keyType": {
                "id": 2811,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2386:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2378:55:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails))"
              },
              "valueType": {
                "id": 2815,
                "keyType": {
                  "id": 2812,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2405:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2397:35:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                  "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 2814,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2813,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2810,
                    "src": "2416:15:7"
                  },
                  "referencedDeclaration": 2810,
                  "src": "2416:15:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                    "typeString": "struct TributeContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2825,
              "nodeType": "Block",
              "src": "2588:42:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2821,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2598:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:25:7"
                }
              ]
            },
            "documentation": {
              "id": 2818,
              "nodeType": "StructuredDocumentation",
              "src": "2457:99:7",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 2826,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:2:7"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:7"
            },
            "scope": 3380,
            "src": "2561:69:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "3231:147:7",
              "statements": [
                {
                  "assignments": [
                    2840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2840,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 2854,
                      "src": "3241:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9190",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 2839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2838,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9190,
                          "src": "3241:13:7"
                        },
                        "referencedDeclaration": 9190,
                        "src": "3241:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2844,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6155,
                            "src": "3300:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2842,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2830,
                            "src": "3276:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7382,
                          "src": "3276:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3276:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2841,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "3262:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3241:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2851,
                        "name": "tokenAddrToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "3355:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2848,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "3316:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerPotentialNewInternalToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8587,
                      "src": "3316:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:55:7"
                }
              ]
            },
            "documentation": {
              "id": 2827,
              "nodeType": "StructuredDocumentation",
              "src": "2636:480:7",
              "text": " @notice Configures the adapter for a particular DAO.\n @notice Registers the DAO internal token with the DAO Bank.\n @dev Only adapters registered to the DAO can execute the function call (or if the DAO is in creation mode).\n @dev A DAO Bank extension must exist and be configured with proper access for this adapter.\n @param dao The DAO address.\n @param tokenAddrToMint The internal token address to be registered with the DAO Bank."
            },
            "functionSelector": "c9c35c08",
            "id": 2855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2835,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2830,
                    "src": "3222:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2836,
                "modifierName": {
                  "id": 2834,
                  "name": "onlyAdapter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9288,
                  "src": "3210:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:16:7"
              }
            ],
            "name": "configureDao",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2830,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3143:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2829,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2828,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "3143:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "3143:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2832,
                  "mutability": "mutable",
                  "name": "tokenAddrToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3160:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3160:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3142:42:7"
            },
            "returnParameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3231:0:7"
            },
            "scope": 3380,
            "src": "3121:257:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3707
            ],
            "body": {
              "id": 2914,
              "nodeType": "Block",
              "src": "4437:477:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2878,
                            "name": "applicant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "4493:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2876,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "4468:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7943,
                          "src": "4468:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4468:35:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6170706c6963616e742069732072657365727665642061646472657373",
                        "id": 2880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4517:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e",
                          "typeString": "literal_string \"applicant is reserved address\""
                        },
                        "value": "applicant is reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e",
                          "typeString": "literal_string \"applicant is reserved address\""
                        }
                      ],
                      "id": 2875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4447:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2882,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:111:7"
                },
                {
                  "assignments": [
                    2885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2885,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2914,
                      "src": "4568:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10567",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2884,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2883,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10567,
                          "src": "4568:6:7"
                        },
                        "referencedDeclaration": 10567,
                        "src": "4568:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2889,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2887,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "4590:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2886,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10567,
                      "src": "4583:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10567",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4568:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2893,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4633:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4633:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2897,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4653:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          ],
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4645:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2895,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4645:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4645:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2899,
                        "name": "tributeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "4660:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2890,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2885,
                        "src": "4610:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9849,
                      "src": "4610:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2901,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2903,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "4721:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2904,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "4738:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2905,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "4762:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2906,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4785:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4785:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2908,
                        "name": "tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2865,
                        "src": "4809:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2909,
                        "name": "requestAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "4834:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "4861:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2911,
                        "name": "tributeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "4884:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2902,
                      "name": "_submitTributeProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3281,
                      "src": "4685:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,address,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:222:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:222:7"
                }
              ]
            },
            "documentation": {
              "id": 2856,
              "nodeType": "StructuredDocumentation",
              "src": "3384:804:7",
              "text": " @notice Creates a tribute proposal and escrows received tokens into the adapter.\n @dev Applicant address must not be reserved.\n @dev The proposer must first separately `approve` the adapter as spender of the ERC-20 tokens provided as tribute.\n @param dao The DAO address.\n @param proposalId The proposal id (managed by the client).\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens."
            },
            "functionSelector": "c0b62f45",
            "id": 2915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideTribute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4428:8:7"
            },
            "parameters": {
              "id": 2872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2859,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4226:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2858,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2857,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "4226:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "4226:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4251:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2860,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4251:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4279:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4306:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4306:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4335:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4366:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2871,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4393:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4216:204:7"
            },
            "returnParameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:0:7"
            },
            "scope": 3380,
            "src": "4193:721:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3717
            ],
            "body": {
              "id": 2959,
              "nodeType": "Block",
              "src": "5340:349:7",
              "statements": [
                {
                  "assignments": [
                    2929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2929,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2959,
                      "src": "5350:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2927,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5350:7:7"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5350:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2936,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2933,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6115,
                            "src": "5405:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2931,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "5383:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7357,
                          "src": "5383:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2930,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5375:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5350:63:7"
                },
                {
                  "assignments": [
                    2938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2938,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2959,
                      "src": "5423:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5423:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2950,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2941,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "5506:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5535:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          ],
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5527:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5527:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5527:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2946,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "5558:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5580:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5580:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2939,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "5457:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "5457:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5457:147:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5423:181:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2952,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "5631:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2953,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "5636:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2954,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "5648:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2955,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2938,
                        "src": "5654:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2956,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "5667:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 2951,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2992,
                      "src": "5614:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 2957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5614:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2958,
                  "nodeType": "ExpressionStatement",
                  "src": "5614:68:7"
                }
              ]
            },
            "documentation": {
              "id": 2916,
              "nodeType": "StructuredDocumentation",
              "src": "4920:286:7",
              "text": " @notice Sponsors a tribute proposal to start the voting process.\n @dev Only members of the DAO can sponsor a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param data Additional details about the proposal."
            },
            "functionSelector": "cd0e42ed",
            "id": 2960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5331:8:7"
            },
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5245:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2918,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2917,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "5245:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "5245:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5270:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2923,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5298:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5298:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5235:86:7"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5340:0:7"
            },
            "scope": 3380,
            "src": "5211:478:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2991,
              "nodeType": "Block",
              "src": "6298:134:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2979,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "6328:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2980,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "6340:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2976,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "6308:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7632,
                      "src": "6308:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6308:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "6308:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2986,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "6403:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2987,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "6408:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2988,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2968,
                        "src": "6420:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2983,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2973,
                        "src": "6362:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "6362:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6362:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2990,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:63:7"
                }
              ]
            },
            "documentation": {
              "id": 2961,
              "nodeType": "StructuredDocumentation",
              "src": "5695:416:7",
              "text": " @notice Sponsors a tribute proposal to start the voting process.\n @dev Only members of the DAO can sponsor a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param data Additional details about the proposal.\n @param sponsoredBy The address of the sponsoring member.\n @param votingContract The voting contract used by the DAO."
            },
            "id": 2992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6151:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2962,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "6151:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "6151:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2966,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6176:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2965,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6176:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6204:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6204:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6231:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6231:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6260:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 2972,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2971,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "6260:7:7"
                    },
                    "referencedDeclaration": 3781,
                    "src": "6260:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6141:147:7"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6298:0:7"
            },
            "scope": 3380,
            "src": "6116:316:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3725
            ],
            "body": {
              "id": 3058,
              "nodeType": "Block",
              "src": "6935:650:7",
              "statements": [
                {
                  "assignments": [
                    3004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3004,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 3058,
                      "src": "6945:32:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                        "typeString": "struct TributeContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 3003,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3002,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2810,
                          "src": "6945:15:7"
                        },
                        "referencedDeclaration": 2810,
                        "src": "6945:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                          "typeString": "struct TributeContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3013,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3005,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "6980:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 3010,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 3008,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2996,
                            "src": "6998:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6990:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6990:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6990:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6980:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                        "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 3012,
                    "indexExpression": {
                      "id": 3011,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2998,
                      "src": "7004:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6980:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6945:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3015,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3004,
                            "src": "7033:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "7033:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3017,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2998,
                          "src": "7048:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "7033:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646f6573206e6f74206578697374",
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7060:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        },
                        "value": "proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        }
                      ],
                      "id": 3014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7025:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7025:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "7025:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7117:114:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3025,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2998,
                              "src": "7155:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3026,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "7183:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ProposalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6670,
                                "src": "7183:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalFlag_$6670_$",
                                  "typeString": "type(enum DaoRegistry.ProposalFlag)"
                                }
                              },
                              "id": 3028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "SPONSORED",
                              "nodeType": "MemberAccess",
                              "src": "7183:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            ],
                            "expression": {
                              "id": 3023,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2996,
                              "src": "7118:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getProposalFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7794,
                            "src": "7118:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_enum$_ProposalFlag_$6670_$returns$_t_bool_$",
                              "typeString": "function (bytes32,enum DaoRegistry.ProposalFlag) view external returns (bool)"
                            }
                          },
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7118:113:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20616c72656164792073706f6e736f726564",
                        "id": 3031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7245:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3",
                          "typeString": "literal_string \"proposal already sponsored\""
                        },
                        "value": "proposal already sponsored"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3",
                          "typeString": "literal_string \"proposal already sponsored\""
                        }
                      ],
                      "id": 3022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7096:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:187:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3033,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:187:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3035,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3004,
                            "src": "7314:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2801,
                          "src": "7314:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3037,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7335:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7335:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7314:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792070726f706f7365722063616e2063616e63656c20612070726f706f73616c",
                        "id": 3040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7359:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1",
                          "typeString": "literal_string \"only proposer can cancel a proposal\""
                        },
                        "value": "only proposer can cancel a proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1",
                          "typeString": "literal_string \"only proposer can cancel a proposal\""
                        }
                      ],
                      "id": 3034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7293:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3042,
                  "nodeType": "ExpressionStatement",
                  "src": "7293:113:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3046,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "7437:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3043,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2996,
                        "src": "7417:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7663,
                      "src": "7417:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3048,
                  "nodeType": "ExpressionStatement",
                  "src": "7417:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3050,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7487:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2807,
                        "src": "7487:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3052,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7515:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3053,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2801,
                        "src": "7515:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3054,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7546:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tributeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2809,
                        "src": "7546:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3049,
                      "name": "_refundTribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "7459:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7459:119:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3057,
                  "nodeType": "ExpressionStatement",
                  "src": "7459:119:7"
                }
              ]
            },
            "documentation": {
              "id": 2993,
              "nodeType": "StructuredDocumentation",
              "src": "6438:393:7",
              "text": " @notice Cancels a tribute proposal which marks it as processed and initiates refund of the tribute tokens to the proposer.\n @dev Proposal id must exist.\n @dev Only proposals that have not already been sponsored can be cancelled.\n @dev Only proposer can cancel a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id."
            },
            "functionSelector": "48020ae4",
            "id": 3059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3000,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6922:8:7"
            },
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3059,
                  "src": "6860:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2994,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "6860:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "6860:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3059,
                  "src": "6877:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6877:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6859:37:7"
            },
            "returnParameters": {
              "id": 3001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6935:0:7"
            },
            "scope": 3380,
            "src": "6836:749:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3733
            ],
            "body": {
              "id": 3233,
              "nodeType": "Block",
              "src": "8285:1707:7",
              "statements": [
                {
                  "assignments": [
                    3071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3071,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8295:32:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                        "typeString": "struct TributeContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 3070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3069,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2810,
                          "src": "8295:15:7"
                        },
                        "referencedDeclaration": 2810,
                        "src": "8295:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                          "typeString": "struct TributeContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3080,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3072,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "8330:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 3077,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 3075,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3063,
                            "src": "8348:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 3074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8340:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8340:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8340:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8330:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                        "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 3079,
                    "indexExpression": {
                      "id": 3078,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3065,
                      "src": "8354:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8330:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8295:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3082,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3071,
                            "src": "8383:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "8383:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3084,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3065,
                          "src": "8398:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8383:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646f6573206e6f74206578697374",
                        "id": 3086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8410:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        },
                        "value": "proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        }
                      ],
                      "id": 3081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8375:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8375:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "ExpressionStatement",
                  "src": "8375:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8467:114:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3092,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3065,
                              "src": "8505:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3093,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "8533:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ProposalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6670,
                                "src": "8533:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalFlag_$6670_$",
                                  "typeString": "type(enum DaoRegistry.ProposalFlag)"
                                }
                              },
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PROCESSED",
                              "nodeType": "MemberAccess",
                              "src": "8533:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            ],
                            "expression": {
                              "id": 3090,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3063,
                              "src": "8468:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getProposalFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7794,
                            "src": "8468:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_enum$_ProposalFlag_$6670_$returns$_t_bool_$",
                              "typeString": "function (bytes32,enum DaoRegistry.ProposalFlag) view external returns (bool)"
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8468:113:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20616c72656164792070726f636573736564",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8595:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd",
                          "typeString": "literal_string \"proposal already processed\""
                        },
                        "value": "proposal already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd",
                          "typeString": "literal_string \"proposal already processed\""
                        }
                      ],
                      "id": 3089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8446:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8446:187:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "8446:187:7"
                },
                {
                  "assignments": [
                    3103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3103,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8644:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 3102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3101,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "8644:7:7"
                        },
                        "referencedDeclaration": 3781,
                        "src": "8644:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3110,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3107,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6115,
                            "src": "8699:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3105,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3063,
                            "src": "8677:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7357,
                          "src": "8677:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8677:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3104,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "8669:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 3109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8669:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8644:63:7"
                },
                {
                  "assignments": [
                    3115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3115,
                      "mutability": "mutable",
                      "name": "voteResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8717:30:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      },
                      "typeName": {
                        "id": 3114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3113,
                          "name": "IVoting.VotingState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3745,
                          "src": "8717:19:7"
                        },
                        "referencedDeclaration": 3745,
                        "src": "8717:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3121,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3118,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3063,
                        "src": "8788:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 3119,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3065,
                        "src": "8793:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3116,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "8762:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 3117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "voteResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3780,
                      "src": "8762:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                        "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                      }
                    },
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8762:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VotingState_$3745",
                      "typeString": "enum IVoting.VotingState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8717:87:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3125,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3065,
                        "src": "8835:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3122,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3063,
                        "src": "8815:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7663,
                      "src": "8815:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "8815:31:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_VotingState_$3745",
                      "typeString": "enum IVoting.VotingState"
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3128,
                      "name": "voteResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3115,
                      "src": "8861:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 3129,
                          "name": "IVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3781,
                          "src": "8875:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                            "typeString": "type(contract IVoting)"
                          }
                        },
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "VotingState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3745,
                        "src": "8875:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                          "typeString": "type(enum IVoting.VotingState)"
                        }
                      },
                      "id": 3131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PASS",
                      "nodeType": "MemberAccess",
                      "src": "8875:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      }
                    },
                    "src": "8861:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 3209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3205,
                          "name": "voteResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "9645:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 3206,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "9659:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 3207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "9659:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 3208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_PASS",
                          "nodeType": "MemberAccess",
                          "src": "9659:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "9645:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 3214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3210,
                          "name": "voteResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "9703:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 3211,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "9717:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 3212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "9717:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TIE",
                          "nodeType": "MemberAccess",
                          "src": "9717:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "9703:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9645:95:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 3230,
                      "nodeType": "Block",
                      "src": "9917:69:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "70726f706f73616c20686173206e6f74206265656e20766f746564206f6e20796574",
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9938:36:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf",
                                  "typeString": "literal_string \"proposal has not been voted on yet\""
                                },
                                "value": "proposal has not been voted on yet"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf",
                                  "typeString": "literal_string \"proposal has not been voted on yet\""
                                }
                              ],
                              "id": 3226,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "9931:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9931:44:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3229,
                          "nodeType": "ExpressionStatement",
                          "src": "9931:44:7"
                        }
                      ]
                    },
                    "id": 3231,
                    "nodeType": "IfStatement",
                    "src": "9628:358:7",
                    "trueBody": {
                      "id": 3225,
                      "nodeType": "Block",
                      "src": "9751:160:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3217,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9797:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2807,
                                "src": "9797:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3219,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9829:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3220,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2801,
                                "src": "9829:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3221,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9864:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3222,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tributeAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2809,
                                "src": "9864:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3216,
                              "name": "_refundTribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3306,
                              "src": "9765:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256)"
                              }
                            },
                            "id": 3223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9765:135:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3224,
                          "nodeType": "ExpressionStatement",
                          "src": "9765:135:7"
                        }
                      ]
                    }
                  },
                  "id": 3232,
                  "nodeType": "IfStatement",
                  "src": "8857:1129:7",
                  "trueBody": {
                    "id": 3204,
                    "nodeType": "Block",
                    "src": "8901:721:7",
                    "statements": [
                      {
                        "assignments": [
                          3135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3135,
                            "mutability": "mutable",
                            "name": "bank",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "8915:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9190",
                              "typeString": "contract BankExtension"
                            },
                            "typeName": {
                              "id": 3134,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3133,
                                "name": "BankExtension",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9190,
                                "src": "8915:13:7"
                              },
                              "referencedDeclaration": 9190,
                              "src": "8915:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9190",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3142,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3139,
                                  "name": "BANK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6155,
                                  "src": "8974:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 3137,
                                  "name": "dao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3063,
                                  "src": "8950:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                },
                                "id": 3138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getExtensionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7382,
                                "src": "8950:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view external returns (address)"
                                }
                              },
                              "id": 3140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8950:29:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3136,
                            "name": "BankExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "8936:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                              "typeString": "type(contract BankExtension)"
                            }
                          },
                          "id": 3141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8936:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9190",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8915:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3144,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3063,
                              "src": "9031:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "expression": {
                                "id": 3145,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9052:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3146,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "applicant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2799,
                              "src": "9052:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3147,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9088:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3148,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2801,
                              "src": "9088:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3149,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9123:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenToMint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2803,
                              "src": "9123:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3151,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9161:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3152,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "requestAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "9161:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3153,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9201:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2807,
                              "src": "9201:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3155,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9233:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3156,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9233:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3143,
                            "name": "_mintTokensToMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3379,
                            "src": "8994:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract DaoRegistry,address,address,address,uint256,address,uint256)"
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8994:275:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3158,
                        "nodeType": "ExpressionStatement",
                        "src": "8994:275:7"
                      },
                      {
                        "assignments": [
                          3160
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3160,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "9284:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9284:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3163,
                        "initialValue": {
                          "expression": {
                            "id": 3161,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3071,
                            "src": "9300:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2807,
                          "src": "9300:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9284:30:7"
                      },
                      {
                        "condition": {
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9332:27:7",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 3166,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3160,
                                "src": "9353:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3164,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3135,
                                "src": "9333:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BankExtension_$9190",
                                  "typeString": "contract BankExtension"
                                }
                              },
                              "id": 3165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenAllowed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8497,
                              "src": "9333:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 3167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9333:26:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3176,
                        "nodeType": "IfStatement",
                        "src": "9328:103:7",
                        "trueBody": {
                          "id": 3175,
                          "nodeType": "Block",
                          "src": "9361:70:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3172,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3160,
                                    "src": "9410:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3169,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3135,
                                    "src": "9379:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 3171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "registerPotentialNewToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8542,
                                  "src": "9379:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 3173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9379:37:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3174,
                              "nodeType": "ExpressionStatement",
                              "src": "9379:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3180,
                              "name": "GUILD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6171,
                              "src": "9462:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3181,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "9469:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3182,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9476:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3183,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9476:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3177,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3135,
                              "src": "9444:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9190",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 3179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addToBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8810,
                            "src": "9444:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) payable external"
                            }
                          },
                          "id": 3184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9444:55:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3185,
                        "nodeType": "ExpressionStatement",
                        "src": "9444:55:7"
                      },
                      {
                        "assignments": [
                          3188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3188,
                            "mutability": "mutable",
                            "name": "erc20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "9513:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$10567",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 3187,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3186,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10567,
                                "src": "9513:6:7"
                              },
                              "referencedDeclaration": 10567,
                              "src": "9513:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10567",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3192,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3190,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "9535:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3189,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10567,
                            "src": "9528:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 3191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9528:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10567",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9513:28:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3198,
                                  "name": "dao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3063,
                                  "src": "9582:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                ],
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9574:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3196,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9574:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9574:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3200,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9588:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3201,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9588:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3193,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3188,
                              "src": "9555:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10567",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9823,
                            "src": "9555:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9555:56:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "9555:56:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3060,
              "nodeType": "StructuredDocumentation",
              "src": "7591:589:7",
              "text": " @notice Processes a tribute proposal to handle minting and exchange of DAO internal tokens for tribute tokens (passed vote) or the refund of tribute tokens (failed vote).\n @dev Proposal id must exist.\n @dev Only proposals that have not already been processed are accepted.\n @dev Only sponsored proposals with completed voting are accepted.\n @dev ERC-20 tribute tokens must be registered with the DAO Bank (a passed proposal will check and register the token if needed).\n @param dao The DAO address.\n @param proposalId The proposal id."
            },
            "functionSelector": "9573167d",
            "id": 3234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8272:8:7"
            },
            "parameters": {
              "id": 3066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3063,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3234,
                  "src": "8210:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3062,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3061,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "8210:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "8210:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3065,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3234,
                  "src": "8227:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8227:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8209:37:7"
            },
            "returnParameters": {
              "id": 3068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8285:0:7"
            },
            "scope": 3380,
            "src": "8185:1807:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3280,
              "nodeType": "Block",
              "src": "10989:291:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3258,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3240,
                        "src": "11018:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3255,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3238,
                        "src": "10999:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7573,
                      "src": "10999:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10999:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3260,
                  "nodeType": "ExpressionStatement",
                  "src": "10999:30:7"
                },
                {
                  "expression": {
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3261,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2817,
                          "src": "11039:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                          }
                        },
                        "id": 3267,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 3264,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3238,
                              "src": "11057:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 3263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11049:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3262,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11049:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11049:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11039:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                          "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                        }
                      },
                      "id": 3268,
                      "indexExpression": {
                        "id": 3266,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3240,
                        "src": "11063:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11039:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                        "typeString": "struct TributeContract.ProposalDetails storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3270,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3240,
                          "src": "11106:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 3271,
                          "name": "applicant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3242,
                          "src": "11130:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3272,
                          "name": "proposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3244,
                          "src": "11153:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3273,
                          "name": "tokenToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "11175:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3274,
                          "name": "requestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3248,
                          "src": "11200:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3275,
                          "name": "tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3250,
                          "src": "11227:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3276,
                          "name": "tributeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "11250:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3269,
                        "name": "ProposalDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "11077:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProposalDetails_$2810_storage_ptr_$",
                          "typeString": "type(struct TributeContract.ProposalDetails storage pointer)"
                        }
                      },
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11077:196:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_memory_ptr",
                        "typeString": "struct TributeContract.ProposalDetails memory"
                      }
                    },
                    "src": "11039:234:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "11039:234:7"
                }
              ]
            },
            "documentation": {
              "id": 3235,
              "nodeType": "StructuredDocumentation",
              "src": "9998:715:7",
              "text": " @notice Submits a tribute proposal to the DAO.\n @dev Proposal ids must be valid and cannot be reused.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param proposer The proposer address (who will provide the token tribute).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens."
            },
            "id": 3281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_submitTributeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3238,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10759:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3236,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "10759:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "10759:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3240,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10784:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3239,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10784:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3242,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10812:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10812:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3244,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10839:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10839:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3246,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10865:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10865:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3248,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10894:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10894:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10925:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10925:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10952:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10952:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10749:230:7"
            },
            "returnParameters": {
              "id": 3254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10989:0:7"
            },
            "scope": 3380,
            "src": "10718:562:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "11721:95:7",
              "statements": [
                {
                  "assignments": [
                    3293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3293,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 3305,
                      "src": "11731:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10567",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3292,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3291,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10567,
                          "src": "11731:6:7"
                        },
                        "referencedDeclaration": 10567,
                        "src": "11731:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3295,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "11753:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3294,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10567,
                      "src": "11746:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10567",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11731:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3301,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3286,
                        "src": "11792:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3288,
                        "src": "11802:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3298,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3293,
                        "src": "11773:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9823,
                      "src": "11773:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11773:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "11773:36:7"
                }
              ]
            },
            "documentation": {
              "id": 3282,
              "nodeType": "StructuredDocumentation",
              "src": "11286:314:7",
              "text": " @notice Refunds tribute tokens to the proposer.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param proposer The proposer address (who will receive back the tribute tokens).\n @param amount The amount of tribute tokens to be refunded."
            },
            "id": 3306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundTribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11638:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11638:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3286,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11665:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11665:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3288,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11691:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11691:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11628:83:7"
            },
            "returnParameters": {
              "id": 3290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11721:0:7"
            },
            "scope": 3380,
            "src": "11605:211:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3378,
              "nodeType": "Block",
              "src": "12998:701:7",
              "statements": [
                {
                  "assignments": [
                    3327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3327,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 3378,
                      "src": "13008:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9190",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 3326,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3325,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9190,
                          "src": "13008:13:7"
                        },
                        "referencedDeclaration": 9190,
                        "src": "13008:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3334,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3331,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6155,
                            "src": "13067:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3329,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3310,
                            "src": "13043:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7382,
                          "src": "13043:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13043:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3328,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "13029:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13029:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13008:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3338,
                            "name": "tokenToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "13125:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3336,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3327,
                            "src": "13104:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9190",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isInternalToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8484,
                          "src": "13104:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13104:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "69742063616e206f6e6c79206d696e7420696e7465726e616c20746f6b656e73",
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13151:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab",
                          "typeString": "literal_string \"it can only mint internal tokens\""
                        },
                        "value": "it can only mint internal tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab",
                          "typeString": "literal_string \"it can only mint internal tokens\""
                        }
                      ],
                      "id": 3335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13083:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13083:112:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3342,
                  "nodeType": "ExpressionStatement",
                  "src": "13083:112:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13226:60:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3346,
                              "name": "applicant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3312,
                              "src": "13245:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3347,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "13256:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MemberFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6666,
                                "src": "13256:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MemberFlag_$6666_$",
                                  "typeString": "type(enum DaoRegistry.MemberFlag)"
                                }
                              },
                              "id": 3349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "JAILED",
                              "nodeType": "MemberAccess",
                              "src": "13256:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberFlag_$6666",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_MemberFlag_$6666",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            ],
                            "expression": {
                              "id": 3344,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3310,
                              "src": "13227:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMemberFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7817,
                            "src": "13227:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_MemberFlag_$6666_$returns$_t_bool_$",
                              "typeString": "function (address,enum DaoRegistry.MemberFlag) view external returns (bool)"
                            }
                          },
                          "id": 3350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13227:59:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742070726f63657373206a61696c6564206d656d626572",
                        "id": 3352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13300:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433",
                          "typeString": "literal_string \"cannot process jailed member\""
                        },
                        "value": "cannot process jailed member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433",
                          "typeString": "literal_string \"cannot process jailed member\""
                        }
                      ],
                      "id": 3343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13205:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13205:135:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3354,
                  "nodeType": "ExpressionStatement",
                  "src": "13205:135:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3358,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "13374:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3355,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "13351:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "potentialNewMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6909,
                      "src": "13351:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13351:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3360,
                  "nodeType": "ExpressionStatement",
                  "src": "13351:33:7"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 3367,
                        "nodeType": "Block",
                        "src": "13578:37:7",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 3368,
                      "nodeType": "TryCatchClause",
                      "src": "13578:37:7"
                    },
                    {
                      "block": {
                        "id": 3375,
                        "nodeType": "Block",
                        "src": "13622:71:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3370,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3320,
                                  "src": "13651:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3371,
                                  "name": "proposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3314,
                                  "src": "13658:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3372,
                                  "name": "tributeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3322,
                                  "src": "13668:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3369,
                                "name": "_refundTribute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3306,
                                "src": "13636:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 3373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13636:46:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 3374,
                            "nodeType": "ExpressionStatement",
                            "src": "13636:46:7"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3376,
                      "nodeType": "TryCatchClause",
                      "src": "13616:77:7"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 3363,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "13539:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3364,
                        "name": "tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3316,
                        "src": "13550:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3365,
                        "name": "requestAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "13563:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3361,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3327,
                        "src": "13521:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8810,
                      "src": "13521:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13521:56:7",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3377,
                  "nodeType": "TryStatement",
                  "src": "13517:176:7"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "11822:935:7",
              "text": " @notice Adds DAO internal tokens to applicant's balance and creates a new member entry (if applicant is not already a member).\n @dev Internal tokens to be minted to the applicant must be registered with the DAO Bank.\n @dev The applicant member cannot be jailed.\n @param dao The DAO address.\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param proposer The proposer address (who will be refunded the tribute tokens if the minting of internal tokens fails).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param token The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens to be refunded if the minting of internal tokens fails."
            },
            "id": 3379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTokensToMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12800:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3309,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3308,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "12800:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "12800:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3312,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12825:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12825:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3314,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12852:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12852:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12878:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12878:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3318,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12907:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12938:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3322,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12961:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12961:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12790:198:7"
            },
            "returnParameters": {
              "id": 3324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12998:0:7"
            },
            "scope": 3380,
            "src": "12762:937:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3381,
        "src": "1489:12212:7"
      }
    ],
    "src": "0:13702:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/Tribute.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9349
      ],
      "Address": [
        9733
      ],
      "BankExtension": [
        9190
      ],
      "DaoConstants": [
        6263
      ],
      "DaoRegistry": [
        8227
      ],
      "IERC20": [
        10567
      ],
      "IExtension": [
        9253
      ],
      "ITribute": [
        3734
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9437
      ],
      "SafeERC20": [
        10004
      ],
      "TributeContract": [
        3380
      ]
    },
    "id": 3381,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2769,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/ITribute.sol",
        "file": "./interfaces/ITribute.sol",
        "id": 2770,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 3735,
        "src": "58:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2771,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 6264,
        "src": "94:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2772,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 8228,
        "src": "129:33:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 2773,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9191,
        "src": "163:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 2774,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 3782,
        "src": "196:44:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 2775,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9438,
        "src": "241:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/guards/AdapterGuard.sol",
        "file": "../guards/AdapterGuard.sol",
        "id": 2776,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9350,
        "src": "277:36:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/utils/IERC20.sol",
        "file": "../utils/IERC20.sol",
        "id": 2777,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 10568,
        "src": "314:29:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/AddressLib.sol",
        "file": "../helpers/AddressLib.sol",
        "id": 2778,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 9734,
        "src": "344:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jd/openlaw/openlawteam/laoland/contracts/helpers/SafeERC20.sol",
        "file": "../helpers/SafeERC20.sol",
        "id": 2779,
        "nodeType": "ImportDirective",
        "scope": 3381,
        "sourceUnit": 10005,
        "src": "380:34:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2781,
              "name": "ITribute",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3734,
              "src": "1517:8:7"
            },
            "id": 2782,
            "nodeType": "InheritanceSpecifier",
            "src": "1517:8:7"
          },
          {
            "baseName": {
              "id": 2783,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6263,
              "src": "1527:12:7"
            },
            "id": 2784,
            "nodeType": "InheritanceSpecifier",
            "src": "1527:12:7"
          },
          {
            "baseName": {
              "id": 2785,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9437,
              "src": "1541:11:7"
            },
            "id": 2786,
            "nodeType": "InheritanceSpecifier",
            "src": "1541:11:7"
          },
          {
            "baseName": {
              "id": 2787,
              "name": "AdapterGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9349,
              "src": "1554:12:7"
            },
            "id": 2788,
            "nodeType": "InheritanceSpecifier",
            "src": "1554:12:7"
          }
        ],
        "contractDependencies": [
          3734,
          6263,
          9349,
          9437
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2780,
          "nodeType": "StructuredDocumentation",
          "src": "416:1071:7",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 3380,
        "linearizedBaseContracts": [
          3380,
          9349,
          9437,
          6263,
          3734
        ],
        "name": "TributeContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2791,
            "libraryName": {
              "id": 2789,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9733,
              "src": "1579:7:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1573:26:7",
            "typeName": {
              "id": 2790,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1591:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 2795,
            "libraryName": {
              "id": 2792,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10004,
              "src": "1610:9:7"
            },
            "nodeType": "UsingForDirective",
            "src": "1604:27:7",
            "typeName": {
              "id": 2794,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2793,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10567,
                "src": "1624:6:7"
              },
              "referencedDeclaration": 10567,
              "src": "1624:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10567",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "TributeContract.ProposalDetails",
            "id": 2810,
            "members": [
              {
                "constant": false,
                "id": 2797,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1698:10:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 2796,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1698:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2799,
                "mutability": "mutable",
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1815:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2798,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1815:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2801,
                "mutability": "mutable",
                "name": "proposer",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "1912:16:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2800,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1912:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2803,
                "mutability": "mutable",
                "name": "tokenToMint",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2018:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2802,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2018:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2805,
                "mutability": "mutable",
                "name": "requestAmount",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2103:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2804,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2103:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2807,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2215:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2806,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2215:7:7",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2809,
                "mutability": "mutable",
                "name": "tributeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 2810,
                "src": "2279:21:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 2808,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2279:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 3380,
            "src": "1637:670:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 2817,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 3380,
            "src": "2378:72:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails))"
            },
            "typeName": {
              "id": 2816,
              "keyType": {
                "id": 2811,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2386:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2378:55:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails))"
              },
              "valueType": {
                "id": 2815,
                "keyType": {
                  "id": 2812,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2405:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2397:35:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                  "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 2814,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 2813,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2810,
                    "src": "2416:15:7"
                  },
                  "referencedDeclaration": 2810,
                  "src": "2416:15:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                    "typeString": "struct TributeContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2825,
              "nodeType": "Block",
              "src": "2588:42:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2605:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2821,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2598:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2598:25:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2824,
                  "nodeType": "ExpressionStatement",
                  "src": "2598:25:7"
                }
              ]
            },
            "documentation": {
              "id": 2818,
              "nodeType": "StructuredDocumentation",
              "src": "2457:99:7",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 2826,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:2:7"
            },
            "returnParameters": {
              "id": 2820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2588:0:7"
            },
            "scope": 3380,
            "src": "2561:69:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2854,
              "nodeType": "Block",
              "src": "3231:147:7",
              "statements": [
                {
                  "assignments": [
                    2840
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2840,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 2854,
                      "src": "3241:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9190",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 2839,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2838,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9190,
                          "src": "3241:13:7"
                        },
                        "referencedDeclaration": 9190,
                        "src": "3241:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2847,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2844,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6155,
                            "src": "3300:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2842,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2830,
                            "src": "3276:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7382,
                          "src": "3276:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3276:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2841,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "3262:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 2846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3262:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3241:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2851,
                        "name": "tokenAddrToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2832,
                        "src": "3355:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2848,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2840,
                        "src": "3316:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "registerPotentialNewInternalToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8587,
                      "src": "3316:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2853,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:55:7"
                }
              ]
            },
            "documentation": {
              "id": 2827,
              "nodeType": "StructuredDocumentation",
              "src": "2636:480:7",
              "text": " @notice Configures the adapter for a particular DAO.\n @notice Registers the DAO internal token with the DAO Bank.\n @dev Only adapters registered to the DAO can execute the function call (or if the DAO is in creation mode).\n @dev A DAO Bank extension must exist and be configured with proper access for this adapter.\n @param dao The DAO address.\n @param tokenAddrToMint The internal token address to be registered with the DAO Bank."
            },
            "functionSelector": "c9c35c08",
            "id": 2855,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2835,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2830,
                    "src": "3222:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 2836,
                "modifierName": {
                  "id": 2834,
                  "name": "onlyAdapter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9288,
                  "src": "3210:11:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3210:16:7"
              }
            ],
            "name": "configureDao",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2830,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3143:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2829,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2828,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "3143:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "3143:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2832,
                  "mutability": "mutable",
                  "name": "tokenAddrToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 2855,
                  "src": "3160:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3160:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3142:42:7"
            },
            "returnParameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3231:0:7"
            },
            "scope": 3380,
            "src": "3121:257:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3707
            ],
            "body": {
              "id": 2914,
              "nodeType": "Block",
              "src": "4437:477:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2878,
                            "name": "applicant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "4493:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2876,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "4468:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7943,
                          "src": "4468:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 2879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4468:35:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6170706c6963616e742069732072657365727665642061646472657373",
                        "id": 2880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4517:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e",
                          "typeString": "literal_string \"applicant is reserved address\""
                        },
                        "value": "applicant is reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e4414659e0261a73cef77a55769c8bb6fd744d16a13fd2976abff377ffa882e",
                          "typeString": "literal_string \"applicant is reserved address\""
                        }
                      ],
                      "id": 2875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4447:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2882,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:111:7"
                },
                {
                  "assignments": [
                    2885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2885,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 2914,
                      "src": "4568:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10567",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 2884,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2883,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10567,
                          "src": "4568:6:7"
                        },
                        "referencedDeclaration": 10567,
                        "src": "4568:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2889,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2887,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "4590:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2886,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10567,
                      "src": "4583:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 2888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10567",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4568:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2893,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4633:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4633:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2897,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4653:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          ],
                          "id": 2896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4645:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2895,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4645:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4645:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2899,
                        "name": "tributeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "4660:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2890,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2885,
                        "src": "4610:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9849,
                      "src": "4610:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4610:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2901,
                  "nodeType": "ExpressionStatement",
                  "src": "4610:64:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2903,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2859,
                        "src": "4721:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2904,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2861,
                        "src": "4738:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2905,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2863,
                        "src": "4762:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2906,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4785:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4785:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2908,
                        "name": "tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2865,
                        "src": "4809:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2909,
                        "name": "requestAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "4834:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2910,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2869,
                        "src": "4861:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2911,
                        "name": "tributeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "4884:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2902,
                      "name": "_submitTributeProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3281,
                      "src": "4685:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,address,address,address,uint256,address,uint256)"
                      }
                    },
                    "id": 2912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:222:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2913,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:222:7"
                }
              ]
            },
            "documentation": {
              "id": 2856,
              "nodeType": "StructuredDocumentation",
              "src": "3384:804:7",
              "text": " @notice Creates a tribute proposal and escrows received tokens into the adapter.\n @dev Applicant address must not be reserved.\n @dev The proposer must first separately `approve` the adapter as spender of the ERC-20 tokens provided as tribute.\n @param dao The DAO address.\n @param proposalId The proposal id (managed by the client).\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens."
            },
            "functionSelector": "c0b62f45",
            "id": 2915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideTribute",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4428:8:7"
            },
            "parameters": {
              "id": 2872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2859,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4226:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2858,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2857,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "4226:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "4226:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4251:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2860,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4251:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4279:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4279:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4306:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4306:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4335:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4335:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4366:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4366:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2871,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 2915,
                  "src": "4393:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4216:204:7"
            },
            "returnParameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4437:0:7"
            },
            "scope": 3380,
            "src": "4193:721:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3717
            ],
            "body": {
              "id": 2959,
              "nodeType": "Block",
              "src": "5340:349:7",
              "statements": [
                {
                  "assignments": [
                    2929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2929,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 2959,
                      "src": "5350:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 2928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2927,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5350:7:7"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5350:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2936,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2933,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6115,
                            "src": "5405:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2931,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "5383:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7357,
                          "src": "5383:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2930,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5375:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 2935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5350:63:7"
                },
                {
                  "assignments": [
                    2938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2938,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 2959,
                      "src": "5423:19:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5423:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2950,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2941,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "5506:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2944,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5535:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TributeContract_$3380",
                              "typeString": "contract TributeContract"
                            }
                          ],
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5527:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5527:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5527:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2946,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "5558:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 2947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5580:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5580:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2939,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "5457:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "5457:31:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 2949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5457:147:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5423:181:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2952,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "5631:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2953,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "5636:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2954,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "5648:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 2955,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2938,
                        "src": "5654:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2956,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "5667:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 2951,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2992,
                      "src": "5614:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 2957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5614:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2958,
                  "nodeType": "ExpressionStatement",
                  "src": "5614:68:7"
                }
              ]
            },
            "documentation": {
              "id": 2916,
              "nodeType": "StructuredDocumentation",
              "src": "4920:286:7",
              "text": " @notice Sponsors a tribute proposal to start the voting process.\n @dev Only members of the DAO can sponsor a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param data Additional details about the proposal."
            },
            "functionSelector": "cd0e42ed",
            "id": 2960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2925,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5331:8:7"
            },
            "parameters": {
              "id": 2924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5245:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2918,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2917,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "5245:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "5245:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5270:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2923,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2960,
                  "src": "5298:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2922,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5298:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5235:86:7"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5340:0:7"
            },
            "scope": 3380,
            "src": "5211:478:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2991,
              "nodeType": "Block",
              "src": "6298:134:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2979,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "6328:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2980,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2970,
                        "src": "6340:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2976,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "6308:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7632,
                      "src": "6308:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 2981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6308:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2982,
                  "nodeType": "ExpressionStatement",
                  "src": "6308:44:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2986,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2964,
                        "src": "6403:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 2987,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2966,
                        "src": "6408:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2988,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2968,
                        "src": "6420:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2983,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2973,
                        "src": "6362:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "6362:40:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 2989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6362:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2990,
                  "nodeType": "ExpressionStatement",
                  "src": "6362:63:7"
                }
              ]
            },
            "documentation": {
              "id": 2961,
              "nodeType": "StructuredDocumentation",
              "src": "5695:416:7",
              "text": " @notice Sponsors a tribute proposal to start the voting process.\n @dev Only members of the DAO can sponsor a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param data Additional details about the proposal.\n @param sponsoredBy The address of the sponsoring member.\n @param votingContract The voting contract used by the DAO."
            },
            "id": 2992,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6151:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2962,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "6151:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "6151:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2966,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6176:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2965,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6176:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6204:17:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2967,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6204:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2970,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6231:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6231:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2992,
                  "src": "6260:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 2972,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2971,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "6260:7:7"
                    },
                    "referencedDeclaration": 3781,
                    "src": "6260:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6141:147:7"
            },
            "returnParameters": {
              "id": 2975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6298:0:7"
            },
            "scope": 3380,
            "src": "6116:316:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3725
            ],
            "body": {
              "id": 3058,
              "nodeType": "Block",
              "src": "6935:650:7",
              "statements": [
                {
                  "assignments": [
                    3004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3004,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 3058,
                      "src": "6945:32:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                        "typeString": "struct TributeContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 3003,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3002,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2810,
                          "src": "6945:15:7"
                        },
                        "referencedDeclaration": 2810,
                        "src": "6945:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                          "typeString": "struct TributeContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3013,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3005,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "6980:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 3010,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 3008,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2996,
                            "src": "6998:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 3007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6990:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6990:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6990:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6980:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                        "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 3012,
                    "indexExpression": {
                      "id": 3011,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2998,
                      "src": "7004:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6980:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6945:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3015,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3004,
                            "src": "7033:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "7033:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3017,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2998,
                          "src": "7048:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "7033:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646f6573206e6f74206578697374",
                        "id": 3019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7060:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        },
                        "value": "proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        }
                      ],
                      "id": 3014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7025:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7025:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3021,
                  "nodeType": "ExpressionStatement",
                  "src": "7025:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7117:114:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3025,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2998,
                              "src": "7155:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3026,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "7183:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ProposalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6670,
                                "src": "7183:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalFlag_$6670_$",
                                  "typeString": "type(enum DaoRegistry.ProposalFlag)"
                                }
                              },
                              "id": 3028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "SPONSORED",
                              "nodeType": "MemberAccess",
                              "src": "7183:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            ],
                            "expression": {
                              "id": 3023,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2996,
                              "src": "7118:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getProposalFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7794,
                            "src": "7118:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_enum$_ProposalFlag_$6670_$returns$_t_bool_$",
                              "typeString": "function (bytes32,enum DaoRegistry.ProposalFlag) view external returns (bool)"
                            }
                          },
                          "id": 3029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7118:113:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20616c72656164792073706f6e736f726564",
                        "id": 3031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7245:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3",
                          "typeString": "literal_string \"proposal already sponsored\""
                        },
                        "value": "proposal already sponsored"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d7727b188960a2ca9d7df585419693398f617746d755bf0ccdd3c39d8e6eab3",
                          "typeString": "literal_string \"proposal already sponsored\""
                        }
                      ],
                      "id": 3022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7096:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:187:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3033,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:187:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3035,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3004,
                            "src": "7314:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2801,
                          "src": "7314:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3037,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7335:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7335:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7314:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c792070726f706f7365722063616e2063616e63656c20612070726f706f73616c",
                        "id": 3040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7359:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1",
                          "typeString": "literal_string \"only proposer can cancel a proposal\""
                        },
                        "value": "only proposer can cancel a proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2f49b04ed28735a86ad227065f9604166c928ab27bd00b181b7f566cda3c8a1",
                          "typeString": "literal_string \"only proposer can cancel a proposal\""
                        }
                      ],
                      "id": 3034,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7293:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7293:113:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3042,
                  "nodeType": "ExpressionStatement",
                  "src": "7293:113:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3046,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "7437:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3043,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2996,
                        "src": "7417:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7663,
                      "src": "7417:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7417:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3048,
                  "nodeType": "ExpressionStatement",
                  "src": "7417:31:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3050,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7487:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2807,
                        "src": "7487:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3052,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7515:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3053,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2801,
                        "src": "7515:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3054,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3004,
                          "src": "7546:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                            "typeString": "struct TributeContract.ProposalDetails storage pointer"
                          }
                        },
                        "id": 3055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tributeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2809,
                        "src": "7546:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3049,
                      "name": "_refundTribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3306,
                      "src": "7459:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7459:119:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3057,
                  "nodeType": "ExpressionStatement",
                  "src": "7459:119:7"
                }
              ]
            },
            "documentation": {
              "id": 2993,
              "nodeType": "StructuredDocumentation",
              "src": "6438:393:7",
              "text": " @notice Cancels a tribute proposal which marks it as processed and initiates refund of the tribute tokens to the proposer.\n @dev Proposal id must exist.\n @dev Only proposals that have not already been sponsored can be cancelled.\n @dev Only proposer can cancel a tribute proposal.\n @param dao The DAO address.\n @param proposalId The proposal id."
            },
            "functionSelector": "48020ae4",
            "id": 3059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3000,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6922:8:7"
            },
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3059,
                  "src": "6860:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2994,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "6860:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "6860:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3059,
                  "src": "6877:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6877:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6859:37:7"
            },
            "returnParameters": {
              "id": 3001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6935:0:7"
            },
            "scope": 3380,
            "src": "6836:749:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3733
            ],
            "body": {
              "id": 3233,
              "nodeType": "Block",
              "src": "8285:1707:7",
              "statements": [
                {
                  "assignments": [
                    3071
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3071,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8295:32:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                        "typeString": "struct TributeContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 3070,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3069,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2810,
                          "src": "8295:15:7"
                        },
                        "referencedDeclaration": 2810,
                        "src": "8295:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                          "typeString": "struct TributeContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3080,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 3072,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2817,
                        "src": "8330:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 3077,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 3075,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3063,
                            "src": "8348:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 3074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8340:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3073,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8340:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8340:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8330:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                        "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 3079,
                    "indexExpression": {
                      "id": 3078,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3065,
                      "src": "8354:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8330:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8295:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3082,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3071,
                            "src": "8383:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2797,
                          "src": "8383:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3084,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3065,
                          "src": "8398:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "8383:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646f6573206e6f74206578697374",
                        "id": 3086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8410:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        },
                        "value": "proposal does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62a5e8da32551f1a850c0c642567075c0126df9edee02cfd01f706ba186c1270",
                          "typeString": "literal_string \"proposal does not exist\""
                        }
                      ],
                      "id": 3081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8375:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8375:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3088,
                  "nodeType": "ExpressionStatement",
                  "src": "8375:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8467:114:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3092,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3065,
                              "src": "8505:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3093,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "8533:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ProposalFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6670,
                                "src": "8533:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProposalFlag_$6670_$",
                                  "typeString": "type(enum DaoRegistry.ProposalFlag)"
                                }
                              },
                              "id": 3095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "PROCESSED",
                              "nodeType": "MemberAccess",
                              "src": "8533:34:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_ProposalFlag_$6670",
                                "typeString": "enum DaoRegistry.ProposalFlag"
                              }
                            ],
                            "expression": {
                              "id": 3090,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3063,
                              "src": "8468:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getProposalFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7794,
                            "src": "8468:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_enum$_ProposalFlag_$6670_$returns$_t_bool_$",
                              "typeString": "function (bytes32,enum DaoRegistry.ProposalFlag) view external returns (bool)"
                            }
                          },
                          "id": 3096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8468:113:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20616c72656164792070726f636573736564",
                        "id": 3098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8595:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd",
                          "typeString": "literal_string \"proposal already processed\""
                        },
                        "value": "proposal already processed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ac54d13f0615413ccaf3531bf05811e778860fcd7e892fc4caff823afca4dd",
                          "typeString": "literal_string \"proposal already processed\""
                        }
                      ],
                      "id": 3089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8446:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8446:187:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3100,
                  "nodeType": "ExpressionStatement",
                  "src": "8446:187:7"
                },
                {
                  "assignments": [
                    3103
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3103,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8644:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 3102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3101,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "8644:7:7"
                        },
                        "referencedDeclaration": 3781,
                        "src": "8644:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3110,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3107,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6115,
                            "src": "8699:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3105,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3063,
                            "src": "8677:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7357,
                          "src": "8677:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8677:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3104,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "8669:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 3109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8669:38:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8644:63:7"
                },
                {
                  "assignments": [
                    3115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3115,
                      "mutability": "mutable",
                      "name": "voteResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 3233,
                      "src": "8717:30:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      },
                      "typeName": {
                        "id": 3114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3113,
                          "name": "IVoting.VotingState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3745,
                          "src": "8717:19:7"
                        },
                        "referencedDeclaration": 3745,
                        "src": "8717:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3121,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3118,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3063,
                        "src": "8788:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 3119,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3065,
                        "src": "8793:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3116,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3103,
                        "src": "8762:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 3117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "voteResult",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3780,
                      "src": "8762:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                        "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                      }
                    },
                    "id": 3120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8762:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_VotingState_$3745",
                      "typeString": "enum IVoting.VotingState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8717:87:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3125,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3065,
                        "src": "8835:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3122,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3063,
                        "src": "8815:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7663,
                      "src": "8815:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8815:31:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3127,
                  "nodeType": "ExpressionStatement",
                  "src": "8815:31:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_VotingState_$3745",
                      "typeString": "enum IVoting.VotingState"
                    },
                    "id": 3132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3128,
                      "name": "voteResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3115,
                      "src": "8861:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 3129,
                          "name": "IVoting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3781,
                          "src": "8875:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                            "typeString": "type(contract IVoting)"
                          }
                        },
                        "id": 3130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "VotingState",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3745,
                        "src": "8875:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                          "typeString": "type(enum IVoting.VotingState)"
                        }
                      },
                      "id": 3131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PASS",
                      "nodeType": "MemberAccess",
                      "src": "8875:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_VotingState_$3745",
                        "typeString": "enum IVoting.VotingState"
                      }
                    },
                    "src": "8861:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 3209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3205,
                          "name": "voteResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "9645:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 3206,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "9659:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 3207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "9659:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 3208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_PASS",
                          "nodeType": "MemberAccess",
                          "src": "9659:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "9645:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 3214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3210,
                          "name": "voteResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3115,
                          "src": "9703:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 3211,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "9717:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 3212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "9717:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 3213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "TIE",
                          "nodeType": "MemberAccess",
                          "src": "9717:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "9703:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "9645:95:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 3230,
                      "nodeType": "Block",
                      "src": "9917:69:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "70726f706f73616c20686173206e6f74206265656e20766f746564206f6e20796574",
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9938:36:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf",
                                  "typeString": "literal_string \"proposal has not been voted on yet\""
                                },
                                "value": "proposal has not been voted on yet"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9d6f728c7254e0bed6bbcb38aca3640c55a39e3c481e03f391ef2b996704ebdf",
                                  "typeString": "literal_string \"proposal has not been voted on yet\""
                                }
                              ],
                              "id": 3226,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967277,
                                4294967277
                              ],
                              "referencedDeclaration": 4294967277,
                              "src": "9931:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 3228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9931:44:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3229,
                          "nodeType": "ExpressionStatement",
                          "src": "9931:44:7"
                        }
                      ]
                    },
                    "id": 3231,
                    "nodeType": "IfStatement",
                    "src": "9628:358:7",
                    "trueBody": {
                      "id": 3225,
                      "nodeType": "Block",
                      "src": "9751:160:7",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3217,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9797:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3218,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2807,
                                "src": "9797:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3219,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9829:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3220,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2801,
                                "src": "9829:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 3221,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3071,
                                  "src": "9864:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                    "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                  }
                                },
                                "id": 3222,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tributeAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2809,
                                "src": "9864:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3216,
                              "name": "_refundTribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3306,
                              "src": "9765:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256)"
                              }
                            },
                            "id": 3223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9765:135:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 3224,
                          "nodeType": "ExpressionStatement",
                          "src": "9765:135:7"
                        }
                      ]
                    }
                  },
                  "id": 3232,
                  "nodeType": "IfStatement",
                  "src": "8857:1129:7",
                  "trueBody": {
                    "id": 3204,
                    "nodeType": "Block",
                    "src": "8901:721:7",
                    "statements": [
                      {
                        "assignments": [
                          3135
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3135,
                            "mutability": "mutable",
                            "name": "bank",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "8915:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9190",
                              "typeString": "contract BankExtension"
                            },
                            "typeName": {
                              "id": 3134,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3133,
                                "name": "BankExtension",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9190,
                                "src": "8915:13:7"
                              },
                              "referencedDeclaration": 9190,
                              "src": "8915:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9190",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3142,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3139,
                                  "name": "BANK",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6155,
                                  "src": "8974:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 3137,
                                  "name": "dao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3063,
                                  "src": "8950:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                },
                                "id": 3138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getExtensionAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 7382,
                                "src": "8950:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view external returns (address)"
                                }
                              },
                              "id": 3140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8950:29:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3136,
                            "name": "BankExtension",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9190,
                            "src": "8936:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                              "typeString": "type(contract BankExtension)"
                            }
                          },
                          "id": 3141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8936:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9190",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8915:65:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3144,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3063,
                              "src": "9031:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "expression": {
                                "id": 3145,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9052:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3146,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "applicant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2799,
                              "src": "9052:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3147,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9088:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3148,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2801,
                              "src": "9088:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3149,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9123:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenToMint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2803,
                              "src": "9123:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3151,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9161:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3152,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "requestAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "9161:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3153,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9201:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2807,
                              "src": "9201:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3155,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9233:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3156,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9233:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3143,
                            "name": "_mintTokensToMember",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3379,
                            "src": "8994:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8227_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract DaoRegistry,address,address,address,uint256,address,uint256)"
                            }
                          },
                          "id": 3157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8994:275:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3158,
                        "nodeType": "ExpressionStatement",
                        "src": "8994:275:7"
                      },
                      {
                        "assignments": [
                          3160
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3160,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "9284:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3159,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9284:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3163,
                        "initialValue": {
                          "expression": {
                            "id": 3161,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3071,
                            "src": "9300:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                              "typeString": "struct TributeContract.ProposalDetails storage pointer"
                            }
                          },
                          "id": 3162,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2807,
                          "src": "9300:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9284:30:7"
                      },
                      {
                        "condition": {
                          "id": 3168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9332:27:7",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 3166,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3160,
                                "src": "9353:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3164,
                                "name": "bank",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3135,
                                "src": "9333:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BankExtension_$9190",
                                  "typeString": "contract BankExtension"
                                }
                              },
                              "id": 3165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isTokenAllowed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8497,
                              "src": "9333:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 3167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9333:26:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3176,
                        "nodeType": "IfStatement",
                        "src": "9328:103:7",
                        "trueBody": {
                          "id": 3175,
                          "nodeType": "Block",
                          "src": "9361:70:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3172,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3160,
                                    "src": "9410:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3169,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3135,
                                    "src": "9379:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 3171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "registerPotentialNewToken",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8542,
                                  "src": "9379:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address) external"
                                  }
                                },
                                "id": 3173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9379:37:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3174,
                              "nodeType": "ExpressionStatement",
                              "src": "9379:37:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3180,
                              "name": "GUILD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6171,
                              "src": "9462:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3181,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "9469:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3182,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9476:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3183,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9476:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3177,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3135,
                              "src": "9444:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9190",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 3179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addToBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8810,
                            "src": "9444:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) payable external"
                            }
                          },
                          "id": 3184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9444:55:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3185,
                        "nodeType": "ExpressionStatement",
                        "src": "9444:55:7"
                      },
                      {
                        "assignments": [
                          3188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3188,
                            "mutability": "mutable",
                            "name": "erc20",
                            "nodeType": "VariableDeclaration",
                            "scope": 3204,
                            "src": "9513:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$10567",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 3187,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3186,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 10567,
                                "src": "9513:6:7"
                              },
                              "referencedDeclaration": 10567,
                              "src": "9513:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10567",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3192,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3190,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3160,
                              "src": "9535:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3189,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10567,
                            "src": "9528:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 3191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9528:13:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$10567",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9513:28:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3198,
                                  "name": "dao",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3063,
                                  "src": "9582:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                    "typeString": "contract DaoRegistry"
                                  }
                                ],
                                "id": 3197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9574:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3196,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9574:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9574:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 3200,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3071,
                                "src": "9588:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage_ptr",
                                  "typeString": "struct TributeContract.ProposalDetails storage pointer"
                                }
                              },
                              "id": 3201,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tributeAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9588:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3193,
                              "name": "erc20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3188,
                              "src": "9555:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$10567",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9823,
                            "src": "9555:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 3202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9555:56:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3203,
                        "nodeType": "ExpressionStatement",
                        "src": "9555:56:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3060,
              "nodeType": "StructuredDocumentation",
              "src": "7591:589:7",
              "text": " @notice Processes a tribute proposal to handle minting and exchange of DAO internal tokens for tribute tokens (passed vote) or the refund of tribute tokens (failed vote).\n @dev Proposal id must exist.\n @dev Only proposals that have not already been processed are accepted.\n @dev Only sponsored proposals with completed voting are accepted.\n @dev ERC-20 tribute tokens must be registered with the DAO Bank (a passed proposal will check and register the token if needed).\n @param dao The DAO address.\n @param proposalId The proposal id."
            },
            "functionSelector": "9573167d",
            "id": 3234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8272:8:7"
            },
            "parameters": {
              "id": 3066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3063,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3234,
                  "src": "8210:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3062,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3061,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "8210:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "8210:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3065,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3234,
                  "src": "8227:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3064,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8227:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8209:37:7"
            },
            "returnParameters": {
              "id": 3068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8285:0:7"
            },
            "scope": 3380,
            "src": "8185:1807:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3280,
              "nodeType": "Block",
              "src": "10989:291:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3258,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3240,
                        "src": "11018:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3255,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3238,
                        "src": "10999:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7573,
                      "src": "10999:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 3259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10999:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3260,
                  "nodeType": "ExpressionStatement",
                  "src": "10999:30:7"
                },
                {
                  "expression": {
                    "id": 3278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 3261,
                          "name": "proposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2817,
                          "src": "11039:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct TributeContract.ProposalDetails storage ref))"
                          }
                        },
                        "id": 3267,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 3264,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3238,
                              "src": "11057:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 3263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11049:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3262,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11049:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11049:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11039:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$2810_storage_$",
                          "typeString": "mapping(bytes32 => struct TributeContract.ProposalDetails storage ref)"
                        }
                      },
                      "id": 3268,
                      "indexExpression": {
                        "id": 3266,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3240,
                        "src": "11063:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11039:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                        "typeString": "struct TributeContract.ProposalDetails storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3270,
                          "name": "proposalId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3240,
                          "src": "11106:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 3271,
                          "name": "applicant",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3242,
                          "src": "11130:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3272,
                          "name": "proposer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3244,
                          "src": "11153:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3273,
                          "name": "tokenToMint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3246,
                          "src": "11175:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3274,
                          "name": "requestAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3248,
                          "src": "11200:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3275,
                          "name": "tokenAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3250,
                          "src": "11227:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 3276,
                          "name": "tributeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3252,
                          "src": "11250:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3269,
                        "name": "ProposalDetails",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2810,
                        "src": "11077:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProposalDetails_$2810_storage_ptr_$",
                          "typeString": "type(struct TributeContract.ProposalDetails storage pointer)"
                        }
                      },
                      "id": 3277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11077:196:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$2810_memory_ptr",
                        "typeString": "struct TributeContract.ProposalDetails memory"
                      }
                    },
                    "src": "11039:234:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$2810_storage",
                      "typeString": "struct TributeContract.ProposalDetails storage ref"
                    }
                  },
                  "id": 3279,
                  "nodeType": "ExpressionStatement",
                  "src": "11039:234:7"
                }
              ]
            },
            "documentation": {
              "id": 3235,
              "nodeType": "StructuredDocumentation",
              "src": "9998:715:7",
              "text": " @notice Submits a tribute proposal to the DAO.\n @dev Proposal ids must be valid and cannot be reused.\n @param dao The DAO address.\n @param proposalId The proposal id.\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param proposer The proposer address (who will provide the token tribute).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens."
            },
            "id": 3281,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_submitTributeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3238,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10759:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3237,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3236,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "10759:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "10759:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3240,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10784:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3239,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10784:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3242,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10812:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10812:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3244,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10839:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10839:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3246,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10865:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10865:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3248,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10894:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10894:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3250,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10925:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10925:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3252,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3281,
                  "src": "10952:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10952:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10749:230:7"
            },
            "returnParameters": {
              "id": 3254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10989:0:7"
            },
            "scope": 3380,
            "src": "10718:562:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3305,
              "nodeType": "Block",
              "src": "11721:95:7",
              "statements": [
                {
                  "assignments": [
                    3293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3293,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 3305,
                      "src": "11731:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$10567",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 3292,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3291,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10567,
                          "src": "11731:6:7"
                        },
                        "referencedDeclaration": 10567,
                        "src": "11731:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3297,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3295,
                        "name": "tokenAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "11753:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3294,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10567,
                      "src": "11746:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$10567_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11746:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$10567",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11731:32:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3301,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3286,
                        "src": "11792:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3288,
                        "src": "11802:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3298,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3293,
                        "src": "11773:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$10567",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 3300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9823,
                      "src": "11773:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10567_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10567_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 3303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11773:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3304,
                  "nodeType": "ExpressionStatement",
                  "src": "11773:36:7"
                }
              ]
            },
            "documentation": {
              "id": 3282,
              "nodeType": "StructuredDocumentation",
              "src": "11286:314:7",
              "text": " @notice Refunds tribute tokens to the proposer.\n @param tokenAddr The address of the ERC-20 tokens provided as tribute by the proposer.\n @param proposer The proposer address (who will receive back the tribute tokens).\n @param amount The amount of tribute tokens to be refunded."
            },
            "id": 3306,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_refundTribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11638:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11638:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3286,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11665:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11665:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3288,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3306,
                  "src": "11691:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11691:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11628:83:7"
            },
            "returnParameters": {
              "id": 3290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11721:0:7"
            },
            "scope": 3380,
            "src": "11605:211:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3378,
              "nodeType": "Block",
              "src": "12998:701:7",
              "statements": [
                {
                  "assignments": [
                    3327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3327,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 3378,
                      "src": "13008:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9190",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 3326,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3325,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9190,
                          "src": "13008:13:7"
                        },
                        "referencedDeclaration": 9190,
                        "src": "13008:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3334,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3331,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6155,
                            "src": "13067:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3329,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3310,
                            "src": "13043:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 3330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7382,
                          "src": "13043:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13043:29:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3328,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9190,
                      "src": "13029:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9190_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13029:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9190",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13008:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3338,
                            "name": "tokenToMint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3316,
                            "src": "13125:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3336,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3327,
                            "src": "13104:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9190",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isInternalToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8484,
                          "src": "13104:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 3339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13104:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "69742063616e206f6e6c79206d696e7420696e7465726e616c20746f6b656e73",
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13151:34:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab",
                          "typeString": "literal_string \"it can only mint internal tokens\""
                        },
                        "value": "it can only mint internal tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dad4965875fc78885dd582efd5fa0f573133e928d143a37f2915437afe4278ab",
                          "typeString": "literal_string \"it can only mint internal tokens\""
                        }
                      ],
                      "id": 3335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13083:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13083:112:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3342,
                  "nodeType": "ExpressionStatement",
                  "src": "13083:112:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13226:60:7",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 3346,
                              "name": "applicant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3312,
                              "src": "13245:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 3347,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8227,
                                  "src": "13256:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8227_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 3348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MemberFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6666,
                                "src": "13256:22:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MemberFlag_$6666_$",
                                  "typeString": "type(enum DaoRegistry.MemberFlag)"
                                }
                              },
                              "id": 3349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "JAILED",
                              "nodeType": "MemberAccess",
                              "src": "13256:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberFlag_$6666",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_MemberFlag_$6666",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            ],
                            "expression": {
                              "id": 3344,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3310,
                              "src": "13227:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 3345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMemberFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7817,
                            "src": "13227:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_MemberFlag_$6666_$returns$_t_bool_$",
                              "typeString": "function (address,enum DaoRegistry.MemberFlag) view external returns (bool)"
                            }
                          },
                          "id": 3350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13227:59:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e6e6f742070726f63657373206a61696c6564206d656d626572",
                        "id": 3352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13300:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433",
                          "typeString": "literal_string \"cannot process jailed member\""
                        },
                        "value": "cannot process jailed member"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d668c11e2eb77c5d179f848641c1d75551aa4a5291c76b7b7367dba7a4f63433",
                          "typeString": "literal_string \"cannot process jailed member\""
                        }
                      ],
                      "id": 3343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13205:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13205:135:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3354,
                  "nodeType": "ExpressionStatement",
                  "src": "13205:135:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3358,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "13374:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3355,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3310,
                        "src": "13351:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "potentialNewMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6909,
                      "src": "13351:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13351:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3360,
                  "nodeType": "ExpressionStatement",
                  "src": "13351:33:7"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 3367,
                        "nodeType": "Block",
                        "src": "13578:37:7",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 3368,
                      "nodeType": "TryCatchClause",
                      "src": "13578:37:7"
                    },
                    {
                      "block": {
                        "id": 3375,
                        "nodeType": "Block",
                        "src": "13622:71:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3370,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3320,
                                  "src": "13651:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3371,
                                  "name": "proposer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3314,
                                  "src": "13658:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 3372,
                                  "name": "tributeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3322,
                                  "src": "13668:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 3369,
                                "name": "_refundTribute",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3306,
                                "src": "13636:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 3373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13636:46:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 3374,
                            "nodeType": "ExpressionStatement",
                            "src": "13636:46:7"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3376,
                      "nodeType": "TryCatchClause",
                      "src": "13616:77:7"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 3363,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3312,
                        "src": "13539:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3364,
                        "name": "tokenToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3316,
                        "src": "13550:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3365,
                        "name": "requestAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3318,
                        "src": "13563:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3361,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3327,
                        "src": "13521:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9190",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 3362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8810,
                      "src": "13521:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13521:56:7",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3377,
                  "nodeType": "TryStatement",
                  "src": "13517:176:7"
                }
              ]
            },
            "documentation": {
              "id": 3307,
              "nodeType": "StructuredDocumentation",
              "src": "11822:935:7",
              "text": " @notice Adds DAO internal tokens to applicant's balance and creates a new member entry (if applicant is not already a member).\n @dev Internal tokens to be minted to the applicant must be registered with the DAO Bank.\n @dev The applicant member cannot be jailed.\n @param dao The DAO address.\n @param applicant The applicant address (who will receive the DAO internal tokens and become a member).\n @param proposer The proposer address (who will be refunded the tribute tokens if the minting of internal tokens fails).\n @param tokenToMint The address of the DAO internal token to be minted to the applicant.\n @param requestAmount The amount requested of DAO internal tokens.\n @param token The address of the ERC-20 tokens provided as tribute by the proposer.\n @param tributeAmount The amount of tribute tokens to be refunded if the minting of internal tokens fails."
            },
            "id": 3379,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintTokensToMember",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3310,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12800:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 3309,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3308,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8227,
                      "src": "12800:11:7"
                    },
                    "referencedDeclaration": 8227,
                    "src": "12800:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8227",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3312,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12825:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12825:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3314,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12852:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12852:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3316,
                  "mutability": "mutable",
                  "name": "tokenToMint",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12878:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12878:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3318,
                  "mutability": "mutable",
                  "name": "requestAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12907:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3320,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12938:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12938:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3322,
                  "mutability": "mutable",
                  "name": "tributeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "12961:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12961:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12790:198:7"
            },
            "returnParameters": {
              "id": 3324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12998:0:7"
            },
            "scope": 3380,
            "src": "12762:937:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3381,
        "src": "1489:12212:7"
      }
    ],
    "src": "0:13702:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-10T21:29:33.273Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelProposal(address,bytes32)": {
        "details": "Proposal id must exist.Only proposals that have not already been sponsored can be cancelled.Only proposer can cancel a tribute proposal.",
        "params": {
          "dao": "The DAO address.",
          "proposalId": "The proposal id."
        }
      },
      "configureDao(address,address)": {
        "details": "Only adapters registered to the DAO can execute the function call (or if the DAO is in creation mode).A DAO Bank extension must exist and be configured with proper access for this adapter.",
        "params": {
          "dao": "The DAO address.",
          "tokenAddrToMint": "The internal token address to be registered with the DAO Bank."
        }
      },
      "processProposal(address,bytes32)": {
        "details": "Proposal id must exist.Only proposals that have not already been processed are accepted.Only sponsored proposals with completed voting are accepted.ERC-20 tribute tokens must be registered with the DAO Bank (a passed proposal will check and register the token if needed).",
        "params": {
          "dao": "The DAO address.",
          "proposalId": "The proposal id."
        }
      },
      "provideTribute(address,bytes32,address,address,uint256,address,uint256)": {
        "details": "Applicant address must not be reserved.The proposer must first separately `approve` the adapter as spender of the ERC-20 tokens provided as tribute.",
        "params": {
          "applicant": "The applicant address (who will receive the DAO internal tokens and become a member).",
          "dao": "The DAO address.",
          "proposalId": "The proposal id (managed by the client).",
          "requestAmount": "The amount requested of DAO internal tokens.",
          "tokenAddr": "The address of the ERC-20 tokens provided as tribute by the proposer.",
          "tokenToMint": "The address of the DAO internal token to be minted to the applicant.",
          "tributeAmount": "The amount of tribute tokens."
        }
      },
      "sponsorProposal(address,bytes32,bytes)": {
        "details": "Only members of the DAO can sponsor a tribute proposal.",
        "params": {
          "dao": "The DAO address.",
          "data": "Additional details about the proposal.",
          "proposalId": "The proposal id."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelProposal(address,bytes32)": {
        "notice": "Cancels a tribute proposal which marks it as processed and initiates refund of the tribute tokens to the proposer."
      },
      "configureDao(address,address)": {
        "notice": "Configures the adapter for a particular DAO.Registers the DAO internal token with the DAO Bank."
      },
      "processProposal(address,bytes32)": {
        "notice": "Processes a tribute proposal to handle minting and exchange of DAO internal tokens for tribute tokens (passed vote) or the refund of tribute tokens (failed vote)."
      },
      "provideTribute(address,bytes32,address,address,uint256,address,uint256)": {
        "notice": "Creates a tribute proposal and escrows received tokens into the adapter."
      },
      "sponsorProposal(address,bytes32,bytes)": {
        "notice": "Sponsors a tribute proposal to start the voting process."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}