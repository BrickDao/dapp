{
  "contractName": "GuildKickContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "kicks",
      "outputs": [
        {
          "internalType": "address",
          "name": "memberToKick",
          "type": "address"
        },
        {
          "internalType": "enum GuildKickContract.GuildKickStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "tokensToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ongoingKicks",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "memberToKick",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "submitKickProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "processProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "toIndex",
          "type": "uint256"
        }
      ],
      "name": "rageKick",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"kicks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"memberToKick\",\"type\":\"address\"},{\"internalType\":\"enum GuildKickContract.GuildKickStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokensToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ongoingKicks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"processProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toIndex\",\"type\":\"uint256\"}],\"name\":\"rageKick\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"memberToKick\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"submitKickProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"processProposal(address,bytes32)\":{\"details\":\"A kick proposal must be in progress.Only one kick per DAO can be executed at time.Only active members can be kicked out.Only proposals that passed the voting can be set to In Progress status.\",\"params\":{\"dao\":\"The dao address.\",\"proposalId\":\"The guild kick proposal id.\"}},\"rageKick(address,uint256)\":{\"details\":\"A kick proposal must be in progress.Only one kick per DAO can be executed at time.Only active members can be kicked out.Only proposals that passed the voting can be completed.\",\"params\":{\"dao\":\"The dao address.\",\"toIndex\":\"The index to control the cached for-loop.\"}},\"submitKickProposal(address,bytes32,address,bytes)\":{\"details\":\"A member can not kick himself.Only one kick per DAO can be executed at time.Only members that have shares or loot can be kicked out.Proposal ids can not be reused.\",\"params\":{\"dao\":\"The dao address.\",\"data\":\"Additional information related to the kick proposal.\",\"memberToKick\":\"The member address that should be kicked out of the DAO.\",\"proposalId\":\"The guild kick proposal id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"processProposal(address,bytes32)\":{\"notice\":\"Process the guild kick proposal, converts the member's shares into loot.The kicked member is put in jail, so he can not perform any other action in the DAO.\"},\"rageKick(address,uint256)\":{\"notice\":\"Transfers the funds from the Guild account to the kicked member account.The amount of funds is caculated using the historical balance when the proposal was created.lootThe kicked member is put in jail, so he can not perform any other action in the DAO.\"},\"submitKickProposal(address,bytes32,address,bytes)\":{\"notice\":\"Creates a guild kick proposal, opens it for voting, and sponsors it.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/GuildKick.sol\":\"GuildKickContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/GuildKick.sol\":{\"keccak256\":\"0x59f01929019cec89db580003dea1801211e09ede5260c0ff4ef34e871a972fac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8835c01fc885aeac8c38876a3f3719a4e3a2da53464dc165d0fdd116b36a223c\",\"dweb:/ipfs/QmVRczRYqWa9pK67ndrWY3wZYoJFMyToEKU9xnYU9wDmb4\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IGuildKick.sol\":{\"keccak256\":\"0x3c6c9c2ad588f45b670abf69a688774c4f9dbce54618612b22427a18e93011d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ebd44a6628287db0cf2fb8f32d12a438ef36f9848fc4a6633d4d85e97203440\",\"dweb:/ipfs/QmWLyhLp83qeE9yvMvkCe2L7M9ZifWGhaGZs82jh43YGzq\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x2b65fd03c04db3db5d73f5e007ca84075fc664c1da4d3f3c77b5c288c9d7bac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1728a85344abf1f3f11b0838c5b29169a38bfa9918f7b8f813079f79b9cbfb\",\"dweb:/ipfs/QmRSarYr4TDaAzPELomqWLTGxkvsbgKdjdd9GwKWDEr1vh\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol\":{\"keccak256\":\"0xdf7d112bce65b840a0bba8a7b7dfb1e4a687d4b7b1e9e533a5f2c5c7619bac4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9abe8da3a41d61ceb4abdccf97289a6b5e31d07550415061638670163158be0\",\"dweb:/ipfs/QmeRJrKa1rUj2Xt6sYaZ5sHtRvdhCTxpzWzeiLfdQRuoac\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506124e3806100206000396000f3fe6080604052600436106100745760003560e01c80638a634a5c1161004e5780638a634a5c146101355780639573167d14610162578063b244a41d14610182578063fc258031146101a2576100b4565b806329e5ab96146100b95780633981538e146100db5780637f5d336f14610115576100b4565b366100b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906121c3565b60405180910390fd5b600080fd5b3480156100c557600080fd5b506100d96100d4366004611c9e565b6101cf565b005b3480156100e757600080fd5b506100fb6100f6366004611c57565b61092f565b60405161010c959493929190611e9e565b60405180910390f35b34801561012157600080fd5b506100d9610130366004611cb0565b610983565b34801561014157600080fd5b50610155610150366004611c1f565b610b2a565b60405161010c9190611f12565b34801561016e57600080fd5b506100d961017d366004611c9e565b610b3c565b34801561018e57600080fd5b5061015561019d366004611da2565b6112d8565b3480156101ae57600080fd5b506101c26101bd366004611d81565b611334565b60405161010c9190611f07565b6001600160a01b03821660009081526001602081815260408084205484835281852081865290925290922060038101549091825474010000000000000000000000000000000000000000900460ff166002811115610256577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461028d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061202d565b6002820154848111156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90611fbf565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0388169063593e96b690610334907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190611c3b565b90506000816001600160a01b0316637de66b6d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c157600080fd5b505afa1580156103d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f99190611d69565b905086818111156104075750805b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063faaf38b3906104599061babe9063baaaaaad908b90600401611e7a565b60206040518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190611d69565b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063faaf38b3906104f89061babe9063b105f00d908c90600401611e7a565b60206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190611d69565b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063faaf38b3906105969061babe90620ff1ce908d90600401611e7a565b60206040518083038186803b1580156105ae57600080fd5b505afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190611d69565b6105f0919061222f565b6105fa919061222f565b875460018901549192506001600160a01b031690865b848110156107dd576040517fe4b50cb80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0389169063e4b50cb890610660908590600401611f12565b60206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190611c3b565b90506000610740896001600160a01b031663faaf38b361dead858f6040518463ffffffff1660e01b81526004016106e993929190611e7a565b60206040518083038186803b15801561070157600080fd5b505afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611d69565b8588611351565b905080156107c8576040517f44a29e2a0000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906344a29e2a906107959061dead90899087908790600401611e50565b600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505050505b505080806107d5906123dc565b915050610610565b506002890184905584841415610921576040517fe3a05cc10000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063e3a05cc19061083a90859063b105f00d908690600401611e7a565b600060405180830381600087803b15801561085457600080fd5b505af1158015610868573d6000803e3d6000fd5b50506040517f42447c180000000000000000000000000000000000000000000000000000000081526001600160a01b038f1692506342447c1891506108b1908590600401611e22565b600060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b50508a547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000178b5550505b505050505050505050505050565b600060208181529281526040808220909352908152208054600182015460028301546003909301546001600160a01b038316937401000000000000000000000000000000000000000090930460ff16929085565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038716906317ba7d85906109eb907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b158015610a0357600080fd5b505afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611c3b565b90506000816001600160a01b031663966917d088308787336040518663ffffffff1660e01b8152600401610a73959493929190611f32565b602060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190611c3b565b9050846001600160a01b0316816001600160a01b03161415610b13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90612155565b610b218787878787866113db565b50505050505050565b60016020526000908152604090205481565b6040517f30490e910000000000000000000000000000000000000000000000000000000081526001600160a01b038316906330490e9190610b81908490600401611f12565b600060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b5050506001600160a01b03831660009081526020818152604080832085845290915281209150815474010000000000000000000000000000000000000000900460ff166002811115610c2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906120c1565b6001600160a01b038316600090815260016020526040902054801580610cfc575060016001600160a01b03851660009081526020818152604080832085845290915290205474010000000000000000000000000000000000000000900460ff166002811115610cf9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b610d32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906121fa565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038616906317ba7d8590610d9a907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b158015610db257600080fd5b505afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190611c3b565b905060026040517f76225e730000000000000000000000000000000000000000000000000000000081526001600160a01b038316906376225e7390610e359089908990600401611f73565b602060405180830381600087803b158015610e4f57600080fd5b505af1158015610e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e879190611d4a565b6005811115610ebf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610ef6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90611ff6565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063593e96b690610f5e907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b158015610f7657600080fd5b505afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190611c3b565b84546040517ff7888aec0000000000000000000000000000000000000000000000000000000081529192506001600160a01b039081169160009184169063f7888aec90611004908590620ff1ce90600401611e36565b60206040518083038186803b15801561101c57600080fd5b505afa158015611030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110549190611d69565b6040517fe3a05cc10000000000000000000000000000000000000000000000000000000081529091506001600160a01b0384169063e3a05cc1906110a3908590620ff1ce908690600401611e7a565b600060405180830381600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b50506040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b038616925063c57d5fe9915061112290859063b105f00d908690600401611e7a565b600060405180830381600087803b15801561113c57600080fd5b505af1158015611150573d6000803e3d6000fd5b50506040517ff7888aec000000000000000000000000000000000000000000000000000000008152600092506001600160a01b038616915063f7888aec906111a290869063b105f00d90600401611e36565b60206040518083038186803b1580156111ba57600080fd5b505afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190611d69565b6040517f575d3f730000000000000000000000000000000000000000000000000000000081529091506001600160a01b038a169063575d3f739061123a908690600401611e22565b600060405180830381600087803b15801561125457600080fd5b505af1158015611268573d6000803e3d6000fd5b505088547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001789555050436003880155600196870155505050506001600160a01b03939093166000908152602091909152604090205550565b60008115156112e78585611334565b15151461132a578115611310576112ff8360026122a1565b611309908561222f565b905061132d565b61131b8360026122a1565b61130990856123c5565b61132d565b50825b9392505050565b6000611347600260ff841685901c612415565b6001149392505050565b60008161138a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061218c565b836113975750600061132d565b838302836113a58683612247565b14156113bd576113b58382612247565b91505061132d565b836113c88487612247565b6113d29190612388565b95945050505050565b85816113e78282611930565b6040517fb73dc3890000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063b73dc3899061142c908a90600401611f12565b600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b50506040517f593e96b6000000000000000000000000000000000000000000000000000000008152600092506001600160a01b038b16915063593e96b6906114c6907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b1580156114de57600080fd5b505afa1580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115169190611c3b565b90506000816001600160a01b031663f7888aec89620ff1ce6040518363ffffffff1660e01b815260040161154b929190611e36565b60206040518083038186803b15801561156357600080fd5b505afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b9190611d69565b90506000826001600160a01b031663f7888aec8a63b105f00d6040518363ffffffff1660e01b81526004016115d1929190611e36565b60206040518083038186803b1580156115e957600080fd5b505afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116219190611d69565b9050600061162f828461222f565b11611666576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061208a565b6040805160a081019091526001600160a01b038a16815260208101600081526020016000815260200160008152602001438152506000808d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff0219169083600281111561174d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910155517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038d16906317ba7d85906117d9907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b1580156117f157600080fd5b505afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118299190611c3b565b6040517f2b0974d00000000000000000000000000000000000000000000000000000000081529091506001600160a01b03821690632b0974d090611877908f908f908e908e90600401611f8c565b600060405180830381600087803b15801561189157600080fd5b505af11580156118a5573d6000803e3d6000fd5b50506040517f815a2bf40000000000000000000000000000000000000000000000000000000081526001600160a01b038f16925063815a2bf491506118f0908e908b90600401611f1b565b600060405180830381600087803b15801561190a57600080fd5b505af115801561191e573d6000803e3d6000fd5b50505050505050505050505050505050565b6040517ffefbd8750000000000000000000000000000000000000000000000000000000081526000906001600160a01b0384169063fefbd87590611998907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b1580156119b057600080fd5b505afa1580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e89190611c3b565b90506001600160a01b03811615611b4f576040517fc89bb8ba0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063c89bb8ba90611a41908690600401611e22565b60206040518083038186803b158015611a5957600080fd5b505afa158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190611c3b565b90506000826001600160a01b031663f7888aec83620ff1ce6040518363ffffffff1660e01b8152600401611ac6929190611e36565b60206040518083038186803b158015611ade57600080fd5b505afa158015611af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b169190611d69565b11611b4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061211e565b505b6040517f45ecd02f0000000000000000000000000000000000000000000000000000000081526001600160a01b038416906345ecd02f90611b94908590600401611e22565b60206040518083038186803b158015611bac57600080fd5b505afa158015611bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be49190611c82565b611c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061211e565b505050565b600060208284031215611c30578081fd5b813561132d81612487565b600060208284031215611c4c578081fd5b815161132d81612487565b60008060408385031215611c69578081fd5b8235611c7481612487565b946020939093013593505050565b600060208284031215611c93578081fd5b815161132d8161249f565b60008060408385031215611c69578182fd5b600080600080600060808688031215611cc7578081fd5b8535611cd281612487565b9450602086013593506040860135611ce981612487565b9250606086013567ffffffffffffffff80821115611d05578283fd5b818801915088601f830112611d18578283fd5b813581811115611d26578384fd5b896020828501011115611d37578384fd5b9699959850939650602001949392505050565b600060208284031215611d5b578081fd5b81516006811061132d578182fd5b600060208284031215611d7a578081fd5b5051919050565b60008060408385031215611d93578182fd5b50508035926020909101359150565b600080600060608486031215611db6578283fd5b83359250602084013591506040840135611dcf8161249f565b809150509250925092565b600082845282826020860137806020848601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011685010190509392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038616815260a0810160038610611ee5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560208301528460408301528360608301528260808301529695505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006001600160a01b038088168352808716602084015260806040840152611f5e608084018688611dda565b91508084166060840152509695505050505050565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b038616825284602083015260606040830152611fb5606083018486611dda565b9695505050505050565b6020808252600f908201527f746f496e64657820746f6f206c6f770000000000000000000000000000000000604082015260600190565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b60208082526026908201527f6775696c64206b69636b20636f6d706c65746564206f7220646f6573206e6f7460408201527f2065786973740000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f6e6f20736861726573206f72206c6f6f74000000000000000000000000000000604082015260600190565b6020808252602b908201527f6775696c64206b69636b20616c726561647920636f6d706c65746564206f722060408201527f696e2070726f6772657373000000000000000000000000000000000000000000606082015260800190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526019908201527f796f752063616e206e6f74206b69636b20796f757273656c6600000000000000604082015260600190565b6020808252601c908201527f746f74616c207368617265732073686f756c64206e6f74206265203000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b6020808252818101527f616e6f74686572206b69636b20616c726561647920696e2070726f6772657373604082015260600190565b6000821982111561224257612242612429565b500190565b60008261225657612256612458565b500490565b80825b600180861161226d5750612298565b81870482111561227f5761227f612429565b8086161561228c57918102915b9490941c93800261225e565b94509492505050565b600061132d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826122d85750600161132d565b816122e55750600061132d565b81600181146122fb576002811461230557612332565b600191505061132d565b60ff84111561231657612316612429565b6001841b91508482111561232c5761232c612429565b5061132d565b5060208310610133831016604e8410600b8410161715612360575081810a8381111561132557611325612429565b61236d848484600161225b565b80860482111561237f5761237f612429565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123c0576123c0612429565b500290565b6000828210156123d7576123d7612429565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561240e5761240e612429565b5060010190565b60008261242457612424612458565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b038116811461249c57600080fd5b50565b801515811461249c57600080fdfea264697066735822122006c5a7ea6393d8cb4baedfacd7b5a42ea1eea791137f9fbeae12ef38b122e32064736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638a634a5c1161004e5780638a634a5c146101355780639573167d14610162578063b244a41d14610182578063fc258031146101a2576100b4565b806329e5ab96146100b95780633981538e146100db5780637f5d336f14610115576100b4565b366100b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906121c3565b60405180910390fd5b600080fd5b3480156100c557600080fd5b506100d96100d4366004611c9e565b6101cf565b005b3480156100e757600080fd5b506100fb6100f6366004611c57565b61092f565b60405161010c959493929190611e9e565b60405180910390f35b34801561012157600080fd5b506100d9610130366004611cb0565b610983565b34801561014157600080fd5b50610155610150366004611c1f565b610b2a565b60405161010c9190611f12565b34801561016e57600080fd5b506100d961017d366004611c9e565b610b3c565b34801561018e57600080fd5b5061015561019d366004611da2565b6112d8565b3480156101ae57600080fd5b506101c26101bd366004611d81565b611334565b60405161010c9190611f07565b6001600160a01b03821660009081526001602081815260408084205484835281852081865290925290922060038101549091825474010000000000000000000000000000000000000000900460ff166002811115610256577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461028d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061202d565b6002820154848111156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90611fbf565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0388169063593e96b690610334907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190611c3b565b90506000816001600160a01b0316637de66b6d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c157600080fd5b505afa1580156103d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f99190611d69565b905086818111156104075750805b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063faaf38b3906104599061babe9063baaaaaad908b90600401611e7a565b60206040518083038186803b15801561047157600080fd5b505afa158015610485573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a99190611d69565b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063faaf38b3906104f89061babe9063b105f00d908c90600401611e7a565b60206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190611d69565b6040517ffaaf38b30000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063faaf38b3906105969061babe90620ff1ce908d90600401611e7a565b60206040518083038186803b1580156105ae57600080fd5b505afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e69190611d69565b6105f0919061222f565b6105fa919061222f565b875460018901549192506001600160a01b031690865b848110156107dd576040517fe4b50cb80000000000000000000000000000000000000000000000000000000081526000906001600160a01b0389169063e4b50cb890610660908590600401611f12565b60206040518083038186803b15801561067857600080fd5b505afa15801561068c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b09190611c3b565b90506000610740896001600160a01b031663faaf38b361dead858f6040518463ffffffff1660e01b81526004016106e993929190611e7a565b60206040518083038186803b15801561070157600080fd5b505afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190611d69565b8588611351565b905080156107c8576040517f44a29e2a0000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906344a29e2a906107959061dead90899087908790600401611e50565b600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b505050505b505080806107d5906123dc565b915050610610565b506002890184905584841415610921576040517fe3a05cc10000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063e3a05cc19061083a90859063b105f00d908690600401611e7a565b600060405180830381600087803b15801561085457600080fd5b505af1158015610868573d6000803e3d6000fd5b50506040517f42447c180000000000000000000000000000000000000000000000000000000081526001600160a01b038f1692506342447c1891506108b1908590600401611e22565b600060405180830381600087803b1580156108cb57600080fd5b505af11580156108df573d6000803e3d6000fd5b50508a547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000178b5550505b505050505050505050505050565b600060208181529281526040808220909352908152208054600182015460028301546003909301546001600160a01b038316937401000000000000000000000000000000000000000090930460ff16929085565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038716906317ba7d85906109eb907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b158015610a0357600080fd5b505afa158015610a17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3b9190611c3b565b90506000816001600160a01b031663966917d088308787336040518663ffffffff1660e01b8152600401610a73959493929190611f32565b602060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190611c3b565b9050846001600160a01b0316816001600160a01b03161415610b13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90612155565b610b218787878787866113db565b50505050505050565b60016020526000908152604090205481565b6040517f30490e910000000000000000000000000000000000000000000000000000000081526001600160a01b038316906330490e9190610b81908490600401611f12565b600060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b5050506001600160a01b03831660009081526020818152604080832085845290915281209150815474010000000000000000000000000000000000000000900460ff166002811115610c2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610c61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906120c1565b6001600160a01b038316600090815260016020526040902054801580610cfc575060016001600160a01b03851660009081526020818152604080832085845290915290205474010000000000000000000000000000000000000000900460ff166002811115610cf9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b610d32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab906121fa565b6040517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038616906317ba7d8590610d9a907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b158015610db257600080fd5b505afa158015610dc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dea9190611c3b565b905060026040517f76225e730000000000000000000000000000000000000000000000000000000081526001600160a01b038316906376225e7390610e359089908990600401611f73565b602060405180830381600087803b158015610e4f57600080fd5b505af1158015610e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e879190611d4a565b6005811115610ebf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610ef6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab90611ff6565b6040517f593e96b60000000000000000000000000000000000000000000000000000000081526000906001600160a01b0387169063593e96b690610f5e907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b158015610f7657600080fd5b505afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190611c3b565b84546040517ff7888aec0000000000000000000000000000000000000000000000000000000081529192506001600160a01b039081169160009184169063f7888aec90611004908590620ff1ce90600401611e36565b60206040518083038186803b15801561101c57600080fd5b505afa158015611030573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110549190611d69565b6040517fe3a05cc10000000000000000000000000000000000000000000000000000000081529091506001600160a01b0384169063e3a05cc1906110a3908590620ff1ce908690600401611e7a565b600060405180830381600087803b1580156110bd57600080fd5b505af11580156110d1573d6000803e3d6000fd5b50506040517fc57d5fe90000000000000000000000000000000000000000000000000000000081526001600160a01b038616925063c57d5fe9915061112290859063b105f00d908690600401611e7a565b600060405180830381600087803b15801561113c57600080fd5b505af1158015611150573d6000803e3d6000fd5b50506040517ff7888aec000000000000000000000000000000000000000000000000000000008152600092506001600160a01b038616915063f7888aec906111a290869063b105f00d90600401611e36565b60206040518083038186803b1580156111ba57600080fd5b505afa1580156111ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f29190611d69565b6040517f575d3f730000000000000000000000000000000000000000000000000000000081529091506001600160a01b038a169063575d3f739061123a908690600401611e22565b600060405180830381600087803b15801561125457600080fd5b505af1158015611268573d6000803e3d6000fd5b505088547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001789555050436003880155600196870155505050506001600160a01b03939093166000908152602091909152604090205550565b60008115156112e78585611334565b15151461132a578115611310576112ff8360026122a1565b611309908561222f565b905061132d565b61131b8360026122a1565b61130990856123c5565b61132d565b50825b9392505050565b6000611347600260ff841685901c612415565b6001149392505050565b60008161138a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061218c565b836113975750600061132d565b838302836113a58683612247565b14156113bd576113b58382612247565b91505061132d565b836113c88487612247565b6113d29190612388565b95945050505050565b85816113e78282611930565b6040517fb73dc3890000000000000000000000000000000000000000000000000000000081526001600160a01b0389169063b73dc3899061142c908a90600401611f12565b600060405180830381600087803b15801561144657600080fd5b505af115801561145a573d6000803e3d6000fd5b50506040517f593e96b6000000000000000000000000000000000000000000000000000000008152600092506001600160a01b038b16915063593e96b6906114c6907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b1580156114de57600080fd5b505afa1580156114f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115169190611c3b565b90506000816001600160a01b031663f7888aec89620ff1ce6040518363ffffffff1660e01b815260040161154b929190611e36565b60206040518083038186803b15801561156357600080fd5b505afa158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b9190611d69565b90506000826001600160a01b031663f7888aec8a63b105f00d6040518363ffffffff1660e01b81526004016115d1929190611e36565b60206040518083038186803b1580156115e957600080fd5b505afa1580156115fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116219190611d69565b9050600061162f828461222f565b11611666576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061208a565b6040805160a081019091526001600160a01b038a16815260208101600081526020016000815260200160008152602001438152506000808d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff0219169083600281111561174d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550604082810151600183015560608301516002830155608090920151600390910155517f17ba7d850000000000000000000000000000000000000000000000000000000081526000906001600160a01b038d16906317ba7d85906117d9907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611f12565b60206040518083038186803b1580156117f157600080fd5b505afa158015611805573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118299190611c3b565b6040517f2b0974d00000000000000000000000000000000000000000000000000000000081529091506001600160a01b03821690632b0974d090611877908f908f908e908e90600401611f8c565b600060405180830381600087803b15801561189157600080fd5b505af11580156118a5573d6000803e3d6000fd5b50506040517f815a2bf40000000000000000000000000000000000000000000000000000000081526001600160a01b038f16925063815a2bf491506118f0908e908b90600401611f1b565b600060405180830381600087803b15801561190a57600080fd5b505af115801561191e573d6000803e3d6000fd5b50505050505050505050505050505050565b6040517ffefbd8750000000000000000000000000000000000000000000000000000000081526000906001600160a01b0384169063fefbd87590611998907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611f12565b60206040518083038186803b1580156119b057600080fd5b505afa1580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e89190611c3b565b90506001600160a01b03811615611b4f576040517fc89bb8ba0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063c89bb8ba90611a41908690600401611e22565b60206040518083038186803b158015611a5957600080fd5b505afa158015611a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a919190611c3b565b90506000826001600160a01b031663f7888aec83620ff1ce6040518363ffffffff1660e01b8152600401611ac6929190611e36565b60206040518083038186803b158015611ade57600080fd5b505afa158015611af2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b169190611d69565b11611b4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061211e565b505b6040517f45ecd02f0000000000000000000000000000000000000000000000000000000081526001600160a01b038416906345ecd02f90611b94908590600401611e22565b60206040518083038186803b158015611bac57600080fd5b505afa158015611bc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be49190611c82565b611c1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ab9061211e565b505050565b600060208284031215611c30578081fd5b813561132d81612487565b600060208284031215611c4c578081fd5b815161132d81612487565b60008060408385031215611c69578081fd5b8235611c7481612487565b946020939093013593505050565b600060208284031215611c93578081fd5b815161132d8161249f565b60008060408385031215611c69578182fd5b600080600080600060808688031215611cc7578081fd5b8535611cd281612487565b9450602086013593506040860135611ce981612487565b9250606086013567ffffffffffffffff80821115611d05578283fd5b818801915088601f830112611d18578283fd5b813581811115611d26578384fd5b896020828501011115611d37578384fd5b9699959850939650602001949392505050565b600060208284031215611d5b578081fd5b81516006811061132d578182fd5b600060208284031215611d7a578081fd5b5051919050565b60008060408385031215611d93578182fd5b50508035926020909101359150565b600080600060608486031215611db6578283fd5b83359250602084013591506040840135611dcf8161249f565b809150509250925092565b600082845282826020860137806020848601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011685010190509392505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b038616815260a0810160038610611ee5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8560208301528460408301528360608301528260808301529695505050505050565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b60006001600160a01b038088168352808716602084015260806040840152611f5e608084018688611dda565b91508084166060840152509695505050505050565b6001600160a01b03929092168252602082015260400190565b60006001600160a01b038616825284602083015260606040830152611fb5606083018486611dda565b9695505050505050565b6020808252600f908201527f746f496e64657820746f6f206c6f770000000000000000000000000000000000604082015260600190565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b60208082526026908201527f6775696c64206b69636b20636f6d706c65746564206f7220646f6573206e6f7460408201527f2065786973740000000000000000000000000000000000000000000000000000606082015260800190565b60208082526011908201527f6e6f20736861726573206f72206c6f6f74000000000000000000000000000000604082015260600190565b6020808252602b908201527f6775696c64206b69636b20616c726561647920636f6d706c65746564206f722060408201527f696e2070726f6772657373000000000000000000000000000000000000000000606082015260800190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526019908201527f796f752063616e206e6f74206b69636b20796f757273656c6600000000000000604082015260600190565b6020808252601c908201527f746f74616c207368617265732073686f756c64206e6f74206265203000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b6020808252818101527f616e6f74686572206b69636b20616c726561647920696e2070726f6772657373604082015260600190565b6000821982111561224257612242612429565b500190565b60008261225657612256612458565b500490565b80825b600180861161226d5750612298565b81870482111561227f5761227f612429565b8086161561228c57918102915b9490941c93800261225e565b94509492505050565b600061132d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826122d85750600161132d565b816122e55750600061132d565b81600181146122fb576002811461230557612332565b600191505061132d565b60ff84111561231657612316612429565b6001841b91508482111561232c5761232c612429565b5061132d565b5060208310610133831016604e8410600b8410161715612360575081810a8381111561132557611325612429565b61236d848484600161225b565b80860482111561237f5761237f612429565b02949350505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156123c0576123c0612429565b500290565b6000828210156123d7576123d7612429565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561240e5761240e612429565b5060010190565b60008261242457612424612458565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b038116811461249c57600080fd5b50565b801515811461249c57600080fdfea264697066735822122006c5a7ea6393d8cb4baedfacd7b5a42ea1eea791137f9fbeae12ef38b122e32064736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15586:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:34",
                "type": ""
              }
            ],
            "src": "14:259:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "359:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "405:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "414:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "422:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "407:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "407:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "407:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "380:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "389:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "376:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "376:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "401:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "372:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "372:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "369:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "440:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "459:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "453:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "453:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "444:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "505:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "478:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "478:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "478:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "520:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "530:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "520:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:34",
                "type": ""
              }
            ],
            "src": "278:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "633:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "679:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "688:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "696:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "681:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "681:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "681:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "654:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "663:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "650:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "650:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "675:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "646:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "643:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "740:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "727:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "718:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "786:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "759:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "759:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "759:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "801:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "811:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "825:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "852:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "863:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "848:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "848:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "835:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "591:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "602:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "614:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "622:6:34",
                "type": ""
              }
            ],
            "src": "546:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "956:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1002:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1011:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1004:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1004:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1004:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "977:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "986:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "973:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "973:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "969:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "966:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1037:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1050:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1041:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1099:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1075:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1075:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1124:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1114:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "933:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:34",
                "type": ""
              }
            ],
            "src": "878:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1293:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1302:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1310:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1295:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1295:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1295:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1268:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1260:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1257:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1328:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1354:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1341:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1332:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1400:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1373:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1415:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1425:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1415:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1439:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1466:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1477:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1462:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1462:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1449:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1449:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1439:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1205:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1216:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1228:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1236:6:34",
                "type": ""
              }
            ],
            "src": "1140:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1652:850:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1699:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1708:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1716:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1701:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1701:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1701:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1673:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1682:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1669:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1694:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1665:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1665:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1662:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1734:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1760:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1747:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1747:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1738:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1806:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1779:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1779:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1779:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1821:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1831:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1821:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1845:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1855:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1896:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1928:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1939:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1924:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1924:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1911:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1911:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1900:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1979:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1952:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1952:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:17:34",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2006:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1996:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2022:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2053:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2064:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2036:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2036:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2026:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2077:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2087:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2081:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2132:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2141:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2149:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2134:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2134:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2134:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2120:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2128:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2117:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2117:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2114:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2167:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2181:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2192:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2177:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2177:22:34"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2171:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2247:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2256:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2264:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2249:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2249:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2249:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2226:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2230:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2222:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2222:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2237:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2218:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2218:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2211:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2211:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2208:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2282:30:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2309:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2296:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:16:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2286:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2339:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2348:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2356:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2341:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2341:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2341:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2327:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2335:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2324:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2324:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2321:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2415:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2424:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2432:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2417:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2417:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2417:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2388:2:34"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2392:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2384:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2384:15:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2401:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2380:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2380:24:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2406:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2377:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:37:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2374:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2450:21:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2464:2:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2468:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2460:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:11:34"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2450:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2480:16:34",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2490:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2480:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_addresst_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1586:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1597:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1609:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1617:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1625:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1633:6:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1641:6:34",
                "type": ""
              }
            ],
            "src": "1492:1010:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2614:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2660:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2669:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2677:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2662:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2662:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2662:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2635:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2644:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2631:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2656:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2627:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2627:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2624:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2695:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2721:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2708:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2699:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2767:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2740:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2740:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2740:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2782:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2792:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2782:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2806:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2833:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2844:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2816:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2816:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2806:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2572:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2583:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2595:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2603:6:34",
                "type": ""
              }
            ],
            "src": "2507:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2956:199:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3002:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3011:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3019:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3004:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3004:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3004:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2977:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2986:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2973:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2973:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2998:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2969:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2969:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2966:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3037:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3056:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3050:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3041:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3099:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3108:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3116:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3101:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3101:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3101:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3088:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3095:1:34",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3085:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3085:12:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:20:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3075:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3134:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3144:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3134:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2922:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2933:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2945:6:34",
                "type": ""
              }
            ],
            "src": "2859:296:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3241:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3287:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3296:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3304:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3289:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3289:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3289:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3262:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3271:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3258:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3258:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3283:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3254:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3251:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3322:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3338:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3332:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3332:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3322:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3207:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3218:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3230:6:34",
                "type": ""
              }
            ],
            "src": "3160:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3446:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3492:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3501:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3509:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3494:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3494:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3494:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3467:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3476:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3463:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3463:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3488:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3459:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3459:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3456:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3527:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3550:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3537:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3537:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3527:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3569:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3596:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3607:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3592:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3592:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3579:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3579:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3569:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3404:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3415:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3427:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3435:6:34",
                "type": ""
              }
            ],
            "src": "3359:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3723:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3769:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3778:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3786:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3771:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3771:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3771:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3744:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3753:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3740:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3765:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3736:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3733:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3804:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3827:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3814:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3814:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3804:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3846:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3873:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3884:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3869:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3869:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3856:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3856:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3846:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3897:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3927:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3938:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3923:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3923:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3910:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3910:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3901:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3975:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3951:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3951:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3951:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3990:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4000:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3990:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3673:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3684:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3696:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3704:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3712:6:34",
                "type": ""
              }
            ],
            "src": "3622:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4084:261:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4101:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4106:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4094:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:19:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4094:19:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4139:3:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4144:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4135:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4135:14:34"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "4151:5:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4158:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "4122:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4122:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4122:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4189:3:34"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "4194:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4185:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4185:16:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4203:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4181:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4181:27:34"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "4210:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4174:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4174:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4174:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4223:116:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4238:3:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4251:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4259:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4247:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4247:15:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4264:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4243:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4243:88:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4234:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4234:98:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4334:4:34",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4230:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:109:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4223:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "4053:5:34",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4060:6:34",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4068:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4076:3:34",
                "type": ""
              }
            ],
            "src": "4016:329:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4451:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4461:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4473:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4484:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4469:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4461:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4503:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4518:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4514:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4514:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4496:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4496:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4496:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4420:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4431:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4442:4:34",
                "type": ""
              }
            ],
            "src": "4350:226:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4710:198:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4720:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4732:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4743:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4728:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4728:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4720:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4755:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4765:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4759:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4823:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4838:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4846:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4834:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4834:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4816:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4816:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4816:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4870:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4881:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4866:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4866:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4890:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4898:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4886:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4886:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4859:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4859:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4859:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4671:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4682:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4690:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4701:4:34",
                "type": ""
              }
            ],
            "src": "4581:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5098:294:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5108:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5120:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5131:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5116:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5116:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5108:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5144:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5154:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5148:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5212:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5227:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5235:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5223:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5223:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5205:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5205:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5205:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5259:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5270:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5255:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5255:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5279:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5287:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5275:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5275:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5248:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5248:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5248:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5311:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5322:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5307:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5307:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5331:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5339:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5327:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5327:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5300:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5300:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5300:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5363:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5374:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5359:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5359:18:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5379:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5352:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5352:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5352:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5043:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5054:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5062:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5070:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5078:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5089:4:34",
                "type": ""
              }
            ],
            "src": "4913:479:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5554:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5564:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5576:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5587:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5572:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5572:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5564:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5599:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5609:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5603:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5667:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5682:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5690:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5678:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5678:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5660:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5660:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5660:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5714:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5725:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5710:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5710:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5734:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5742:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5730:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5730:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5703:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5703:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5703:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5766:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5777:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5762:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5782:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5755:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5755:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5755:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5507:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5518:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5526:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5534:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5545:4:34",
                "type": ""
              }
            ],
            "src": "5397:398:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6030:509:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6040:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6052:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6063:3:34",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6048:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6048:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6040:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6083:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6098:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6106:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6094:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6094:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6076:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6076:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6076:74:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6192:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6213:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6216:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6206:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6206:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6206:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6314:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6317:4:34",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6307:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6307:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6307:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6342:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6345:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6335:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6335:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6335:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6172:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6180:1:34",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6169:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6169:13:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6162:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:21:34"
                  },
                  "nodeType": "YulIf",
                  "src": "6159:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6380:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6391:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6376:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6376:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6396:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6369:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6369:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6369:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6423:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6434:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6419:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6419:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6439:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6412:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6412:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6412:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6466:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6477:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6462:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6462:18:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6482:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6455:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6455:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6509:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6520:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6505:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6505:19:34"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "6526:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6498:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6498:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6498:35:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_GuildKickStatus_$602_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5967:9:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "5978:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5986:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5994:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6002:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6010:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6021:4:34",
                "type": ""
              }
            ],
            "src": "5800:739:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6639:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6649:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6661:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6672:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6657:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6657:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6649:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6691:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6716:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6709:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6709:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6702:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6702:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6684:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6684:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6608:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6619:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6630:4:34",
                "type": ""
              }
            ],
            "src": "6544:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6837:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6859:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6870:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6855:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6855:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6847:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6889:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6900:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6882:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6882:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6882:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6806:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6817:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6828:4:34",
                "type": ""
              }
            ],
            "src": "6736:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7047:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7057:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7069:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7080:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7065:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7065:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7057:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7099:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7110:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7092:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7092:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7137:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7148:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7133:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7133:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7157:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7165:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7153:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7153:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7126:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7126:83:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7126:83:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7008:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7019:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7027:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7038:4:34",
                "type": ""
              }
            ],
            "src": "6918:297:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7461:336:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7471:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7481:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7475:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7539:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7554:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7562:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7550:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7550:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7532:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7532:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7532:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7586:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7597:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7582:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7582:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7606:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7614:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7602:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7602:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7575:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7575:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7575:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7638:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7649:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7634:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7634:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7654:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7627:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7627:31:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7627:31:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7667:72:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7703:6:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7711:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7723:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7734:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7719:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7719:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "7675:27:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7675:64:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7667:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7759:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7770:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7755:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7755:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "7779:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7787:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7775:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7775:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7748:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7748:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7748:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_calldata_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7398:9:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7409:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7417:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7425:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7433:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7441:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7452:4:34",
                "type": ""
              }
            ],
            "src": "7220:577:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7959:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7969:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7981:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7992:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7977:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7977:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7969:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8011:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8026:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8022:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8022:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8004:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8004:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8004:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8098:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8109:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8094:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8094:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8114:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8087:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8087:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8087:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7920:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7931:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7939:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7950:4:34",
                "type": ""
              }
            ],
            "src": "7802:325:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8345:252:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8362:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8377:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8385:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8373:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8373:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8355:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8355:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8355:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8449:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8460:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8445:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8445:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8465:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8438:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8438:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8438:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8492:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8503:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8488:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8488:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8508:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8481:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8481:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8481:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8520:71:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8556:6:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8564:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8576:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8587:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8572:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8572:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "8528:27:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8528:63:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8520:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_calldata_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8290:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8301:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8309:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8317:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8325:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8336:4:34",
                "type": ""
              }
            ],
            "src": "8132:465:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8776:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8793:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8804:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8786:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8786:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8786:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8827:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8838:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8823:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8823:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8843:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8816:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8816:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8816:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8866:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8877:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8862:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8862:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8882:17:34",
                        "type": "",
                        "value": "toIndex too low"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8855:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8855:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8855:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8909:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8921:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8932:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8917:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8917:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8909:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8753:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8767:4:34",
                "type": ""
              }
            ],
            "src": "8602:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9120:171:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9137:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9148:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9130:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9130:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9130:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9171:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9182:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9167:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9167:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9187:2:34",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9160:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9160:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9160:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9210:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9221:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9206:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9206:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9226:23:34",
                        "type": "",
                        "value": "proposal did not pass"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9199:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9199:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9199:51:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9259:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9271:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9282:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9267:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9267:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9259:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9097:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9111:4:34",
                "type": ""
              }
            ],
            "src": "8946:345:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9470:228:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9487:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9498:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9480:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9480:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9480:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9521:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9532:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9517:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9517:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9537:2:34",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9510:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9510:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9510:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9560:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9571:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9556:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9556:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9576:34:34",
                        "type": "",
                        "value": "guild kick completed or does not"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9549:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9549:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9549:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9631:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9642:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9627:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9627:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9647:8:34",
                        "type": "",
                        "value": " exist"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9620:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9620:36:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9620:36:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9665:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9677:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9688:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9673:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9673:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9665:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9447:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9461:4:34",
                "type": ""
              }
            ],
            "src": "9296:402:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9877:167:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9894:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9905:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9887:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9887:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9887:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9928:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9939:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9924:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9924:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9944:2:34",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9917:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9917:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9917:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9967:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9978:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9963:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9963:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9983:19:34",
                        "type": "",
                        "value": "no shares or loot"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9956:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9956:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9956:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10024:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10035:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10020:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10020:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10012:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9854:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9868:4:34",
                "type": ""
              }
            ],
            "src": "9703:341:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10223:233:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10240:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10251:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10233:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10233:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10233:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10274:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10285:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10270:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10270:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10290:2:34",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10263:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10263:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10263:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10313:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10324:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10309:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10309:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10329:34:34",
                        "type": "",
                        "value": "guild kick already completed or "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10302:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10302:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10302:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10384:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10395:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10380:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10380:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10400:13:34",
                        "type": "",
                        "value": "in progress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10373:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10373:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10373:41:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10423:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10435:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10446:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10431:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10431:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10423:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10200:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10214:4:34",
                "type": ""
              }
            ],
            "src": "10049:407:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10635:160:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10652:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10663:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10645:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10645:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10645:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10686:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10697:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10682:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10682:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10702:2:34",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10675:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10675:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10675:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10725:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10736:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10721:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10721:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10741:12:34",
                        "type": "",
                        "value": "onlyMember"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10714:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10714:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10763:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10775:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10786:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10771:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10763:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10612:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10626:4:34",
                "type": ""
              }
            ],
            "src": "10461:334:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10974:175:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10991:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11002:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10984:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10984:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10984:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11025:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11036:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11021:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11021:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11041:2:34",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11014:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11014:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11014:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11064:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11075:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11060:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11060:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11080:27:34",
                        "type": "",
                        "value": "you can not kick yourself"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11053:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11053:55:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11053:55:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11117:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11129:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11140:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11125:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11125:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11117:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10951:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10965:4:34",
                "type": ""
              }
            ],
            "src": "10800:349:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11328:178:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11345:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11356:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11338:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11338:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11338:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11379:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11390:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11375:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11375:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11395:2:34",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11368:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11368:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11368:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11418:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11429:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11414:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11414:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11434:30:34",
                        "type": "",
                        "value": "total shares should not be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11407:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11407:58:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11407:58:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11474:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11486:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11497:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11482:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11482:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11474:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baf5f38ee4e2efa3343bfa438294bd21cce64c3a402f1d51d035ef323e8441b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11305:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11319:4:34",
                "type": ""
              }
            ],
            "src": "11154:352:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11685:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11702:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11713:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11695:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11695:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11695:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11736:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11747:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11732:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11732:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11752:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11725:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11725:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11725:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11775:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11786:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11771:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11771:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11791:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11764:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11764:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11764:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11818:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11830:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11841:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11826:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11826:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11818:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11662:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11676:4:34",
                "type": ""
              }
            ],
            "src": "11511:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12029:182:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12046:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12057:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12039:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12039:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12039:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12080:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12091:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12076:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12076:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12096:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12069:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12069:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12069:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12119:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12130:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12115:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12115:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12135:34:34",
                        "type": "",
                        "value": "another kick already in progress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12108:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12108:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12108:62:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12179:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12191:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12202:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12187:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12187:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12179:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12006:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12020:4:34",
                "type": ""
              }
            ],
            "src": "11855:356:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12317:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12327:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12339:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12350:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12335:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12335:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12327:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12369:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12380:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12362:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12362:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12362:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12286:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12297:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12308:4:34",
                "type": ""
              }
            ],
            "src": "12216:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12446:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12473:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12475:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12475:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12475:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12462:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12469:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12465:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12465:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12459:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12459:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12456:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12504:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12515:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12518:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12511:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12511:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12504:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12429:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12432:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12438:3:34",
                "type": ""
              }
            ],
            "src": "12398:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12577:74:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12600:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "12602:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12602:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12602:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12597:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12590:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12590:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12587:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12631:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12640:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12643:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "12636:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12631:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12562:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12565:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "12571:1:34",
                "type": ""
              }
            ],
            "src": "12531:120:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12733:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12743:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "12752:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "12743:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12767:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "12775:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "12767:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12814:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "12828:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "12838:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "12832:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12880:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "12882:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "12865:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12875:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "12862:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12862:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "12855:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12855:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "12852:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12930:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "12932:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12932:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12932:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "12908:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "12918:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "12923:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "12914:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12914:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "12905:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12905:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "12902:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12986:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12988:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "13001:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "13008:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "12997:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12997:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12988:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "12972:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "12982:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "12968:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12968:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "12965:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13028:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "13040:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "13046:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "13036:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13036:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "13028:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13064:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "13080:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "13084:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "13076:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13076:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "13064:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "12797:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12802:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12793:3:34",
                    "statements": []
                  },
                  "src": "12789:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "12684:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "12692:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "12699:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "12709:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "12717:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "12724:4:34",
                "type": ""
              }
            ],
            "src": "12656:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13184:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13194:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13224:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "13230:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13240:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "13203:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13203:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "13194:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "13155:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "13161:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "13174:5:34",
                "type": ""
              }
            ],
            "src": "13114:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13382:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13420:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13434:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13443:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13434:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13457:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "13402:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13395:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13395:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "13392:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13505:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13519:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13528:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13519:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "13542:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "13491:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "13484:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13484:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "13481:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13593:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "13607:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13616:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "13607:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "13630:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "13586:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13591:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13661:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13696:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "13698:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13698:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13698:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "13681:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13691:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "13678:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13678:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "13675:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "13731:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "13744:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13754:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "13740:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13740:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "13731:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "13787:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "13789:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13789:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "13789:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "13775:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "13782:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "13772:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13772:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "13769:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "13822:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "13654:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13659:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "13573:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "13566:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13935:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13949:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "13962:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "13968:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "13958:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13958:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "13949:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14008:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "14010:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14010:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14010:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "13996:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "14003:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "13993:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13993:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "13990:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "14043:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "13859:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13865:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13856:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13856:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "13873:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13883:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13870:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13870:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13852:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13852:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "13896:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13902:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13893:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13893:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "13911:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13921:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "13908:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13908:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13889:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13889:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "13849:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13849:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "13846:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14067:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14109:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "14112:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "14118:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "14128:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "14090:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14090:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "14071:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "14080:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14174:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14176:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14176:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14176:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "14147:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "14160:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "14165:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "14156:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14156:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14144:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14144:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "14141:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14205:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "14218:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "14227:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14214:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14214:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "14205:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "13348:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "13354:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "13364:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "13372:5:34",
                "type": ""
              }
            ],
            "src": "13318:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14297:176:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14416:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14418:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14418:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14418:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14328:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14321:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14321:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14314:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14314:17:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14336:1:34"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14343:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14411:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14339:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14339:74:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14333:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14333:81:34"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14310:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14310:105:34"
                  },
                  "nodeType": "YulIf",
                  "src": "14307:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14447:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14462:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14465:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14458:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14458:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14447:7:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14276:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14279:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14285:7:34",
                "type": ""
              }
            ],
            "src": "14245:228:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14527:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14549:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14551:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14551:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14551:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14543:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14546:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14540:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14540:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "14537:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14580:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14592:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14595:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14588:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14588:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14580:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14509:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14512:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14518:4:34",
                "type": ""
              }
            ],
            "src": "14478:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14655:148:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14746:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14748:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14748:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14748:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14671:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14678:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14668:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14668:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "14665:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14777:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14788:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14795:1:34",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14784:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14784:13:34"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14777:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14637:5:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14647:3:34",
                "type": ""
              }
            ],
            "src": "14608:195:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14846:74:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14869:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "14871:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14871:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14871:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14866:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14859:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14859:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "14856:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14900:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14909:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14912:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "14905:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14905:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14900:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14831:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14834:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14840:1:34",
                "type": ""
              }
            ],
            "src": "14808:112:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14957:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14974:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14977:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14967:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14967:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14967:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15071:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15074:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15064:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15064:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15064:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15095:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15098:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15088:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15088:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15088:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "14925:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15146:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15163:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15166:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15156:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15156:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15156:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15260:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15263:4:34",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15253:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15253:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15253:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15284:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15287:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15277:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15277:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15277:15:34"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "15114:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15350:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15437:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15446:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15449:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15439:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15439:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15439:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15373:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15384:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15391:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "15380:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15380:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15370:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15370:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15363:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15363:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "15360:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15339:5:34",
                "type": ""
              }
            ],
            "src": "15303:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15508:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15562:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15571:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15574:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15564:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15564:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15564:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15531:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15552:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15545:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15545:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "15538:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15538:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15528:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15528:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15521:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15521:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "15518:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15497:5:34",
                "type": ""
              }
            ],
            "src": "15464:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value4, value4) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value4, value4) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value4, value4) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_t_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), end)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_enum$_GuildKickStatus_$602_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        if iszero(lt(value1, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_calldata_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes_calldata(value2, value3, add(headStart, 128))\n        mstore(add(headStart, 96), and(value4, _1))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_calldata_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_bytes_calldata(value2, value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"toIndex too low\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"proposal did not pass\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"guild kick completed or does not\")\n        mstore(add(headStart, 96), \" exist\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"no shares or loot\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"guild kick already completed or \")\n        mstore(add(headStart, 96), \"in progress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"onlyMember\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"you can not kick yourself\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baf5f38ee4e2efa3343bfa438294bd21cce64c3a402f1d51d035ef323e8441b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"total shares should not be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"another kick already in progress\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1394:11290:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1394:11290:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:25;;;;;;;;;;:::i;:::-;;;;;;;;1394:11290;;;;9128:3554;;;;;;;;;;-1:-1:-1;9128:3554:3;;;;;:::i;:::-;;:::i;:::-;;2129:62;;;;;;;;;;-1:-1:-1;2129:62:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3094:689;;;;;;;;;;-1:-1:-1;3094:689:3;;;;;:::i;:::-;;:::i;2302:47::-;;;;;;;;;;-1:-1:-1;2302:47:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6211:2253::-;;;;;;;;;;-1:-1:-1;6211:2253:3;;;;;:::i;:::-;;:::i;2421:363:20:-;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;2287:128::-;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9128:3554:3:-;-1:-1:-1;;;;;9394:26:3;;9366:25;9394:26;;;:12;:26;;;;;;;;;9455:19;;;;;;:38;;;;;;;;;9529:16;;;;9455:38;;9576:11;;;;;;;:42;;;;;;;;;;;;;;;;;9555:127;;;;;;;;;;;;:::i;:::-;9774:17;;;;9809:23;;;;9801:51;;;;;;;;;;;;:::i;:::-;9932:29;;;;;9897:18;;-1:-1:-1;;;;;9932:23:3;;;;;:29;;1763:17:20;;9932:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9897:65;;10012:16;10031:4;-1:-1:-1;;;;;10031:13:3;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10012:34;-1:-1:-1;10075:7:3;10096:19;;;10092:69;;;-1:-1:-1;10142:8:3;10092:69;10587:56;;;;;10401:33;;-1:-1:-1;;;;;10587:19:3;;;;;:56;;2024:6:20;;2200:10;;10627:15:3;;10587:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10519:49;;;;;-1:-1:-1;;;;;10519:19:3;;;;;:49;;2024:6:20;;2135:10;;10552:15:3;;10519:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10449:51;;;;;-1:-1:-1;;;;;10449:19:3;;;;;:51;;2024:6:20;;2080:7;;10484:15:3;;10449:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:119;;;;:::i;:::-;:194;;;;:::i;:::-;10734:17;;;10840;;;10401:242;;-1:-1:-1;;;;;;10734:17:3;;10982:12;10965:1276;11000:8;10996:1;:12;10965:1276;;;11045:16;;;;;11029:13;;-1:-1:-1;;;;;11045:13:3;;;;;:16;;11059:1;;11045:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11029:32;;11277:24;11320:198;11362:4;-1:-1:-1;;;;;11362:19:3;;1969:6:20;11389:5:3;11396:15;11362:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11434:19;11475:25;11320:20;:198::i;:::-;11277:241;-1:-1:-1;11627:20:3;;11623:608;;12051:165;;;;;-1:-1:-1;;;;;12051:21:3;;;;;:165;;1969:6:20;;12121:12:3;;12155:5;;12182:16;;12051:165;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11623:608;10965:1276;;11010:3;;;;;:::i;:::-;;;;10965:1276;;;-1:-1:-1;12251:17:3;;;:28;;;12293:20;;;12289:387;;;12434:65;;;;;-1:-1:-1;;;;;12434:24:3;;;;;:65;;12459:12;;2135:10:20;;12479:19:3;;12434:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12587:30:3;;;;;-1:-1:-1;;;;;12587:16:3;;;-1:-1:-1;12587:16:3;;-1:-1:-1;12587:30:3;;12604:12;;12587:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12631:34:3;;;;;;;;-1:-1:-1;;12289:387:3;9128:3554;;;;;;;;;;;;:::o;2129:62::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2129:62:3;;;;;;;;;;;;:::o;3094:689::-;3301:29;;;;;3268:22;;-1:-1:-1;;;;;3301:21:3;;;;;:29;;1219:19:20;;3301:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3268:63;;3341:19;3375:14;-1:-1:-1;;;;;3375:31:3;;3424:3;3453:4;3476;;3498:10;3375:147;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3341:181;;3655:12;-1:-1:-1;;;;;3640:27:3;:11;-1:-1:-1;;;;;3640:27:3;;;3632:65;;;;;;;;;;;;:::i;:::-;3707:69;3727:3;3732:10;3744:12;3758:4;;3764:11;3707:19;:69::i;:::-;3094:689;;;;;;;:::o;2302:47::-;;;;;;;;;;;;;:::o;6211:2253::-;6321:31;;;;;-1:-1:-1;;;;;6321:19:3;;;;;:31;;6341:10;;6321:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;6455:19:3;;6430:22;6455:19;;;;;;;;;;;:31;;;;;;;;;-1:-1:-1;6517:11:3;;;;;;;:42;;;;;;;;;;;;;;;;;6496:132;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6762:26:3;;6734:25;6762:26;;;:12;:26;;;;;;6819:31;;;:143;;-1:-1:-1;6935:27:3;-1:-1:-1;;;;;6870:19:3;;:5;:19;;;;;;;;;;;:38;;;;;;;;:45;;;;;;:92;;;;;;;;;;;;;;;;;;6819:143;6798:222;;;;;;;;;;;;:::i;:::-;7110:29;;;;;7077:22;;-1:-1:-1;;;;;7110:21:3;;;;;:29;;1219:19:20;;7110:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7077:63;-1:-1:-1;7233:24:3;7171:42;;;;;-1:-1:-1;;;;;7171:25:3;;;;;:42;;7197:3;;7202:10;;7171:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:86;;;;;;;;;;;;;;;;;7150:154;;;;;;;;;;;;:::i;:::-;7410:29;;;;;7375:18;;-1:-1:-1;;;;;7410:23:3;;;;;:29;;1763:17:20;;7410:29:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7473:17;;7574:36;;;;;7375:65;;-1:-1:-1;;;;;;7473:17:3;;;;7450:20;;7574:14;;;;;:36;;7473:17;;2080:7:20;;7574:36:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7701:60;;;;;7551:59;;-1:-1:-1;;;;;;7701:24:3;;;;;:60;;7726:12;;2080:7:20;;7551:59:3;;7701:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7924:51:3;;;;;-1:-1:-1;;;;;7924:17:3;;;-1:-1:-1;7924:17:3;;-1:-1:-1;7924:51:3;;7942:12;;2135:10:20;;7962:12:3;;7924:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8009:34:3;;;;;7986:20;;-1:-1:-1;;;;;;8009:14:3;;;-1:-1:-1;8009:14:3;;:34;;8024:12;;2135:10:20;;8009:34:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8131:28;;;;;7986:57;;-1:-1:-1;;;;;;8131:14:3;;;;;:28;;8146:12;;8131:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8222:41:3;;;;;;;;-1:-1:-1;;8293:12:3;8274:16;;;:31;-1:-1:-1;8315:17:3;;;:32;-1:-1:-1;;;;;;;;;8418:26:3;;;;-1:-1:-1;8418:26:3;;;;;;;;;;;:39;-1:-1:-1;6211:2253:3:o;2421:363:20:-;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;2287:128::-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;1268:531:29:-;1390:7;1417:17;1409:58;;;;;;;;;;;;:::i;:::-;1481:12;1477:51;;-1:-1:-1;1516:1:29;1509:8;;1477:51;1590:16;;;1600:6;1666:14;1590:7;:16;1666:14;:::i;:::-;:24;1662:81;;;1713:19;1720:12;1713:4;:19;:::i;:::-;1706:26;;;;;1662:81;1786:6;1760:22;1770:12;1760:7;:22;:::i;:::-;1759:33;;;;:::i;:::-;1752:40;1268:531;-1:-1:-1;;;;;1268:531:29:o;4355:1315:3:-;4552:3;4557:11;1506:23:27;1518:3;1523:5;1506:11;:23::i;:::-;4622:30:3::1;::::0;;;;-1:-1:-1;;;;;4622:18:3;::::1;::::0;::::1;::::0;:30:::1;::::0;4641:10;;4622:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4698:29:3::1;::::0;;;;4663:18:::1;::::0;-1:-1:-1;;;;;;4698:23:3;::::1;::::0;-1:-1:-1;4698:23:3::1;::::0;:29:::1;::::0;1763:17:20::1;::::0;4698:29:3::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4663:65;;4789:20;4812:4;-1:-1:-1::0;;;;;4812:14:3::1;;4827:12;2080:7:20;4812:36:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4789:59;;4908:18;4929:4;-1:-1:-1::0;;;;;4929:14:3::1;;4944:12;2135:10:20;4929:34:3;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4908:55:::0;-1:-1:-1;5085:1:3::1;5057:25;4908:55:::0;5057:12;:25:::1;:::i;:::-;:29;5049:59;;;;;;;;;;;;:::i;:::-;5208:142;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;5208:142:3;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;5208:142:3::1;;;;5298:1;5208:142;;;;5313:1;5208:142;;;;5328:12;5208:142;;::::0;5174:5:::1;:19:::0;5188:3:::1;-1:-1:-1::0;;;;;5174:19:3::1;-1:-1:-1::0;;;;;5174:19:3::1;;;;;;;;;;;;:31;5194:10;5174:31;;;;;;;;;;;:176;;;;;;;;;;;;;-1:-1:-1::0;;;;;5174:176:3::1;;;;;-1:-1:-1::0;;;;;5174:176:3::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;5174:176:3::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5460:29;;;;-1:-1:-1;;;;;;;5460:21:3;::::1;::::0;::::1;::::0;:29:::1;::::0;1219:19:20::1;::::0;5460:29:3::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5500:63;::::0;;;;5427;;-1:-1:-1;;;;;;5500:40:3;::::1;::::0;::::1;::::0;:63:::1;::::0;5541:3;;5546:10;;5558:4;;;;5500:63:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5619:44:3::1;::::0;;;;-1:-1:-1;;;;;5619:19:3;::::1;::::0;-1:-1:-1;5619:19:3::1;::::0;-1:-1:-1;5619:44:3::1;::::0;5639:10;;5651:11;;5619:44:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1539:1:27;;;;4355:1315:3::0;;;;;;;;:::o;1553:448:27:-;1652:20;;;;;1630:19;;-1:-1:-1;;;;;1652:14:27;;;;;:20;;1763:17:20;;1652:20:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1630:42;-1:-1:-1;;;;;;1686:27:27;;;1682:255;;1750:32;;;;;1729:18;;-1:-1:-1;;;;;1750:25:27;;;;;:32;;1776:5;;1750:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1729:53;;1881:1;1836:11;-1:-1:-1;;;;;1822:36:27;;1859:10;2080:7:20;1822:56:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;1797:129;;;;;;;;;;;;:::i;:::-;1682:255;;1954:25;;;;;-1:-1:-1;;;;;1954:18:27;;;;;:25;;1973:5;;1954:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1946:48;;;;;;;;;;;;:::i;:::-;1553:448;;;:::o;14:259:34:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:263::-;;401:2;389:9;380:7;376:23;372:32;369:2;;;422:6;414;407:22;369:2;459:9;453:16;478:33;505:5;478:33;:::i;546:327::-;;;675:2;663:9;654:7;650:23;646:32;643:2;;;696:6;688;681:22;643:2;740:9;727:23;759:33;786:5;759:33;:::i;:::-;811:5;863:2;848:18;;;;835:32;;-1:-1:-1;;;633:240:34:o;878:257::-;;998:2;986:9;977:7;973:23;969:32;966:2;;;1019:6;1011;1004:22;966:2;1056:9;1050:16;1075:30;1099:5;1075:30;:::i;1140:347::-;;;1289:2;1277:9;1268:7;1264:23;1260:32;1257:2;;;1310:6;1302;1295:22;1492:1010;;;;;;1694:3;1682:9;1673:7;1669:23;1665:33;1662:2;;;1716:6;1708;1701:22;1662:2;1760:9;1747:23;1779:33;1806:5;1779:33;:::i;:::-;1831:5;-1:-1:-1;1883:2:34;1868:18;;1855:32;;-1:-1:-1;1939:2:34;1924:18;;1911:32;1952:35;1911:32;1952:35;:::i;:::-;2006:7;-1:-1:-1;2064:2:34;2049:18;;2036:32;2087:18;2117:14;;;2114:2;;;2149:6;2141;2134:22;2114:2;2192:6;2181:9;2177:22;2167:32;;2237:7;2230:4;2226:2;2222:13;2218:27;2208:2;;2264:6;2256;2249:22;2208:2;2309;2296:16;2335:2;2327:6;2324:14;2321:2;;;2356:6;2348;2341:22;2321:2;2406:7;2401:2;2392:6;2388:2;2384:15;2380:24;2377:37;2374:2;;;2432:6;2424;2417:22;2374:2;1652:850;;;;-1:-1:-1;1652:850:34;;-1:-1:-1;2468:2:34;2460:11;;2490:6;1652:850;-1:-1:-1;;;1652:850:34:o;2859:296::-;;2998:2;2986:9;2977:7;2973:23;2969:32;2966:2;;;3019:6;3011;3004:22;2966:2;3056:9;3050:16;3095:1;3088:5;3085:12;3075:2;;3116:6;3108;3101:22;3160:194;;3283:2;3271:9;3262:7;3258:23;3254:32;3251:2;;;3304:6;3296;3289:22;3251:2;-1:-1:-1;3332:16:34;;3241:113;-1:-1:-1;3241:113:34:o;3359:258::-;;;3488:2;3476:9;3467:7;3463:23;3459:32;3456:2;;;3509:6;3501;3494:22;3456:2;-1:-1:-1;;3537:23:34;;;3607:2;3592:18;;;3579:32;;-1:-1:-1;3446:171:34:o;3622:389::-;;;;3765:2;3753:9;3744:7;3740:23;3736:32;3733:2;;;3786:6;3778;3771:22;3733:2;3827:9;3814:23;3804:33;;3884:2;3873:9;3869:18;3856:32;3846:42;;3938:2;3927:9;3923:18;3910:32;3951:30;3975:5;3951:30;:::i;:::-;4000:5;3990:15;;;3723:288;;;;;:::o;4016:329::-;;4106:6;4101:3;4094:19;4158:6;4151:5;4144:4;4139:3;4135:14;4122:43;4210:3;4203:4;4194:6;4189:3;4185:16;4181:27;4174:40;4334:4;4264:66;4259:2;4251:6;4247:15;4243:88;4238:3;4234:98;4230:109;4223:116;;4084:261;;;;;:::o;4350:226::-;-1:-1:-1;;;;;4514:55:34;;;;4496:74;;4484:2;4469:18;;4451:125::o;4581:327::-;-1:-1:-1;;;;;4834:15:34;;;4816:34;;4886:15;;4881:2;4866:18;;4859:43;4743:2;4728:18;;4710:198::o;4913:479::-;-1:-1:-1;;;;;5223:15:34;;;5205:34;;5275:15;;;5270:2;5255:18;;5248:43;5327:15;;5322:2;5307:18;;5300:43;5374:2;5359:18;;5352:34;;;;5131:3;5116:19;;5098:294::o;5397:398::-;-1:-1:-1;;;;;5678:15:34;;;5660:34;;5730:15;;;;5725:2;5710:18;;5703:43;5777:2;5762:18;;5755:34;;;;5587:2;5572:18;;5554:241::o;5800:739::-;-1:-1:-1;;;;;6094:55:34;;6076:74;;6063:3;6048:19;;6180:1;6169:13;;6159:2;;6216:77;6213:1;6206:88;6317:4;6314:1;6307:15;6345:4;6342:1;6335:15;6159:2;6396:6;6391:2;6380:9;6376:18;6369:34;6439:6;6434:2;6423:9;6419:18;6412:34;6482:6;6477:2;6466:9;6462:18;6455:34;6526:6;6520:3;6509:9;6505:19;6498:35;6030:509;;;;;;;;:::o;6544:187::-;6709:14;;6702:22;6684:41;;6672:2;6657:18;;6639:92::o;6736:177::-;6882:25;;;6870:2;6855:18;;6837:76::o;6918:297::-;7092:25;;;-1:-1:-1;;;;;7153:55:34;7148:2;7133:18;;7126:83;7080:2;7065:18;;7047:168::o;7220:577::-;;-1:-1:-1;;;;;7562:2:34;7554:6;7550:15;7539:9;7532:34;7614:2;7606:6;7602:15;7597:2;7586:9;7582:18;7575:43;7654:3;7649:2;7638:9;7634:18;7627:31;7675:64;7734:3;7723:9;7719:19;7711:6;7703;7675:64;:::i;:::-;7667:72;;7787:2;7779:6;7775:15;7770:2;7759:9;7755:18;7748:43;;7461:336;;;;;;;;:::o;7802:325::-;-1:-1:-1;;;;;8022:55:34;;;;8004:74;;8109:2;8094:18;;8087:34;7992:2;7977:18;;7959:168::o;8132:465::-;;-1:-1:-1;;;;;8377:6:34;8373:55;8362:9;8355:74;8465:6;8460:2;8449:9;8445:18;8438:34;8508:2;8503;8492:9;8488:18;8481:30;8528:63;8587:2;8576:9;8572:18;8564:6;8556;8528:63;:::i;:::-;8520:71;8345:252;-1:-1:-1;;;;;;8345:252:34:o;8602:339::-;8804:2;8786:21;;;8843:2;8823:18;;;8816:30;8882:17;8877:2;8862:18;;8855:45;8932:2;8917:18;;8776:165::o;8946:345::-;9148:2;9130:21;;;9187:2;9167:18;;;9160:30;9226:23;9221:2;9206:18;;9199:51;9282:2;9267:18;;9120:171::o;9296:402::-;9498:2;9480:21;;;9537:2;9517:18;;;9510:30;9576:34;9571:2;9556:18;;9549:62;9647:8;9642:2;9627:18;;9620:36;9688:3;9673:19;;9470:228::o;9703:341::-;9905:2;9887:21;;;9944:2;9924:18;;;9917:30;9983:19;9978:2;9963:18;;9956:47;10035:2;10020:18;;9877:167::o;10049:407::-;10251:2;10233:21;;;10290:2;10270:18;;;10263:30;10329:34;10324:2;10309:18;;10302:62;10400:13;10395:2;10380:18;;10373:41;10446:3;10431:19;;10223:233::o;10461:334::-;10663:2;10645:21;;;10702:2;10682:18;;;10675:30;10741:12;10736:2;10721:18;;10714:40;10786:2;10771:18;;10635:160::o;10800:349::-;11002:2;10984:21;;;11041:2;11021:18;;;11014:30;11080:27;11075:2;11060:18;;11053:55;11140:2;11125:18;;10974:175::o;11154:352::-;11356:2;11338:21;;;11395:2;11375:18;;;11368:30;11434;11429:2;11414:18;;11407:58;11497:2;11482:18;;11328:178::o;11511:339::-;11713:2;11695:21;;;11752:2;11732:18;;;11725:30;11791:17;11786:2;11771:18;;11764:45;11841:2;11826:18;;11685:165::o;11855:356::-;12057:2;12039:21;;;12076:18;;;12069:30;12135:34;12130:2;12115:18;;12108:62;12202:2;12187:18;;12029:182::o;12398:128::-;;12469:1;12465:6;12462:1;12459:13;12456:2;;;12475:18;;:::i;:::-;-1:-1:-1;12511:9:34;;12446:80::o;12531:120::-;;12597:1;12587:2;;12602:18;;:::i;:::-;-1:-1:-1;12636:9:34;;12577:74::o;12656:453::-;12752:6;12775:5;12789:314;12838:1;12875:2;12865:8;12862:16;12852:2;;12882:5;;;12852:2;12923:4;12918:3;12914:14;12908:4;12905:24;12902:2;;;12932:18;;:::i;:::-;12982:2;12972:8;12968:17;12965:2;;;12997:16;;;;12965:2;13076:17;;;;;13036:15;;12789:314;;;12733:376;;;;;;;:::o;13114:199::-;;13203:104;13240:66;13230:8;13224:4;13318:922;13402:8;13392:2;;-1:-1:-1;13443:1:34;13457:5;;13392:2;13491:4;13481:2;;-1:-1:-1;13528:1:34;13542:5;;13481:2;13573:4;13591:1;13586:59;;;;13659:1;13654:183;;;;13566:271;;13586:59;13616:1;13607:10;;13630:5;;;13654:183;13691:3;13681:8;13678:17;13675:2;;;13698:18;;:::i;:::-;13754:1;13744:8;13740:16;13731:25;;13782:3;13775:5;13772:14;13769:2;;;13789:18;;:::i;:::-;13822:5;;;13566:271;;13921:2;13911:8;13908:16;13902:3;13896:4;13893:13;13889:36;13883:2;13873:8;13870:16;13865:2;13859:4;13856:12;13852:35;13849:77;13846:2;;;-1:-1:-1;13958:19:34;;;13993:14;;;13990:2;;;14010:18;;:::i;13846:2::-;14090:42;14128:3;14118:8;14112:4;14109:1;14090:42;:::i;:::-;14165:6;14160:3;14156:16;14147:7;14144:29;14141:2;;;14176:18;;:::i;:::-;14214:20;;13382:858;-1:-1:-1;;;;13382:858:34:o;14245:228::-;;14411:1;14343:66;14339:74;14336:1;14333:81;14328:1;14321:9;14314:17;14310:105;14307:2;;;14418:18;;:::i;:::-;-1:-1:-1;14458:9:34;;14297:176::o;14478:125::-;;14546:1;14543;14540:8;14537:2;;;14551:18;;:::i;:::-;-1:-1:-1;14588:9:34;;14527:76::o;14608:195::-;;14678:66;14671:5;14668:77;14665:2;;;14748:18;;:::i;:::-;-1:-1:-1;14795:1:34;14784:13;;14655:148::o;14808:112::-;;14866:1;14856:2;;14871:18;;:::i;:::-;-1:-1:-1;14905:9:34;;14846:74::o;14925:184::-;14977:77;14974:1;14967:88;15074:4;15071:1;15064:15;15098:4;15095:1;15088:15;15114:184;15166:77;15163:1;15156:88;15263:4;15260:1;15253:15;15287:4;15284:1;15277:15;15303:156;-1:-1:-1;;;;;15384:5:34;15380:54;15373:5;15370:65;15360:2;;15449:1;15446;15439:12;15360:2;15350:109;:::o;15464:120::-;15552:5;15545:13;15538:21;15531:5;15528:32;15518:2;;15574:1;15571;15564:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../guards/MemberGuard.sol\";\nimport \"./interfaces/IGuildKick.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\nimport \"../helpers/FairShareHelper.sol\";\nimport \"../extensions/Bank.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract GuildKickContract is IGuildKick, DaoConstants, MemberGuard {\n    // The kick status\n    enum GuildKickStatus {NOT_STARTED, IN_PROGRESS, DONE}\n\n    // State of the guild kick proposal\n    struct GuildKick {\n        // The address of the member to kick out of the DAO.\n        address memberToKick;\n        // The kick status.\n        GuildKickStatus status;\n        // The number of shares of the member that should be burned.\n        uint256 tokensToBurn;\n        // Current iteration index to control the cached for-loop.\n        uint256 currentIndex;\n        // The block number in which the guild kick proposal has been created.\n        uint256 blockNumber;\n    }\n\n    // Keeps track of all the kicks executed per DAO.\n    mapping(address => mapping(bytes32 => GuildKick)) public kicks;\n\n    // Keeps track of the latest ongoing kick proposal per DAO to ensure only 1 kick happens at a time.\n    mapping(address => bytes32) public ongoingKicks;\n\n    /**\n     * @notice default fallback function to prevent from sending ether to the contract.\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Creates a guild kick proposal, opens it for voting, and sponsors it.\n     * @dev A member can not kick himself.\n     * @dev Only one kick per DAO can be executed at time.\n     * @dev Only members that have shares or loot can be kicked out.\n     * @dev Proposal ids can not be reused.\n     * @param dao The dao address.\n     * @param proposalId The guild kick proposal id.\n     * @param memberToKick The member address that should be kicked out of the DAO.\n     * @param data Additional information related to the kick proposal.\n     */\n    function submitKickProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        address memberToKick,\n        bytes calldata data\n    ) external override {\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        address submittedBy =\n            votingContract.getSenderAddress(\n                dao,\n                address(this),\n                data,\n                msg.sender\n            );\n        // Checks if the sender address is not the same as the member to kick to prevent auto kick.\n        require(submittedBy != memberToKick, \"you can not kick yourself\");\n        _submitKickProposal(dao, proposalId, memberToKick, data, submittedBy);\n    }\n\n    /**\n     * @notice Converts the shares into loot to remove the voting power, and sponsors the kick proposal.\n     * @dev Only members that have shares or loot can be kicked out.\n     * @dev Proposal ids can not be reused.\n     * @param dao The dao address.\n     * @param proposalId The guild kick proposal id.\n     * @param memberToKick The member address that should be kicked out of the DAO.\n     * @param data Additional information related to the kick proposal.\n     * @param submittedBy The address of the individual that created the kick proposal.\n     */\n    function _submitKickProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        address memberToKick,\n        bytes calldata data,\n        address submittedBy\n    ) internal onlyMember2(dao, submittedBy) {\n        // Creates a guild kick proposal.\n        dao.submitProposal(proposalId);\n\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        // Gets the number of shares of the member\n        uint256 sharesToBurn = bank.balanceOf(memberToKick, SHARES);\n\n        // Gets the number of loot of the member\n        uint256 lootToBurn = bank.balanceOf(memberToKick, LOOT);\n\n        // Checks if the member has enough shares to be converted to loot.\n        require(sharesToBurn + lootToBurn > 0, \"no shares or loot\");\n\n        // Saves the state of the guild kick proposal.\n        kicks[address(dao)][proposalId] = GuildKick(\n            memberToKick,\n            GuildKickStatus.NOT_STARTED,\n            0,\n            0,\n            block.number\n        );\n\n        // Starts the voting process for the guild kick proposal.\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        votingContract.startNewVotingForProposal(dao, proposalId, data);\n\n        // Sponsors the guild kick proposal.\n        dao.sponsorProposal(proposalId, submittedBy);\n    }\n\n    /**\n     * @notice Process the guild kick proposal, converts the member's shares into loot.\n     * @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n     * @dev A kick proposal must be in progress.\n     * @dev Only one kick per DAO can be executed at time.\n     * @dev Only active members can be kicked out.\n     * @dev Only proposals that passed the voting can be set to In Progress status.\n     * @param dao The dao address.\n     * @param proposalId The guild kick proposal id.\n     */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n    {\n        dao.processProposal(proposalId);\n        // Checks if the proposal exists or is not in progress yet.\n        GuildKick storage kick = kicks[address(dao)][proposalId];\n        require(\n            kick.status == GuildKickStatus.NOT_STARTED,\n            \"guild kick already completed or in progress\"\n        );\n\n        // Checks if there is an ongoing kick proposal, only one kick can be executed at time.\n        bytes32 ongoingProposalId = ongoingKicks[address(dao)];\n        require(\n            ongoingProposalId == bytes32(0) ||\n                kicks[address(dao)][ongoingProposalId].status !=\n                GuildKickStatus.IN_PROGRESS,\n            \"another kick already in progress\"\n        );\n\n        // Checks if the proposal has passed.\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        require(\n            votingContract.voteResult(dao, proposalId) ==\n                IVoting.VotingState.PASS,\n            \"proposal did not pass\"\n        );\n\n        // Calculates the total shares, loot of the member.\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        address memberToKick = kick.memberToKick;\n        // Gets the number of shares of the member\n        uint256 sharesToBurn = bank.balanceOf(memberToKick, SHARES);\n        // Burns / subtracts from member's balance the number of shares to burn.\n        bank.subtractFromBalance(memberToKick, SHARES, sharesToBurn);\n        // Burns / subtracts from member's balance the number of loot to burn.\n        // bank.subtractFromBalance(memberToKick, LOOT, kick.lootToBurn);\n        bank.addToBalance(memberToKick, LOOT, sharesToBurn);\n\n        uint256 tokensToBurn = bank.balanceOf(memberToKick, LOOT);\n\n        // Member is sent to jail to prevent any actions in the DAO anymore.\n        dao.jailMember(memberToKick);\n\n        // Set the kick proposal to done/completed.\n        kick.status = GuildKickStatus.IN_PROGRESS;\n\n        kick.blockNumber = block.number;\n        kick.tokensToBurn = tokensToBurn;\n\n        // Set the current kick proposal to done/completed.\n        ongoingKicks[address(dao)] = proposalId;\n    }\n\n    /**\n     * @notice Transfers the funds from the Guild account to the kicked member account.\n     * @notice The amount of funds is caculated using the historical balance when the proposal was created.\n     * @notice loot\n     * @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n     * @dev A kick proposal must be in progress.\n     * @dev Only one kick per DAO can be executed at time.\n     * @dev Only active members can be kicked out.\n     * @dev Only proposals that passed the voting can be completed.\n     * @param dao The dao address.\n     * @param toIndex The index to control the cached for-loop.\n     */\n    function rageKick(DaoRegistry dao, uint256 toIndex) external override {\n        //should be open it so the kicked member is able to call this function?\n        // Checks if the kick proposal does not exist or is not completed yet\n        bytes32 ongoingProposalId = ongoingKicks[address(dao)];\n        GuildKick storage kick = kicks[address(dao)][ongoingProposalId];\n        uint256 kickBlockNumber = kick.blockNumber;\n        require(\n            kick.status == GuildKickStatus.IN_PROGRESS,\n            \"guild kick completed or does not exist\"\n        );\n\n        // Check if the given index was already processed\n        uint256 currentIndex = kick.currentIndex;\n        require(currentIndex <= toIndex, \"toIndex too low\");\n\n        // Get the bank extension\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n\n        // Set the max index supported\n        uint256 nbTokens = bank.nbTokens();\n        uint256 maxIndex = toIndex;\n        if (maxIndex > nbTokens) {\n            maxIndex = nbTokens;\n        }\n\n        // Calculates the total shares, loot and locked loot before any internal transfers\n        // it considers the locked loot to be able to calculate the fair amount to ragequit,\n        // but locked loot can not be burned.\n        uint256 initialTotalSharesAndLoot =\n            bank.getPriorAmount(TOTAL, SHARES, kickBlockNumber) +\n                bank.getPriorAmount(TOTAL, LOOT, kickBlockNumber) +\n                bank.getPriorAmount(TOTAL, LOCKED_LOOT, kickBlockNumber);\n\n        // Get the member address to kick out of the DAO\n        address kickedMember = kick.memberToKick;\n        // Get amount of shares and loot to burn\n        uint256 sharesAndLootToBurn = kick.tokensToBurn;\n\n        // Transfers the funds from the internal Guild account to the internal member's account.\n        for (uint256 i = currentIndex; i < maxIndex; i++) {\n            address token = bank.getToken(i);\n            // Calculates the fair amount of funds to ragequit based on the token, shares and loot.\n            // It takes into account the historical guild balance when the kick proposal was created.\n            uint256 amountToRagequit =\n                FairShareHelper.calc(\n                    bank.getPriorAmount(GUILD, token, kickBlockNumber),\n                    sharesAndLootToBurn,\n                    initialTotalSharesAndLoot\n                );\n\n            // Ony execute the internal transfer if the user has enough funds to receive.\n            if (amountToRagequit > 0) {\n                // gas optimization to allow a higher maximum token limit\n                // deliberately not using safemath here to keep overflows from preventing the function execution\n                // (which would break ragekicks) if a token overflows,\n                // it is because the supply was artificially inflated to oblivion, so we probably don\"t care about it anyways\n                bank.internalTransfer(\n                    GUILD,\n                    kickedMember,\n                    token,\n                    amountToRagequit\n                );\n            }\n        }\n\n        kick.currentIndex = maxIndex;\n        if (maxIndex == nbTokens) {\n            // Burns the Loot+Shares, because the Shares were converted to Loot during the kick process.\n            bank.subtractFromBalance(kickedMember, LOOT, sharesAndLootToBurn);\n            // Unjail the member once the internal transfer is completed.\n            dao.unjailMember(kickedMember);\n            kick.status = GuildKickStatus.DONE;\n        }\n    }\n}\n",
  "sourcePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/GuildKick.sol",
  "ast": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/GuildKick.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FairShareHelper": [
        9783
      ],
      "GuildKickContract": [
        1168
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IGuildKick": [
        3579
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 1169,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 584,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 585,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 6255,
        "src": "58:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 586,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 8219,
        "src": "93:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 587,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9429,
        "src": "127:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IGuildKick.sol",
        "file": "./interfaces/IGuildKick.sol",
        "id": 588,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 3580,
        "src": "163:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 589,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 3782,
        "src": "201:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol",
        "file": "../helpers/FairShareHelper.sol",
        "id": 590,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9784,
        "src": "246:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 591,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9182,
        "src": "287:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 593,
              "name": "IGuildKick",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3579,
              "src": "1424:10:3"
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "1424:10:3"
          },
          {
            "baseName": {
              "id": 595,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1436:12:3"
            },
            "id": 596,
            "nodeType": "InheritanceSpecifier",
            "src": "1436:12:3"
          },
          {
            "baseName": {
              "id": 597,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1450:11:3"
            },
            "id": 598,
            "nodeType": "InheritanceSpecifier",
            "src": "1450:11:3"
          }
        ],
        "contractDependencies": [
          3579,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 592,
          "nodeType": "StructuredDocumentation",
          "src": "321:1071:3",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 1168,
        "linearizedBaseContracts": [
          1168,
          9428,
          6254,
          3579
        ],
        "name": "GuildKickContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GuildKickContract.GuildKickStatus",
            "id": 602,
            "members": [
              {
                "id": 599,
                "name": "NOT_STARTED",
                "nodeType": "EnumValue",
                "src": "1513:11:3"
              },
              {
                "id": 600,
                "name": "IN_PROGRESS",
                "nodeType": "EnumValue",
                "src": "1526:11:3"
              },
              {
                "id": 601,
                "name": "DONE",
                "nodeType": "EnumValue",
                "src": "1539:4:3"
              }
            ],
            "name": "GuildKickStatus",
            "nodeType": "EnumDefinition",
            "src": "1491:53:3"
          },
          {
            "canonicalName": "GuildKickContract.GuildKick",
            "id": 614,
            "members": [
              {
                "constant": false,
                "id": 604,
                "mutability": "mutable",
                "name": "memberToKick",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1678:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 603,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1678:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 607,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1736:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                  "typeString": "enum GuildKickContract.GuildKickStatus"
                },
                "typeName": {
                  "id": 606,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 605,
                    "name": "GuildKickStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 602,
                    "src": "1736:15:3"
                  },
                  "referencedDeclaration": 602,
                  "src": "1736:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                    "typeString": "enum GuildKickContract.GuildKickStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 609,
                "mutability": "mutable",
                "name": "tokensToBurn",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1837:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 608,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1837:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 611,
                "mutability": "mutable",
                "name": "currentIndex",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1934:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 610,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1934:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 613,
                "mutability": "mutable",
                "name": "blockNumber",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "2043:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 612,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2043:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "GuildKick",
            "nodeType": "StructDefinition",
            "scope": 1168,
            "src": "1590:479:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3981538e",
            "id": 621,
            "mutability": "mutable",
            "name": "kicks",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2129:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick))"
            },
            "typeName": {
              "id": 620,
              "keyType": {
                "id": 615,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2137:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2129:49:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick))"
              },
              "valueType": {
                "id": 619,
                "keyType": {
                  "id": 616,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2156:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2148:29:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                  "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick)"
                },
                "valueType": {
                  "id": 618,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 617,
                    "name": "GuildKick",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 614,
                    "src": "2167:9:3"
                  },
                  "referencedDeclaration": 614,
                  "src": "2167:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                    "typeString": "struct GuildKickContract.GuildKick"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a634a5c",
            "id": 625,
            "mutability": "mutable",
            "name": "ongoingKicks",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2302:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 624,
              "keyType": {
                "id": 622,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2310:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2302:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 623,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2321:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "2487:42:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2504:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 629,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2497:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:25:3"
                }
              ]
            },
            "documentation": {
              "id": 626,
              "nodeType": "StructuredDocumentation",
              "src": "2356:99:3",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 634,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2467:2:3"
            },
            "returnParameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:3"
            },
            "scope": 1168,
            "src": "2460:69:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3562
            ],
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "3258:525:3",
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 687,
                      "src": "3268:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 648,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3268:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3268:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 654,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3323:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 652,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "3301:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3301:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3301:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 651,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3293:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3268:63:3"
                },
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "submittedBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 687,
                      "src": "3341:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 658,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3341:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 662,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "3424:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 665,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3453:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GuildKickContract_$1168",
                              "typeString": "contract GuildKickContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GuildKickContract_$1168",
                              "typeString": "contract GuildKickContract"
                            }
                          ],
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 667,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3476:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3498:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3498:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 660,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "3375:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "3375:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:147:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3341:181:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 673,
                          "name": "submittedBy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "3640:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 674,
                          "name": "memberToKick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "3655:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3640:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e206e6f74206b69636b20796f757273656c66",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3669:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf",
                          "typeString": "literal_string \"you can not kick yourself\""
                        },
                        "value": "you can not kick yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf",
                          "typeString": "literal_string \"you can not kick yourself\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3632:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "3727:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 681,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "3732:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 682,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "3744:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 683,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3758:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 684,
                        "name": "submittedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "3764:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 679,
                      "name": "_submitKickProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "3707:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,address,bytes calldata,address)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:69:3"
                }
              ]
            },
            "documentation": {
              "id": 635,
              "nodeType": "StructuredDocumentation",
              "src": "2535:554:3",
              "text": " @notice Creates a guild kick proposal, opens it for voting, and sponsors it.\n @dev A member can not kick himself.\n @dev Only one kick per DAO can be executed at time.\n @dev Only members that have shares or loot can be kicked out.\n @dev Proposal ids can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param memberToKick The member address that should be kicked out of the DAO.\n @param data Additional information related to the kick proposal."
            },
            "functionSelector": "7f5d336f",
            "id": 688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitKickProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3249:8:3"
            },
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3131:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 637,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 636,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3131:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3131:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3156:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "memberToKick",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3184:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3214:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3121:118:3"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:3"
            },
            "scope": 1168,
            "src": "3094:689:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "4570:1100:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "4641:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 707,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "4622:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "4622:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4622:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:30:3"
                },
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4663:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 714,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 713,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "4663:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "4663:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 719,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "4722:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 717,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "4698:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "4698:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4698:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "4684:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4663:65:3"
                },
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "sharesToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4789:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4789:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 730,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "4827:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 728,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "4841:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 725,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "4812:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "4812:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4789:59:3"
                },
                {
                  "assignments": [
                    732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 732,
                      "mutability": "mutable",
                      "name": "lootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4908:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4908:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "4944:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 736,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "4958:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 733,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "4929:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "4929:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4908:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 740,
                            "name": "sharesToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "5057:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 741,
                            "name": "lootToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "5072:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5057:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5085:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5057:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20736861726573206f72206c6f6f74",
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5088:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc",
                          "typeString": "literal_string \"no shares or loot\""
                        },
                        "value": "no shares or loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc",
                          "typeString": "literal_string \"no shares or loot\""
                        }
                      ],
                      "id": 739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5049:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:59:3"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 748,
                          "name": "kicks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "5174:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                          }
                        },
                        "id": 754,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "5188:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5180:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5180:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5180:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5174:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                          "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                        }
                      },
                      "id": 755,
                      "indexExpression": {
                        "id": 753,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5194:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5174:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                        "typeString": "struct GuildKickContract.GuildKick storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 757,
                          "name": "memberToKick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "5231:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 758,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "5257:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "5257:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5298:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5313:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 762,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5328:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5328:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 756,
                        "name": "GuildKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "5208:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GuildKick_$614_storage_ptr_$",
                          "typeString": "type(struct GuildKickContract.GuildKick storage pointer)"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5208:142:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_memory_ptr",
                        "typeString": "struct GuildKickContract.GuildKick memory"
                      }
                    },
                    "src": "5174:176:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:176:3"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "5427:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 768,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 767,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5427:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5427:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 773,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "5482:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 771,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "5460:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "5460:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5460:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 770,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5452:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5452:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5427:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "5541:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 781,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5546:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 782,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "5558:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 777,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "5500:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "5500:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5500:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 788,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5639:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 789,
                        "name": "submittedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "5651:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 785,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "5619:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "5619:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5619:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:44:3"
                }
              ]
            },
            "documentation": {
              "id": 689,
              "nodeType": "StructuredDocumentation",
              "src": "3789:561:3",
              "text": " @notice Converts the shares into loot to remove the voting power, and sponsors the kick proposal.\n @dev Only members that have shares or loot can be kicked out.\n @dev Proposal ids can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param memberToKick The member address that should be kicked out of the DAO.\n @param data Additional information related to the kick proposal.\n @param submittedBy The address of the individual that created the kick proposal."
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 703,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 692,
                    "src": "4552:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  {
                    "id": 704,
                    "name": "submittedBy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 700,
                    "src": "4557:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 705,
                "modifierName": {
                  "id": 702,
                  "name": "onlyMember2",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9375,
                  "src": "4540:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4540:29:3"
              }
            ],
            "name": "_submitKickProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4393:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 691,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 690,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "4393:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "4393:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4418:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4418:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "memberToKick",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4446:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4446:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4476:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "submittedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4505:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4383:147:3"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4570:0:3"
            },
            "scope": 1168,
            "src": "4355:1315:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3570
            ],
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "6311:2153:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 806,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "6341:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 803,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "6321:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "6321:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6321:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "6321:31:3"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "kick",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "6430:22:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick"
                      },
                      "typeName": {
                        "id": 810,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 809,
                          "name": "GuildKick",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 614,
                          "src": "6430:9:3"
                        },
                        "referencedDeclaration": 614,
                        "src": "6430:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 820,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 812,
                        "name": "kicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "6455:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                        }
                      },
                      "id": 817,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 815,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "6469:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6461:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6461:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6461:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6455:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                        "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                      }
                    },
                    "id": 819,
                    "indexExpression": {
                      "id": 818,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "6475:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6455:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6430:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                          "typeString": "enum GuildKickContract.GuildKickStatus"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 822,
                            "name": "kick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "6517:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                              "typeString": "struct GuildKickContract.GuildKick storage pointer"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 607,
                          "src": "6517:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 824,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "6532:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "6532:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "src": "6517:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6775696c64206b69636b20616c726561647920636f6d706c65746564206f7220696e2070726f6772657373",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6573:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd",
                          "typeString": "literal_string \"guild kick already completed or in progress\""
                        },
                        "value": "guild kick already completed or in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd",
                          "typeString": "literal_string \"guild kick already completed or in progress\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6496:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6496:132:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "6496:132:3"
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "ongoingProposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "6734:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 830,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6734:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "baseExpression": {
                      "id": 832,
                      "name": "ongoingKicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "6762:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 837,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 835,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 797,
                          "src": "6783:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        ],
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6775:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6775:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6775:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6762:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6734:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 840,
                            "name": "ongoingProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "6819:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6848:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6840:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 841,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6840:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6840:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6819:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 846,
                                  "name": "kicks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 621,
                                  "src": "6870:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                                    "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                                  }
                                },
                                "id": 851,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 849,
                                      "name": "dao",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 797,
                                      "src": "6884:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                        "typeString": "contract DaoRegistry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                        "typeString": "contract DaoRegistry"
                                      }
                                    ],
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6876:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 847,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6876:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6876:12:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6870:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                                  "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                                }
                              },
                              "id": 853,
                              "indexExpression": {
                                "id": 852,
                                "name": "ongoingProposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "6890:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6870:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                                "typeString": "struct GuildKickContract.GuildKick storage ref"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "6870:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 855,
                              "name": "GuildKickStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "6935:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                                "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "IN_PROGRESS",
                            "nodeType": "MemberAccess",
                            "src": "6935:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "src": "6870:92:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6819:143:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616e6f74686572206b69636b20616c726561647920696e2070726f6772657373",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6976:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04",
                          "typeString": "literal_string \"another kick already in progress\""
                        },
                        "value": "another kick already in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04",
                          "typeString": "literal_string \"another kick already in progress\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6798:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6798:222:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "6798:222:3"
                },
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7077:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 863,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 862,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "7077:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "7077:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 871,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 868,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "7132:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 866,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "7110:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "7110:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7110:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 865,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "7102:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7077:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 875,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "7197:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 876,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "7202:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 873,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "7171:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "7171:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7171:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 878,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "7233:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "7233:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "7233:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "7171:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7271:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7150:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:154:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "7150:154:3"
                },
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7375:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 885,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "7375:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "7375:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 894,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 891,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "7434:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 889,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "7410:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "7410:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7410:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 888,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "7396:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7396:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7375:65:3"
                },
                {
                  "assignments": [
                    896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 896,
                      "mutability": "mutable",
                      "name": "memberToKick",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7450:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7450:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "expression": {
                      "id": 897,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "7473:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "memberToKick",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 604,
                    "src": "7473:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7450:40:3"
                },
                {
                  "assignments": [
                    901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 901,
                      "mutability": "mutable",
                      "name": "sharesToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7551:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7551:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 904,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7589:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 905,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "7603:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 902,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7574:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "7574:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7574:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7551:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 911,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7726:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "7740:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 913,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "7748:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 908,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7701:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "7701:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "7701:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7942:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 920,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "7956:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 921,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "7962:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 916,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7924:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8801,
                      "src": "7924:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7924:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "7924:51:3"
                },
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "tokensToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7986:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7986:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 928,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8024:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 929,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "8038:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 926,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "8009:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "8009:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7986:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 935,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8146:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 932,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "8131:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "jailMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7446,
                      "src": "8131:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8131:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "8131:28:3"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 938,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8222:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 607,
                      "src": "8222:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                        "typeString": "enum GuildKickContract.GuildKickStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 941,
                        "name": "GuildKickStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "8236:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                          "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "IN_PROGRESS",
                      "nodeType": "MemberAccess",
                      "src": "8236:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                        "typeString": "enum GuildKickContract.GuildKickStatus"
                      }
                    },
                    "src": "8222:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                      "typeString": "enum GuildKickContract.GuildKickStatus"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "8222:41:3"
                },
                {
                  "expression": {
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 945,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8274:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 613,
                      "src": "8274:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 948,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "8293:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "8293:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8274:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "8274:31:3"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 952,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8315:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensToBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "8315:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 955,
                      "name": "tokensToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "8335:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8315:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:32:3"
                },
                {
                  "expression": {
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 958,
                        "name": "ongoingKicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "8418:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 963,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 961,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "8439:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8431:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8431:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8431:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8418:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 964,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "8447:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8418:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:39:3"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "5676:530:3",
              "text": " @notice Process the guild kick proposal, converts the member's shares into loot.\n @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n @dev A kick proposal must be in progress.\n @dev Only one kick per DAO can be executed at time.\n @dev Only active members can be kicked out.\n @dev Only proposals that passed the voting can be set to In Progress status.\n @param dao The dao address.\n @param proposalId The guild kick proposal id."
            },
            "functionSelector": "9573167d",
            "id": 968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6298:8:3"
            },
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "6236:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 796,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 795,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "6236:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "6236:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "6253:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6253:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6235:37:3"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6311:0:3"
            },
            "scope": 1168,
            "src": "6211:2253:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3578
            ],
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "9198:3484:3",
              "statements": [
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "ongoingProposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9366:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9366:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "baseExpression": {
                      "id": 980,
                      "name": "ongoingKicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "9394:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 985,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 983,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "9415:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        ],
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9407:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9407:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9407:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9394:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9366:54:3"
                },
                {
                  "assignments": [
                    989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "kick",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9430:22:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick"
                      },
                      "typeName": {
                        "id": 988,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 987,
                          "name": "GuildKick",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 614,
                          "src": "9430:9:3"
                        },
                        "referencedDeclaration": 614,
                        "src": "9430:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 990,
                        "name": "kicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "9455:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                        }
                      },
                      "id": 995,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9469:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9461:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9461:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9461:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9455:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                        "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                      }
                    },
                    "id": 997,
                    "indexExpression": {
                      "id": 996,
                      "name": "ongoingProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "9475:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9455:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9430:63:3"
                },
                {
                  "assignments": [
                    1000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "kickBlockNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9503:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9503:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1003,
                  "initialValue": {
                    "expression": {
                      "id": 1001,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "9529:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "blockNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 613,
                    "src": "9529:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9503:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                          "typeString": "enum GuildKickContract.GuildKickStatus"
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1005,
                            "name": "kick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "9576:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                              "typeString": "struct GuildKickContract.GuildKick storage pointer"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 607,
                          "src": "9576:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1007,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "9591:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "src": "9591:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "src": "9576:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6775696c64206b69636b20636f6d706c65746564206f7220646f6573206e6f74206578697374",
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9632:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929",
                          "typeString": "literal_string \"guild kick completed or does not exist\""
                        },
                        "value": "guild kick completed or does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929",
                          "typeString": "literal_string \"guild kick completed or does not exist\""
                        }
                      ],
                      "id": 1004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9555:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9555:127:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "9555:127:3"
                },
                {
                  "assignments": [
                    1014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1014,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9751:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1013,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9751:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "expression": {
                      "id": 1015,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "9774:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 611,
                    "src": "9774:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9751:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1019,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "9809:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1020,
                          "name": "toIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "9825:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9809:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f496e64657820746f6f206c6f77",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9834:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab",
                          "typeString": "literal_string \"toIndex too low\""
                        },
                        "value": "toIndex too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab",
                          "typeString": "literal_string \"toIndex too low\""
                        }
                      ],
                      "id": 1018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9801:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "9801:51:3"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9897:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 1026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1025,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "9897:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "9897:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1031,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "9956:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1029,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9932:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "9932:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9932:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1028,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "9918:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9897:65:3"
                },
                {
                  "assignments": [
                    1036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1036,
                      "mutability": "mutable",
                      "name": "nbTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10012:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10012:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1037,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "10031:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8721,
                      "src": "10031:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10031:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10012:34:3"
                },
                {
                  "assignments": [
                    1042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1042,
                      "mutability": "mutable",
                      "name": "maxIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10056:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1041,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10056:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1044,
                  "initialValue": {
                    "id": 1043,
                    "name": "toIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 974,
                    "src": "10075:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10056:26:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1045,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "10096:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1046,
                      "name": "nbTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "10107:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10096:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1053,
                  "nodeType": "IfStatement",
                  "src": "10092:69:3",
                  "trueBody": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "10117:44:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1048,
                            "name": "maxIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "10131:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1049,
                            "name": "nbTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "10142:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10131:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "10131:19:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "mutability": "mutable",
                      "name": "initialTotalSharesAndLoot",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10401:33:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10401:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1076,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1058,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "10469:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1059,
                            "name": "SHARES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6174,
                            "src": "10476:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1060,
                            "name": "kickBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "10484:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1056,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "10449:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPriorAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9077,
                          "src": "10449:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10449:51:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1064,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "10539:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1065,
                            "name": "LOOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6180,
                            "src": "10546:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1066,
                            "name": "kickBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "10552:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1062,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "10519:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPriorAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9077,
                          "src": "10519:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10519:49:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10449:119:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1071,
                          "name": "TOTAL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6168,
                          "src": "10607:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1072,
                          "name": "LOCKED_LOOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6186,
                          "src": "10614:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1073,
                          "name": "kickBlockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "10627:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1069,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "10587:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9181",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getPriorAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9077,
                        "src": "10587:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10587:56:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10449:194:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10401:242:3"
                },
                {
                  "assignments": [
                    1078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "kickedMember",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10711:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10711:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1081,
                  "initialValue": {
                    "expression": {
                      "id": 1079,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "10734:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "memberToKick",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 604,
                    "src": "10734:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10711:40:3"
                },
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "sharesAndLootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10810:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10810:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1086,
                  "initialValue": {
                    "expression": {
                      "id": 1084,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "10840:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokensToBurn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 609,
                    "src": "10840:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10810:47:3"
                },
                {
                  "body": {
                    "id": 1132,
                    "nodeType": "Block",
                    "src": "11015:1226:3",
                    "statements": [
                      {
                        "assignments": [
                          1098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1098,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 1132,
                            "src": "11029:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11029:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1103,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1101,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "11059:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1099,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "11045:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8711,
                            "src": "11045:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11045:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11029:32:3"
                      },
                      {
                        "assignments": [
                          1105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1105,
                            "mutability": "mutable",
                            "name": "amountToRagequit",
                            "nodeType": "VariableDeclaration",
                            "scope": 1132,
                            "src": "11277:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1104,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11277:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1117,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1110,
                                  "name": "GUILD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6162,
                                  "src": "11382:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1111,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1098,
                                  "src": "11389:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1112,
                                  "name": "kickBlockNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "11396:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1108,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "11362:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getPriorAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9077,
                                "src": "11362:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11362:50:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1114,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "11434:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1115,
                              "name": "initialTotalSharesAndLoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "11475:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1106,
                              "name": "FairShareHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9783,
                              "src": "11320:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FairShareHelper_$9783_$",
                                "typeString": "type(library FairShareHelper)"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calc",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9782,
                            "src": "11320:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11320:198:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11277:241:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1118,
                            "name": "amountToRagequit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "11627:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11646:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11627:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1131,
                        "nodeType": "IfStatement",
                        "src": "11623:608:3",
                        "trueBody": {
                          "id": 1130,
                          "nodeType": "Block",
                          "src": "11649:582:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1124,
                                    "name": "GUILD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6162,
                                    "src": "12094:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1125,
                                    "name": "kickedMember",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1078,
                                    "src": "12121:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1126,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1098,
                                    "src": "12155:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1127,
                                    "name": "amountToRagequit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1105,
                                    "src": "12182:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1121,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1027,
                                    "src": "12051:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 1123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "internalTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8895,
                                  "src": "12051:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256) external"
                                  }
                                },
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12051:165:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1129,
                              "nodeType": "ExpressionStatement",
                              "src": "12051:165:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1091,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "10996:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1092,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "11000:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10996:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1133,
                  "initializationExpression": {
                    "assignments": [
                      1088
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "10970:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10970:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1090,
                    "initialValue": {
                      "id": 1089,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "10982:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10970:24:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11010:3:3",
                      "subExpression": {
                        "id": 1094,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "11010:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1096,
                    "nodeType": "ExpressionStatement",
                    "src": "11010:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10965:1276:3"
                },
                {
                  "expression": {
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "12251:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "12251:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1137,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12271:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12251:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "12251:28:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1140,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12293:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1141,
                      "name": "nbTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "12305:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12293:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1165,
                  "nodeType": "IfStatement",
                  "src": "12289:387:3",
                  "trueBody": {
                    "id": 1164,
                    "nodeType": "Block",
                    "src": "12315:361:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1146,
                              "name": "kickedMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "12459:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1147,
                              "name": "LOOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "12473:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1148,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "12479:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1143,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "12434:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "subtractFromBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8847,
                            "src": "12434:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12434:65:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "12434:65:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "kickedMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "12604:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1151,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12587:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unjailMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7517,
                            "src": "12587:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12587:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "12587:30:3"
                      },
                      {
                        "expression": {
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1157,
                              "name": "kick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "12631:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                                "typeString": "struct GuildKickContract.GuildKick storage pointer"
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "12631:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1160,
                              "name": "GuildKickStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "12645:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                                "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "DONE",
                            "nodeType": "MemberAccess",
                            "src": "12645:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "src": "12631:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "12631:34:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 969,
              "nodeType": "StructuredDocumentation",
              "src": "8470:653:3",
              "text": " @notice Transfers the funds from the Guild account to the kicked member account.\n @notice The amount of funds is caculated using the historical balance when the proposal was created.\n @notice loot\n @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n @dev A kick proposal must be in progress.\n @dev Only one kick per DAO can be executed at time.\n @dev Only active members can be kicked out.\n @dev Only proposals that passed the voting can be completed.\n @param dao The dao address.\n @param toIndex The index to control the cached for-loop."
            },
            "functionSelector": "29e5ab96",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rageKick",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 976,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9189:8:3"
            },
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "9146:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 970,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "9146:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "9146:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "toIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "9163:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9163:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9145:34:3"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9198:0:3"
            },
            "scope": 1168,
            "src": "9128:3554:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1169,
        "src": "1394:11290:3"
      }
    ],
    "src": "0:12685:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/GuildKick.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FairShareHelper": [
        9783
      ],
      "GuildKickContract": [
        1168
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IGuildKick": [
        3579
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 1169,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 584,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 585,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 6255,
        "src": "58:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 586,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 8219,
        "src": "93:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 587,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9429,
        "src": "127:35:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IGuildKick.sol",
        "file": "./interfaces/IGuildKick.sol",
        "id": 588,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 3580,
        "src": "163:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 589,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 3782,
        "src": "201:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol",
        "file": "../helpers/FairShareHelper.sol",
        "id": 590,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9784,
        "src": "246:40:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 591,
        "nodeType": "ImportDirective",
        "scope": 1169,
        "sourceUnit": 9182,
        "src": "287:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 593,
              "name": "IGuildKick",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3579,
              "src": "1424:10:3"
            },
            "id": 594,
            "nodeType": "InheritanceSpecifier",
            "src": "1424:10:3"
          },
          {
            "baseName": {
              "id": 595,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1436:12:3"
            },
            "id": 596,
            "nodeType": "InheritanceSpecifier",
            "src": "1436:12:3"
          },
          {
            "baseName": {
              "id": 597,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1450:11:3"
            },
            "id": 598,
            "nodeType": "InheritanceSpecifier",
            "src": "1450:11:3"
          }
        ],
        "contractDependencies": [
          3579,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 592,
          "nodeType": "StructuredDocumentation",
          "src": "321:1071:3",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 1168,
        "linearizedBaseContracts": [
          1168,
          9428,
          6254,
          3579
        ],
        "name": "GuildKickContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GuildKickContract.GuildKickStatus",
            "id": 602,
            "members": [
              {
                "id": 599,
                "name": "NOT_STARTED",
                "nodeType": "EnumValue",
                "src": "1513:11:3"
              },
              {
                "id": 600,
                "name": "IN_PROGRESS",
                "nodeType": "EnumValue",
                "src": "1526:11:3"
              },
              {
                "id": 601,
                "name": "DONE",
                "nodeType": "EnumValue",
                "src": "1539:4:3"
              }
            ],
            "name": "GuildKickStatus",
            "nodeType": "EnumDefinition",
            "src": "1491:53:3"
          },
          {
            "canonicalName": "GuildKickContract.GuildKick",
            "id": 614,
            "members": [
              {
                "constant": false,
                "id": 604,
                "mutability": "mutable",
                "name": "memberToKick",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1678:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 603,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1678:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 607,
                "mutability": "mutable",
                "name": "status",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1736:22:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                  "typeString": "enum GuildKickContract.GuildKickStatus"
                },
                "typeName": {
                  "id": 606,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 605,
                    "name": "GuildKickStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 602,
                    "src": "1736:15:3"
                  },
                  "referencedDeclaration": 602,
                  "src": "1736:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                    "typeString": "enum GuildKickContract.GuildKickStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 609,
                "mutability": "mutable",
                "name": "tokensToBurn",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1837:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 608,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1837:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 611,
                "mutability": "mutable",
                "name": "currentIndex",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "1934:20:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 610,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1934:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 613,
                "mutability": "mutable",
                "name": "blockNumber",
                "nodeType": "VariableDeclaration",
                "scope": 614,
                "src": "2043:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 612,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2043:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "GuildKick",
            "nodeType": "StructDefinition",
            "scope": 1168,
            "src": "1590:479:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3981538e",
            "id": 621,
            "mutability": "mutable",
            "name": "kicks",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2129:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick))"
            },
            "typeName": {
              "id": 620,
              "keyType": {
                "id": 615,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2137:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2129:49:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick))"
              },
              "valueType": {
                "id": 619,
                "keyType": {
                  "id": 616,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2156:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "2148:29:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                  "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick)"
                },
                "valueType": {
                  "id": 618,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 617,
                    "name": "GuildKick",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 614,
                    "src": "2167:9:3"
                  },
                  "referencedDeclaration": 614,
                  "src": "2167:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                    "typeString": "struct GuildKickContract.GuildKick"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a634a5c",
            "id": 625,
            "mutability": "mutable",
            "name": "ongoingKicks",
            "nodeType": "VariableDeclaration",
            "scope": 1168,
            "src": "2302:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 624,
              "keyType": {
                "id": 622,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2310:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2302:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 623,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2321:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 633,
              "nodeType": "Block",
              "src": "2487:42:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2504:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 629,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2497:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 632,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:25:3"
                }
              ]
            },
            "documentation": {
              "id": 626,
              "nodeType": "StructuredDocumentation",
              "src": "2356:99:3",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 634,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2467:2:3"
            },
            "returnParameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2487:0:3"
            },
            "scope": 1168,
            "src": "2460:69:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3562
            ],
            "body": {
              "id": 687,
              "nodeType": "Block",
              "src": "3258:525:3",
              "statements": [
                {
                  "assignments": [
                    650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 687,
                      "src": "3268:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 648,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3268:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3268:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 657,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 654,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3323:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 652,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "3301:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3301:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3301:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 651,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3293:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3268:63:3"
                },
                {
                  "assignments": [
                    659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 659,
                      "mutability": "mutable",
                      "name": "submittedBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 687,
                      "src": "3341:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 658,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3341:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 671,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 662,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "3424:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 665,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3453:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GuildKickContract_$1168",
                              "typeString": "contract GuildKickContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GuildKickContract_$1168",
                              "typeString": "contract GuildKickContract"
                            }
                          ],
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 667,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3476:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 668,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3498:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3498:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 660,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "3375:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "3375:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3375:147:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3341:181:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 673,
                          "name": "submittedBy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "3640:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 674,
                          "name": "memberToKick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 642,
                          "src": "3655:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3640:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e206e6f74206b69636b20796f757273656c66",
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3669:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf",
                          "typeString": "literal_string \"you can not kick yourself\""
                        },
                        "value": "you can not kick yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90e2e640f744e4fd5fd25ae4dedbeae0ccc62b840320f0f6c2a9e84392e27fcf",
                          "typeString": "literal_string \"you can not kick yourself\""
                        }
                      ],
                      "id": 672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3632:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3632:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "3727:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 681,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 640,
                        "src": "3732:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 682,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 642,
                        "src": "3744:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 683,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "3758:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "id": 684,
                        "name": "submittedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 659,
                        "src": "3764:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 679,
                      "name": "_submitKickProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "3707:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_address_$_t_bytes_calldata_ptr_$_t_address_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,address,bytes calldata,address)"
                      }
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3707:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "3707:69:3"
                }
              ]
            },
            "documentation": {
              "id": 635,
              "nodeType": "StructuredDocumentation",
              "src": "2535:554:3",
              "text": " @notice Creates a guild kick proposal, opens it for voting, and sponsors it.\n @dev A member can not kick himself.\n @dev Only one kick per DAO can be executed at time.\n @dev Only members that have shares or loot can be kicked out.\n @dev Proposal ids can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param memberToKick The member address that should be kicked out of the DAO.\n @param data Additional information related to the kick proposal."
            },
            "functionSelector": "7f5d336f",
            "id": 688,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitKickProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3249:8:3"
            },
            "parameters": {
              "id": 645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 638,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3131:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 637,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 636,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3131:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3131:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3156:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 639,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 642,
                  "mutability": "mutable",
                  "name": "memberToKick",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3184:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3184:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 644,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 688,
                  "src": "3214:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 643,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3121:118:3"
            },
            "returnParameters": {
              "id": 647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:0:3"
            },
            "scope": 1168,
            "src": "3094:689:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 792,
              "nodeType": "Block",
              "src": "4570:1100:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 710,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "4641:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 707,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "4622:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "4622:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4622:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "4622:30:3"
                },
                {
                  "assignments": [
                    715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 715,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4663:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 714,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 713,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "4663:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "4663:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 722,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 719,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "4722:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 717,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "4698:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "4698:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4698:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 716,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "4684:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4684:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4663:65:3"
                },
                {
                  "assignments": [
                    724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "sharesToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4789:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4789:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 730,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 727,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "4827:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 728,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "4841:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 725,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "4812:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "4812:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4812:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4789:59:3"
                },
                {
                  "assignments": [
                    732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 732,
                      "mutability": "mutable",
                      "name": "lootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "4908:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4908:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 696,
                        "src": "4944:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 736,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "4958:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 733,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 715,
                        "src": "4929:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "4929:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4929:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4908:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 740,
                            "name": "sharesToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "5057:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 741,
                            "name": "lootToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "5072:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5057:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5085:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5057:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20736861726573206f72206c6f6f74",
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5088:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc",
                          "typeString": "literal_string \"no shares or loot\""
                        },
                        "value": "no shares or loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49880a988ac74d242f5749151cb11c4dcd9c35db8c05f7ce33a65bc8f934affc",
                          "typeString": "literal_string \"no shares or loot\""
                        }
                      ],
                      "id": 739,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5049:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5049:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "5049:59:3"
                },
                {
                  "expression": {
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 748,
                          "name": "kicks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "5174:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                          }
                        },
                        "id": 754,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "5188:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5180:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 749,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5180:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5180:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5174:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                          "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                        }
                      },
                      "id": 755,
                      "indexExpression": {
                        "id": 753,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5194:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5174:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                        "typeString": "struct GuildKickContract.GuildKick storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 757,
                          "name": "memberToKick",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 696,
                          "src": "5231:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 758,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "5257:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "5257:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5298:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5313:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "expression": {
                            "id": 762,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5328:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "5328:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 756,
                        "name": "GuildKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 614,
                        "src": "5208:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_GuildKick_$614_storage_ptr_$",
                          "typeString": "type(struct GuildKickContract.GuildKick storage pointer)"
                        }
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5208:142:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_memory_ptr",
                        "typeString": "struct GuildKickContract.GuildKick memory"
                      }
                    },
                    "src": "5174:176:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:176:3"
                },
                {
                  "assignments": [
                    769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 792,
                      "src": "5427:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 768,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 767,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5427:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5427:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 773,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "5482:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 771,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "5460:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "5460:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5460:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 770,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5452:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5452:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5427:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 780,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "5541:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 781,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5546:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 782,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 698,
                        "src": "5558:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 777,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 769,
                        "src": "5500:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "5500:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5500:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 784,
                  "nodeType": "ExpressionStatement",
                  "src": "5500:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 788,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 694,
                        "src": "5639:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 789,
                        "name": "submittedBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 700,
                        "src": "5651:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 785,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 692,
                        "src": "5619:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "5619:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5619:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:44:3"
                }
              ]
            },
            "documentation": {
              "id": 689,
              "nodeType": "StructuredDocumentation",
              "src": "3789:561:3",
              "text": " @notice Converts the shares into loot to remove the voting power, and sponsors the kick proposal.\n @dev Only members that have shares or loot can be kicked out.\n @dev Proposal ids can not be reused.\n @param dao The dao address.\n @param proposalId The guild kick proposal id.\n @param memberToKick The member address that should be kicked out of the DAO.\n @param data Additional information related to the kick proposal.\n @param submittedBy The address of the individual that created the kick proposal."
            },
            "id": 793,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 703,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 692,
                    "src": "4552:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  {
                    "id": 704,
                    "name": "submittedBy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 700,
                    "src": "4557:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 705,
                "modifierName": {
                  "id": 702,
                  "name": "onlyMember2",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9375,
                  "src": "4540:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4540:29:3"
              }
            ],
            "name": "_submitKickProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4393:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 691,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 690,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "4393:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "4393:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 694,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4418:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 693,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4418:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "memberToKick",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4446:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4446:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 698,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4476:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 697,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4476:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 700,
                  "mutability": "mutable",
                  "name": "submittedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 793,
                  "src": "4505:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4505:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4383:147:3"
            },
            "returnParameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4570:0:3"
            },
            "scope": 1168,
            "src": "4355:1315:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3570
            ],
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "6311:2153:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 806,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "6341:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 803,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "6321:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "6321:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6321:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "6321:31:3"
                },
                {
                  "assignments": [
                    811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 811,
                      "mutability": "mutable",
                      "name": "kick",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "6430:22:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick"
                      },
                      "typeName": {
                        "id": 810,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 809,
                          "name": "GuildKick",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 614,
                          "src": "6430:9:3"
                        },
                        "referencedDeclaration": 614,
                        "src": "6430:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 820,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 812,
                        "name": "kicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "6455:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                        }
                      },
                      "id": 817,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 815,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "6469:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6461:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 813,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6461:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6461:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6455:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                        "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                      }
                    },
                    "id": 819,
                    "indexExpression": {
                      "id": 818,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "6475:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6455:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6430:56:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                          "typeString": "enum GuildKickContract.GuildKickStatus"
                        },
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 822,
                            "name": "kick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "6517:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                              "typeString": "struct GuildKickContract.GuildKick storage pointer"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 607,
                          "src": "6517:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 824,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "6532:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NOT_STARTED",
                          "nodeType": "MemberAccess",
                          "src": "6532:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "src": "6517:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6775696c64206b69636b20616c726561647920636f6d706c65746564206f7220696e2070726f6772657373",
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6573:45:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd",
                          "typeString": "literal_string \"guild kick already completed or in progress\""
                        },
                        "value": "guild kick already completed or in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72b68e9227c749e510cd430fe8f8dbc39b5c7d9b6872e04a38fb703cef1866bd",
                          "typeString": "literal_string \"guild kick already completed or in progress\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6496:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6496:132:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 829,
                  "nodeType": "ExpressionStatement",
                  "src": "6496:132:3"
                },
                {
                  "assignments": [
                    831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 831,
                      "mutability": "mutable",
                      "name": "ongoingProposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "6734:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 830,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6734:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 838,
                  "initialValue": {
                    "baseExpression": {
                      "id": 832,
                      "name": "ongoingKicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "6762:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 837,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 835,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 797,
                          "src": "6783:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        ],
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6775:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6775:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6775:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6762:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6734:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 840,
                            "name": "ongoingProposalId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "6819:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6848:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6840:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 841,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6840:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6840:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "6819:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 846,
                                  "name": "kicks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 621,
                                  "src": "6870:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                                    "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                                  }
                                },
                                "id": 851,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 849,
                                      "name": "dao",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 797,
                                      "src": "6884:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                        "typeString": "contract DaoRegistry"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                        "typeString": "contract DaoRegistry"
                                      }
                                    ],
                                    "id": 848,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6876:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 847,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6876:7:3",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6876:12:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6870:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                                  "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                                }
                              },
                              "id": 853,
                              "indexExpression": {
                                "id": 852,
                                "name": "ongoingProposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "6890:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6870:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                                "typeString": "struct GuildKickContract.GuildKick storage ref"
                              }
                            },
                            "id": 854,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "6870:45:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 855,
                              "name": "GuildKickStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "6935:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                                "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                              }
                            },
                            "id": 856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "IN_PROGRESS",
                            "nodeType": "MemberAccess",
                            "src": "6935:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "src": "6870:92:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6819:143:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616e6f74686572206b69636b20616c726561647920696e2070726f6772657373",
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6976:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04",
                          "typeString": "literal_string \"another kick already in progress\""
                        },
                        "value": "another kick already in progress"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec0aebb1199d3e0322d8744f3081e3c8905ece3b933045d7a2cfe909045b7a04",
                          "typeString": "literal_string \"another kick already in progress\""
                        }
                      ],
                      "id": 839,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6798:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6798:222:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "6798:222:3"
                },
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7077:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 863,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 862,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "7077:7:3"
                        },
                        "referencedDeclaration": 3781,
                        "src": "7077:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 871,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 868,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "7132:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 866,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "7110:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "7110:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7110:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 865,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "7102:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7077:63:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 875,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "7197:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 876,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 799,
                              "src": "7202:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 873,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "7171:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "7171:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7171:42:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 878,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "7233:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "7233:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "7233:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "7171:86:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7271:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7150:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:154:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "7150:154:3"
                },
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7375:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 886,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 885,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "7375:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "7375:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 894,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 891,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "7434:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 889,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "7410:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "7410:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7410:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 888,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "7396:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7396:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7375:65:3"
                },
                {
                  "assignments": [
                    896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 896,
                      "mutability": "mutable",
                      "name": "memberToKick",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7450:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7450:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 899,
                  "initialValue": {
                    "expression": {
                      "id": 897,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 811,
                      "src": "7473:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 898,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "memberToKick",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 604,
                    "src": "7473:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7450:40:3"
                },
                {
                  "assignments": [
                    901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 901,
                      "mutability": "mutable",
                      "name": "sharesToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7551:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7551:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 904,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7589:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 905,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "7603:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 902,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7574:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "7574:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7574:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7551:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 911,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7726:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 912,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "7740:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 913,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "7748:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 908,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7701:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "7701:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "7701:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 919,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "7942:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 920,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "7956:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 921,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 901,
                        "src": "7962:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 916,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "7924:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8801,
                      "src": "7924:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7924:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "7924:51:3"
                },
                {
                  "assignments": [
                    925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 925,
                      "mutability": "mutable",
                      "name": "tokensToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 967,
                      "src": "7986:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7986:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 928,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8024:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 929,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "8038:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 926,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "8009:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8930,
                      "src": "8009:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7986:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 935,
                        "name": "memberToKick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "8146:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 932,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "8131:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "jailMember",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7446,
                      "src": "8131:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8131:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "8131:28:3"
                },
                {
                  "expression": {
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 938,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8222:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 607,
                      "src": "8222:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                        "typeString": "enum GuildKickContract.GuildKickStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 941,
                        "name": "GuildKickStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 602,
                        "src": "8236:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                          "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                        }
                      },
                      "id": 942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "IN_PROGRESS",
                      "nodeType": "MemberAccess",
                      "src": "8236:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                        "typeString": "enum GuildKickContract.GuildKickStatus"
                      }
                    },
                    "src": "8222:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                      "typeString": "enum GuildKickContract.GuildKickStatus"
                    }
                  },
                  "id": 944,
                  "nodeType": "ExpressionStatement",
                  "src": "8222:41:3"
                },
                {
                  "expression": {
                    "id": 950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 945,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8274:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 947,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "blockNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 613,
                      "src": "8274:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 948,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "8293:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "8293:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8274:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 951,
                  "nodeType": "ExpressionStatement",
                  "src": "8274:31:3"
                },
                {
                  "expression": {
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 952,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 811,
                        "src": "8315:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensToBurn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 609,
                      "src": "8315:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 955,
                      "name": "tokensToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "8335:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8315:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "8315:32:3"
                },
                {
                  "expression": {
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 958,
                        "name": "ongoingKicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 625,
                        "src": "8418:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 963,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 961,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "8439:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8431:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8431:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8431:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8418:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 964,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "8447:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "8418:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 966,
                  "nodeType": "ExpressionStatement",
                  "src": "8418:39:3"
                }
              ]
            },
            "documentation": {
              "id": 794,
              "nodeType": "StructuredDocumentation",
              "src": "5676:530:3",
              "text": " @notice Process the guild kick proposal, converts the member's shares into loot.\n @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n @dev A kick proposal must be in progress.\n @dev Only one kick per DAO can be executed at time.\n @dev Only active members can be kicked out.\n @dev Only proposals that passed the voting can be set to In Progress status.\n @param dao The dao address.\n @param proposalId The guild kick proposal id."
            },
            "functionSelector": "9573167d",
            "id": 968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6298:8:3"
            },
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "6236:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 796,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 795,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "6236:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "6236:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "6253:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6253:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6235:37:3"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6311:0:3"
            },
            "scope": 1168,
            "src": "6211:2253:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3578
            ],
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "9198:3484:3",
              "statements": [
                {
                  "assignments": [
                    979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 979,
                      "mutability": "mutable",
                      "name": "ongoingProposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9366:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 978,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9366:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 986,
                  "initialValue": {
                    "baseExpression": {
                      "id": 980,
                      "name": "ongoingKicks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 625,
                      "src": "9394:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 985,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 983,
                          "name": "dao",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 972,
                          "src": "9415:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                            "typeString": "contract DaoRegistry"
                          }
                        ],
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9407:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 981,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9407:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9407:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9394:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9366:54:3"
                },
                {
                  "assignments": [
                    989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "kick",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9430:22:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick"
                      },
                      "typeName": {
                        "id": 988,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 987,
                          "name": "GuildKick",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 614,
                          "src": "9430:9:3"
                        },
                        "referencedDeclaration": 614,
                        "src": "9430:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 998,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 990,
                        "name": "kicks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 621,
                        "src": "9455:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct GuildKickContract.GuildKick storage ref))"
                        }
                      },
                      "id": 995,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9469:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9461:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9461:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9461:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9455:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_GuildKick_$614_storage_$",
                        "typeString": "mapping(bytes32 => struct GuildKickContract.GuildKick storage ref)"
                      }
                    },
                    "id": 997,
                    "indexExpression": {
                      "id": 996,
                      "name": "ongoingProposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 979,
                      "src": "9475:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9455:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GuildKick_$614_storage",
                      "typeString": "struct GuildKickContract.GuildKick storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9430:63:3"
                },
                {
                  "assignments": [
                    1000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1000,
                      "mutability": "mutable",
                      "name": "kickBlockNumber",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9503:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 999,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9503:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1003,
                  "initialValue": {
                    "expression": {
                      "id": 1001,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "9529:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1002,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "blockNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 613,
                    "src": "9529:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9503:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                          "typeString": "enum GuildKickContract.GuildKickStatus"
                        },
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1005,
                            "name": "kick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "9576:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                              "typeString": "struct GuildKickContract.GuildKick storage pointer"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 607,
                          "src": "9576:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1007,
                            "name": "GuildKickStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 602,
                            "src": "9591:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                              "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "IN_PROGRESS",
                          "nodeType": "MemberAccess",
                          "src": "9591:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "src": "9576:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6775696c64206b69636b20636f6d706c65746564206f7220646f6573206e6f74206578697374",
                        "id": 1010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9632:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929",
                          "typeString": "literal_string \"guild kick completed or does not exist\""
                        },
                        "value": "guild kick completed or does not exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f530d74982d0e283edc19998e5167934f2245494145e5c053d6c67283a38929",
                          "typeString": "literal_string \"guild kick completed or does not exist\""
                        }
                      ],
                      "id": 1004,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9555:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9555:127:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1012,
                  "nodeType": "ExpressionStatement",
                  "src": "9555:127:3"
                },
                {
                  "assignments": [
                    1014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1014,
                      "mutability": "mutable",
                      "name": "currentIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9751:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1013,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9751:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1017,
                  "initialValue": {
                    "expression": {
                      "id": 1015,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "9774:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "currentIndex",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 611,
                    "src": "9774:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9751:40:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1019,
                          "name": "currentIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "9809:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1020,
                          "name": "toIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "9825:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9809:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f496e64657820746f6f206c6f77",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9834:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab",
                          "typeString": "literal_string \"toIndex too low\""
                        },
                        "value": "toIndex too low"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0acbb7f500e048ad95b14f13ac93539a8e78901a5100b57074321e999b2d9eab",
                          "typeString": "literal_string \"toIndex too low\""
                        }
                      ],
                      "id": 1018,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9801:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "9801:51:3"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "9897:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 1026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1025,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "9897:13:3"
                        },
                        "referencedDeclaration": 9181,
                        "src": "9897:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1031,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "9956:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1029,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9932:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "9932:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9932:29:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1028,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "9918:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9897:65:3"
                },
                {
                  "assignments": [
                    1036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1036,
                      "mutability": "mutable",
                      "name": "nbTokens",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10012:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10012:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1037,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1027,
                        "src": "10031:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 1038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nbTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8721,
                      "src": "10031:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10031:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10012:34:3"
                },
                {
                  "assignments": [
                    1042
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1042,
                      "mutability": "mutable",
                      "name": "maxIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10056:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1041,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10056:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1044,
                  "initialValue": {
                    "id": 1043,
                    "name": "toIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 974,
                    "src": "10075:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10056:26:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1045,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "10096:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1046,
                      "name": "nbTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "10107:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10096:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1053,
                  "nodeType": "IfStatement",
                  "src": "10092:69:3",
                  "trueBody": {
                    "id": 1052,
                    "nodeType": "Block",
                    "src": "10117:44:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1048,
                            "name": "maxIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "10131:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1049,
                            "name": "nbTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "10142:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10131:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "10131:19:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1055,
                      "mutability": "mutable",
                      "name": "initialTotalSharesAndLoot",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10401:33:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1054,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10401:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1076,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 1058,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "10469:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1059,
                            "name": "SHARES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6174,
                            "src": "10476:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1060,
                            "name": "kickBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "10484:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1056,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "10449:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPriorAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9077,
                          "src": "10449:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10449:51:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 1064,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "10539:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1065,
                            "name": "LOOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6180,
                            "src": "10546:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1066,
                            "name": "kickBlockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "10552:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1062,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "10519:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPriorAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9077,
                          "src": "10519:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10519:49:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10449:119:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1071,
                          "name": "TOTAL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6168,
                          "src": "10607:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1072,
                          "name": "LOCKED_LOOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6186,
                          "src": "10614:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1073,
                          "name": "kickBlockNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "10627:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1069,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1027,
                          "src": "10587:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9181",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getPriorAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9077,
                        "src": "10587:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,address,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10587:56:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10449:194:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10401:242:3"
                },
                {
                  "assignments": [
                    1078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "kickedMember",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10711:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10711:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1081,
                  "initialValue": {
                    "expression": {
                      "id": 1079,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "10734:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "memberToKick",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 604,
                    "src": "10734:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10711:40:3"
                },
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "sharesAndLootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "10810:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10810:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1086,
                  "initialValue": {
                    "expression": {
                      "id": 1084,
                      "name": "kick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "10840:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                        "typeString": "struct GuildKickContract.GuildKick storage pointer"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tokensToBurn",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 609,
                    "src": "10840:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10810:47:3"
                },
                {
                  "body": {
                    "id": 1132,
                    "nodeType": "Block",
                    "src": "11015:1226:3",
                    "statements": [
                      {
                        "assignments": [
                          1098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1098,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 1132,
                            "src": "11029:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11029:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1103,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1101,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "11059:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1099,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "11045:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8711,
                            "src": "11045:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11045:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11029:32:3"
                      },
                      {
                        "assignments": [
                          1105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1105,
                            "mutability": "mutable",
                            "name": "amountToRagequit",
                            "nodeType": "VariableDeclaration",
                            "scope": 1132,
                            "src": "11277:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1104,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11277:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1117,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1110,
                                  "name": "GUILD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6162,
                                  "src": "11382:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1111,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1098,
                                  "src": "11389:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1112,
                                  "name": "kickBlockNumber",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "11396:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1108,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "11362:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getPriorAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9077,
                                "src": "11362:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11362:50:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1114,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "11434:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1115,
                              "name": "initialTotalSharesAndLoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "11475:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1106,
                              "name": "FairShareHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9783,
                              "src": "11320:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FairShareHelper_$9783_$",
                                "typeString": "type(library FairShareHelper)"
                              }
                            },
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calc",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9782,
                            "src": "11320:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11320:198:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11277:241:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1118,
                            "name": "amountToRagequit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "11627:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11646:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11627:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1131,
                        "nodeType": "IfStatement",
                        "src": "11623:608:3",
                        "trueBody": {
                          "id": 1130,
                          "nodeType": "Block",
                          "src": "11649:582:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1124,
                                    "name": "GUILD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6162,
                                    "src": "12094:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1125,
                                    "name": "kickedMember",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1078,
                                    "src": "12121:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1126,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1098,
                                    "src": "12155:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1127,
                                    "name": "amountToRagequit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1105,
                                    "src": "12182:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1121,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1027,
                                    "src": "12051:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 1123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "internalTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8895,
                                  "src": "12051:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256) external"
                                  }
                                },
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12051:165:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1129,
                              "nodeType": "ExpressionStatement",
                              "src": "12051:165:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1091,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "10996:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1092,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "11000:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10996:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1133,
                  "initializationExpression": {
                    "assignments": [
                      1088
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1133,
                        "src": "10970:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10970:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1090,
                    "initialValue": {
                      "id": 1089,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1014,
                      "src": "10982:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10970:24:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11010:3:3",
                      "subExpression": {
                        "id": 1094,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1088,
                        "src": "11010:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1096,
                    "nodeType": "ExpressionStatement",
                    "src": "11010:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10965:1276:3"
                },
                {
                  "expression": {
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1134,
                        "name": "kick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "12251:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                          "typeString": "struct GuildKickContract.GuildKick storage pointer"
                        }
                      },
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 611,
                      "src": "12251:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1137,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12271:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12251:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "12251:28:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1140,
                      "name": "maxIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "12293:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1141,
                      "name": "nbTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1036,
                      "src": "12305:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12293:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1165,
                  "nodeType": "IfStatement",
                  "src": "12289:387:3",
                  "trueBody": {
                    "id": 1164,
                    "nodeType": "Block",
                    "src": "12315:361:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1146,
                              "name": "kickedMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "12459:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1147,
                              "name": "LOOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "12473:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1148,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1083,
                              "src": "12479:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1143,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1027,
                              "src": "12434:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "subtractFromBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8847,
                            "src": "12434:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12434:65:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1150,
                        "nodeType": "ExpressionStatement",
                        "src": "12434:65:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "kickedMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "12604:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1151,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "12587:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 1153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unjailMember",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7517,
                            "src": "12587:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12587:30:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "12587:30:3"
                      },
                      {
                        "expression": {
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1157,
                              "name": "kick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "12631:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_GuildKick_$614_storage_ptr",
                                "typeString": "struct GuildKickContract.GuildKick storage pointer"
                              }
                            },
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 607,
                            "src": "12631:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1160,
                              "name": "GuildKickStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "12645:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_GuildKickStatus_$602_$",
                                "typeString": "type(enum GuildKickContract.GuildKickStatus)"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "DONE",
                            "nodeType": "MemberAccess",
                            "src": "12645:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                              "typeString": "enum GuildKickContract.GuildKickStatus"
                            }
                          },
                          "src": "12631:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_GuildKickStatus_$602",
                            "typeString": "enum GuildKickContract.GuildKickStatus"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "12631:34:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 969,
              "nodeType": "StructuredDocumentation",
              "src": "8470:653:3",
              "text": " @notice Transfers the funds from the Guild account to the kicked member account.\n @notice The amount of funds is caculated using the historical balance when the proposal was created.\n @notice loot\n @notice The kicked member is put in jail, so he can not perform any other action in the DAO.\n @dev A kick proposal must be in progress.\n @dev Only one kick per DAO can be executed at time.\n @dev Only active members can be kicked out.\n @dev Only proposals that passed the voting can be completed.\n @param dao The dao address.\n @param toIndex The index to control the cached for-loop."
            },
            "functionSelector": "29e5ab96",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rageKick",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 976,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9189:8:3"
            },
            "parameters": {
              "id": 975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "9146:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 970,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "9146:11:3"
                    },
                    "referencedDeclaration": 8218,
                    "src": "9146:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 974,
                  "mutability": "mutable",
                  "name": "toIndex",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "9163:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 973,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9163:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9145:34:3"
            },
            "returnParameters": {
              "id": 977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9198:0:3"
            },
            "scope": 1168,
            "src": "9128:3554:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1169,
        "src": "1394:11290:3"
      }
    ],
    "src": "0:12685:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T09:36:52.550Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "processProposal(address,bytes32)": {
        "details": "A kick proposal must be in progress.Only one kick per DAO can be executed at time.Only active members can be kicked out.Only proposals that passed the voting can be set to In Progress status.",
        "params": {
          "dao": "The dao address.",
          "proposalId": "The guild kick proposal id."
        }
      },
      "rageKick(address,uint256)": {
        "details": "A kick proposal must be in progress.Only one kick per DAO can be executed at time.Only active members can be kicked out.Only proposals that passed the voting can be completed.",
        "params": {
          "dao": "The dao address.",
          "toIndex": "The index to control the cached for-loop."
        }
      },
      "submitKickProposal(address,bytes32,address,bytes)": {
        "details": "A member can not kick himself.Only one kick per DAO can be executed at time.Only members that have shares or loot can be kicked out.Proposal ids can not be reused.",
        "params": {
          "dao": "The dao address.",
          "data": "Additional information related to the kick proposal.",
          "memberToKick": "The member address that should be kicked out of the DAO.",
          "proposalId": "The guild kick proposal id."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "processProposal(address,bytes32)": {
        "notice": "Process the guild kick proposal, converts the member's shares into loot.The kicked member is put in jail, so he can not perform any other action in the DAO."
      },
      "rageKick(address,uint256)": {
        "notice": "Transfers the funds from the Guild account to the kicked member account.The amount of funds is caculated using the historical balance when the proposal was created.lootThe kicked member is put in jail, so he can not perform any other action in the DAO."
      },
      "submitKickProposal(address,bytes32,address,bytes)": {
        "notice": "Creates a guild kick proposal, opens it for voting, and sponsors it."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}