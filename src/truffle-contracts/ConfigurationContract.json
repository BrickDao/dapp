{
  "contractName": "ConfigurationContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "keys",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "submitConfigurationProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sponsorProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "processProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"processProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sponsorProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"submitConfigurationProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Configuration.sol\":\"ConfigurationContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Configuration.sol\":{\"keccak256\":\"0x7cf24886356383f03d45cafea9c00a3b9afd3f313e465300000b884ea1776398\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1dd9203d128db14f7bcddf6a30f8bd479157ce7362d7f8914cc5a77f0640c3f\",\"dweb:/ipfs/QmbAL6HQjqouJFRrG2QkjNc8BU9Hpq5stNjkvRWumD5aLS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol\":{\"keccak256\":\"0xe7942eced62986e77dc84ff80b4d03cb3a5e38756e8ec117b47a5cfe0e9ef0ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b708dcfe72670fe97b0f0029872a05b2a25cafdf431947f39065fca7869998b6\",\"dweb:/ipfs/QmUvWL9883RbS6N6HbZWkAqNdHtWHzK3QhYsndEVkpjamy\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x2b65fd03c04db3db5d73f5e007ca84075fc664c1da4d3f3c77b5c288c9d7bac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1728a85344abf1f3f11b0838c5b29169a38bfa9918f7b8f813079f79b9cbfb\",\"dweb:/ipfs/QmRSarYr4TDaAzPELomqWLTGxkvsbgKdjdd9GwKWDEr1vh\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506115b6806100206000396000f3fe60806040526004361061005e5760003560e01c8063cd0e42ed11610043578063cd0e42ed146100fb578063f1e96a051461011b578063fc2580311461013b5761009e565b80639573167d146100a3578063b244a41d146100c55761009e565b3661009e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610095906112ea565b60405180910390fd5b600080fd5b3480156100af57600080fd5b506100c36100be366004610e57565b610168565b005b3480156100d157600080fd5b506100e56100e0366004611040565b6105a3565b6040516100f29190611134565b60405180910390f35b34801561010757600080fd5b506100c3610116366004610f0b565b6105ff565b34801561012757600080fd5b506100c3610136366004610e82565b61076f565b34801561014757600080fd5b5061015b61015636600461101f565b610914565b6040516100f29190611129565b6040517f30490e9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906330490e91906101ba908490600401611134565b600060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff821660008181526020818152604080832085845290915280822090517f17ba7d850000000000000000000000000000000000000000000000000000000081529092906317ba7d8590610277907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611134565b60206040518083038186803b15801561028f57600080fd5b505afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610e1f565b905060026040517f76225e7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906376225e739061031f90889088906004016111bb565b602060405180830381600087803b15801561033957600080fd5b505af115801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190610fe8565b60058111156103a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100959061121f565b60008260000180548060200260200160405190810160405280929190818152602001828054801561043057602002820191906000526020600020905b81548152602001906001019080831161041c575b5050505050905060008360010180548060200260200160405190810160405280929190818152602001828054801561048757602002820191906000526020600020905b815481526020019060010190808311610473575b5050505050905060005b825181101561059a578673ffffffffffffffffffffffffffffffffffffffff1663da0f6c708483815181106104ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151848481518110610530577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610555929190611161565b600060405180830381600087803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b5050505080806105929061147d565b915050610491565b50505050505050565b60008115156105b28585610914565b1515146105f55781156105db576105ca83600261137f565b6105d49085611321565b90506105f8565b6105e683600261137f565b6105d49085611466565b6105f8565b50825b9392505050565b6040517f17ba7d8500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906317ba7d8590610674907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611134565b60206040518083038186803b15801561068c57600080fd5b505afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610e1f565b905060008173ffffffffffffffffffffffffffffffffffffffff1663966917d0863086336040518563ffffffff1660e01b8152600401610707949392919061116f565b602060405180830381600087803b15801561072157600080fd5b505af1158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190610e1f565b90506107688585858486610931565b5050505050565b8561077a8133610a46565b8382146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100959061128d565b6040517fb73dc38900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063b73dc38990610805908990600401611134565b600060405180830381600087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b5050505060405180604001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208681028281018201909352868252928301929091879187918291850190849080828437600092018290525093909452505073ffffffffffffffffffffffffffffffffffffffff8a168152602081815260408083208b84528252909120835180519193506108ef928492910190610d76565b5060208281015180516109089260018501920190610d76565b50505050505050505050565b6000610927600260ff841685901c6114b6565b6001149392505050565b6040517f815a2bf400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063815a2bf490610985908790869060040161113d565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b50506040517f2b0974d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250632b0974d09150610a0d908890889088906004016111e1565b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050505050505050565b6040517ffefbd87500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff84169063fefbd87590610abb907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611134565b60206040518083038186803b158015610ad357600080fd5b505afa158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b9190610e1f565b905073ffffffffffffffffffffffffffffffffffffffff811615610c99576040517fc89bb8ba00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c89bb8ba90610b7e9086906004016110e1565b60206040518083038186803b158015610b9657600080fd5b505afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610e1f565b905060008273ffffffffffffffffffffffffffffffffffffffff1663f7888aec83620ff1ce6040518363ffffffff1660e01b8152600401610c10929190611102565b60206040518083038186803b158015610c2857600080fd5b505afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611007565b11610c97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009590611256565b505b6040517f45ecd02f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906345ecd02f90610ceb9085906004016110e1565b60206040518083038186803b158015610d0357600080fd5b505afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190610e3b565b610d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009590611256565b505050565b828054828255906000526020600020908101928215610db1579160200282015b82811115610db1578251825591602001919060010190610d96565b50610dbd929150610dc1565b5090565b5b80821115610dbd5760008155600101610dc2565b60008083601f840112610de7578081fd5b50813567ffffffffffffffff811115610dfe578182fd5b6020830191508360208083028501011115610e1857600080fd5b9250929050565b600060208284031215610e30578081fd5b81516105f88161154d565b600060208284031215610e4c578081fd5b81516105f881611572565b60008060408385031215610e69578081fd5b8235610e748161154d565b946020939093013593505050565b60008060008060008060808789031215610e9a578182fd5b8635610ea58161154d565b955060208701359450604087013567ffffffffffffffff80821115610ec8578384fd5b610ed48a838b01610dd6565b90965094506060890135915080821115610eec578384fd5b50610ef989828a01610dd6565b979a9699509497509295939492505050565b600080600060608486031215610f1f578283fd5b8335610f2a8161154d565b92506020848101359250604085013567ffffffffffffffff80821115610f4e578384fd5b818701915087601f830112610f61578384fd5b813581811115610f7357610f7361151e565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610fb457610fb461151e565b60405281815283820185018a1015610fca578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610ff9578081fd5b8151600681106105f8578182fd5b600060208284031215611018578081fd5b5051919050565b60008060408385031215611031578182fd5b50508035926020909101359150565b600080600060608486031215611054578283fd5b8335925060208401359150604084013561106d81611572565b809150509250925092565b60008151808452815b8181101561109d57602081850181015186830182015201611081565b818111156110ae5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b918252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152608060408401526111a76080840186611078565b915080841660608401525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff85168252836020830152606060408301526112166060830184611078565b95945050505050565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526031908201527f6d75737420626520616e20657175616c206e756d626572206f6620636f6e666960408201527f67206b65797320616e642076616c756573000000000000000000000000000000606082015260800190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b60008219821115611334576113346114ef565b500190565b80825b600180861161134b5750611376565b81870482111561135d5761135d6114ef565b8086161561136a57918102915b9490941c93800261133c565b94509492505050565b60006105f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826113b6575060016105f8565b816113c3575060006105f8565b81600181146113d957600281146113e357611410565b60019150506105f8565b60ff8411156113f4576113f46114ef565b6001841b91508482111561140a5761140a6114ef565b506105f8565b5060208310610133831016604e8410600b841016171561143e575081810a838111156105f0576105f06114ef565b61144b8484846001611339565b80860482111561145d5761145d6114ef565b02949350505050565b600082821015611478576114786114ef565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114af576114af6114ef565b5060010190565b6000826114ea577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461156f57600080fd5b50565b801515811461156f57600080fdfea2646970667358221220ac9de572d1433db63702d87ea0a466a8ef7a97ff29e7c1bd8aba96076ba922f164736f6c63430008000033",
  "deployedBytecode": "0x60806040526004361061005e5760003560e01c8063cd0e42ed11610043578063cd0e42ed146100fb578063f1e96a051461011b578063fc2580311461013b5761009e565b80639573167d146100a3578063b244a41d146100c55761009e565b3661009e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610095906112ea565b60405180910390fd5b600080fd5b3480156100af57600080fd5b506100c36100be366004610e57565b610168565b005b3480156100d157600080fd5b506100e56100e0366004611040565b6105a3565b6040516100f29190611134565b60405180910390f35b34801561010757600080fd5b506100c3610116366004610f0b565b6105ff565b34801561012757600080fd5b506100c3610136366004610e82565b61076f565b34801561014757600080fd5b5061015b61015636600461101f565b610914565b6040516100f29190611129565b6040517f30490e9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906330490e91906101ba908490600401611134565b600060405180830381600087803b1580156101d457600080fd5b505af11580156101e8573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff821660008181526020818152604080832085845290915280822090517f17ba7d850000000000000000000000000000000000000000000000000000000081529092906317ba7d8590610277907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611134565b60206040518083038186803b15801561028f57600080fd5b505afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610e1f565b905060026040517f76225e7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906376225e739061031f90889088906004016111bb565b602060405180830381600087803b15801561033957600080fd5b505af115801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190610fe8565b60058111156103a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100959061121f565b60008260000180548060200260200160405190810160405280929190818152602001828054801561043057602002820191906000526020600020905b81548152602001906001019080831161041c575b5050505050905060008360010180548060200260200160405190810160405280929190818152602001828054801561048757602002820191906000526020600020905b815481526020019060010190808311610473575b5050505050905060005b825181101561059a578673ffffffffffffffffffffffffffffffffffffffff1663da0f6c708483815181106104ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151848481518110610530577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040518363ffffffff1660e01b8152600401610555929190611161565b600060405180830381600087803b15801561056f57600080fd5b505af1158015610583573d6000803e3d6000fd5b5050505080806105929061147d565b915050610491565b50505050505050565b60008115156105b28585610914565b1515146105f55781156105db576105ca83600261137f565b6105d49085611321565b90506105f8565b6105e683600261137f565b6105d49085611466565b6105f8565b50825b9392505050565b6040517f17ba7d8500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906317ba7d8590610674907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab390600401611134565b60206040518083038186803b15801561068c57600080fd5b505afa1580156106a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c49190610e1f565b905060008173ffffffffffffffffffffffffffffffffffffffff1663966917d0863086336040518563ffffffff1660e01b8152600401610707949392919061116f565b602060405180830381600087803b15801561072157600080fd5b505af1158015610735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107599190610e1f565b90506107688585858486610931565b5050505050565b8561077a8133610a46565b8382146107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100959061128d565b6040517fb73dc38900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063b73dc38990610805908990600401611134565b600060405180830381600087803b15801561081f57600080fd5b505af1158015610833573d6000803e3d6000fd5b5050505060405180604001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050908252506040805160208681028281018201909352868252928301929091879187918291850190849080828437600092018290525093909452505073ffffffffffffffffffffffffffffffffffffffff8a168152602081815260408083208b84528252909120835180519193506108ef928492910190610d76565b5060208281015180516109089260018501920190610d76565b50505050505050505050565b6000610927600260ff841685901c6114b6565b6001149392505050565b6040517f815a2bf400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063815a2bf490610985908790869060040161113d565b600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b50506040517f2b0974d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250632b0974d09150610a0d908890889088906004016111e1565b600060405180830381600087803b158015610a2757600080fd5b505af1158015610a3b573d6000803e3d6000fd5b505050505050505050565b6040517ffefbd87500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff84169063fefbd87590610abb907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a090600401611134565b60206040518083038186803b158015610ad357600080fd5b505afa158015610ae7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0b9190610e1f565b905073ffffffffffffffffffffffffffffffffffffffff811615610c99576040517fc89bb8ba00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063c89bb8ba90610b7e9086906004016110e1565b60206040518083038186803b158015610b9657600080fd5b505afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610e1f565b905060008273ffffffffffffffffffffffffffffffffffffffff1663f7888aec83620ff1ce6040518363ffffffff1660e01b8152600401610c10929190611102565b60206040518083038186803b158015610c2857600080fd5b505afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611007565b11610c97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009590611256565b505b6040517f45ecd02f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416906345ecd02f90610ceb9085906004016110e1565b60206040518083038186803b158015610d0357600080fd5b505afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190610e3b565b610d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009590611256565b505050565b828054828255906000526020600020908101928215610db1579160200282015b82811115610db1578251825591602001919060010190610d96565b50610dbd929150610dc1565b5090565b5b80821115610dbd5760008155600101610dc2565b60008083601f840112610de7578081fd5b50813567ffffffffffffffff811115610dfe578182fd5b6020830191508360208083028501011115610e1857600080fd5b9250929050565b600060208284031215610e30578081fd5b81516105f88161154d565b600060208284031215610e4c578081fd5b81516105f881611572565b60008060408385031215610e69578081fd5b8235610e748161154d565b946020939093013593505050565b60008060008060008060808789031215610e9a578182fd5b8635610ea58161154d565b955060208701359450604087013567ffffffffffffffff80821115610ec8578384fd5b610ed48a838b01610dd6565b90965094506060890135915080821115610eec578384fd5b50610ef989828a01610dd6565b979a9699509497509295939492505050565b600080600060608486031215610f1f578283fd5b8335610f2a8161154d565b92506020848101359250604085013567ffffffffffffffff80821115610f4e578384fd5b818701915087601f830112610f61578384fd5b813581811115610f7357610f7361151e565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610fb457610fb461151e565b60405281815283820185018a1015610fca578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610ff9578081fd5b8151600681106105f8578182fd5b600060208284031215611018578081fd5b5051919050565b60008060408385031215611031578182fd5b50508035926020909101359150565b600080600060608486031215611054578283fd5b8335925060208401359150604084013561106d81611572565b809150509250925092565b60008151808452815b8181101561109d57602081850181015186830182015201611081565b818111156110ae5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b901515815260200190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b918252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152608060408401526111a76080840186611078565b915080841660608401525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff85168252836020830152606060408301526112166060830184611078565b95945050505050565b60208082526015908201527f70726f706f73616c20646964206e6f7420706173730000000000000000000000604082015260600190565b6020808252600a908201527f6f6e6c794d656d62657200000000000000000000000000000000000000000000604082015260600190565b60208082526031908201527f6d75737420626520616e20657175616c206e756d626572206f6620636f6e666960408201527f67206b65797320616e642076616c756573000000000000000000000000000000606082015260800190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b60008219821115611334576113346114ef565b500190565b80825b600180861161134b5750611376565b81870482111561135d5761135d6114ef565b8086161561136a57918102915b9490941c93800261133c565b94509492505050565b60006105f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846000826113b6575060016105f8565b816113c3575060006105f8565b81600181146113d957600281146113e357611410565b60019150506105f8565b60ff8411156113f4576113f46114ef565b6001841b91508482111561140a5761140a6114ef565b506105f8565b5060208310610133831016604e8410600b841016171561143e575081810a838111156105f0576105f06114ef565b61144b8484846001611339565b80860482111561145d5761145d6114ef565b02949350505050565b600082821015611478576114786114ef565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114af576114af6114ef565b5060010190565b6000826114ea577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461156f57600080fd5b50565b801515811461156f57600080fdfea2646970667358221220ac9de572d1433db63702d87ea0a466a8ef7a97ff29e7c1bd8aba96076ba922f164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12728:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "104:310:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "153:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "162:6:34"
                            },
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "170:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "155:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "155:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "155:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "140:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "128:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "128:17:34"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "147:3:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "124:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "124:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "117:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "117:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "114:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "188:30:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "211:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "198:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "188:6:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "261:30:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "270:8:34"
                            },
                            {
                              "name": "arrayPos",
                              "nodeType": "YulIdentifier",
                              "src": "280:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "263:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "263:26:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "263:26:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "241:18:34",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:30:34"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "316:6:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:4:34",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "312:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:17:34"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "300:8:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "392:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "404:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "394:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "394:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "352:6:34"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "364:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "372:4:34",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "360:17:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "348:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "348:30:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "380:4:34",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "344:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:41:34"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "387:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "341:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "341:50:34"
                  },
                  "nodeType": "YulIf",
                  "src": "338:2:34"
                }
              ]
            },
            "name": "abi_decode_t_array$_t_bytes32_$dyn_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "67:6:34",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "75:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "83:8:34",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "93:6:34",
                "type": ""
              }
            ],
            "src": "14:400:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "546:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "555:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "563:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "548:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "548:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "521:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "530:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "517:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "517:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "542:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "513:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "510:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "581:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "600:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "594:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "585:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "646:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "619:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "619:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "661:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "671:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "466:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "477:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "489:6:34",
                "type": ""
              }
            ],
            "src": "419:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "765:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "811:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "820:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "828:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "813:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "813:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "813:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "786:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "795:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "782:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "782:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "807:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "778:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "775:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "846:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "865:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "859:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "859:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "850:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "908:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "884:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "923:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "933:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "923:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "731:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "742:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "754:6:34",
                "type": ""
              }
            ],
            "src": "687:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1056:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1102:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1111:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1119:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1104:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1104:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1104:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1077:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1086:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1073:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1073:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1098:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1069:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1069:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1066:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1137:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1163:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1150:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1150:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1141:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1209:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1182:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1182:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1224:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1234:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1224:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1248:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1275:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1286:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1271:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1271:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1258:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1258:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1248:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1014:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1025:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1037:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1045:6:34",
                "type": ""
              }
            ],
            "src": "949:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1512:830:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1559:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1568:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1576:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1561:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1561:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1561:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1533:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1542:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1529:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1529:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1554:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1525:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1525:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1522:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1594:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1620:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1607:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1598:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1666:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1639:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1639:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1639:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1691:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1681:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1705:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1732:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1743:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1728:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1728:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1715:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1715:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1705:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1756:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1787:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1798:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1783:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1770:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1770:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1760:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1811:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1821:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1815:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1866:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1875:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1883:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1868:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1868:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1868:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1854:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1862:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1851:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1848:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1901:102:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1975:9:34"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1986:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1971:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:22:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1995:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_bytes32_$dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1927:43:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:76:34"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "1905:8:34",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "1915:8:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2012:18:34",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2022:8:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2012:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2039:18:34",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2049:8:34"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2066:48:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2099:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2110:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2082:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2082:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2070:8:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2143:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2152:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "2160:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2145:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2145:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2145:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2129:8:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2139:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2126:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2123:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2178:104:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2252:9:34"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2263:8:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2248:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2248:24:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2274:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_array$_t_bytes32_$dyn_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2204:43:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:78:34"
                  },
                  "variables": [
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "2182:8:34",
                      "type": ""
                    },
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "2192:8:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2291:18:34",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2301:8:34"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2291:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2318:18:34",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "2328:8:34"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2318:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_array$_t_bytes32_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1438:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1449:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1461:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1469:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1477:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1485:6:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1493:6:34",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1501:6:34",
                "type": ""
              }
            ],
            "src": "1301:1041:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2480:1108:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2526:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2535:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2543:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2528:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2528:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2528:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2501:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2510:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2497:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2497:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2522:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2493:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2493:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2490:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2561:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2587:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2574:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2574:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2565:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2633:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2606:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2606:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2606:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2648:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2658:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2648:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2672:12:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2682:2:34",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2676:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2693:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2720:9:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2731:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2716:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2716:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2703:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2693:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2744:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2775:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2786:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2771:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2771:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2758:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2758:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2748:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2799:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2809:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2803:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2854:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2863:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2871:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2856:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2856:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2856:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2842:6:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2850:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2839:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2836:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2889:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2903:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2914:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2899:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2899:22:34"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2893:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2969:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2978:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2986:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2971:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2971:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2971:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2948:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2952:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2944:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2944:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2959:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2940:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2940:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2933:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2933:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2930:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3004:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "3027:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3014:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3014:16:34"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "3008:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3053:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3055:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3055:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3055:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3045:2:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3049:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3042:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3042:10:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3039:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3084:23:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3104:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3098:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:9:34"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "3088:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3116:126:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3142:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "3158:2:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3162:4:34",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3154:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3154:13:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3169:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3150:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3150:86:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3138:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3138:99:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3239:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3134:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3134:108:34"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "3120:10:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3301:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "3303:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3303:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3303:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3260:10:34"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3272:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3257:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3257:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "3280:10:34"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3292:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3277:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3277:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "3254:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:46:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3251:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3339:2:34",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3343:10:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3332:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3332:22:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3332:22:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3370:6:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3378:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3363:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3363:18:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3363:18:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3427:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3436:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3444:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3429:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3429:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3429:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3404:2:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3408:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3400:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3400:11:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3413:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3396:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3396:20:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3418:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3393:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3393:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3390:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3479:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3487:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3475:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3475:15:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3496:2:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3500:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3492:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3492:11:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3505:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3462:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:46:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3462:46:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3532:6:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3540:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3528:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3528:15:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3545:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:24:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3550:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3517:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3517:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3566:16:34",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3576:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3566:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2430:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2441:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2453:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2461:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2469:6:34",
                "type": ""
              }
            ],
            "src": "2347:1241:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3690:199:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3736:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3745:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3753:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3738:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3738:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3738:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3711:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3720:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3707:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3707:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3732:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3703:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3703:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3700:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3771:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3790:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3784:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3775:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3833:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3842:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3850:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3835:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3835:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3835:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3822:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3829:1:34",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3819:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3819:12:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3812:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3812:20:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3809:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3868:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3878:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3868:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3656:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3667:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3679:6:34",
                "type": ""
              }
            ],
            "src": "3593:296:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3975:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4021:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4030:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4038:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4023:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4023:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4023:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3996:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4005:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3992:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3992:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4017:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3988:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3988:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3985:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4056:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4072:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4066:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4056:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3941:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3952:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3964:6:34",
                "type": ""
              }
            ],
            "src": "3894:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4180:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4226:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4235:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4243:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4228:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4228:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4228:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4201:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4210:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4197:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4197:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4222:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4193:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4193:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4190:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4261:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4284:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4271:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4271:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4261:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4303:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4330:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4341:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4326:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4326:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4313:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4313:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4303:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4138:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4149:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4161:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4169:6:34",
                "type": ""
              }
            ],
            "src": "4093:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4457:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4503:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4512:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4520:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4505:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4505:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4505:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4478:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4487:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4474:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4474:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4499:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4470:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4470:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4467:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4538:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4561:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4548:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4548:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4538:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4580:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4607:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4618:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4603:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4603:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4590:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4580:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4631:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4661:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4672:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4657:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4657:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4644:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4644:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4635:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4709:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4685:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4685:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4685:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4724:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4734:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4724:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4407:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4418:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4430:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4438:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4446:6:34",
                "type": ""
              }
            ],
            "src": "4356:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4801:485:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4811:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4831:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4825:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4825:12:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4815:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4853:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4858:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4846:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:19:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4846:19:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4874:12:34",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "4883:3:34"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4878:1:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4947:110:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4961:14:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4971:4:34",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "4965:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "5003:3:34"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5008:1:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4999:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4999:11:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5012:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4995:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4995:20:34"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "5031:5:34"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5038:1:34"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5027:3:34"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5027:13:34"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5042:2:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5023:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5023:22:34"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5017:5:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5017:29:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4988:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4988:59:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4988:59:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4906:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4909:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4903:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4903:13:34"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4917:21:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4919:17:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4928:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4931:4:34",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4924:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4924:12:34"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4919:1:34"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4899:3:34",
                    "statements": []
                  },
                  "src": "4895:162:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5091:64:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "5120:3:34"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5125:6:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5116:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5116:16:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5134:4:34",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5112:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5112:27:34"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "5141:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5105:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5105:40:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5105:40:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5072:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5075:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5069:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5069:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "5066:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5164:116:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5179:3:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5192:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5200:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5188:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5188:15:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5205:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5184:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5184:88:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5175:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5175:98:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5275:4:34",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5171:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5171:109:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5164:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4778:5:34",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4785:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4793:3:34",
                "type": ""
              }
            ],
            "src": "4750:536:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5392:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5402:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5414:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5425:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5410:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5410:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5402:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5444:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5459:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5467:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5455:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5437:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5437:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5437:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5361:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5372:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5383:4:34",
                "type": ""
              }
            ],
            "src": "5291:226:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5651:198:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5661:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5673:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5684:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5669:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5669:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5661:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5696:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5706:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5700:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5764:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5779:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5787:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5775:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5775:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5757:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5757:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5757:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5811:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5822:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5807:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5807:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5831:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5839:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5827:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5827:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5800:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5800:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5800:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5612:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5623:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5631:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5642:4:34",
                "type": ""
              }
            ],
            "src": "5522:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5949:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5959:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5971:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5982:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5967:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5967:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5959:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6001:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6026:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6019:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6019:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6012:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6012:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5994:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5994:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5994:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5918:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5929:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5940:4:34",
                "type": ""
              }
            ],
            "src": "5854:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6147:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6157:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6169:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6180:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6165:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6165:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6157:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6199:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6210:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6192:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6192:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6192:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6116:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6127:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6138:4:34",
                "type": ""
              }
            ],
            "src": "6046:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6357:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6367:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6379:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6390:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6375:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6375:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6367:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6409:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6420:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6402:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6402:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6402:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6447:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6458:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6443:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6443:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6467:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6475:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6463:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6463:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6436:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6436:83:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6436:83:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6318:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6329:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6337:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6348:4:34",
                "type": ""
              }
            ],
            "src": "6228:297:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6659:119:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6669:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6681:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6692:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6677:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6677:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6669:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6711:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6722:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6704:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6704:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6704:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6749:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6760:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6745:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6745:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6765:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6738:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6738:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6738:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6620:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6631:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6639:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6650:4:34",
                "type": ""
              }
            ],
            "src": "6530:248:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7014:319:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7024:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7034:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7028:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7092:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7107:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7115:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7103:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7103:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7085:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7085:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7085:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7139:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7150:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7135:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7135:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7159:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7167:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7155:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7155:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7128:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7128:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7128:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7191:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7202:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7187:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7187:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7207:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7180:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7180:31:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7180:31:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7220:55:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7247:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7259:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7270:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7255:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7255:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "7228:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7228:47:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7220:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7295:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7306:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7291:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7291:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7315:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7323:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7311:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7311:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7284:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7284:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7284:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6959:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6970:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6978:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6986:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6994:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7005:4:34",
                "type": ""
              }
            ],
            "src": "6783:550:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7495:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7505:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7517:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7528:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7513:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7513:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7505:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7547:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7562:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7570:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7558:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7558:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7540:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7540:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7540:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7634:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7645:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7630:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7630:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7650:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7623:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7623:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7623:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7456:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7467:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7475:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7486:4:34",
                "type": ""
              }
            ],
            "src": "7338:325:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7871:235:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7888:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7903:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7911:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7899:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7899:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7881:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7881:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7881:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7975:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7986:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7971:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7971:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7991:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7964:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7964:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7964:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8018:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8029:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8014:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8014:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8034:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8007:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8007:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8007:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8046:54:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8073:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8085:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8096:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8081:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8081:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "8054:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8054:46:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8046:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7824:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7835:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7843:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7851:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7862:4:34",
                "type": ""
              }
            ],
            "src": "7668:438:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8285:171:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8302:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8313:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8295:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8295:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8295:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8336:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8347:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8332:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8332:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8352:2:34",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8325:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8325:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8325:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8375:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8386:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8371:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8371:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8391:23:34",
                        "type": "",
                        "value": "proposal did not pass"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8364:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8364:51:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8364:51:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8424:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8436:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8447:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8432:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8432:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8424:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8262:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8276:4:34",
                "type": ""
              }
            ],
            "src": "8111:345:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8635:160:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8652:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8663:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8645:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8645:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8686:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8697:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8682:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8682:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8702:2:34",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8675:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8675:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8675:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8725:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8736:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8721:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8721:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8741:12:34",
                        "type": "",
                        "value": "onlyMember"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8714:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8714:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8714:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8763:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8775:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8786:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8771:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8771:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8763:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8612:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8626:4:34",
                "type": ""
              }
            ],
            "src": "8461:334:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8974:239:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8991:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9002:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8984:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8984:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8984:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9025:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9036:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9021:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9021:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9041:2:34",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9014:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9014:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9014:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9064:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9075:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9060:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9060:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9080:34:34",
                        "type": "",
                        "value": "must be an equal number of confi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9053:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9053:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9053:62:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9135:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9146:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9131:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9131:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9151:19:34",
                        "type": "",
                        "value": "g keys and values"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9124:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9124:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9124:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9180:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9192:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9203:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9188:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9188:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9180:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8951:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8965:4:34",
                "type": ""
              }
            ],
            "src": "8800:413:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9392:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9409:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9420:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9402:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9402:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9402:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9443:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9454:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9439:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9439:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9459:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9432:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9432:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9482:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9493:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9478:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9478:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9498:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9471:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9471:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9525:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9537:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9548:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9533:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9533:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9525:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9369:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9383:4:34",
                "type": ""
              }
            ],
            "src": "9218:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9663:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9673:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9685:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9696:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9681:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9681:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9673:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9715:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9726:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9708:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9708:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9708:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9632:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9643:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9654:4:34",
                "type": ""
              }
            ],
            "src": "9562:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9792:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9819:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9821:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9821:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9821:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9808:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9815:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9811:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9811:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9805:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9805:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "9802:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9850:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9861:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9864:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9857:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9857:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9850:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9775:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9778:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9784:3:34",
                "type": ""
              }
            ],
            "src": "9744:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9954:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9964:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "9973:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9964:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9988:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "9996:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "9988:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10035:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10049:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10059:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "10053:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10101:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "10103:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10086:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10096:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10083:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10083:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10076:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10076:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10073:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10151:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10153:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10153:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10153:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10129:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10139:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "10144:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "10135:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10135:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10126:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10126:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10123:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10207:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10209:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "10222:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "10229:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10218:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10218:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10193:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10203:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10189:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10189:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10186:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10249:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10261:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10267:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "10257:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10257:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "10249:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10285:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10301:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10305:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "10297:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10297:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "10285:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "10018:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10023:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10014:3:34",
                    "statements": []
                  },
                  "src": "10010:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "9905:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "9913:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9920:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "9930:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9938:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9945:4:34",
                "type": ""
              }
            ],
            "src": "9877:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10405:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10415:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10445:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10451:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10461:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "10424:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10424:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10415:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10376:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10382:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10395:5:34",
                "type": ""
              }
            ],
            "src": "10335:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10603:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10641:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10655:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10664:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10655:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10678:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10623:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10616:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10616:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10613:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10726:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10740:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10749:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10740:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10763:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10712:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10705:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10705:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10702:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10814:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10828:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10837:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10828:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10851:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10807:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10812:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10882:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10917:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10919:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10919:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10919:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10902:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10912:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10899:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10899:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "10896:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "10952:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10965:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10975:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10961:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10961:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10952:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11008:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "11010:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11010:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11010:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10996:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "11003:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10993:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10993:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "10990:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "11043:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10875:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10880:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10794:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10787:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11156:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11170:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11183:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11189:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "11179:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11179:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11170:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11229:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11231:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11231:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11231:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "11217:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "11224:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11214:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11214:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "11211:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11264:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11080:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11086:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11077:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11077:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11094:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11104:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11091:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11091:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11073:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11073:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11117:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11123:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11114:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11114:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11132:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11142:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11129:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11129:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11110:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11110:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "11070:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11070:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11067:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11288:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11330:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11333:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11339:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "11349:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "11311:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11311:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11292:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "11301:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11395:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11397:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11397:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11397:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11368:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "11381:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "11386:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "11377:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11377:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11365:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11365:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11362:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11426:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11439:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "11448:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11435:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11435:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11426:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10569:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10575:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10585:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10593:5:34",
                "type": ""
              }
            ],
            "src": "10539:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11515:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11537:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11539:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11539:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11539:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11531:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11534:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11528:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11528:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11525:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11568:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11580:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11583:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11576:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11576:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11568:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11497:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11500:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11506:4:34",
                "type": ""
              }
            ],
            "src": "11466:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11643:148:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11734:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11736:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11736:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11736:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11659:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11666:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11656:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11656:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11653:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11765:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11776:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11783:1:34",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11772:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11772:13:34"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "11765:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11625:5:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11635:3:34",
                "type": ""
              }
            ],
            "src": "11596:195:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11834:228:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11865:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "11886:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11889:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11879:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11879:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11879:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11987:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11990:4:34",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11980:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11980:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11980:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "12015:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12018:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12008:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12008:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12008:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11854:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11847:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11847:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11844:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12042:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12051:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12054:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "12047:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12047:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "12042:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11819:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11822:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11828:1:34",
                "type": ""
              }
            ],
            "src": "11796:266:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12099:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12116:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12119:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12109:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12109:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12109:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12213:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12216:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12206:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12206:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12206:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12237:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12240:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12230:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12230:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12230:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "12067:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12288:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12305:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12308:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12298:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12298:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12298:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12402:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12405:4:34",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12395:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12395:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12395:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12426:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12429:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12419:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12419:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12419:15:34"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "12256:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12492:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12579:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12588:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12591:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12581:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12581:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12581:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12515:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12526:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12533:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12522:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12522:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12512:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12512:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12505:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12505:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12502:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12481:5:34",
                "type": ""
              }
            ],
            "src": "12445:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12650:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12704:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12713:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12716:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12706:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12706:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12706:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12673:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12694:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12687:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12687:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12680:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12680:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12670:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12670:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12663:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12663:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12660:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12639:5:34",
                "type": ""
              }
            ],
            "src": "12606:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(length, length) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, mul(length, 0x20)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_array$_t_bytes32_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let value2_1, value3_1 := abi_decode_t_array$_t_bytes32_$dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        let value4_1, value5_1 := abi_decode_t_array$_t_bytes32_$dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        let offset := calldataload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value2, value2) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value2, value2) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value2)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"proposal did not pass\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8afa7882239a547d7ee53252ec9d116819d418c7b0cacf7666117abe99c4883d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"onlyMember\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"must be an equal number of confi\")\n        mstore(add(headStart, 96), \"g keys and values\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1324:2415:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1324:2415:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1713:25;;;;;;;;;;:::i;:::-;;;;;;;;1324:2415;;;;3024:713;;;;;;;;;;-1:-1:-1;3024:713:1;;;;;:::i;:::-;;:::i;:::-;;2421:363:20;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2218:478:1;;;;;;;;;;-1:-1:-1;2218:478:1;;;;;:::i;:::-;;:::i;1751:461::-;;;;;;;;;;-1:-1:-1;1751:461:1;;;;;:::i;:::-;;:::i;2287:128:20:-;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3024:713:1:-;3134:31;;;;;:19;;;;;;:31;;3154:10;;3134:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3226:29:1;;;3176:35;3226:29;;;;;;;;;;;:41;;;;;;;;;3311:29;;;;;3226:41;;:29;3311:21;;:29;;1219:19:20;;3311:29:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3278:63;-1:-1:-1;3434:24:1;3372:42;;;;;:25;;;;;;:42;;3398:3;;3403:10;;3372:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:86;;;;;;;;;;;;;;;;;3351:154;;;;;;;;;;;;:::i;:::-;3516:21;3540:13;:18;;3516:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3568:23;3594:13;:20;;3568:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:9;3624:107;3648:4;:11;3644:1;:15;3624:107;;;3680:3;:20;;;3701:4;3706:1;3701:7;;;;;;;;;;;;;;;;;;;;;;3710:6;3717:1;3710:9;;;;;;;;;;;;;;;;;;;;;;3680:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3661:3;;;;;:::i;:::-;;;;3624:107;;;;3024:713;;;;;;:::o;2421:363:20:-;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;2218:478:1:-;2390:29;;;;;2357:22;;2390:21;;;;;;:29;;1219:19:20;;2390:29:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2357:63;;2430:19;2464:14;:31;;;2513:3;2542:4;2565;2587:10;2464:147;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2430:181;;2621:68;2638:3;2643:10;2655:4;2661:11;2674:14;2621:16;:68::i;:::-;2218:478;;;;;:::o;1751:461::-;1944:3;1391:28:27;1403:3;1408:10;1391:11;:28::i;:::-;1980::1;;::::1;1959:124;;;;;;;;;;;;:::i;:::-;2094:30;::::0;;;;:18:::1;::::0;::::1;::::0;::::1;::::0;:30:::1;::::0;2113:10;;2094:30:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2178:27;;;;;;;;2192:4;;2178:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;2178:27:1;;;-1:-1:-1;2178:27:1::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;::::1;::::0;;;2198:6;;;;;;2178:27;::::1;::::0;2198:6;;2178:27;2198:6;2178:27;::::1;;::::0;::::1;::::0;;;-1:-1:-1;2178:27:1;;;;-1:-1:-1;;2134:29:1::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;:41;;;;;;;;:71;;;;:41;;-1:-1:-1;2134:71:1::1;::::0;:41;;:71;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2134:71:1::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;;;;1751:461:1:o;2287:128:20:-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;2702:316:1:-;2894:44;;;;;:19;;;;;;:44;;2914:10;;2926:11;;2894:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2948:63:1;;;;;:40;;;;-1:-1:-1;2948:40:1;;-1:-1:-1;2948:63:1;;2989:3;;2994:10;;3006:4;;2948:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:316;;;;;:::o;1553:448:27:-;1652:20;;;;;1630:19;;1652:14;;;;;;:20;;1763:17:20;;1652:20:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1630:42;-1:-1:-1;1686:27:27;;;;1682:255;;1750:32;;;;;1729:18;;1750:25;;;;;;:32;;1776:5;;1750:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1729:53;;1881:1;1836:11;1822:36;;;1859:10;2080:7:20;1822:56:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;1797:129;;;;;;;;;;;;:::i;:::-;1682:255;;1954:25;;;;;:18;;;;;;:25;;1973:5;;1954:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1946:48;;;;;;;;;;;;:::i;:::-;1553:448;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:400:34;;;147:3;140:4;132:6;128:17;124:27;114:2;;170:6;162;155:22;114:2;-1:-1:-1;198:20:34;;241:18;230:30;;227:2;;;280:8;270;263:26;227:2;324:4;316:6;312:17;300:29;;387:3;380:4;372;364:6;360:17;352:6;348:30;344:41;341:50;338:2;;;404:1;401;394:12;338:2;104:310;;;;;:::o;419:263::-;;542:2;530:9;521:7;517:23;513:32;510:2;;;563:6;555;548:22;510:2;600:9;594:16;619:33;646:5;619:33;:::i;687:257::-;;807:2;795:9;786:7;782:23;778:32;775:2;;;828:6;820;813:22;775:2;865:9;859:16;884:30;908:5;884:30;:::i;949:347::-;;;1098:2;1086:9;1077:7;1073:23;1069:32;1066:2;;;1119:6;1111;1104:22;1066:2;1163:9;1150:23;1182:33;1209:5;1182:33;:::i;:::-;1234:5;1286:2;1271:18;;;;1258:32;;-1:-1:-1;;;1056:240:34:o;1301:1041::-;;;;;;;1554:3;1542:9;1533:7;1529:23;1525:33;1522:2;;;1576:6;1568;1561:22;1522:2;1620:9;1607:23;1639:33;1666:5;1639:33;:::i;:::-;1691:5;-1:-1:-1;1743:2:34;1728:18;;1715:32;;-1:-1:-1;1798:2:34;1783:18;;1770:32;1821:18;1851:14;;;1848:2;;;1883:6;1875;1868:22;1848:2;1927:76;1995:7;1986:6;1975:9;1971:22;1927:76;:::i;:::-;2022:8;;-1:-1:-1;1901:102:34;-1:-1:-1;2110:2:34;2095:18;;2082:32;;-1:-1:-1;2126:16:34;;;2123:2;;;2160:6;2152;2145:22;2123:2;;2204:78;2274:7;2263:8;2252:9;2248:24;2204:78;:::i;:::-;1512:830;;;;-1:-1:-1;1512:830:34;;-1:-1:-1;1512:830:34;;2301:8;;1512:830;-1:-1:-1;;;1512:830:34:o;2347:1241::-;;;;2522:2;2510:9;2501:7;2497:23;2493:32;2490:2;;;2543:6;2535;2528:22;2490:2;2587:9;2574:23;2606:33;2633:5;2606:33;:::i;:::-;2658:5;-1:-1:-1;2682:2:34;2716:18;;;2703:32;;-1:-1:-1;2786:2:34;2771:18;;2758:32;2809:18;2839:14;;;2836:2;;;2871:6;2863;2856:22;2836:2;2914:6;2903:9;2899:22;2889:32;;2959:7;2952:4;2948:2;2944:13;2940:27;2930:2;;2986:6;2978;2971:22;2930:2;3027;3014:16;3049:2;3045;3042:10;3039:2;;;3055:18;;:::i;:::-;3104:2;3098:9;3239:2;3169:66;3162:4;3158:2;3154:13;3150:86;3142:6;3138:99;3134:108;3292:6;3280:10;3277:22;3272:2;3260:10;3257:18;3254:46;3251:2;;;3303:18;;:::i;:::-;3339:2;3332:22;3363:18;;;3400:11;;;3396:20;;3393:33;-1:-1:-1;3390:2:34;;;3444:6;3436;3429:22;3390:2;3505;3500;3496;3492:11;3487:2;3479:6;3475:15;3462:46;3550:6;3545:2;3540;3532:6;3528:15;3524:24;3517:40;3576:6;3566:16;;;;;;;2480:1108;;;;;:::o;3593:296::-;;3732:2;3720:9;3711:7;3707:23;3703:32;3700:2;;;3753:6;3745;3738:22;3700:2;3790:9;3784:16;3829:1;3822:5;3819:12;3809:2;;3850:6;3842;3835:22;3894:194;;4017:2;4005:9;3996:7;3992:23;3988:32;3985:2;;;4038:6;4030;4023:22;3985:2;-1:-1:-1;4066:16:34;;3975:113;-1:-1:-1;3975:113:34:o;4093:258::-;;;4222:2;4210:9;4201:7;4197:23;4193:32;4190:2;;;4243:6;4235;4228:22;4190:2;-1:-1:-1;;4271:23:34;;;4341:2;4326:18;;;4313:32;;-1:-1:-1;4180:171:34:o;4356:389::-;;;;4499:2;4487:9;4478:7;4474:23;4470:32;4467:2;;;4520:6;4512;4505:22;4467:2;4561:9;4548:23;4538:33;;4618:2;4607:9;4603:18;4590:32;4580:42;;4672:2;4661:9;4657:18;4644:32;4685:30;4709:5;4685:30;:::i;:::-;4734:5;4724:15;;;4457:288;;;;;:::o;4750:536::-;;4831:5;4825:12;4858:6;4853:3;4846:19;4883:3;4895:162;4909:6;4906:1;4903:13;4895:162;;;4971:4;5027:13;;;5023:22;;5017:29;4999:11;;;4995:20;;4988:59;4924:12;4895:162;;;5075:6;5072:1;5069:13;5066:2;;;5141:3;5134:4;5125:6;5120:3;5116:16;5112:27;5105:40;5066:2;-1:-1:-1;5200:2:34;5188:15;5205:66;5184:88;5175:98;;;;5275:4;5171:109;;4801:485;-1:-1:-1;;4801:485:34:o;5291:226::-;5467:42;5455:55;;;;5437:74;;5425:2;5410:18;;5392:125::o;5522:327::-;5706:42;5775:15;;;5757:34;;5827:15;;5822:2;5807:18;;5800:43;5684:2;5669:18;;5651:198::o;5854:187::-;6019:14;;6012:22;5994:41;;5982:2;5967:18;;5949:92::o;6046:177::-;6192:25;;;6180:2;6165:18;;6147:76::o;6228:297::-;6402:25;;;6475:42;6463:55;6458:2;6443:18;;6436:83;6390:2;6375:18;;6357:168::o;6530:248::-;6704:25;;;6760:2;6745:18;;6738:34;6692:2;6677:18;;6659:119::o;6783:550::-;;7034:42;7115:2;7107:6;7103:15;7092:9;7085:34;7167:2;7159:6;7155:15;7150:2;7139:9;7135:18;7128:43;7207:3;7202:2;7191:9;7187:18;7180:31;7228:47;7270:3;7259:9;7255:19;7247:6;7228:47;:::i;:::-;7220:55;;7323:2;7315:6;7311:15;7306:2;7295:9;7291:18;7284:43;;7014:319;;;;;;;:::o;7338:325::-;7570:42;7558:55;;;;7540:74;;7645:2;7630:18;;7623:34;7528:2;7513:18;;7495:168::o;7668:438::-;;7911:42;7903:6;7899:55;7888:9;7881:74;7991:6;7986:2;7975:9;7971:18;7964:34;8034:2;8029;8018:9;8014:18;8007:30;8054:46;8096:2;8085:9;8081:18;8073:6;8054:46;:::i;:::-;8046:54;7871:235;-1:-1:-1;;;;;7871:235:34:o;8111:345::-;8313:2;8295:21;;;8352:2;8332:18;;;8325:30;8391:23;8386:2;8371:18;;8364:51;8447:2;8432:18;;8285:171::o;8461:334::-;8663:2;8645:21;;;8702:2;8682:18;;;8675:30;8741:12;8736:2;8721:18;;8714:40;8786:2;8771:18;;8635:160::o;8800:413::-;9002:2;8984:21;;;9041:2;9021:18;;;9014:30;9080:34;9075:2;9060:18;;9053:62;9151:19;9146:2;9131:18;;9124:47;9203:3;9188:19;;8974:239::o;9218:339::-;9420:2;9402:21;;;9459:2;9439:18;;;9432:30;9498:17;9493:2;9478:18;;9471:45;9548:2;9533:18;;9392:165::o;9744:128::-;;9815:1;9811:6;9808:1;9805:13;9802:2;;;9821:18;;:::i;:::-;-1:-1:-1;9857:9:34;;9792:80::o;9877:453::-;9973:6;9996:5;10010:314;10059:1;10096:2;10086:8;10083:16;10073:2;;10103:5;;;10073:2;10144:4;10139:3;10135:14;10129:4;10126:24;10123:2;;;10153:18;;:::i;:::-;10203:2;10193:8;10189:17;10186:2;;;10218:16;;;;10186:2;10297:17;;;;;10257:15;;10010:314;;;9954:376;;;;;;;:::o;10335:199::-;;10424:104;10461:66;10451:8;10445:4;10539:922;10623:8;10613:2;;-1:-1:-1;10664:1:34;10678:5;;10613:2;10712:4;10702:2;;-1:-1:-1;10749:1:34;10763:5;;10702:2;10794:4;10812:1;10807:59;;;;10880:1;10875:183;;;;10787:271;;10807:59;10837:1;10828:10;;10851:5;;;10875:183;10912:3;10902:8;10899:17;10896:2;;;10919:18;;:::i;:::-;10975:1;10965:8;10961:16;10952:25;;11003:3;10996:5;10993:14;10990:2;;;11010:18;;:::i;:::-;11043:5;;;10787:271;;11142:2;11132:8;11129:16;11123:3;11117:4;11114:13;11110:36;11104:2;11094:8;11091:16;11086:2;11080:4;11077:12;11073:35;11070:77;11067:2;;;-1:-1:-1;11179:19:34;;;11214:14;;;11211:2;;;11231:18;;:::i;11067:2::-;11311:42;11349:3;11339:8;11333:4;11330:1;11311:42;:::i;:::-;11386:6;11381:3;11377:16;11368:7;11365:29;11362:2;;;11397:18;;:::i;:::-;11435:20;;10603:858;-1:-1:-1;;;;10603:858:34:o;11466:125::-;;11534:1;11531;11528:8;11525:2;;;11539:18;;:::i;:::-;-1:-1:-1;11576:9:34;;11515:76::o;11596:195::-;;11666:66;11659:5;11656:77;11653:2;;;11736:18;;:::i;:::-;-1:-1:-1;11783:1:34;11772:13;;11643:148::o;11796:266::-;;11854:1;11844:2;;11889:77;11886:1;11879:88;11990:4;11987:1;11980:15;12018:4;12015:1;12008:15;11844:2;-1:-1:-1;12047:9:34;;11834:228::o;12067:184::-;12119:77;12116:1;12109:88;12216:4;12213:1;12206:15;12240:4;12237:1;12230:15;12256:184;12308:77;12305:1;12298:88;12405:4;12402:1;12395:15;12429:4;12426:1;12419:15;12445:156;12533:42;12526:5;12522:54;12515:5;12512:65;12502:2;;12591:1;12588;12581:12;12502:2;12492:109;:::o;12606:120::-;12694:5;12687:13;12680:21;12673:5;12670:32;12660:2;;12716:1;12713;12706:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../guards/MemberGuard.sol\";\nimport \"./interfaces/IConfiguration.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract ConfigurationContract is IConfiguration, DaoConstants, MemberGuard {\n    struct Configuration {\n        bytes32[] keys;\n        uint256[] values;\n    }\n\n    mapping(address => mapping(bytes32 => Configuration))\n        private _configurations;\n\n    /*\n     * default fallback function to prevent from sending ether to the contract\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    function submitConfigurationProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes32[] calldata keys,\n        uint256[] calldata values\n    ) external override onlyMember(dao) {\n        require(\n            keys.length == values.length,\n            \"must be an equal number of config keys and values\"\n        );\n\n        dao.submitProposal(proposalId);\n        _configurations[address(dao)][proposalId] = Configuration(keys, values);\n    }\n\n    function sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data\n    ) external override {\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        address sponsoredBy =\n            votingContract.getSenderAddress(\n                dao,\n                address(this),\n                data,\n                msg.sender\n            );\n        _sponsorProposal(dao, proposalId, data, sponsoredBy, votingContract);\n    }\n\n    function _sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data,\n        address sponsoredBy,\n        IVoting votingContract\n    ) internal {\n        dao.sponsorProposal(proposalId, sponsoredBy);\n        votingContract.startNewVotingForProposal(dao, proposalId, data);\n    }\n\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n    {\n        dao.processProposal(proposalId);\n\n        Configuration storage configuration =\n            _configurations[address(dao)][proposalId];\n\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        require(\n            votingContract.voteResult(dao, proposalId) ==\n                IVoting.VotingState.PASS,\n            \"proposal did not pass\"\n        );\n\n        bytes32[] memory keys = configuration.keys;\n        uint256[] memory values = configuration.values;\n        for (uint256 i = 0; i < keys.length; i++) {\n            dao.setConfiguration(keys[i], values[i]);\n        }\n    }\n}\n",
  "sourcePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Configuration.sol",
  "ast": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Configuration.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "ConfigurationContract": [
        287
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "IConfiguration": [
        3507
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 6255,
        "src": "58:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 8219,
        "src": "93:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 41,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 9429,
        "src": "127:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol",
        "file": "./interfaces/IConfiguration.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 3508,
        "src": "163:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 3782,
        "src": "205:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45,
              "name": "IConfiguration",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3507,
              "src": "1358:14:1"
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "1358:14:1"
          },
          {
            "baseName": {
              "id": 47,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1374:12:1"
            },
            "id": 48,
            "nodeType": "InheritanceSpecifier",
            "src": "1374:12:1"
          },
          {
            "baseName": {
              "id": 49,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1388:11:1"
            },
            "id": 50,
            "nodeType": "InheritanceSpecifier",
            "src": "1388:11:1"
          }
        ],
        "contractDependencies": [
          3507,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 44,
          "nodeType": "StructuredDocumentation",
          "src": "251:1071:1",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 287,
        "linearizedBaseContracts": [
          287,
          9428,
          6254,
          3507
        ],
        "name": "ConfigurationContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ConfigurationContract.Configuration",
            "id": 57,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "keys",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1437:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 51,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 52,
                  "nodeType": "ArrayTypeName",
                  "src": "1437:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "values",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1461:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ArrayTypeName",
                  "src": "1461:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Configuration",
            "nodeType": "StructDefinition",
            "scope": 287,
            "src": "1406:78:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "_configurations",
            "nodeType": "VariableDeclaration",
            "scope": 287,
            "src": "1490:85:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration))"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1498:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1490:53:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration))"
              },
              "valueType": {
                "id": 62,
                "keyType": {
                  "id": 59,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1517:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1509:33:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                  "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration)"
                },
                "valueType": {
                  "id": 61,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 60,
                    "name": "Configuration",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 57,
                    "src": "1528:13:1"
                  },
                  "referencedDeclaration": 57,
                  "src": "1528:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                    "typeString": "struct ConfigurationContract.Configuration"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "1703:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 67,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1713:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:25:1"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:0:1"
            },
            "scope": 287,
            "src": "1676:69:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3488
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1949:263:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 91,
                            "name": "keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "1980:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1980:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 93,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1995:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1995:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1980:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520616e20657175616c206e756d626572206f6620636f6e666967206b65797320616e642076616c756573",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        },
                        "value": "must be an equal number of config keys and values"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1959:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:124:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:124:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2113:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 99,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "2094:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "2094:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:30:1"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 105,
                          "name": "_configurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2134:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration storage ref))"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 108,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "2158:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2150:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 106,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2134:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                          "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration storage ref)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 110,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2164:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2134:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage",
                        "typeString": "struct ConfigurationContract.Configuration storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 114,
                          "name": "keys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "2192:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          }
                        },
                        {
                          "id": 115,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2198:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        ],
                        "id": 113,
                        "name": "Configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "2178:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Configuration_$57_storage_ptr_$",
                          "typeString": "type(struct ConfigurationContract.Configuration storage pointer)"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2178:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_memory_ptr",
                        "typeString": "struct ConfigurationContract.Configuration memory"
                      }
                    },
                    "src": "2134:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$57_storage",
                      "typeString": "struct ConfigurationContract.Configuration storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:71:1"
                }
              ]
            },
            "functionSelector": "f1e96a05",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 87,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "1944:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 88,
                "modifierName": {
                  "id": 86,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9361,
                  "src": "1933:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1933:15:1"
              }
            ],
            "name": "submitConfigurationProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 85,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1924:8:1"
            },
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1797:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 74,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "1797:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "1797:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1822:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "keys",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1850:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1850:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 79,
                    "nodeType": "ArrayTypeName",
                    "src": "1850:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1883:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1883:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "1883:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1787:127:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:0:1"
            },
            "scope": 287,
            "src": "1751:461:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3498
            ],
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2347:349:1",
              "statements": [
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "2357:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 131,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "2357:7:1"
                        },
                        "referencedDeclaration": 3781,
                        "src": "2357:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 137,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "2412:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 135,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2390:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "2390:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2390:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 134,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "2382:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2357:63:1"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "2430:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2430:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2513:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 148,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2542:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConfigurationContract_$287",
                              "typeString": "contract ConfigurationContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConfigurationContract_$287",
                              "typeString": "contract ConfigurationContract"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2534:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2534:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 150,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2565:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2587:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2587:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2464:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "2464:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:147:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2430:181:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2638:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 157,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2643:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 158,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2655:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 159,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "2661:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 160,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2674:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 155,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "2621:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2621:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:68:1"
                }
              ]
            },
            "functionSelector": "cd0e42ed",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:1"
            },
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2252:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 121,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2252:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2252:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2277:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2277:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2305:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:86:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:0:1"
            },
            "scope": 287,
            "src": "2218:478:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2884:134:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2914:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 183,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2926:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2894:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "2894:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2989:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 190,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2994:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 191,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3006:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 186,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2948:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "2948:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:63:1"
                }
              ]
            },
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2737:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 166,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 165,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2737:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2737:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2762:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2790:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2817:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2846:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 175,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 174,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "2846:7:1"
                    },
                    "referencedDeclaration": 3781,
                    "src": "2846:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:147:1"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2884:0:1"
            },
            "scope": 287,
            "src": "2702:316:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3506
            ],
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "3124:613:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 207,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "3154:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 204,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "3134:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "3134:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:31:1"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "configuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3176:35:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration"
                      },
                      "typeName": {
                        "id": 211,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 210,
                          "name": "Configuration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "3176:13:1"
                        },
                        "referencedDeclaration": 57,
                        "src": "3176:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                          "typeString": "struct ConfigurationContract.Configuration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 221,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 213,
                        "name": "_configurations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3226:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration storage ref))"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 216,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3250:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3242:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3242:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3242:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3226:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration storage ref)"
                      }
                    },
                    "id": 220,
                    "indexExpression": {
                      "id": 219,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "3256:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3226:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$57_storage",
                      "typeString": "struct ConfigurationContract.Configuration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3176:91:1"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3278:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 222,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3278:7:1"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3278:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3333:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 226,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3311:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3311:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3311:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3303:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:63:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 235,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3398:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 236,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3403:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 233,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "3372:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "3372:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3372:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 238,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "3434:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "3434:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "3434:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "3372:86:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3472:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:154:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:154:1"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "keys",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3516:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 247,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3516:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 248,
                        "nodeType": "ArrayTypeName",
                        "src": "3516:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "expression": {
                      "id": 250,
                      "name": "configuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3540:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration storage pointer"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "keys",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "3540:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3516:42:1"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "values",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3568:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3568:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 256,
                        "nodeType": "ArrayTypeName",
                        "src": "3568:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "expression": {
                      "id": 258,
                      "name": "configuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3594:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration storage pointer"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "values",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "3594:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3568:46:1"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3666:65:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 275,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "3701:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 277,
                              "indexExpression": {
                                "id": 276,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "3706:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3701:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 278,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "3710:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 280,
                              "indexExpression": {
                                "id": 279,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "3717:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3710:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 272,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3680:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setConfiguration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6843,
                            "src": "3680:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256) external"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3680:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:40:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 265,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3644:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 266,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3648:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3648:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3644:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 284,
                  "initializationExpression": {
                    "assignments": [
                      262
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "3629:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3629:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 264,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3641:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3629:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3661:3:1",
                      "subExpression": {
                        "id": 269,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3661:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 271,
                    "nodeType": "ExpressionStatement",
                    "src": "3661:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3624:107:1"
                }
              ]
            },
            "functionSelector": "9573167d",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3111:8:1"
            },
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "3049:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 197,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 196,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3049:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3049:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "3066:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3048:37:1"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3124:0:1"
            },
            "scope": 287,
            "src": "3024:713:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 288,
        "src": "1324:2415:1"
      }
    ],
    "src": "0:3740:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Configuration.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "ConfigurationContract": [
        287
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "IConfiguration": [
        3507
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 288,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 38,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 39,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 6255,
        "src": "58:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 40,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 8219,
        "src": "93:33:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 41,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 9429,
        "src": "127:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IConfiguration.sol",
        "file": "./interfaces/IConfiguration.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 3508,
        "src": "163:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 43,
        "nodeType": "ImportDirective",
        "scope": 288,
        "sourceUnit": 3782,
        "src": "205:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 45,
              "name": "IConfiguration",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3507,
              "src": "1358:14:1"
            },
            "id": 46,
            "nodeType": "InheritanceSpecifier",
            "src": "1358:14:1"
          },
          {
            "baseName": {
              "id": 47,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1374:12:1"
            },
            "id": 48,
            "nodeType": "InheritanceSpecifier",
            "src": "1374:12:1"
          },
          {
            "baseName": {
              "id": 49,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1388:11:1"
            },
            "id": 50,
            "nodeType": "InheritanceSpecifier",
            "src": "1388:11:1"
          }
        ],
        "contractDependencies": [
          3507,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 44,
          "nodeType": "StructuredDocumentation",
          "src": "251:1071:1",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 287,
        "linearizedBaseContracts": [
          287,
          9428,
          6254,
          3507
        ],
        "name": "ConfigurationContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ConfigurationContract.Configuration",
            "id": 57,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "keys",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1437:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 51,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 52,
                  "nodeType": "ArrayTypeName",
                  "src": "1437:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 56,
                "mutability": "mutable",
                "name": "values",
                "nodeType": "VariableDeclaration",
                "scope": 57,
                "src": "1461:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 54,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1461:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ArrayTypeName",
                  "src": "1461:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                    "typeString": "uint256[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Configuration",
            "nodeType": "StructDefinition",
            "scope": 287,
            "src": "1406:78:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 64,
            "mutability": "mutable",
            "name": "_configurations",
            "nodeType": "VariableDeclaration",
            "scope": 287,
            "src": "1490:85:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration))"
            },
            "typeName": {
              "id": 63,
              "keyType": {
                "id": 58,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1498:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1490:53:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration))"
              },
              "valueType": {
                "id": 62,
                "keyType": {
                  "id": 59,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1517:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1509:33:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                  "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration)"
                },
                "valueType": {
                  "id": 61,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 60,
                    "name": "Configuration",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 57,
                    "src": "1528:13:1"
                  },
                  "referencedDeclaration": 57,
                  "src": "1528:13:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                    "typeString": "struct ConfigurationContract.Configuration"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "1703:42:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1720:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 67,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1713:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "1713:25:1"
                }
              ]
            },
            "id": 72,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:2:1"
            },
            "returnParameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1703:0:1"
            },
            "scope": 287,
            "src": "1676:69:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3488
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1949:263:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 91,
                            "name": "keys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "1980:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 92,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1980:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 93,
                            "name": "values",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "1995:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1995:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1980:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520616e20657175616c206e756d626572206f6620636f6e666967206b65797320616e642076616c756573",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2022:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        },
                        "value": "must be an equal number of config keys and values"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b17c701adb56bbaf640d24261aeeca5996f44a6ded15dc1580c4b903eda2b6d7",
                          "typeString": "literal_string \"must be an equal number of config keys and values\""
                        }
                      ],
                      "id": 90,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1959:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1959:124:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:124:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 102,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2113:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 99,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "2094:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "2094:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:30:1"
                },
                {
                  "expression": {
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 105,
                          "name": "_configurations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2134:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration storage ref))"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 108,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "2158:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            ],
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2150:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 106,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2150:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2150:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2134:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                          "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration storage ref)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 110,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "2164:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2134:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage",
                        "typeString": "struct ConfigurationContract.Configuration storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 114,
                          "name": "keys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80,
                          "src": "2192:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          }
                        },
                        {
                          "id": 115,
                          "name": "values",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2198:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                            "typeString": "bytes32[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                            "typeString": "uint256[] calldata"
                          }
                        ],
                        "id": 113,
                        "name": "Configuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "2178:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Configuration_$57_storage_ptr_$",
                          "typeString": "type(struct ConfigurationContract.Configuration storage pointer)"
                        }
                      },
                      "id": 116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2178:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_memory_ptr",
                        "typeString": "struct ConfigurationContract.Configuration memory"
                      }
                    },
                    "src": "2134:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$57_storage",
                      "typeString": "struct ConfigurationContract.Configuration storage ref"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:71:1"
                }
              ]
            },
            "functionSelector": "f1e96a05",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 87,
                    "name": "dao",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 75,
                    "src": "1944:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  }
                ],
                "id": 88,
                "modifierName": {
                  "id": 86,
                  "name": "onlyMember",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9361,
                  "src": "1933:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1933:15:1"
              }
            ],
            "name": "submitConfigurationProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 85,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1924:8:1"
            },
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1797:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 74,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "1797:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "1797:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1822:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "mutability": "mutable",
                  "name": "keys",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1850:23:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1850:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 79,
                    "nodeType": "ArrayTypeName",
                    "src": "1850:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "values",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1883:25:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 81,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1883:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82,
                    "nodeType": "ArrayTypeName",
                    "src": "1883:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1787:127:1"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1949:0:1"
            },
            "scope": 287,
            "src": "1751:461:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3498
            ],
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2347:349:1",
              "statements": [
                {
                  "assignments": [
                    133
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "2357:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 132,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 131,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "2357:7:1"
                        },
                        "referencedDeclaration": 3781,
                        "src": "2357:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 137,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "2412:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 135,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2390:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "2390:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2390:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 134,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "2382:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2382:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2357:63:1"
                },
                {
                  "assignments": [
                    142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 142,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "2430:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2430:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2513:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 148,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2542:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConfigurationContract_$287",
                              "typeString": "contract ConfigurationContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConfigurationContract_$287",
                              "typeString": "contract ConfigurationContract"
                            }
                          ],
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2534:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 146,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2534:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2534:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 150,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2565:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 151,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2587:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2587:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 143,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2464:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "2464:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:147:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2430:181:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 156,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2638:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 157,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2643:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 158,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2655:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 159,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "2661:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 160,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "2674:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 155,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "2621:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2621:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:68:1"
                }
              ]
            },
            "functionSelector": "cd0e42ed",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 129,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:1"
            },
            "parameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2252:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 122,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 121,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2252:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2252:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2277:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2277:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2305:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2242:86:1"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2347:0:1"
            },
            "scope": 287,
            "src": "2218:478:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 194,
              "nodeType": "Block",
              "src": "2884:134:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2914:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 183,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2926:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2894:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "2894:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:44:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 189,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2989:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 190,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2994:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 191,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "3006:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 186,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2948:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "2948:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:63:1"
                }
              ]
            },
            "id": 195,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2737:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 166,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 165,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2737:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2737:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2762:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2790:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2817:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2846:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 175,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 174,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "2846:7:1"
                    },
                    "referencedDeclaration": 3781,
                    "src": "2846:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:147:1"
            },
            "returnParameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2884:0:1"
            },
            "scope": 287,
            "src": "2702:316:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3506
            ],
            "body": {
              "id": 285,
              "nodeType": "Block",
              "src": "3124:613:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 207,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "3154:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 204,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "3134:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "3134:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:31:1"
                },
                {
                  "assignments": [
                    212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "configuration",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3176:35:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration"
                      },
                      "typeName": {
                        "id": 211,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 210,
                          "name": "Configuration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 57,
                          "src": "3176:13:1"
                        },
                        "referencedDeclaration": 57,
                        "src": "3176:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                          "typeString": "struct ConfigurationContract.Configuration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 221,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 213,
                        "name": "_configurations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "3226:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct ConfigurationContract.Configuration storage ref))"
                        }
                      },
                      "id": 218,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 216,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3250:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3242:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3242:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3242:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3226:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Configuration_$57_storage_$",
                        "typeString": "mapping(bytes32 => struct ConfigurationContract.Configuration storage ref)"
                      }
                    },
                    "id": 220,
                    "indexExpression": {
                      "id": 219,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 200,
                      "src": "3256:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3226:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Configuration_$57_storage",
                      "typeString": "struct ConfigurationContract.Configuration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3176:91:1"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3278:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 223,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 222,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3278:7:1"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3278:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 228,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3333:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 226,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "3311:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3311:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3311:29:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 225,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3303:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3303:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3278:63:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 235,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3398:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 236,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 200,
                              "src": "3403:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 233,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "3372:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "3372:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3372:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 238,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "3434:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "3434:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "3434:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "3372:86:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c20646964206e6f742070617373",
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3472:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        },
                        "value": "proposal did not pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25cc46dd88f29380d7545bba67397677dab8b7b9334217b84998a747c68c8dda",
                          "typeString": "literal_string \"proposal did not pass\""
                        }
                      ],
                      "id": 232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3351:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3351:154:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:154:1"
                },
                {
                  "assignments": [
                    249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "keys",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3516:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 247,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3516:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 248,
                        "nodeType": "ArrayTypeName",
                        "src": "3516:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 252,
                  "initialValue": {
                    "expression": {
                      "id": 250,
                      "name": "configuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3540:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration storage pointer"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "keys",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 53,
                    "src": "3540:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3516:42:1"
                },
                {
                  "assignments": [
                    257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 257,
                      "mutability": "mutable",
                      "name": "values",
                      "nodeType": "VariableDeclaration",
                      "scope": 285,
                      "src": "3568:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3568:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 256,
                        "nodeType": "ArrayTypeName",
                        "src": "3568:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 260,
                  "initialValue": {
                    "expression": {
                      "id": 258,
                      "name": "configuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "3594:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Configuration_$57_storage_ptr",
                        "typeString": "struct ConfigurationContract.Configuration storage pointer"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "values",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 56,
                    "src": "3594:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3568:46:1"
                },
                {
                  "body": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3666:65:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 275,
                                "name": "keys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 249,
                                "src": "3701:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              "id": 277,
                              "indexExpression": {
                                "id": 276,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "3706:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3701:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 278,
                                "name": "values",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 257,
                                "src": "3710:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 280,
                              "indexExpression": {
                                "id": 279,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 262,
                                "src": "3717:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3710:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 272,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "3680:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setConfiguration",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6843,
                            "src": "3680:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256) external"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3680:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "3680:40:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 265,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3644:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 266,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 249,
                        "src": "3648:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3648:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3644:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 284,
                  "initializationExpression": {
                    "assignments": [
                      262
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 284,
                        "src": "3629:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3629:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 264,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3641:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3629:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3661:3:1",
                      "subExpression": {
                        "id": 269,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "3661:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 271,
                    "nodeType": "ExpressionStatement",
                    "src": "3661:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3624:107:1"
                }
              ]
            },
            "functionSelector": "9573167d",
            "id": 286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3111:8:1"
            },
            "parameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "3049:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 197,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 196,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3049:11:1"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3049:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 286,
                  "src": "3066:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3048:37:1"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3124:0:1"
            },
            "scope": 287,
            "src": "3024:713:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 288,
        "src": "1324:2415:1"
      }
    ],
    "src": "0:3740:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T09:36:52.531Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}