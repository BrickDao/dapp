{
  "contractName": "FinancingContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "details",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "details",
          "type": "bytes32"
        }
      ],
      "name": "createFinancingRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "sponsorProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "proposalId",
          "type": "bytes32"
        }
      ],
      "name": "processProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"details\",\"type\":\"bytes32\"}],\"name\":\"createFinancingRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"}],\"name\":\"processProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"details\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"proposalId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sponsorProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createFinancingRequest(address,bytes32,address,address,uint256,bytes32)\":{\"details\":\"Applicant address must not be reserved.Token address must be allowed/supported by the DAO Bank.Requested amount must be greater than zero.\",\"params\":{\"amount\":\"The desired amount.\",\"applicant\":\"The applicant address.\",\"dao\":\"The DAO Address.\",\"details\":\"Additional detais about the financing proposal.\",\"proposalId\":\"The proposal id.\",\"token\":\"The token to receive the funds.\"}},\"processProposal(address,bytes32)\":{\"details\":\"Only proposals that were not processed are accepted.Only proposals that were sponsored are accepted.Only proposals that passed can get processed and have the funds released.\",\"params\":{\"dao\":\"The DAO Address.\",\"proposalId\":\"The proposal id.\"}},\"sponsorProposal(address,bytes32,bytes)\":{\"details\":\"Only members of the DAO can sponsor a financing proposal.\",\"params\":{\"dao\":\"The DAO Address.\",\"data\":\"Additional details about the sponsorship process.\",\"proposalId\":\"The proposal id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createFinancingRequest(address,bytes32,address,address,uint256,bytes32)\":{\"notice\":\"Creates a financing proposal.\"},\"processProposal(address,bytes32)\":{\"notice\":\"Processing a financing proposal to grant the requested funds.\"},\"sponsorProposal(address,bytes32,bytes)\":{\"notice\":\"Sponsor a financing proposal to start the voting process.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Financing.sol\":\"FinancingContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Financing.sol\":{\"keccak256\":\"0x347155da4c2e489e207d3ce1f4ed14453ade69eee5e11270072f7c5809087dec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8472fddd23334d946b581322f7e9bef5ad139bbe12758dd1b0c7ee88c29ebd6c\",\"dweb:/ipfs/QmPvBDtUdmP5aLwu3Z7cL8aRYoo8o8qCpZ5SyouPNFjXz8\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IFinancing.sol\":{\"keccak256\":\"0x63e821224338f8fc439d453ee4bc515ead48f8e2ed69be7a00c5c855a60dac4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da130438a206fde27ccb90b715bbdc69ed073034f9ac597ad71cb5140643008d\",\"dweb:/ipfs/QmbJquL18poDv9yAvZ5ofFjLA62Ux9Q8QNDv6f7nAGbbAw\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol\":{\"keccak256\":\"0x2b65fd03c04db3db5d73f5e007ca84075fc664c1da4d3f3c77b5c288c9d7bac1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d1728a85344abf1f3f11b0838c5b29169a38bfa9918f7b8f813079f79b9cbfb\",\"dweb:/ipfs/QmRSarYr4TDaAzPELomqWLTGxkvsbgKdjdd9GwKWDEr1vh\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100695760003560e01c8063c330a52011610043578063c330a52014610136578063cd0e42ed14610156578063fc25803114610176576100a9565b80635cb75276146100ae5780639573167d146100e7578063b244a41d14610109576100a9565b366100a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a090611191565b60405180910390fd5b600080fd5b3480156100ba57600080fd5b506100ce6100c9366004610d00565b6101a3565b6040516100de9493929190610fcd565b60405180910390f35b3480156100f357600080fd5b50610107610102366004610d47565b6101ed565b005b34801561011557600080fd5b50610129610124366004610eda565b61066d565b6040516100de919061100f565b34801561014257600080fd5b50610107610151366004610d59565b6106c9565b34801561016257600080fd5b50610107610171366004610dbd565b610a7b565b34801561018257600080fd5b50610196610191366004610eb9565b610beb565b6040516100de9190611004565b6000602081815292815260408082209093529081522080546001820154600283015460039093015473ffffffffffffffffffffffffffffffffffffffff9283169391929091169084565b73ffffffffffffffffffffffffffffffffffffffff80831660008181526020818152604080832086845282528083208151608081018352815487168152600182015493810193909352600281015490951682820152600390940154606082015292517f17ba7d850000000000000000000000000000000000000000000000000000000081529091906317ba7d85906102a9907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab39060040161100f565b60206040518083038186803b1580156102c157600080fd5b505afa1580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610ce4565b905060026040517f76225e7300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906376225e73906103519088908890600401611088565b602060405180830381600087803b15801561036b57600080fd5b505af115801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a39190610e9a565b60058111156103db577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610412576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a09061115a565b6040517f30490e9100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516906330490e919061046490869060040161100f565b600060405180830381600087803b15801561047e57600080fd5b505af1158015610492573d6000803e3d6000fd5b50506040517f593e96b60000000000000000000000000000000000000000000000000000000081526000925073ffffffffffffffffffffffffffffffffffffffff8716915063593e96b69061050b907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a09060040161100f565b60206040518083038186803b15801561052357600080fd5b505afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190610ce4565b90508073ffffffffffffffffffffffffffffffffffffffff1663e3a05cc161dead856040015186602001516040518463ffffffff1660e01b81526004016105a493929190610f9c565b600060405180830381600087803b1580156105be57600080fd5b505af11580156105d2573d6000803e3d6000fd5b50508451604080870151602088015191517fc57d5fe900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8716955063c57d5fe99450610634939290600401610f9c565b600060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050505050505050565b600081151561067c8585610beb565b1515146106bf5781156106a55761069483600261125b565b61069e90856111fd565b90506106c2565b6106b083600261125b565b61069e9085611342565b6106c2565b50825b9392505050565b60008211610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a0906110ec565b6040517f593e96b600000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff88169063593e96b690610778907fea0ca03c7adbe41dc655fec28a9209dc8e6e042f3d991a67765ba285b9cf73a09060040161100f565b60206040518083038186803b15801561079057600080fd5b505afa1580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610ce4565b6040517ff9eaee0d00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff82169063f9eaee0d9061081d908790600401610f7b565b60206040518083038186803b15801561083557600080fd5b505afa158015610849573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086d9190610d2b565b6108a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a090611123565b6040517fef6a249900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063ef6a2499906108f5908890600401610f7b565b60206040518083038186803b15801561090d57600080fd5b505afa158015610921573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109459190610d2b565b61097b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a0906111c8565b6040517fb73dc38900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063b73dc389906109cd90899060040161100f565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b50505073ffffffffffffffffffffffffffffffffffffffff9788166000908152602081815260408083209983529890529690962080549588167fffffffffffffffffffffffff0000000000000000000000000000000000000000968716178155600181019390935550600382015560020180549190941691161790915550565b6040517f17ba7d8500000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906317ba7d8590610af0907f0e49311626a26ba5be58a3b13d239908e80ce0dffdd5c50bf1d9c82ff35d1ab39060040161100f565b60206040518083038186803b158015610b0857600080fd5b505afa158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190610ce4565b905060008173ffffffffffffffffffffffffffffffffffffffff1663966917d0863086336040518563ffffffff1660e01b8152600401610b83949392919061103c565b602060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190610ce4565b9050610be48585858486610c08565b5050505050565b6000610bfe600260ff841685901c611359565b6001149392505050565b6040517f815a2bf400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169063815a2bf490610c5c9087908690600401611018565b600060405180830381600087803b158015610c7657600080fd5b505af1158015610c8a573d6000803e3d6000fd5b50506040517f2b0974d000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169250632b0974d09150610634908890889088906004016110ae565b600060208284031215610cf5578081fd5b81516106c2816113f0565b60008060408385031215610d12578081fd5b8235610d1d816113f0565b946020939093013593505050565b600060208284031215610d3c578081fd5b81516106c281611415565b60008060408385031215610d12578182fd5b60008060008060008060c08789031215610d71578182fd5b8635610d7c816113f0565b9550602087013594506040870135610d93816113f0565b93506060870135610da3816113f0565b9598949750929560808101359460a0909101359350915050565b600080600060608486031215610dd1578283fd5b8335610ddc816113f0565b92506020848101359250604085013567ffffffffffffffff80821115610e00578384fd5b818701915087601f830112610e13578384fd5b813581811115610e2557610e256113c1565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610e6657610e666113c1565b60405281815283820185018a1015610e7c578586fd5b81858501868301378585838301015280955050505050509250925092565b600060208284031215610eab578081fd5b8151600681106106c2578182fd5b60008060408385031215610ecb578182fd5b50508035926020909101359150565b600080600060608486031215610eee578283fd5b83359250602084013591506040840135610f0781611415565b809150509250925092565b60008151808452815b81811015610f3757602081850181015186830182015201610f1b565b81811115610f485782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff9485168152602081019390935292166040820152606081019190915260800190565b901515815260200190565b90815260200190565b91825273ffffffffffffffffffffffffffffffffffffffff16602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152608060408401526110746080840186610f12565b915080841660608401525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b600073ffffffffffffffffffffffffffffffffffffffff85168252836020830152606060408301526110e36060830184610f12565b95945050505050565b60208082526018908201527f696e76616c69642072657175657374656420616d6f756e740000000000000000604082015260600190565b60208082526011908201527f746f6b656e206e6f7420616c6c6f776564000000000000000000000000000000604082015260600190565b60208082526016908201527f70726f706f73616c206e6565647320746f207061737300000000000000000000604082015260600190565b6020808252600f908201527f66616c6c6261636b207265766572740000000000000000000000000000000000604082015260600190565b6020808252818101527f6170706c6963616e74207573696e672072657365727665642061646472657373604082015260600190565b6000821982111561121057611210611392565b500190565b80825b60018086116112275750611252565b81870482111561123957611239611392565b8086161561124657918102915b9490941c938002611218565b94509492505050565b60006106c27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484600082611292575060016106c2565b8161129f575060006106c2565b81600181146112b557600281146112bf576112ec565b60019150506106c2565b60ff8411156112d0576112d0611392565b6001841b9150848211156112e6576112e6611392565b506106c2565b5060208310610133831016604e8410600b841016171561131a575081810a838111156106ba576106ba611392565b6113278484846001611215565b80860482111561133957611339611392565b02949350505050565b60008282101561135457611354611392565b500390565b60008261138d577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461141257600080fd5b50565b801515811461141257600080fdfea2646970667358221220e5149b0c521af45db171e028f18098692d408ac7597dbea01dca27cef812766a64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12584:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "241:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "214:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "214:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "256:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "266:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "256:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:34",
                "type": ""
              }
            ],
            "src": "14:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "369:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "424:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "432:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "417:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "417:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "417:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "390:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "399:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "386:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "386:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "382:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "379:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "450:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "463:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "454:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "522:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "495:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "537:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "547:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "588:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "599:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "571:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "327:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "338:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "350:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "358:6:34",
                "type": ""
              }
            ],
            "src": "282:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "692:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "738:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "747:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "755:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "740:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "740:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "740:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "713:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "722:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "705:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "702:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "773:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "792:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "786:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "777:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "835:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "811:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "811:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "811:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "850:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "860:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "658:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "669:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "681:6:34",
                "type": ""
              }
            ],
            "src": "614:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "983:240:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1029:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1038:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1046:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1031:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1031:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1031:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1004:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1013:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1000:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1000:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1025:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "996:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "993:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1064:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1077:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1068:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1136:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1109:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1109:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1109:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1151:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1161:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1151:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1175:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1202:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1213:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1198:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1198:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1185:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1185:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1175:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "941:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "952:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "964:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "972:6:34",
                "type": ""
              }
            ],
            "src": "876:347:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1403:597:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1450:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1459:6:34"
                            },
                            {
                              "name": "value4",
                              "nodeType": "YulIdentifier",
                              "src": "1467:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1452:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1452:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1452:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1424:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1433:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1420:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1420:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1445:3:34",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1416:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1413:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1485:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1511:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1498:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1498:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1489:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1557:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1530:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1530:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1572:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1582:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1572:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1596:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1623:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1634:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1619:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1606:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1606:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1647:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1679:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1690:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1675:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1675:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1662:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1662:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1651:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1730:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1703:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1747:17:34",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1757:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1747:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1773:47:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1805:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1816:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1801:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1801:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1788:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1788:32:34"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1777:7:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "1856:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1829:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:35:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1829:35:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1873:17:34",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1883:7:34"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1873:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1899:43:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1926:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1937:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1922:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1922:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1909:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1909:33:34"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1899:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1951:43:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1978:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1989:3:34",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1974:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1961:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:33:34"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1951:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_addresst_addresst_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1329:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1340:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1352:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1360:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1368:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1376:6:34",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1384:6:34",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1392:6:34",
                "type": ""
              }
            ],
            "src": "1228:772:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2138:1108:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2184:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2193:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2201:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2186:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2186:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2186:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2159:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2168:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2155:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2155:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2180:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2151:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2151:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2148:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2219:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2245:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2232:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2232:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2223:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2291:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2264:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2264:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2264:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2306:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2316:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2306:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2330:12:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2340:2:34",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2334:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2351:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2378:9:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2389:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2374:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2374:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2361:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2361:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2351:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2402:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2433:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2444:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2416:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2416:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2406:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2457:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2467:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2461:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2512:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2521:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2529:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2514:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2514:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2514:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2500:6:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2508:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2497:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2494:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2547:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2561:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2557:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:22:34"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2551:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2627:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2636:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2644:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2629:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2629:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2629:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2606:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2610:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2602:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2602:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2617:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2598:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2591:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2591:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2588:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2662:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2685:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2672:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2672:16:34"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2666:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2711:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2713:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2713:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2713:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2703:2:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2707:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2700:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2700:10:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2697:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2742:23:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2762:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2756:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:9:34"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2746:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2774:126:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2800:6:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2816:2:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2820:4:34",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2812:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2812:13:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2827:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2808:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2808:86:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2796:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2796:99:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2897:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2792:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2792:108:34"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2778:10:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2959:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2961:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2961:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2961:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2918:10:34"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2930:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2915:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2915:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2938:10:34"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2950:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2935:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2935:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2912:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:46:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2909:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2997:2:34",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "3001:10:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2990:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2990:22:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2990:22:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "3028:6:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3036:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3021:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3021:18:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3021:18:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3085:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3094:6:34"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "3102:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3087:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3087:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3087:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "3062:2:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3066:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3058:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3058:11:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3071:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3054:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3054:20:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3076:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3051:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3051:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3048:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3137:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3145:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:15:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "3154:2:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3158:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3150:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3150:11:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "3163:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "3120:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3120:46:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3120:46:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3190:6:34"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "3198:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3186:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3186:15:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3203:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3182:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3182:24:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3208:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3175:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3175:40:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3175:40:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3224:16:34",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "3234:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3224:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2088:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2099:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2111:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2119:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2127:6:34",
                "type": ""
              }
            ],
            "src": "2005:1241:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3348:199:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3394:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3403:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3411:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3396:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3396:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3396:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3369:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3378:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3365:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3365:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3390:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3361:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3361:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3358:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3429:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3448:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3442:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3442:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3433:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3491:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3500:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3508:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3493:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3493:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3493:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3480:5:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3487:1:34",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3477:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3477:12:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3470:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:20:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3467:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3526:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3536:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3526:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3314:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3325:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3337:6:34",
                "type": ""
              }
            ],
            "src": "3251:296:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3639:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3685:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3694:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3702:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3687:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3687:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3687:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3660:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3669:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3656:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3656:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3681:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3652:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3652:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3649:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3720:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3743:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3730:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3730:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3789:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3800:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3785:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3785:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3772:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3772:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3762:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3597:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3608:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3620:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3628:6:34",
                "type": ""
              }
            ],
            "src": "3552:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3916:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3962:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3971:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3979:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3964:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3964:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3964:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3937:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3946:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3933:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3933:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3958:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3929:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3929:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "3926:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3997:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4020:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4007:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4007:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3997:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4039:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4066:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4077:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4062:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4062:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4049:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4049:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4039:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4090:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4120:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4131:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4116:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4116:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4103:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4103:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4094:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4168:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4144:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4144:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4144:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4183:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4193:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4183:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3866:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3877:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3889:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3897:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3905:6:34",
                "type": ""
              }
            ],
            "src": "3815:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4260:485:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4270:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4290:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4284:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4284:12:34"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4274:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4312:3:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4317:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4305:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4305:19:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4305:19:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4333:12:34",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "4342:3:34"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4337:1:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4406:110:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "4420:14:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "4430:4:34",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "4424:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "4462:3:34"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "4467:1:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4458:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4458:11:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4471:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4454:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4454:20:34"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "4490:5:34"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4497:1:34"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4486:3:34"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4486:13:34"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4501:2:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4482:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4482:22:34"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "4476:5:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4476:29:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4447:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4447:59:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4447:59:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4365:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4368:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4362:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:13:34"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4376:21:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4378:17:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4387:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4390:4:34",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4383:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4383:12:34"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4378:1:34"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4358:3:34",
                    "statements": []
                  },
                  "src": "4354:162:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4550:64:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "4579:3:34"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "4584:6:34"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4575:3:34"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4575:16:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4593:4:34",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4571:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4571:27:34"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "4600:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4564:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4564:40:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4564:40:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4531:1:34"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4534:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4528:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4528:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4525:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4623:116:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4638:3:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4651:6:34"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4659:2:34",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4647:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4647:15:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4664:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4643:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4643:88:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4634:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4634:98:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4734:4:34",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4630:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4630:109:34"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4623:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4237:5:34",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4244:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4252:3:34",
                "type": ""
              }
            ],
            "src": "4209:536:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4851:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4861:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4873:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4884:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4869:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4869:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4861:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4903:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4918:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4926:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4914:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4914:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4896:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4896:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4896:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4820:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4831:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4842:4:34",
                "type": ""
              }
            ],
            "src": "4750:226:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5138:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5148:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5160:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5171:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5156:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5148:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5183:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5193:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5187:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5251:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5266:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5274:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5262:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5262:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5244:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5244:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5244:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5298:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5309:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5294:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5294:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5318:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5326:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5314:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5314:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5287:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5287:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5287:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5350:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5361:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5346:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5346:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5366:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5339:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5339:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5339:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5091:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5102:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5110:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5118:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5129:4:34",
                "type": ""
              }
            ],
            "src": "4981:398:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5569:285:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5579:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5591:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5602:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5587:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5587:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5579:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5615:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5625:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5619:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5683:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5698:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5706:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5694:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5694:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5676:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5676:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5676:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5730:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5741:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5726:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5726:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5746:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5719:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5719:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5719:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5773:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5784:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5769:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5769:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5793:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5801:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5789:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5789:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5762:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5762:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5762:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5825:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5836:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5821:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5821:18:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5841:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5814:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5814:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5814:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_address_t_bytes32__to_t_address_t_uint256_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5514:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5525:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5533:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5541:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5549:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5560:4:34",
                "type": ""
              }
            ],
            "src": "5384:470:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5954:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5964:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5976:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5987:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5972:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5972:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5964:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6006:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6031:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6024:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6024:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6017:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6017:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5999:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5999:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5999:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5923:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5934:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5945:4:34",
                "type": ""
              }
            ],
            "src": "5859:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6152:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6162:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6174:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6185:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6170:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6170:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6162:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6204:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6215:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6197:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6197:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6197:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6121:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6132:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6143:4:34",
                "type": ""
              }
            ],
            "src": "6051:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6362:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6372:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6384:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6395:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6380:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6380:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6372:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6414:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6425:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6407:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6407:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6407:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6452:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6463:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6448:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6448:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6472:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6480:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6468:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6468:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6441:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6441:83:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6441:83:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6323:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6334:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6342:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6353:4:34",
                "type": ""
              }
            ],
            "src": "6233:297:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6766:319:34",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6776:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6786:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6780:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6844:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6859:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6867:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6855:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6855:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6837:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6837:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6837:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6891:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6902:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6887:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6887:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6911:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6919:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6907:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6907:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6880:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6880:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6880:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6943:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6954:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6939:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6939:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6959:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6932:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6932:31:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6932:31:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6972:55:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6999:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7011:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7022:3:34",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7007:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7007:19:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "6980:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6980:47:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6972:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7047:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7058:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7043:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7043:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7067:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7075:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7063:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7063:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7036:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7036:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7036:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6711:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6722:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6730:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6738:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6746:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6757:4:34",
                "type": ""
              }
            ],
            "src": "6535:550:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7247:168:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7257:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7269:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7280:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7265:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7265:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7257:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7299:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7314:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7322:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7310:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7310:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7292:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7292:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7292:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7386:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7397:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7382:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7382:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7402:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7375:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7375:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7375:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7208:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7219:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7227:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7238:4:34",
                "type": ""
              }
            ],
            "src": "7090:325:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7623:235:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7640:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7655:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7663:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7651:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7651:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7633:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7633:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7633:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7727:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7738:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7723:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7723:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7743:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7716:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7716:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7716:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7770:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7781:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7766:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7766:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7786:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7759:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7759:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7798:54:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7825:6:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7837:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7848:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7833:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7833:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes",
                      "nodeType": "YulIdentifier",
                      "src": "7806:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7806:46:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7798:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7576:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7587:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7595:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7603:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7614:4:34",
                "type": ""
              }
            ],
            "src": "7420:438:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8037:174:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8054:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8065:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8047:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8047:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8047:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8088:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8099:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8084:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8084:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8104:2:34",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8077:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8077:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8077:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8127:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8138:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8123:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8123:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8143:26:34",
                        "type": "",
                        "value": "invalid requested amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8116:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8116:54:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8116:54:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8179:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8191:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8202:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8187:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8187:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8179:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8014:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8028:4:34",
                "type": ""
              }
            ],
            "src": "7863:348:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8390:167:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8407:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8418:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8400:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8400:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8400:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8441:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8452:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8437:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8437:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8457:2:34",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8430:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8430:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8430:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8480:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8491:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8476:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8476:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8496:19:34",
                        "type": "",
                        "value": "token not allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8469:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8469:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8525:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8537:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8548:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8533:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8533:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8525:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8367:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8381:4:34",
                "type": ""
              }
            ],
            "src": "8216:341:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8736:172:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8753:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8764:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8746:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8746:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8746:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8787:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8798:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8783:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8783:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8803:2:34",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8776:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8776:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8776:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8826:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8837:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8822:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8822:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8842:24:34",
                        "type": "",
                        "value": "proposal needs to pass"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8815:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8815:52:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8815:52:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8876:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8888:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8899:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8884:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8884:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8876:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8713:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8727:4:34",
                "type": ""
              }
            ],
            "src": "8562:346:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9087:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9104:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9115:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9097:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9097:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9097:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9138:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9149:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9134:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9134:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9154:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9127:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9127:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9127:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9177:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9188:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9173:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9173:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9193:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9166:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9166:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9166:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9220:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9232:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9243:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9228:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9228:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9220:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9064:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9078:4:34",
                "type": ""
              }
            ],
            "src": "8913:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9431:182:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9448:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9459:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9441:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9441:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9441:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9482:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9493:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9478:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9478:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9498:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9471:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9471:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9471:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9521:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9532:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9517:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9517:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9537:34:34",
                        "type": "",
                        "value": "applicant using reserved address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9510:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9510:62:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9510:62:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9581:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9593:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9604:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9589:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9589:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9581:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9408:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9422:4:34",
                "type": ""
              }
            ],
            "src": "9257:356:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9719:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9729:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9741:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9752:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9737:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9737:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9729:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9771:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9782:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9764:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9764:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9764:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9688:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9699:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9710:4:34",
                "type": ""
              }
            ],
            "src": "9618:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9848:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9875:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9877:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9877:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9877:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9864:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9871:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9867:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9867:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9861:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9861:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "9858:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9906:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9917:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9920:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9913:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9913:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9906:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9831:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9834:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9840:3:34",
                "type": ""
              }
            ],
            "src": "9800:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10010:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10020:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "10029:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10020:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10044:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "10052:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "10044:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10091:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "10105:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10115:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "10109:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10157:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "10159:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10142:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "10152:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10139:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10139:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "10132:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10132:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10129:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10207:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10209:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10209:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10185:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "10195:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "10200:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "10191:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10191:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10182:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10182:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10179:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10263:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10265:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "10278:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "10285:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "10274:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10274:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "10265:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10249:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10259:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10245:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10245:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10242:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10305:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10317:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10323:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "10313:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10313:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "10305:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "10341:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "10357:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10361:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "10353:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10353:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "10341:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "10074:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10079:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10070:3:34",
                    "statements": []
                  },
                  "src": "10066:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "9961:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "9969:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9976:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "9986:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9994:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10001:4:34",
                "type": ""
              }
            ],
            "src": "9933:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10461:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10471:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10501:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10507:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10517:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "10480:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10480:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10471:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10432:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10438:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10451:5:34",
                "type": ""
              }
            ],
            "src": "10391:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10659:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10697:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10711:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10720:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10711:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10734:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10679:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10672:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10672:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10669:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10782:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10796:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "10805:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "10796:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10819:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10768:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10761:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10761:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10758:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10870:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "10884:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10893:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "10884:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "10907:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10863:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10868:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "10938:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "10973:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "10975:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10975:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "10975:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "10958:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10968:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "10955:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10955:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "10952:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "11008:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "11021:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11031:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11017:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11017:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "11008:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "11064:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "11066:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11066:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "11066:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "11052:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "11059:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "11049:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11049:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "11046:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "11099:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "10931:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10936:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "10850:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "10843:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11212:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11226:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "11239:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "11245:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "11235:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11235:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "11226:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11285:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "11287:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11287:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11287:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "11273:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "11280:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "11270:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11270:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "11267:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "11320:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11136:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11142:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11133:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11133:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11150:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11160:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11147:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11147:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11129:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11129:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "11173:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11179:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11170:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11170:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "11188:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11198:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "11185:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11185:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11166:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11166:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "11126:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11126:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11123:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11344:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11386:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "11389:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "11395:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "11405:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "11367:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11367:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "11348:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "11357:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11451:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11453:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11453:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11453:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11424:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "11437:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "11442:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "11433:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11433:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11421:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11421:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11418:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11482:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "11495:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "11504:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "11491:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11491:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "11482:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "10625:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "10631:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "10641:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "10649:5:34",
                "type": ""
              }
            ],
            "src": "10595:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11571:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11593:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11595:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11595:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11595:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11587:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11590:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11584:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11584:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11581:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11624:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11636:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11639:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11632:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "11624:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11553:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11556:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "11562:4:34",
                "type": ""
              }
            ],
            "src": "11522:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11690:228:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11721:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "11742:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11745:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11735:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11735:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11735:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11843:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11846:4:34",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11836:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11836:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11836:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "11871:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11874:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11864:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11864:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11864:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11710:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11703:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11703:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11700:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11898:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11907:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11910:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "11903:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11903:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "11898:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11675:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11678:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "11684:1:34",
                "type": ""
              }
            ],
            "src": "11652:266:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11955:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11972:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11975:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11965:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11965:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11965:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12069:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12072:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12062:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12062:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12062:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12093:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12096:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12086:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12086:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12086:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "11923:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12144:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12161:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12164:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12154:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12154:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12154:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12258:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12261:4:34",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12251:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12251:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12251:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12282:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12285:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12275:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12275:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12275:15:34"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "12112:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12348:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12435:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12444:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12447:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12437:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12437:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12437:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12371:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12382:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12389:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "12378:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12378:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12368:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12368:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12361:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12361:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12358:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12337:5:34",
                "type": ""
              }
            ],
            "src": "12301:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12506:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12560:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12569:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12572:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12562:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12562:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12562:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "12529:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12550:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12543:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12543:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "12536:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12536:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "12526:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12526:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12519:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12519:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "12516:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12495:5:34",
                "type": ""
              }
            ],
            "src": "12462:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_addresst_addresst_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_2)\n        value3 := value_2\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_bytes32t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        let offset := calldataload(add(headStart, 64))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value2, value2) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value2, value2) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value2, value2) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value2)\n        value2 := memPtr\n    }\n    function abi_decode_tuple_t_enum$_VotingState_$3745_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 6)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_bytes32__to_t_address_t_uint256_t_address_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_address_t_bytes_memory_ptr_t_address__to_t_address_payable_t_address_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_t_bytes(value2, add(headStart, 128))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32__to_t_address_payable_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_DaoRegistry_$8218_t_bytes32_t_bytes_memory_ptr__to_t_address_payable_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_bytes(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"invalid requested amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"token not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"proposal needs to pass\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"applicant using reserved address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1353:4695:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1353:4695:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2058:25;;;;;;;;;;:::i;:::-;;;;;;;;1353:4695;;;;1838:72;;;;;;;;;;-1:-1:-1;1838:72:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;5356:690;;;;;;;;;;-1:-1:-1;5356:690:2;;;;;:::i;:::-;;:::i;:::-;;2421:363:20;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2621:800:2:-;;;;;;;;;;-1:-1:-1;2621:800:2;;;;;:::i;:::-;;:::i;3732:478::-;;;;;;;;;;-1:-1:-1;3732:478:2;;;;;:::i;:::-;;:::i;2287:128:20:-;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1838:72:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5356:690::-;5499:23;;;;5466:30;5499:23;;;;;;;;;;;:35;;;;;;;;5466:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5578:29;;;;;5466:30;;5499:23;5578:21;;:29;;1219:19:20;;5578:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5545:63;-1:-1:-1;5701:24:2;5639:42;;;;;:25;;;;;;:42;;5665:3;;5670:10;;5639:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:86;;;;;;;;;;;;;;;;;5618:155;;;;;;;;;;;;:::i;:::-;5783:31;;;;;:19;;;;;;:31;;5803:10;;5783:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5859:29:2;;;;;5824:18;;-1:-1:-1;5859:23:2;;;;-1:-1:-1;5859:23:2;;:29;;1763:17:20;;5859:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5824:65;;5900:4;:24;;;1969:6:20;5932:7:2;:13;;;5947:7;:14;;;5900:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5990:17:2;;6009:13;;;;;6024:14;;;;5972:67;;;;;:17;;;;-1:-1:-1;5972:17:2;;-1:-1:-1;5972:67:2;;5990:17;6024:14;5972:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5356:690;;;;;:::o;2421:363:20:-;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;2621:800:2:-;2856:1;2847:6;:10;2839:47;;;;;;;;;;;;:::i;:::-;2931:29;;;;;2896:18;;2931:23;;;;;;:29;;1763:17:20;;2931:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:26;;;;;2896:65;;-1:-1:-1;2979:19:2;;;;;;:26;;2999:5;;2979:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2971:56;;;;;;;;;;;;:::i;:::-;3058:35;;;;;:24;;;;;;:35;;3083:9;;3058:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3037:114;;;;;;;;;;;;:::i;:::-;3161:30;;;;;:18;;;;;;:30;;3180:10;;3161:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3237:23:2;;;;3202:32;3237:23;;;;;;;;;;;:35;;;;;;;;;;3282:30;;;;;;;;;;;;;3322:15;;:24;;;;-1:-1:-1;3356:16:2;;;:26;3392:14;;:22;;;;;;;;;;;;-1:-1:-1;2621:800:2:o;3732:478::-;3904:29;;;;;3871:22;;3904:21;;;;;;:29;;1219:19:20;;3904:29:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3871:63;;3944:19;3978:14;:31;;;4027:3;4056:4;4079;4101:10;3978:147;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3944:181;;4135:68;4152:3;4157:10;4169:4;4175:11;4188:14;4135:16;:68::i;:::-;3732:478;;;;;:::o;2287:128:20:-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;4652:316:2:-;4844:44;;;;;:19;;;;;;:44;;4864:10;;4876:11;;4844:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4898:63:2;;;;;:40;;;;-1:-1:-1;4898:40:2;;-1:-1:-1;4898:63:2;;4939:3;;4944:10;;4956:4;;4898:63;;;:::i;14:263:34:-;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;195:9;189:16;214:33;241:5;214:33;:::i;282:327::-;;;411:2;399:9;390:7;386:23;382:32;379:2;;;432:6;424;417:22;379:2;476:9;463:23;495:33;522:5;495:33;:::i;:::-;547:5;599:2;584:18;;;;571:32;;-1:-1:-1;;;369:240:34:o;614:257::-;;734:2;722:9;713:7;709:23;705:32;702:2;;;755:6;747;740:22;702:2;792:9;786:16;811:30;835:5;811:30;:::i;876:347::-;;;1025:2;1013:9;1004:7;1000:23;996:32;993:2;;;1046:6;1038;1031:22;1228:772;;;;;;;1445:3;1433:9;1424:7;1420:23;1416:33;1413:2;;;1467:6;1459;1452:22;1413:2;1511:9;1498:23;1530:33;1557:5;1530:33;:::i;:::-;1582:5;-1:-1:-1;1634:2:34;1619:18;;1606:32;;-1:-1:-1;1690:2:34;1675:18;;1662:32;1703:35;1662:32;1703:35;:::i;:::-;1757:7;-1:-1:-1;1816:2:34;1801:18;;1788:32;1829:35;1788:32;1829:35;:::i;:::-;1403:597;;;;-1:-1:-1;1403:597:34;;1937:3;1922:19;;1909:33;;1989:3;1974:19;;;1961:33;;-1:-1:-1;1403:597:34;-1:-1:-1;;1403:597:34:o;2005:1241::-;;;;2180:2;2168:9;2159:7;2155:23;2151:32;2148:2;;;2201:6;2193;2186:22;2148:2;2245:9;2232:23;2264:33;2291:5;2264:33;:::i;:::-;2316:5;-1:-1:-1;2340:2:34;2374:18;;;2361:32;;-1:-1:-1;2444:2:34;2429:18;;2416:32;2467:18;2497:14;;;2494:2;;;2529:6;2521;2514:22;2494:2;2572:6;2561:9;2557:22;2547:32;;2617:7;2610:4;2606:2;2602:13;2598:27;2588:2;;2644:6;2636;2629:22;2588:2;2685;2672:16;2707:2;2703;2700:10;2697:2;;;2713:18;;:::i;:::-;2762:2;2756:9;2897:2;2827:66;2820:4;2816:2;2812:13;2808:86;2800:6;2796:99;2792:108;2950:6;2938:10;2935:22;2930:2;2918:10;2915:18;2912:46;2909:2;;;2961:18;;:::i;:::-;2997:2;2990:22;3021:18;;;3058:11;;;3054:20;;3051:33;-1:-1:-1;3048:2:34;;;3102:6;3094;3087:22;3048:2;3163;3158;3154;3150:11;3145:2;3137:6;3133:15;3120:46;3208:6;3203:2;3198;3190:6;3186:15;3182:24;3175:40;3234:6;3224:16;;;;;;;2138:1108;;;;;:::o;3251:296::-;;3390:2;3378:9;3369:7;3365:23;3361:32;3358:2;;;3411:6;3403;3396:22;3358:2;3448:9;3442:16;3487:1;3480:5;3477:12;3467:2;;3508:6;3500;3493:22;3552:258;;;3681:2;3669:9;3660:7;3656:23;3652:32;3649:2;;;3702:6;3694;3687:22;3649:2;-1:-1:-1;;3730:23:34;;;3800:2;3785:18;;;3772:32;;-1:-1:-1;3639:171:34:o;3815:389::-;;;;3958:2;3946:9;3937:7;3933:23;3929:32;3926:2;;;3979:6;3971;3964:22;3926:2;4020:9;4007:23;3997:33;;4077:2;4066:9;4062:18;4049:32;4039:42;;4131:2;4120:9;4116:18;4103:32;4144:30;4168:5;4144:30;:::i;:::-;4193:5;4183:15;;;3916:288;;;;;:::o;4209:536::-;;4290:5;4284:12;4317:6;4312:3;4305:19;4342:3;4354:162;4368:6;4365:1;4362:13;4354:162;;;4430:4;4486:13;;;4482:22;;4476:29;4458:11;;;4454:20;;4447:59;4383:12;4354:162;;;4534:6;4531:1;4528:13;4525:2;;;4600:3;4593:4;4584:6;4579:3;4575:16;4571:27;4564:40;4525:2;-1:-1:-1;4659:2:34;4647:15;4664:66;4643:88;4634:98;;;;4734:4;4630:109;;4260:485;-1:-1:-1;;4260:485:34:o;4750:226::-;4926:42;4914:55;;;;4896:74;;4884:2;4869:18;;4851:125::o;4981:398::-;5193:42;5262:15;;;5244:34;;5314:15;;;;5309:2;5294:18;;5287:43;5361:2;5346:18;;5339:34;;;;5171:2;5156:18;;5138:241::o;5384:470::-;5625:42;5694:15;;;5676:34;;5741:2;5726:18;;5719:34;;;;5789:15;;5784:2;5769:18;;5762:43;5836:2;5821:18;;5814:34;;;;5602:3;5587:19;;5569:285::o;5859:187::-;6024:14;;6017:22;5999:41;;5987:2;5972:18;;5954:92::o;6051:177::-;6197:25;;;6185:2;6170:18;;6152:76::o;6233:297::-;6407:25;;;6480:42;6468:55;6463:2;6448:18;;6441:83;6395:2;6380:18;;6362:168::o;6535:550::-;;6786:42;6867:2;6859:6;6855:15;6844:9;6837:34;6919:2;6911:6;6907:15;6902:2;6891:9;6887:18;6880:43;6959:3;6954:2;6943:9;6939:18;6932:31;6980:47;7022:3;7011:9;7007:19;6999:6;6980:47;:::i;:::-;6972:55;;7075:2;7067:6;7063:15;7058:2;7047:9;7043:18;7036:43;;6766:319;;;;;;;:::o;7090:325::-;7322:42;7310:55;;;;7292:74;;7397:2;7382:18;;7375:34;7280:2;7265:18;;7247:168::o;7420:438::-;;7663:42;7655:6;7651:55;7640:9;7633:74;7743:6;7738:2;7727:9;7723:18;7716:34;7786:2;7781;7770:9;7766:18;7759:30;7806:46;7848:2;7837:9;7833:18;7825:6;7806:46;:::i;:::-;7798:54;7623:235;-1:-1:-1;;;;;7623:235:34:o;7863:348::-;8065:2;8047:21;;;8104:2;8084:18;;;8077:30;8143:26;8138:2;8123:18;;8116:54;8202:2;8187:18;;8037:174::o;8216:341::-;8418:2;8400:21;;;8457:2;8437:18;;;8430:30;8496:19;8491:2;8476:18;;8469:47;8548:2;8533:18;;8390:167::o;8562:346::-;8764:2;8746:21;;;8803:2;8783:18;;;8776:30;8842:24;8837:2;8822:18;;8815:52;8899:2;8884:18;;8736:172::o;8913:339::-;9115:2;9097:21;;;9154:2;9134:18;;;9127:30;9193:17;9188:2;9173:18;;9166:45;9243:2;9228:18;;9087:165::o;9257:356::-;9459:2;9441:21;;;9478:18;;;9471:30;9537:34;9532:2;9517:18;;9510:62;9604:2;9589:18;;9431:182::o;9800:128::-;;9871:1;9867:6;9864:1;9861:13;9858:2;;;9877:18;;:::i;:::-;-1:-1:-1;9913:9:34;;9848:80::o;9933:453::-;10029:6;10052:5;10066:314;10115:1;10152:2;10142:8;10139:16;10129:2;;10159:5;;;10129:2;10200:4;10195:3;10191:14;10185:4;10182:24;10179:2;;;10209:18;;:::i;:::-;10259:2;10249:8;10245:17;10242:2;;;10274:16;;;;10242:2;10353:17;;;;;10313:15;;10066:314;;;10010:376;;;;;;;:::o;10391:199::-;;10480:104;10517:66;10507:8;10501:4;10595:922;10679:8;10669:2;;-1:-1:-1;10720:1:34;10734:5;;10669:2;10768:4;10758:2;;-1:-1:-1;10805:1:34;10819:5;;10758:2;10850:4;10868:1;10863:59;;;;10936:1;10931:183;;;;10843:271;;10863:59;10893:1;10884:10;;10907:5;;;10931:183;10968:3;10958:8;10955:17;10952:2;;;10975:18;;:::i;:::-;11031:1;11021:8;11017:16;11008:25;;11059:3;11052:5;11049:14;11046:2;;;11066:18;;:::i;:::-;11099:5;;;10843:271;;11198:2;11188:8;11185:16;11179:3;11173:4;11170:13;11166:36;11160:2;11150:8;11147:16;11142:2;11136:4;11133:12;11129:35;11126:77;11123:2;;;-1:-1:-1;11235:19:34;;;11270:14;;;11267:2;;;11287:18;;:::i;11123:2::-;11367:42;11405:3;11395:8;11389:4;11386:1;11367:42;:::i;:::-;11442:6;11437:3;11433:16;11424:7;11421:29;11418:2;;;11453:18;;:::i;:::-;11491:20;;10659:858;-1:-1:-1;;;;10659:858:34:o;11522:125::-;;11590:1;11587;11584:8;11581:2;;;11595:18;;:::i;:::-;-1:-1:-1;11632:9:34;;11571:76::o;11652:266::-;;11710:1;11700:2;;11745:77;11742:1;11735:88;11846:4;11843:1;11836:15;11874:4;11871:1;11864:15;11700:2;-1:-1:-1;11903:9:34;;11690:228::o;11923:184::-;11975:77;11972:1;11965:88;12072:4;12069:1;12062:15;12096:4;12093:1;12086:15;12112:184;12164:77;12161:1;12154:88;12261:4;12258:1;12251:15;12285:4;12282:1;12275:15;12301:156;12389:42;12382:5;12378:54;12371:5;12368:65;12358:2;;12447:1;12444;12437:12;12358:2;12348:109;:::o;12462:120::-;12550:5;12543:13;12536:21;12529:5;12526:32;12516:2;;12572:1;12569;12562:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"./interfaces/IFinancing.sol\";\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../extensions/Bank.sol\";\nimport \"../adapters/interfaces/IVoting.sol\";\nimport \"../guards/MemberGuard.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract FinancingContract is IFinancing, DaoConstants, MemberGuard {\n    struct ProposalDetails {\n        address applicant; // the proposal applicant address, can not be a reserved address\n        uint256 amount; // the amount requested for funding\n        address token; // the token address in which the funding must be sent to\n        bytes32 details; // additional details about the financing proposal\n    }\n\n    // keeps track of all financing proposals handled by each dao\n    mapping(address => mapping(bytes32 => ProposalDetails)) public proposals;\n\n    /**\n     * @notice default fallback function to prevent from sending ether to the contract.\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Creates a financing proposal.\n     * @dev Applicant address must not be reserved.\n     * @dev Token address must be allowed/supported by the DAO Bank.\n     * @dev Requested amount must be greater than zero.\n     * @param dao The DAO Address.\n     * @param proposalId The proposal id.\n     * @param applicant The applicant address.\n     * @param token The token to receive the funds.\n     * @param amount The desired amount.\n     * @param details Additional detais about the financing proposal.\n     */\n    function createFinancingRequest(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        address applicant,\n        address token,\n        uint256 amount,\n        bytes32 details\n    ) external override {\n        require(amount > 0, \"invalid requested amount\");\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        require(bank.isTokenAllowed(token), \"token not allowed\");\n        require(\n            dao.isNotReservedAddress(applicant),\n            \"applicant using reserved address\"\n        );\n        dao.submitProposal(proposalId);\n\n        ProposalDetails storage proposal = proposals[address(dao)][proposalId];\n        proposal.applicant = applicant;\n        proposal.amount = amount;\n        proposal.details = details;\n        proposal.token = token;\n    }\n\n    /**\n     * @notice Sponsor a financing proposal to start the voting process.\n     * @dev Only members of the DAO can sponsor a financing proposal.\n     * @param dao The DAO Address.\n     * @param proposalId The proposal id.\n     * @param data Additional details about the sponsorship process.\n     */\n    function sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data\n    ) external override {\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        address sponsoredBy =\n            votingContract.getSenderAddress(\n                dao,\n                address(this),\n                data,\n                msg.sender\n            );\n        _sponsorProposal(dao, proposalId, data, sponsoredBy, votingContract);\n    }\n\n    /**\n     * @notice Sponsors a financing proposal to start the voting process.\n     * @dev Only members of the DAO can sponsor a financing proposal.\n     * @param dao The DAO Address.\n     * @param proposalId The proposal id.\n     * @param data Additional details about the sponsorship process.\n     * @param sponsoredBy The address of the sponsoring member.\n     * @param votingContract The voting contract used by the DAO.\n     */\n    function _sponsorProposal(\n        DaoRegistry dao,\n        bytes32 proposalId,\n        bytes memory data,\n        address sponsoredBy,\n        IVoting votingContract\n    ) internal {\n        dao.sponsorProposal(proposalId, sponsoredBy);\n        votingContract.startNewVotingForProposal(dao, proposalId, data);\n    }\n\n    /**\n     * @notice Processing a financing proposal to grant the requested funds.\n     * @dev Only proposals that were not processed are accepted.\n     * @dev Only proposals that were sponsored are accepted.\n     * @dev Only proposals that passed can get processed and have the funds released.\n     * @param dao The DAO Address.\n     * @param proposalId The proposal id.\n     */\n    function processProposal(DaoRegistry dao, bytes32 proposalId)\n        external\n        override\n    {\n        ProposalDetails memory details = proposals[address(dao)][proposalId];\n\n        IVoting votingContract = IVoting(dao.getAdapterAddress(VOTING));\n        require(\n            votingContract.voteResult(dao, proposalId) ==\n                IVoting.VotingState.PASS,\n            \"proposal needs to pass\"\n        );\n        dao.processProposal(proposalId);\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n\n        bank.subtractFromBalance(GUILD, details.token, details.amount);\n        bank.addToBalance(details.applicant, details.token, details.amount);\n    }\n}\n",
  "sourcePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Financing.sol",
  "ast": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Financing.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FinancingContract": [
        582
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IFinancing": [
        3546
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 583,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 289,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IFinancing.sol",
        "file": "./interfaces/IFinancing.sol",
        "id": 290,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 3547,
        "src": "58:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 291,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 6255,
        "src": "96:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 292,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 8219,
        "src": "131:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 293,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 9182,
        "src": "165:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 294,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 3782,
        "src": "198:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 9429,
        "src": "243:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 297,
              "name": "IFinancing",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3546,
              "src": "1383:10:2"
            },
            "id": 298,
            "nodeType": "InheritanceSpecifier",
            "src": "1383:10:2"
          },
          {
            "baseName": {
              "id": 299,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1395:12:2"
            },
            "id": 300,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:12:2"
          },
          {
            "baseName": {
              "id": 301,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1409:11:2"
            },
            "id": 302,
            "nodeType": "InheritanceSpecifier",
            "src": "1409:11:2"
          }
        ],
        "contractDependencies": [
          3546,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 296,
          "nodeType": "StructuredDocumentation",
          "src": "280:1071:2",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 582,
        "linearizedBaseContracts": [
          582,
          9428,
          6254,
          3546
        ],
        "name": "FinancingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FinancingContract.ProposalDetails",
            "id": 311,
            "members": [
              {
                "constant": false,
                "id": 304,
                "mutability": "mutable",
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1460:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 303,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1460:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 306,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1552:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 305,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1552:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 308,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1612:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 307,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1612:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 310,
                "mutability": "mutable",
                "name": "details",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1693:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 309,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 582,
            "src": "1427:339:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 318,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 582,
            "src": "1838:72:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails))"
            },
            "typeName": {
              "id": 317,
              "keyType": {
                "id": 312,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1846:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1838:55:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails))"
              },
              "valueType": {
                "id": 316,
                "keyType": {
                  "id": 313,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1865:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1857:35:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                  "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 315,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 314,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 311,
                    "src": "1876:15:2"
                  },
                  "referencedDeclaration": 311,
                  "src": "1876:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                    "typeString": "struct FinancingContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "2048:42:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2065:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 322,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2058:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:25:2"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "1917:99:2",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 327,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:0:2"
            },
            "scope": 582,
            "src": "2021:69:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3527
            ],
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "2829:592:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 346,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "2847:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2856:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2847:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642072657175657374656420616d6f756e74",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a",
                          "typeString": "literal_string \"invalid requested amount\""
                        },
                        "value": "invalid requested amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a",
                          "typeString": "literal_string \"invalid requested amount\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2839:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:47:2"
                },
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "2896:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 352,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "2896:13:2"
                        },
                        "referencedDeclaration": 9181,
                        "src": "2896:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 358,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "2955:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 356,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "2931:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "2931:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2931:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 355,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "2917:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2896:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 365,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "2999:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 363,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "2979:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isTokenAllowed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8488,
                          "src": "2979:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2979:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f7420616c6c6f776564",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3007:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                          "typeString": "literal_string \"token not allowed\""
                        },
                        "value": "token not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                          "typeString": "literal_string \"token not allowed\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2971:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 373,
                            "name": "applicant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3083:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 371,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3058:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7934,
                          "src": "3058:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:35:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6170706c6963616e74207573696e672072657365727665642061646472657373",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3107:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209",
                          "typeString": "literal_string \"applicant using reserved address\""
                        },
                        "value": "applicant using reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209",
                          "typeString": "literal_string \"applicant using reserved address\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3037:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "3180:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 378,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "3161:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "3161:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:30:2"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "3202:32:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                        "typeString": "struct FinancingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 384,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 311,
                          "src": "3202:15:2"
                        },
                        "referencedDeclaration": 311,
                        "src": "3202:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 387,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "3237:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 392,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 390,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3255:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3237:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                        "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 394,
                    "indexExpression": {
                      "id": 393,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "3261:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3237:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$311_storage",
                      "typeString": "struct FinancingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3202:70:2"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 396,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3282:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "applicant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "3282:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 399,
                      "name": "applicant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "3303:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3282:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:30:2"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 402,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3322:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 306,
                      "src": "3322:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 405,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "3340:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3322:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:24:2"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 408,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3356:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "details",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "3356:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "details",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3375:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3356:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "3356:26:2"
                },
                {
                  "expression": {
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 414,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3392:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 308,
                      "src": "3392:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 417,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "3409:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3392:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:22:2"
                }
              ]
            },
            "documentation": {
              "id": 328,
              "nodeType": "StructuredDocumentation",
              "src": "2096:520:2",
              "text": " @notice Creates a financing proposal.\n @dev Applicant address must not be reserved.\n @dev Token address must be allowed/supported by the DAO Bank.\n @dev Requested amount must be greater than zero.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param applicant The applicant address.\n @param token The token to receive the funds.\n @param amount The desired amount.\n @param details Additional detais about the financing proposal."
            },
            "functionSelector": "c330a520",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFinancingRequest",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 343,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2820:8:2"
            },
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2662:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 329,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2662:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2662:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2687:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2715:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2742:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2742:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2765:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "details",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2789:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2652:158:2"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:0:2"
            },
            "scope": 582,
            "src": "2621:800:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3537
            ],
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "3861:349:2",
              "statements": [
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "3871:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 433,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3871:7:2"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3871:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 442,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3926:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 437,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "3904:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3904:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3904:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 436,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3896:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3871:63:2"
                },
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "3944:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3944:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 447,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "4027:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 450,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4056:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinancingContract_$582",
                              "typeString": "contract FinancingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FinancingContract_$582",
                              "typeString": "contract FinancingContract"
                            }
                          ],
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4048:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4048:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4048:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 452,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "4079:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4101:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4101:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 445,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3978:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "3978:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3978:147:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3944:181:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 458,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "4152:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 459,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4157:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 460,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "4169:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 461,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4175:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 462,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "4188:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 457,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "4135:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4135:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "4135:68:2"
                }
              ]
            },
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "3427:300:2",
              "text": " @notice Sponsor a financing proposal to start the voting process.\n @dev Only members of the DAO can sponsor a financing proposal.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param data Additional details about the sponsorship process."
            },
            "functionSelector": "cd0e42ed",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3852:8:2"
            },
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3766:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 423,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3766:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3766:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3791:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3819:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:86:2"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3861:0:2"
            },
            "scope": 582,
            "src": "3732:478:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "4834:134:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 485,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "4864:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 486,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "4876:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 482,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "4844:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "4844:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4844:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 492,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "4939:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 493,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "4944:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 494,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4956:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 489,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "4898:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "4898:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4898:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4898:63:2"
                }
              ]
            },
            "documentation": {
              "id": 467,
              "nodeType": "StructuredDocumentation",
              "src": "4216:431:2",
              "text": " @notice Sponsors a financing proposal to start the voting process.\n @dev Only members of the DAO can sponsor a financing proposal.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param data Additional details about the sponsorship process.\n @param sponsoredBy The address of the sponsoring member.\n @param votingContract The voting contract used by the DAO."
            },
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4687:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 469,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 468,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "4687:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "4687:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4712:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4740:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4767:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4796:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 478,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 477,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "4796:7:2"
                    },
                    "referencedDeclaration": 3781,
                    "src": "4796:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4677:147:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4834:0:2"
            },
            "scope": 582,
            "src": "4652:316:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3545
            ],
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5456:590:2",
              "statements": [
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "details",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5466:30:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                        "typeString": "struct FinancingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 508,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 311,
                          "src": "5466:15:2"
                        },
                        "referencedDeclaration": 311,
                        "src": "5466:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 511,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "5499:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 514,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5517:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5509:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 512,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5509:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5509:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5499:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                        "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 518,
                    "indexExpression": {
                      "id": 517,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "5523:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5499:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$311_storage",
                      "typeString": "struct FinancingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5466:68:2"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5545:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 521,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 520,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5545:7:2"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5545:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 526,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "5600:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 524,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5578:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "5578:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5578:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 523,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5570:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5545:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 533,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "5665:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 534,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "5670:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 531,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "5639:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "5639:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5639:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 536,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "5701:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "5701:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "5701:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "5639:86:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c206e6565647320746f2070617373",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5739:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254",
                          "typeString": "literal_string \"proposal needs to pass\""
                        },
                        "value": "proposal needs to pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254",
                          "typeString": "literal_string \"proposal needs to pass\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5618:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:155:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:155:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 546,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "5803:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 543,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "5783:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "5783:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:31:2"
                },
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5824:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 549,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "5824:13:2"
                        },
                        "referencedDeclaration": 9181,
                        "src": "5824:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 555,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "5883:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 553,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5859:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "5859:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5859:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 552,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "5845:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5845:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5824:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 562,
                        "name": "GUILD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6162,
                        "src": "5925:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 563,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5932:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 308,
                        "src": "5932:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 565,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5947:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 306,
                        "src": "5947:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 559,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "5900:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5900:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 572,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5990:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 304,
                        "src": "5990:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 574,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "6009:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 308,
                        "src": "6009:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 576,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "6024:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 306,
                        "src": "6024:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 569,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "5972:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8801,
                      "src": "5972:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5972:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "5972:67:2"
                }
              ]
            },
            "documentation": {
              "id": 499,
              "nodeType": "StructuredDocumentation",
              "src": "4974:377:2",
              "text": " @notice Processing a financing proposal to grant the requested funds.\n @dev Only proposals that were not processed are accepted.\n @dev Only proposals that were sponsored are accepted.\n @dev Only proposals that passed can get processed and have the funds released.\n @param dao The DAO Address.\n @param proposalId The proposal id."
            },
            "functionSelector": "9573167d",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5443:8:2"
            },
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5381:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 500,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "5381:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "5381:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5398:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5398:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5380:37:2"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5456:0:2"
            },
            "scope": 582,
            "src": "5356:690:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 583,
        "src": "1353:4695:2"
      }
    ],
    "src": "0:6049:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Financing.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FinancingContract": [
        582
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IFinancing": [
        3546
      ],
      "IVoting": [
        3781
      ],
      "MemberGuard": [
        9428
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 583,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 289,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IFinancing.sol",
        "file": "./interfaces/IFinancing.sol",
        "id": 290,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 3547,
        "src": "58:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 291,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 6255,
        "src": "96:34:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 292,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 8219,
        "src": "131:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 293,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 9182,
        "src": "165:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IVoting.sol",
        "file": "../adapters/interfaces/IVoting.sol",
        "id": 294,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 3782,
        "src": "198:44:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol",
        "file": "../guards/MemberGuard.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 583,
        "sourceUnit": 9429,
        "src": "243:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 297,
              "name": "IFinancing",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3546,
              "src": "1383:10:2"
            },
            "id": 298,
            "nodeType": "InheritanceSpecifier",
            "src": "1383:10:2"
          },
          {
            "baseName": {
              "id": 299,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1395:12:2"
            },
            "id": 300,
            "nodeType": "InheritanceSpecifier",
            "src": "1395:12:2"
          },
          {
            "baseName": {
              "id": 301,
              "name": "MemberGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9428,
              "src": "1409:11:2"
            },
            "id": 302,
            "nodeType": "InheritanceSpecifier",
            "src": "1409:11:2"
          }
        ],
        "contractDependencies": [
          3546,
          6254,
          9428
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 296,
          "nodeType": "StructuredDocumentation",
          "src": "280:1071:2",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 582,
        "linearizedBaseContracts": [
          582,
          9428,
          6254,
          3546
        ],
        "name": "FinancingContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FinancingContract.ProposalDetails",
            "id": 311,
            "members": [
              {
                "constant": false,
                "id": 304,
                "mutability": "mutable",
                "name": "applicant",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1460:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 303,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1460:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 306,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1552:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 305,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1552:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 308,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1612:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 307,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1612:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 310,
                "mutability": "mutable",
                "name": "details",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "1693:15:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 309,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1693:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProposalDetails",
            "nodeType": "StructDefinition",
            "scope": 582,
            "src": "1427:339:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5cb75276",
            "id": 318,
            "mutability": "mutable",
            "name": "proposals",
            "nodeType": "VariableDeclaration",
            "scope": 582,
            "src": "1838:72:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
              "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails))"
            },
            "typeName": {
              "id": 317,
              "keyType": {
                "id": 312,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1846:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1838:55:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails))"
              },
              "valueType": {
                "id": 316,
                "keyType": {
                  "id": 313,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1865:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "nodeType": "Mapping",
                "src": "1857:35:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                  "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails)"
                },
                "valueType": {
                  "id": 315,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 314,
                    "name": "ProposalDetails",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 311,
                    "src": "1876:15:2"
                  },
                  "referencedDeclaration": 311,
                  "src": "1876:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                    "typeString": "struct FinancingContract.ProposalDetails"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "2048:42:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2065:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 322,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2058:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2058:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "2058:25:2"
                }
              ]
            },
            "documentation": {
              "id": 319,
              "nodeType": "StructuredDocumentation",
              "src": "1917:99:2",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 327,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2028:2:2"
            },
            "returnParameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2048:0:2"
            },
            "scope": 582,
            "src": "2021:69:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3527
            ],
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "2829:592:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 346,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "2847:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2856:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2847:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642072657175657374656420616d6f756e74",
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a",
                          "typeString": "literal_string \"invalid requested amount\""
                        },
                        "value": "invalid requested amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d2c23b19cc881c0100526e64455216c835db578faa7e0496bb8b08018222c2a",
                          "typeString": "literal_string \"invalid requested amount\""
                        }
                      ],
                      "id": 345,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2839:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2839:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 351,
                  "nodeType": "ExpressionStatement",
                  "src": "2839:47:2"
                },
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "2896:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 353,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 352,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "2896:13:2"
                        },
                        "referencedDeclaration": 9181,
                        "src": "2896:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 358,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "2955:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 356,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "2931:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "2931:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2931:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 355,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "2917:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2896:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 365,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "2999:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 363,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 354,
                            "src": "2979:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isTokenAllowed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8488,
                          "src": "2979:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2979:26:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f6b656e206e6f7420616c6c6f776564",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3007:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                          "typeString": "literal_string \"token not allowed\""
                        },
                        "value": "token not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                          "typeString": "literal_string \"token not allowed\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2971:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 373,
                            "name": "applicant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 335,
                            "src": "3083:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 371,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3058:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isNotReservedAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7934,
                          "src": "3058:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) pure external returns (bool)"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:35:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6170706c6963616e74207573696e672072657365727665642061646472657373",
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3107:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209",
                          "typeString": "literal_string \"applicant using reserved address\""
                        },
                        "value": "applicant using reserved address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3d077944aebca3ee8759baf6f79c1d67632415a0164e1b848880cb661602209",
                          "typeString": "literal_string \"applicant using reserved address\""
                        }
                      ],
                      "id": 370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3037:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:114:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:114:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 381,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "3180:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 378,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 331,
                        "src": "3161:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "submitProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7564,
                      "src": "3161:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3161:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 383,
                  "nodeType": "ExpressionStatement",
                  "src": "3161:30:2"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 420,
                      "src": "3202:32:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                        "typeString": "struct FinancingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 384,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 311,
                          "src": "3202:15:2"
                        },
                        "referencedDeclaration": 311,
                        "src": "3202:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 387,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "3237:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 392,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 390,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 331,
                            "src": "3255:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3247:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3247:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3247:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3237:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                        "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 394,
                    "indexExpression": {
                      "id": 393,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "3261:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3237:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$311_storage",
                      "typeString": "struct FinancingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3202:70:2"
                },
                {
                  "expression": {
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 396,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3282:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "applicant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 304,
                      "src": "3282:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 399,
                      "name": "applicant",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "3303:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3282:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "3282:30:2"
                },
                {
                  "expression": {
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 402,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3322:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 306,
                      "src": "3322:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 405,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "3340:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3322:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "3322:24:2"
                },
                {
                  "expression": {
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 408,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3356:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "details",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 310,
                      "src": "3356:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 411,
                      "name": "details",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "3375:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3356:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 413,
                  "nodeType": "ExpressionStatement",
                  "src": "3356:26:2"
                },
                {
                  "expression": {
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 414,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "3392:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails storage pointer"
                        }
                      },
                      "id": 416,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 308,
                      "src": "3392:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 417,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "3409:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3392:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:22:2"
                }
              ]
            },
            "documentation": {
              "id": 328,
              "nodeType": "StructuredDocumentation",
              "src": "2096:520:2",
              "text": " @notice Creates a financing proposal.\n @dev Applicant address must not be reserved.\n @dev Token address must be allowed/supported by the DAO Bank.\n @dev Requested amount must be greater than zero.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param applicant The applicant address.\n @param token The token to receive the funds.\n @param amount The desired amount.\n @param details Additional detais about the financing proposal."
            },
            "functionSelector": "c330a520",
            "id": 421,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFinancingRequest",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 343,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2820:8:2"
            },
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2662:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 330,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 329,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2662:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2662:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2687:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2715:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2742:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2742:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2765:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2765:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "details",
                  "nodeType": "VariableDeclaration",
                  "scope": 421,
                  "src": "2789:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2652:158:2"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:0:2"
            },
            "scope": 582,
            "src": "2621:800:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3537
            ],
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "3861:349:2",
              "statements": [
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "3871:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 434,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 433,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "3871:7:2"
                        },
                        "referencedDeclaration": 3781,
                        "src": "3871:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 442,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 439,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "3926:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 437,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 425,
                            "src": "3904:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "3904:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3904:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 436,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "3896:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3871:63:2"
                },
                {
                  "assignments": [
                    444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 444,
                      "mutability": "mutable",
                      "name": "sponsoredBy",
                      "nodeType": "VariableDeclaration",
                      "scope": 465,
                      "src": "3944:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 443,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3944:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 456,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 447,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "4027:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 450,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4056:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinancingContract_$582",
                              "typeString": "contract FinancingContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FinancingContract_$582",
                              "typeString": "contract FinancingContract"
                            }
                          ],
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4048:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4048:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4048:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 452,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "4079:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 453,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4101:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4101:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 445,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "3978:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSenderAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3769,
                      "src": "3978:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$_t_address_$",
                        "typeString": "function (contract DaoRegistry,address,bytes memory,address) external returns (address)"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3978:147:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3944:181:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 458,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "4152:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 459,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "4157:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 460,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "4169:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 461,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 444,
                        "src": "4175:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 462,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "4188:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      ],
                      "id": 457,
                      "name": "_sponsorProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "4135:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$_t_address_$_t_contract$_IVoting_$3781_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory,address,contract IVoting)"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4135:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "4135:68:2"
                }
              ]
            },
            "documentation": {
              "id": 422,
              "nodeType": "StructuredDocumentation",
              "src": "3427:300:2",
              "text": " @notice Sponsor a financing proposal to start the voting process.\n @dev Only members of the DAO can sponsor a financing proposal.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param data Additional details about the sponsorship process."
            },
            "functionSelector": "cd0e42ed",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsorProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3852:8:2"
            },
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3766:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 423,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "3766:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "3766:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3791:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "3819:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3819:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:86:2"
            },
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3861:0:2"
            },
            "scope": 582,
            "src": "3732:478:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 497,
              "nodeType": "Block",
              "src": "4834:134:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 485,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "4864:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 486,
                        "name": "sponsoredBy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 476,
                        "src": "4876:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 482,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "4844:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sponsorProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7623,
                      "src": "4844:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4844:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 488,
                  "nodeType": "ExpressionStatement",
                  "src": "4844:44:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 492,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "4939:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      {
                        "id": 493,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "4944:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 494,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 474,
                        "src": "4956:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 489,
                        "name": "votingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "4898:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startNewVotingForProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3755,
                      "src": "4898:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract DaoRegistry,bytes32,bytes memory) external"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4898:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "4898:63:2"
                }
              ]
            },
            "documentation": {
              "id": 467,
              "nodeType": "StructuredDocumentation",
              "src": "4216:431:2",
              "text": " @notice Sponsors a financing proposal to start the voting process.\n @dev Only members of the DAO can sponsor a financing proposal.\n @param dao The DAO Address.\n @param proposalId The proposal id.\n @param data Additional details about the sponsorship process.\n @param sponsoredBy The address of the sponsoring member.\n @param votingContract The voting contract used by the DAO."
            },
            "id": 498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sponsorProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4687:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 469,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 468,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "4687:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "4687:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4712:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4740:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4740:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 476,
                  "mutability": "mutable",
                  "name": "sponsoredBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4767:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "votingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 498,
                  "src": "4796:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3781",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "id": 478,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 477,
                      "name": "IVoting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3781,
                      "src": "4796:7:2"
                    },
                    "referencedDeclaration": 3781,
                    "src": "4796:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4677:147:2"
            },
            "returnParameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4834:0:2"
            },
            "scope": 582,
            "src": "4652:316:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3545
            ],
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "5456:590:2",
              "statements": [
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "details",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5466:30:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                        "typeString": "struct FinancingContract.ProposalDetails"
                      },
                      "typeName": {
                        "id": 509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 508,
                          "name": "ProposalDetails",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 311,
                          "src": "5466:15:2"
                        },
                        "referencedDeclaration": 311,
                        "src": "5466:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$311_storage_ptr",
                          "typeString": "struct FinancingContract.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 519,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 511,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 318,
                        "src": "5499:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$_$",
                          "typeString": "mapping(address => mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref))"
                        }
                      },
                      "id": 516,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 514,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5517:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          ],
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5509:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 512,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5509:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5509:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5499:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProposalDetails_$311_storage_$",
                        "typeString": "mapping(bytes32 => struct FinancingContract.ProposalDetails storage ref)"
                      }
                    },
                    "id": 518,
                    "indexExpression": {
                      "id": 517,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "5523:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5499:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$311_storage",
                      "typeString": "struct FinancingContract.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5466:68:2"
                },
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "votingContract",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5545:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVoting_$3781",
                        "typeString": "contract IVoting"
                      },
                      "typeName": {
                        "id": 521,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 520,
                          "name": "IVoting",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3781,
                          "src": "5545:7:2"
                        },
                        "referencedDeclaration": 3781,
                        "src": "5545:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVoting_$3781",
                          "typeString": "contract IVoting"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 529,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 526,
                            "name": "VOTING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6106,
                            "src": "5600:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 524,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5578:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getAdapterAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7348,
                          "src": "5578:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5578:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 523,
                      "name": "IVoting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3781,
                      "src": "5570:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                        "typeString": "type(contract IVoting)"
                      }
                    },
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5570:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3781",
                      "typeString": "contract IVoting"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5545:63:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_VotingState_$3745",
                          "typeString": "enum IVoting.VotingState"
                        },
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 533,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "5665:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            {
                              "id": 534,
                              "name": "proposalId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "5670:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 531,
                              "name": "votingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "5639:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVoting_$3781",
                                "typeString": "contract IVoting"
                              }
                            },
                            "id": 532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "voteResult",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3780,
                            "src": "5639:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_DaoRegistry_$8218_$_t_bytes32_$returns$_t_enum$_VotingState_$3745_$",
                              "typeString": "function (contract DaoRegistry,bytes32) external returns (enum IVoting.VotingState)"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5639:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 536,
                              "name": "IVoting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3781,
                              "src": "5701:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IVoting_$3781_$",
                                "typeString": "type(contract IVoting)"
                              }
                            },
                            "id": 537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "VotingState",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3745,
                            "src": "5701:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_VotingState_$3745_$",
                              "typeString": "type(enum IVoting.VotingState)"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PASS",
                          "nodeType": "MemberAccess",
                          "src": "5701:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VotingState_$3745",
                            "typeString": "enum IVoting.VotingState"
                          }
                        },
                        "src": "5639:86:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f706f73616c206e6565647320746f2070617373",
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5739:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254",
                          "typeString": "literal_string \"proposal needs to pass\""
                        },
                        "value": "proposal needs to pass"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_983158f49d9fe1d57f1a31a62aece6dedec29867cac511fc51b50c94ee9ce254",
                          "typeString": "literal_string \"proposal needs to pass\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5618:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5618:155:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 542,
                  "nodeType": "ExpressionStatement",
                  "src": "5618:155:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 546,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 504,
                        "src": "5803:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 543,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "5783:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processProposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7654,
                      "src": "5783:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5783:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "5783:31:2"
                },
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "5824:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 550,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 549,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "5824:13:2"
                        },
                        "referencedDeclaration": 9181,
                        "src": "5824:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 558,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 555,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "5883:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 553,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5859:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "5859:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5859:29:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 552,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "5845:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5845:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5824:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 562,
                        "name": "GUILD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6162,
                        "src": "5925:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 563,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5932:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 308,
                        "src": "5932:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 565,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5947:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 306,
                        "src": "5947:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 559,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "5900:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5900:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 568,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 572,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "5990:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 304,
                        "src": "5990:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 574,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "6009:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 308,
                        "src": "6009:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 576,
                          "name": "details",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "6024:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$311_memory_ptr",
                            "typeString": "struct FinancingContract.ProposalDetails memory"
                          }
                        },
                        "id": 577,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 306,
                        "src": "6024:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 569,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "5972:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addToBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8801,
                      "src": "5972:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) payable external"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5972:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "ExpressionStatement",
                  "src": "5972:67:2"
                }
              ]
            },
            "documentation": {
              "id": 499,
              "nodeType": "StructuredDocumentation",
              "src": "4974:377:2",
              "text": " @notice Processing a financing proposal to grant the requested funds.\n @dev Only proposals that were not processed are accepted.\n @dev Only proposals that were sponsored are accepted.\n @dev Only proposals that passed can get processed and have the funds released.\n @param dao The DAO Address.\n @param proposalId The proposal id."
            },
            "functionSelector": "9573167d",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "processProposal",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 506,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5443:8:2"
            },
            "parameters": {
              "id": 505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 502,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5381:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 500,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "5381:11:2"
                    },
                    "referencedDeclaration": 8218,
                    "src": "5381:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 504,
                  "mutability": "mutable",
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "5398:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 503,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5398:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5380:37:2"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5456:0:2"
            },
            "scope": 582,
            "src": "5356:690:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 583,
        "src": "1353:4695:2"
      }
    ],
    "src": "0:6049:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T09:36:52.539Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createFinancingRequest(address,bytes32,address,address,uint256,bytes32)": {
        "details": "Applicant address must not be reserved.Token address must be allowed/supported by the DAO Bank.Requested amount must be greater than zero.",
        "params": {
          "amount": "The desired amount.",
          "applicant": "The applicant address.",
          "dao": "The DAO Address.",
          "details": "Additional detais about the financing proposal.",
          "proposalId": "The proposal id.",
          "token": "The token to receive the funds."
        }
      },
      "processProposal(address,bytes32)": {
        "details": "Only proposals that were not processed are accepted.Only proposals that were sponsored are accepted.Only proposals that passed can get processed and have the funds released.",
        "params": {
          "dao": "The DAO Address.",
          "proposalId": "The proposal id."
        }
      },
      "sponsorProposal(address,bytes32,bytes)": {
        "details": "Only members of the DAO can sponsor a financing proposal.",
        "params": {
          "dao": "The DAO Address.",
          "data": "Additional details about the sponsorship process.",
          "proposalId": "The proposal id."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createFinancingRequest(address,bytes32,address,address,uint256,bytes32)": {
        "notice": "Creates a financing proposal."
      },
      "processProposal(address,bytes32)": {
        "notice": "Processing a financing proposal to grant the requested funds."
      },
      "sponsorProposal(address,bytes32,bytes)": {
        "notice": "Sponsor a financing proposal to start the voting process."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}