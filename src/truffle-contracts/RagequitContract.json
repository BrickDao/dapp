{
  "contractName": "RagequitContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "memberAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnedShares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burnedLoot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "initialTotalSharesAndLoot",
          "type": "uint256"
        }
      ],
      "name": "MemberRagequit",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        }
      ],
      "name": "getFlag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flags",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "flag",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "setFlag",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "contract DaoRegistry",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sharesToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lootToBurn",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "ragequit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"memberAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedLoot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"initialTotalSharesAndLoot\",\"type\":\"uint256\"}],\"name\":\"MemberRagequit\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"}],\"name\":\"getFlag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DaoRegistry\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sharesToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lootToBurn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"ragequit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flags\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flag\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlag\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ragequit(address,uint256,uint256,address[])\":{\"details\":\"The sum of sharesToBurn and lootToBurn have to be greater than zero.The member can not be in jail to execute a ragequit.The member becomes an inactive member of the DAO once all the shares/loot are burned.If the member provides an invalid/not allowed token, the entire processed is reverted.\",\"params\":{\"dao\":\"The dao address that the member is part of.\",\"lootToBurn\":\"The amount of loot of the member that must be converted into funds.\",\"sharesToBurn\":\"The amount of shares of the member that must be converted into funds.\",\"tokens\":\"The array of tokens that the funds should be sent to.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MemberRagequit(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a member of the DAO executes a ragequit with all or parts of the member's shares/loot.\"}},\"kind\":\"user\",\"methods\":{\"ragequit(address,uint256,uint256,address[])\":{\"notice\":\"Allows a member or advisor of the DAO to opt out by burning the proportional amount of shares/loot of the member.Anyone is allowed to call this function, but only members and advisors that have shares are able to execute the entire ragequit process.\"}},\"notice\":\"MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Ragequit.sol\":\"RagequitContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Ragequit.sol\":{\"keccak256\":\"0xcc47a5381d29bb6db02b0ce655a91c0d4acb65cd07a25fe5859d542c17983413\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://abd4e8e13ef38024515f3ac562e1dedafcba653929455a9be814cc2cca6ff898\",\"dweb:/ipfs/QmY6dKZu5Un3U7T87vpaynBm1q34vvrM4y5cRhbQtEYsFv\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IRagequit.sol\":{\"keccak256\":\"0xca9cbe7758badb15c68fc28f25099ebf57a5296a6d0580a66a170623649f3376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66a188d9ed86e0052e2b1ce17a442b5bcd78074675ee3612a95705eed9a2b8bc\",\"dweb:/ipfs/QmSursxRrtkhYi5VpNFa6RDNjNh7ufwRDFdjsY4NKhzroE\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol\":{\"keccak256\":\"0x3f336192baee2c21093159d5d4d19fb06ce08d8ff342e3b3924fe53b0def93cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://404c9cd94e7edc2e8a7f628080dcf1f6259305a7ca33eae65915e142b6404f6f\",\"dweb:/ipfs/QmWtvWkC2Xvhj9wXfwBvrRc9a6iT1hsX8zpBULyWsH1jsr\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol\":{\"keccak256\":\"0x2c07b1aaac26b5885785b22ff066cc7e2324460f516e70cd3746b2456ace0c2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0bbda18d910ea8e9622726c138eafd60c59fe0f07826bb72c292af09bf61ec5\",\"dweb:/ipfs/QmdsQYRp9EGJjxk7AMsTSwd1dyHBYY9SEKHARvY7fqYPh1\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol\":{\"keccak256\":\"0x62c05425a7fd2b770f9e125c249cb1f8ee98a5a087c0b46ccd1ef04f4407badb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9159f08ef8c7f1a908e194ffb483a385d74527c458853ce39de2d49d3f0cd4a\",\"dweb:/ipfs/QmbqjtEcyH9akNgZMFJq6JrhTvW66JamZRHNmXJGPTY3ra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/IExtension.sol\":{\"keccak256\":\"0x825c24e3597ced6237f00db9b839515557a3098183bd828d333358ae7860f4dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f33c9d2e8e815ad93e7cd0dc71028e81fe3d5f6b9ee94c8634c642444c75437c\",\"dweb:/ipfs/QmNSQtHKvfztZrjDkmWhiCXmhywMCpPdB2vcd3aHZCVxWF\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/AdapterGuard.sol\":{\"keccak256\":\"0x4516ef19cf8175ad9cd417239fab9eb9117328366620a5ae8cd92bfdb25b9d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://95bedd3ade3aadaaa783b29ec28b6f095639dbab85df95a351ba640ca1c6826a\",\"dweb:/ipfs/QmfSDzropKYVH21wCY3UorsZUmXsanWihTfNKk7UM3Fcra\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/guards/MemberGuard.sol\":{\"keccak256\":\"0xd42b557f2d3411c31c2fc5e01ec9a803d5b20f0c8e887b6388f29d442e778624\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e8c33fc91a9c9fe2c0b1382342827c08ecd0b1c7861ef2fbf5db55e0d02e45\",\"dweb:/ipfs/Qma4ZRcytoGe7kTWgToyaRwgGgw5nz7h2dKbyLFVp43Y7V\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/AddressLib.sol\":{\"keccak256\":\"0xbbd7c74f6dee8c1bc6546a8b3a4f4dcf3f9637bde0b2511c786c3edb7a05bd9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb838394f592209d362cd26dcace7badc4b734bb51f97eb1e87e287014e55f89\",\"dweb:/ipfs/QmejFgmvPRTEbWEw2VY4QxmLvkoDskbJLcMX68qUXLWD6n\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol\":{\"keccak256\":\"0xdf7d112bce65b840a0bba8a7b7dfb1e4a687d4b7b1e9e533a5f2c5c7619bac4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9abe8da3a41d61ceb4abdccf97289a6b5e31d07550415061638670163158be0\",\"dweb:/ipfs/QmeRJrKa1rUj2Xt6sYaZ5sHtRvdhCTxpzWzeiLfdQRuoac\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/SafeERC20.sol\":{\"keccak256\":\"0xe3201a7f5c5b078b3f969e681826ccc84180a0099c94ad379855ba857b1ca850\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06307e7b73b1c254e4111de6e5da63e11f20d510b9e801f6486cd4f937b972da\",\"dweb:/ipfs/QmbBqQa9pV5AZWTzLwKG3STtjaV2o4vTAoiAYNZTxmuDTS\"]},\"/Users/sophia/OPENLAWTEAM/laoland/contracts/utils/IERC20.sol\":{\"keccak256\":\"0xdfe6b78de1845f89069f37ed70829694e7222bfdb8188af3deda16aa4d01b8f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1da9157153005f6eecfb8cd14f4812104c455cf4be5218ed70f7b8f2ec786f5b\",\"dweb:/ipfs/QmYQsXm2o3EPkeSx82VkUZkUEzSWuxg3CJ2qLNARAzGJjg\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11814:34",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:34",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:87:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "140:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "113:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "113:33:34"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:34",
                "type": ""
              }
            ],
            "src": "14:138:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "238:182:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "284:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "301:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "286:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "286:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "286:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "259:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "268:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "255:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "255:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "280:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "251:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "248:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "319:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "338:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "332:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "332:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "323:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "384:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "357:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "357:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "399:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "409:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "399:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "204:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "215:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "227:6:34",
                "type": ""
              }
            ],
            "src": "157:263:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:179:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "584:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "603:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "597:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "597:16:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "588:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "646:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "622:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "622:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "661:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "671:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "469:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "480:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "492:6:34",
                "type": ""
              }
            ],
            "src": "425:257:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "853:1294:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "900:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "909:6:34"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "917:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "902:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "902:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "902:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "874:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "883:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "870:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "870:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "895:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "866:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "863:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "935:36:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "948:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:23:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "939:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1007:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "980:26:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:33:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "980:33:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1022:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1032:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1022:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1046:12:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1056:2:34",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1050:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1067:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1094:9:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1105:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1077:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1077:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1067:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1118:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1128:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1169:46:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1200:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1211:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1196:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1196:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1183:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:32:34"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1173:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1224:28:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1234:18:34",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1228:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1279:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1288:6:34"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1296:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1281:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1281:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1281:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1267:6:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1275:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1264:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:14:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1261:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1314:32:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1328:9:34"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1324:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:22:34"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1318:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1394:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1403:6:34"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1411:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1396:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1396:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1396:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1373:2:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1377:4:34",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1369:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1369:13:34"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1384:7:34"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:27:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1358:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:35:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1355:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1429:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1452:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1439:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:16:34"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1433:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1478:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1480:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1480:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1480:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1470:2:34"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1474:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1467:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:10:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1464:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1509:21:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1523:2:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1527:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "1519:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1519:11:34"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "1513:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1539:23:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1553:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1553:9:34"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1543:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1571:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1597:6:34"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "1605:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1593:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:15:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1610:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1589:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:24:34"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1575:10:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1672:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1674:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1674:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1674:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1631:10:34"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1643:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1628:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1628:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1651:10:34"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1663:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1648:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1648:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1625:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1625:46:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1622:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:2:34",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1714:10:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1703:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:22:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1703:22:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1734:17:34",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1745:6:34"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1738:3:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1767:6:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1775:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1760:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1760:18:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1760:18:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:22:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1798:6:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1806:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1794:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:15:34"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "1787:3:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1818:22:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1833:2:34"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1837:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1829:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1829:11:34"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "1822:3:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1886:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1895:6:34"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1903:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1888:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1888:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1888:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1863:2:34"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "1867:2:34"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1859:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1859:11:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1872:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1855:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1855:20:34"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1877:7:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1852:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:33:34"
                  },
                  "nodeType": "YulIf",
                  "src": "1849:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1921:15:34",
                  "value": {
                    "name": "value3",
                    "nodeType": "YulIdentifier",
                    "src": "1930:6:34"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1925:1:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1990:126:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2011:3:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "2037:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_address",
                                "nodeType": "YulIdentifier",
                                "src": "2016:20:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2016:25:34"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2004:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2004:38:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2004:38:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2055:19:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2066:3:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2071:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2062:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2062:12:34"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2055:3:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2087:19:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2098:3:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2103:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2094:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2094:12:34"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2087:3:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1956:1:34"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1959:2:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1953:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1953:9:34"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1963:18:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1965:14:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1974:1:34"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1977:1:34",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1970:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1970:9:34"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1965:1:34"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1949:3:34",
                    "statements": []
                  },
                  "src": "1945:171:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:16:34",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2135:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2125:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_DaoRegistry_$8218t_uint256t_uint256t_array$_t_address_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "795:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "806:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "818:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "826:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "834:6:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "842:6:34",
                "type": ""
              }
            ],
            "src": "687:1460:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2233:113:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2279:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2288:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2296:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2281:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2281:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2281:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2254:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2263:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2250:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2250:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2275:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2246:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2246:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2243:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2314:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2330:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2324:5:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2324:16:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2314:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2199:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2210:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2222:6:34",
                "type": ""
              }
            ],
            "src": "2152:194:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2438:171:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2484:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2493:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2501:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2486:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2486:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2486:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2459:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2468:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2455:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2455:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2480:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2451:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2451:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2448:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2519:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2542:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2529:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2529:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2519:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2561:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2588:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2599:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2584:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2584:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2571:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2561:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2396:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2407:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2419:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2427:6:34",
                "type": ""
              }
            ],
            "src": "2351:258:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2715:288:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2761:26:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2770:6:34"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2778:6:34"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2763:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2763:22:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2763:22:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2736:7:34"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2745:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2732:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:23:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2757:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2728:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2728:32:34"
                  },
                  "nodeType": "YulIf",
                  "src": "2725:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2796:33:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2819:9:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2806:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:23:34"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2796:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2838:42:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2865:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2876:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2861:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2861:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2848:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:32:34"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2838:6:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2889:45:34",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2919:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2930:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2915:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2915:18:34"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2902:12:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:32:34"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2893:5:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2967:5:34"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2943:23:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2943:30:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2982:15:34",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2992:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2982:6:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2665:9:34",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2676:7:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2688:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2696:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2704:6:34",
                "type": ""
              }
            ],
            "src": "2614:389:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3109:125:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3119:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3131:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3142:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3127:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3127:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3119:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3161:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3176:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3184:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3172:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3172:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3154:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3154:74:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3078:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3089:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3100:4:34",
                "type": ""
              }
            ],
            "src": "3008:226:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3368:198:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3378:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3390:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3401:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3386:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3386:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3378:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3413:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3423:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3417:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3481:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3496:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3504:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3492:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3492:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3474:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3474:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3474:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3528:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3539:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3524:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3548:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3556:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3544:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3544:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3517:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3517:43:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3329:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3340:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3348:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3359:4:34",
                "type": ""
              }
            ],
            "src": "3239:327:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3756:294:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3766:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3778:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3789:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3774:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3774:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3766:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3802:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3812:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3806:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3870:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3885:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3893:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3881:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3881:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3863:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3863:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3863:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3917:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3928:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3913:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3913:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3937:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3945:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3933:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3933:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3906:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3906:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3906:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3969:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3980:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3965:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3965:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3989:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3997:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3985:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3985:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3958:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3958:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3958:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4021:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4032:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4017:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4017:18:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4037:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4010:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4010:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3701:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3712:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3720:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3728:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3736:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3747:4:34",
                "type": ""
              }
            ],
            "src": "3571:479:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4212:241:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4222:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4234:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4230:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4222:4:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4257:52:34",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4267:42:34",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4261:2:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4325:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4340:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4348:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4336:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4336:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4318:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4318:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4318:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4372:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4383:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4368:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4368:18:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4392:6:34"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4400:2:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:15:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4361:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4361:43:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4361:43:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4424:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4435:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4420:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4420:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4440:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4413:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4413:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4413:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4165:9:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4176:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4184:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4192:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4203:4:34",
                "type": ""
              }
            ],
            "src": "4055:398:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4600:378:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4610:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4622:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4633:2:34",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4618:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4610:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4652:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4667:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4675:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4663:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4663:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4645:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4645:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4645:74:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4761:168:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4782:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4785:77:34",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4775:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4775:88:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4775:88:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4883:1:34",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4886:4:34",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4876:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4876:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4876:15:34"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4911:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4914:4:34",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4904:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4904:15:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4904:15:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4741:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4749:1:34",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4738:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4738:13:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4731:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4731:21:34"
                  },
                  "nodeType": "YulIf",
                  "src": "4728:2:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4949:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4960:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4945:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4945:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4965:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4938:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4938:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4938:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_enum$_MemberFlag_$6657__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4561:9:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4572:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4580:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4591:4:34",
                "type": ""
              }
            ],
            "src": "4458:520:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5168:255:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5178:27:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5190:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5201:3:34",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5186:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:19:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5178:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5221:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5236:6:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5244:42:34",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5232:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5232:55:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5214:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5214:74:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5214:74:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5308:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5319:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5304:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5304:18:34"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5324:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5297:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5297:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5351:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5362:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5347:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5347:18:34"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5367:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5340:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5340:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5340:34:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5394:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5405:2:34",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5390:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5390:18:34"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "5410:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5383:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5383:34:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5383:34:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5113:9:34",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5124:6:34",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5132:6:34",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5140:6:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5148:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5159:4:34",
                "type": ""
              }
            ],
            "src": "4983:440:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5523:92:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5533:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5545:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5556:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5541:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5541:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5533:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5575:9:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5600:6:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5593:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5593:14:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5586:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5586:22:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5568:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5568:41:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5568:41:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5492:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5503:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5514:4:34",
                "type": ""
              }
            ],
            "src": "5428:187:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5731:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5743:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5754:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5739:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5739:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5731:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5773:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5784:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5766:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5766:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5766:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5690:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5701:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5712:4:34",
                "type": ""
              }
            ],
            "src": "5620:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5976:167:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5993:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6004:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5986:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5986:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5986:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6027:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6038:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6023:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6023:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6043:2:34",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6016:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6016:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6066:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6077:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6062:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6062:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6082:19:34",
                        "type": "",
                        "value": "token not allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6055:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6055:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6055:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6111:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6123:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6134:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6119:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6119:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6111:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5953:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5967:4:34",
                "type": ""
              }
            ],
            "src": "5802:341:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6322:180:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6339:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6350:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6332:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6332:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6332:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6373:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6384:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6369:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6369:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6389:2:34",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6362:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6362:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6362:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6412:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6423:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6408:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6408:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6428:32:34",
                        "type": "",
                        "value": "jailed member can not ragequit"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6401:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6401:60:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6401:60:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6470:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6482:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6493:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6478:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6478:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6470:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6299:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6313:4:34",
                "type": ""
              }
            ],
            "src": "6148:354:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6681:174:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6698:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6709:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6691:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6691:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6691:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6732:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6743:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6728:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6728:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6748:2:34",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6721:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6721:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6721:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6771:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6782:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6767:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6767:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6787:26:34",
                        "type": "",
                        "value": "insufficient shares/loot"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6760:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6760:54:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6760:54:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6823:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6835:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6846:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6831:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6831:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6823:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6658:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6672:4:34",
                "type": ""
              }
            ],
            "src": "6507:348:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7034:178:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7051:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7062:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7044:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7044:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7044:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7085:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7096:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7081:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7081:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7101:2:34",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7074:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7074:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7074:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7124:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7135:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7120:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7120:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7140:30:34",
                        "type": "",
                        "value": "total shares should not be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7113:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7113:58:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7113:58:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7180:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7192:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7203:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7188:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7188:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7180:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baf5f38ee4e2efa3343bfa438294bd21cce64c3a402f1d51d035ef323e8441b2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7011:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7025:4:34",
                "type": ""
              }
            ],
            "src": "6860:352:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7391:169:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7408:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7419:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7401:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7401:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7401:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7442:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7453:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7438:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7438:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7458:2:34",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7431:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7431:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7431:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7481:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7492:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7477:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7477:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7497:21:34",
                        "type": "",
                        "value": "insufficient shares"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7470:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7470:49:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7470:49:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7528:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7540:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7551:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7536:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7536:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7528:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7368:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7382:4:34",
                "type": ""
              }
            ],
            "src": "7217:343:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7739:165:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7756:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7767:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7749:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7749:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7749:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7790:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7801:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7786:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7786:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7806:2:34",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7779:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7779:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7779:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7829:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7840:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7825:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7825:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7845:17:34",
                        "type": "",
                        "value": "fallback revert"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7818:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7818:45:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7818:45:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7872:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7884:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7895:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7880:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7880:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7872:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7716:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7730:4:34",
                "type": ""
              }
            ],
            "src": "7565:339:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8083:167:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8100:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8111:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8093:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8093:21:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8093:21:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8134:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8145:2:34",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8130:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8130:18:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8150:2:34",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8123:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8123:30:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8123:30:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8173:9:34"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8184:2:34",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8169:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8169:18:34"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8189:19:34",
                        "type": "",
                        "value": "insufficient loot"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8162:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8162:47:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8162:47:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8218:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8230:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8241:2:34",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8226:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8226:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8218:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8060:9:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8074:4:34",
                "type": ""
              }
            ],
            "src": "7909:341:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8356:76:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8366:26:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8378:9:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8389:2:34",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8374:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8374:18:34"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8366:4:34"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8408:9:34"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8419:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8401:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8401:25:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8401:25:34"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8325:9:34",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8336:6:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8347:4:34",
                "type": ""
              }
            ],
            "src": "8255:177:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8485:80:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8512:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8514:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8514:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8514:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8501:1:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8508:1:34"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8504:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8504:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8498:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8498:13:34"
                  },
                  "nodeType": "YulIf",
                  "src": "8495:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8543:16:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8554:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8557:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8550:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8550:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8543:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8468:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8471:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8477:3:34",
                "type": ""
              }
            ],
            "src": "8437:128:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8616:74:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8639:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8641:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8641:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8641:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8636:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8629:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "8626:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8670:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8679:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8682:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8675:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8675:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8670:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8601:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8604:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8610:1:34",
                "type": ""
              }
            ],
            "src": "8570:120:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8772:376:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8782:15:34",
                  "value": {
                    "name": "_power",
                    "nodeType": "YulIdentifier",
                    "src": "8791:6:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "8782:5:34"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8806:13:34",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "8814:5:34"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "8806:4:34"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8853:289:34",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "8867:11:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "8877:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "8871:2:34",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8919:9:34",
                          "statements": [
                            {
                              "nodeType": "YulBreak",
                              "src": "8921:5:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "8904:8:34"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8914:2:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "8901:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8901:16:34"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "8894:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8894:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "8891:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8969:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8971:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8971:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8971:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "8947:4:34"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "8957:3:34"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "8962:4:34"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "8953:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8953:14:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "8944:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8944:24:34"
                        },
                        "nodeType": "YulIf",
                        "src": "8941:2:34"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9025:29:34",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9027:25:34",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9040:5:34"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9047:4:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "9036:3:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9036:16:34"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9027:5:34"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9011:8:34"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9021:2:34"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "9007:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9007:17:34"
                        },
                        "nodeType": "YulIf",
                        "src": "9004:2:34"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9067:23:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9079:4:34"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9085:4:34"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9075:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9075:15:34"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9067:4:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9103:29:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "9119:2:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9123:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "9115:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9115:17:34"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9103:8:34"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "kind": "bool",
                    "nodeType": "YulLiteral",
                    "src": "8836:4:34",
                    "type": "",
                    "value": "true"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8841:3:34",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8832:3:34",
                    "statements": []
                  },
                  "src": "8828:314:34"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_power",
                "nodeType": "YulTypedName",
                "src": "8723:6:34",
                "type": ""
              },
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "8731:5:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "8738:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "8748:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "8756:5:34",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "8763:4:34",
                "type": ""
              }
            ],
            "src": "8695:453:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9223:129:34",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9233:113:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9263:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9269:8:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9279:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "9242:20:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:104:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9233:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9194:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9200:8:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9213:5:34",
                "type": ""
              }
            ],
            "src": "9153:199:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9421:858:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9459:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9473:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9482:1:34",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9473:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9496:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9441:8:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9434:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9434:16:34"
                  },
                  "nodeType": "YulIf",
                  "src": "9431:2:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9544:52:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9558:10:34",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9567:1:34",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9558:5:34"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9581:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9530:4:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9523:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9523:12:34"
                  },
                  "nodeType": "YulIf",
                  "src": "9520:2:34"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9632:52:34",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "9646:10:34",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9655:1:34",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "9646:5:34"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "9669:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9625:59:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9630:1:34",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9700:176:34",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9735:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9737:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9737:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9737:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "9720:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9730:3:34",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "9717:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9717:17:34"
                            },
                            "nodeType": "YulIf",
                            "src": "9714:2:34"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "9770:25:34",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "9783:8:34"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9793:1:34",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9779:3:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9779:16:34"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "9770:5:34"
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9826:22:34",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9828:16:34"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9828:18:34"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9828:18:34"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "9814:5:34"
                                },
                                {
                                  "name": "max",
                                  "nodeType": "YulIdentifier",
                                  "src": "9821:3:34"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "9811:2:34"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9811:14:34"
                            },
                            "nodeType": "YulIf",
                            "src": "9808:2:34"
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "9861:5:34"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9693:183:34",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9698:1:34",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "9612:4:34"
                  },
                  "nodeType": "YulSwitch",
                  "src": "9605:271:34"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9974:123:34",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9988:28:34",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "10001:4:34"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "10007:8:34"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "9997:3:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9997:19:34"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9988:5:34"
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10047:22:34",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "10049:16:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10049:18:34"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10049:18:34"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "power",
                              "nodeType": "YulIdentifier",
                              "src": "10035:5:34"
                            },
                            {
                              "name": "max",
                              "nodeType": "YulIdentifier",
                              "src": "10042:3:34"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "10032:2:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10032:14:34"
                        },
                        "nodeType": "YulIf",
                        "src": "10029:2:34"
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "10082:5:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9898:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9904:2:34",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9895:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9895:12:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9912:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9922:2:34",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9909:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9909:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9891:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9891:35:34"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9935:4:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9941:3:34",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9932:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9932:13:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9950:8:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9960:2:34",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9947:2:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9947:16:34"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9928:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9928:36:34"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9888:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9888:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "9885:2:34"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10106:65:34",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10148:1:34",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10151:4:34"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10157:8:34"
                      },
                      {
                        "name": "max",
                        "nodeType": "YulIdentifier",
                        "src": "10167:3:34"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "10129:18:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10129:42:34"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "10110:7:34",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "10119:6:34",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10213:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10215:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10215:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10215:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10186:7:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "max",
                            "nodeType": "YulIdentifier",
                            "src": "10199:3:34"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "10204:6:34"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "10195:3:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10195:16:34"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10183:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10183:29:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10180:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10244:29:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "10257:7:34"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "10266:6:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10253:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10253:20:34"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10244:5:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9387:4:34",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9393:8:34",
                "type": ""
              },
              {
                "name": "max",
                "nodeType": "YulTypedName",
                "src": "9403:3:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9411:5:34",
                "type": ""
              }
            ],
            "src": "9357:922:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10336:176:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10455:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10457:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10457:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10457:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10367:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10360:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10360:9:34"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10353:6:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10353:17:34"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10375:1:34"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10382:66:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10450:1:34"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10378:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10378:74:34"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "10372:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10372:81:34"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10349:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10349:105:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10346:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10486:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10501:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10504:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "10497:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10497:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "10486:7:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10315:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10318:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "10324:7:34",
                "type": ""
              }
            ],
            "src": "10284:228:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10566:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10588:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10590:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10590:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10590:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10582:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10585:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10579:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10579:8:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10576:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10619:17:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10631:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10634:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10627:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10627:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10619:4:34"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10548:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10551:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10557:4:34",
                "type": ""
              }
            ],
            "src": "10517:125:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10694:148:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10785:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10787:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10787:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10787:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10710:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10717:66:34",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10707:2:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10707:77:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10704:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10816:20:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10827:5:34"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10834:1:34",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10823:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10823:13:34"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10816:3:34"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10676:5:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10686:3:34",
                "type": ""
              }
            ],
            "src": "10647:195:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10885:74:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10908:22:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "10910:16:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10910:18:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10910:18:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10905:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10898:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10898:9:34"
                  },
                  "nodeType": "YulIf",
                  "src": "10895:2:34"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10939:14:34",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10948:1:34"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10951:1:34"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "10944:3:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10944:9:34"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "10939:1:34"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10870:1:34",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10873:1:34",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "10879:1:34",
                "type": ""
              }
            ],
            "src": "10847:112:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10996:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11013:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11016:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11006:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11006:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11006:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11110:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11113:4:34",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11103:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11103:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11103:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11134:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11137:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11127:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11127:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11127:15:34"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10964:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11185:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11202:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11205:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11195:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11195:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11195:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11299:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11302:4:34",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11292:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11292:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11292:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11323:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11326:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11316:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11316:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11316:15:34"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "11153:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11374:152:34",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11391:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11394:77:34",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11384:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11384:88:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11384:88:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11488:1:34",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11491:4:34",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11481:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11481:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11481:15:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11512:1:34",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11515:4:34",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11505:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11505:15:34"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11505:15:34"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11342:184:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11578:109:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11665:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11674:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11677:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11667:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11667:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11667:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11601:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11612:5:34"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11619:42:34",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11608:3:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11608:54:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11598:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11598:65:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11591:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11591:73:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11588:2:34"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11567:5:34",
                "type": ""
              }
            ],
            "src": "11531:156:34"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11736:76:34",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11790:16:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11799:1:34",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11802:1:34",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11792:6:34"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11792:12:34"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11792:12:34"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11759:5:34"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11780:5:34"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11773:6:34"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11773:13:34"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "11766:6:34"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11766:21:34"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11756:2:34"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11756:32:34"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11749:6:34"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11749:40:34"
                  },
                  "nodeType": "YulIf",
                  "src": "11746:2:34"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11725:5:34",
                "type": ""
              }
            ],
            "src": "11692:120:34"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DaoRegistry_$8218t_uint256t_uint256t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, _5), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(value3, value3) }\n        let i := value3\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_t_address(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_t_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_enum$_MemberFlag_$6657__to_t_address_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        if iszero(lt(value1, 2))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"token not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"jailed member can not ragequit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"insufficient shares/loot\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baf5f38ee4e2efa3343bfa438294bd21cce64c3a402f1d51d035ef323e8441b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"total shares should not be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"insufficient shares\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"fallback revert\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"insufficient loot\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base\n    {\n        power := _power\n        base := _base\n        for { } true { }\n        {\n            let _1 := 1\n            if iszero(gt(exponent, _1)) { break }\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, _1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function checked_exp_unsigned(base, exponent, max) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(1, base, exponent, max)\n        if gt(power_1, div(max, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
      "id": 34,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1312:7441:6:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "1312:7441:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:25;;;;;;;;;;:::i;:::-;;;;;;;;1312:7441;;;;2421:363:20;;;;;;;;;;-1:-1:-1;2421:363:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2816:1342:6;;;;;;;;;;-1:-1:-1;2816:1342:6;;;;;:::i;:::-;;:::i;:::-;;2287:128:20;;;;;;;;;;-1:-1:-1;2287:128:20;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2421:363::-;2530:7;2577:5;2553:29;;:20;2561:5;2568:4;2553:7;:20::i;:::-;:29;;;2549:229;;2602:5;2598:127;;;2642:7;2645:4;2642:1;:7;:::i;:::-;2634:15;;:5;:15;:::i;:::-;2627:22;;;;2598:127;2703:7;2706:4;2703:1;:7;:::i;:::-;2695:15;;:5;:15;:::i;2598:127::-;2549:229;;;-1:-1:-1;2762:5:20;2549:229;2421:363;;;;;:::o;2816:1342:6:-;3083:1;3055:25;3070:10;3055:12;:25;:::i;:::-;:29;3047:66;;;;;;;;;;;;:::i;:::-;3221:37;;;;;3200:18;;3221:25;;;;;;:37;;3247:10;;3221:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3338:60;;;;;3200:58;;-1:-1:-1;3338:17:6;;;;;;:60;;3200:58;;3368:29;;3338:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3337:61;3316:138;;;;;;;;;;;;:::i;:::-;3596:29;;;;;3561:18;;3596:23;;;;;;:29;;1763:17:20;;3596:29:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3561:65;;3749:12;3711:4;:14;;;3726:10;2080:7:20;3711:34:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;3690:116;;;;;;;;;;;;:::i;:::-;3893:32;;;;;3929:10;;3893:14;;;;;;:32;;3908:10;;2135::20;;3893:32:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;3872:110;;;;;;;;;;;;:::i;:::-;4083:68;4100:10;4112:12;4126:10;4138:6;4146:4;4083:16;:68::i;:::-;2816:1342;;;;;;:::o;2287:128:20:-;2354:4;2377:26;2402:1;2378:20;;;;;;2377:26;:::i;:::-;2407:1;2377:31;;2287:128;-1:-1:-1;;;2287:128:20:o;4668:1198:6:-;5238:34;;;;;5096:33;;5238:14;;;;;;:34;;2024:6:20;;2200:10;;5238:34:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5192:27;;;;;:14;;;;;;:27;;2024:6:20;;2135:10;;5192:27:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5144:29;;;;;:14;;;;;;:29;;2024:6:20;;2080:7;;5144:29:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;;;:::i;:::-;:128;;;;:::i;:::-;5364:58;;;;;5096:176;;-1:-1:-1;5364:24:6;;;;;;:58;;5389:10;;2080:7:20;;5409:12:6;;5364:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5511:54:6;;;;;:24;;;;-1:-1:-1;5511:24:6;;-1:-1:-1;5511:54:6;;5536:10;;2135::20;;5554::6;;5511:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5687:172;5712:10;5736:12;5762:10;5786:25;5825:6;5845:4;6863:27;6893:25;6908:10;6893:12;:25;:::i;:::-;6863:55;;7194:9;7189:1274;7213:6;:13;7209:1;:17;7189:1274;;;7247:13;7263:6;7270:1;7263:9;;;;;;;;;;;;;;;;;;;;;;7247:25;;7361:4;:19;;;7381:5;7361:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7353:56;;;;;;;;;;;;:::i;:::-;7523:24;7566:176;7608:4;:14;;;1969:6:20;7630:5:6;7608:28;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7658:19;7699:25;7566:20;:176::i;:::-;7523:219;-1:-1:-1;7851:20:6;;7847:606;;8275:163;;;;;:21;;;;;;:163;;1969:6:20;;8345:10:6;;8377:5;;8404:16;;8275:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7847:606;7189:1274;;7228:3;;;;;:::i;:::-;;;;7189:1274;;;;8607:137;8635:10;8659:12;8685:10;8709:25;8607:137;;;;;;;;;:::i;:::-;;;;;;;;6561:2190;;;;;;;:::o;1268:531:29:-;1390:7;1417:17;1409:58;;;;;;;;;;;;:::i;:::-;1481:12;1477:51;;-1:-1:-1;1516:1:29;1509:8;;1477:51;1590:16;;;1600:6;1666:14;1590:7;:16;1666:14;:::i;:::-;:24;1662:81;;;1713:19;1720:12;1713:4;:19;:::i;:::-;1706:26;;;;;1662:81;1786:6;1760:22;1770:12;1760:7;:22;:::i;:::-;1759:33;;;;:::i;:::-;1752:40;1268:531;-1:-1:-1;;;;;1268:531:29:o;14:138:34:-;84:20;;113:33;84:20;113:33;:::i;:::-;65:87;;;:::o;157:263::-;;280:2;268:9;259:7;255:23;251:32;248:2;;;301:6;293;286:22;248:2;338:9;332:16;357:33;384:5;357:33;:::i;425:257::-;;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;603:9;597:16;622:30;646:5;622:30;:::i;687:1460::-;;;;;895:3;883:9;874:7;870:23;866:33;863:2;;;917:6;909;902:22;863:2;961:9;948:23;980:33;1007:5;980:33;:::i;:::-;1032:5;-1:-1:-1;1056:2:34;1090:18;;;1077:32;;-1:-1:-1;1156:2:34;1141:18;;1128:32;;-1:-1:-1;1211:2:34;1196:18;;1183:32;1234:18;1264:14;;;1261:2;;;1296:6;1288;1281:22;1261:2;1339:6;1328:9;1324:22;1314:32;;1384:7;1377:4;1373:2;1369:13;1365:27;1355:2;;1411:6;1403;1396:22;1355:2;1452;1439:16;1474:2;1470;1467:10;1464:2;;;1480:18;;:::i;:::-;1527:2;1523;1519:11;1559:2;1553:9;1610:2;1605;1597:6;1593:15;1589:24;1663:6;1651:10;1648:22;1643:2;1631:10;1628:18;1625:46;1622:2;;;1674:18;;:::i;:::-;1710:2;1703:22;1760:18;;;1794:15;;;;-1:-1:-1;1829:11:34;;;1859;;;1855:20;;1852:33;-1:-1:-1;1849:2:34;;;1903:6;1895;1888:22;1849:2;1930:6;1921:15;;1945:171;1959:2;1956:1;1953:9;1945:171;;;2016:25;2037:3;2016:25;:::i;:::-;2004:38;;1977:1;1970:9;;;;;2062:12;;;;2094;;1945:171;;;-1:-1:-1;853:1294:34;;;;-1:-1:-1;853:1294:34;;-1:-1:-1;;;;;;;853:1294:34:o;2152:194::-;;2275:2;2263:9;2254:7;2250:23;2246:32;2243:2;;;2296:6;2288;2281:22;2243:2;-1:-1:-1;2324:16:34;;2233:113;-1:-1:-1;2233:113:34:o;2351:258::-;;;2480:2;2468:9;2459:7;2455:23;2451:32;2448:2;;;2501:6;2493;2486:22;2448:2;-1:-1:-1;;2529:23:34;;;2599:2;2584:18;;;2571:32;;-1:-1:-1;2438:171:34:o;2614:389::-;;;;2757:2;2745:9;2736:7;2732:23;2728:32;2725:2;;;2778:6;2770;2763:22;2725:2;2819:9;2806:23;2796:33;;2876:2;2865:9;2861:18;2848:32;2838:42;;2930:2;2919:9;2915:18;2902:32;2943:30;2967:5;2943:30;:::i;:::-;2992:5;2982:15;;;2715:288;;;;;:::o;3008:226::-;3184:42;3172:55;;;;3154:74;;3142:2;3127:18;;3109:125::o;3239:327::-;3423:42;3492:15;;;3474:34;;3544:15;;3539:2;3524:18;;3517:43;3401:2;3386:18;;3368:198::o;3571:479::-;3812:42;3881:15;;;3863:34;;3933:15;;;3928:2;3913:18;;3906:43;3985:15;;3980:2;3965:18;;3958:43;4032:2;4017:18;;4010:34;;;;3789:3;3774:19;;3756:294::o;4055:398::-;4267:42;4336:15;;;4318:34;;4388:15;;;;4383:2;4368:18;;4361:43;4435:2;4420:18;;4413:34;;;;4245:2;4230:18;;4212:241::o;4458:520::-;4675:42;4663:55;;4645:74;;4633:2;4618:18;;4749:1;4738:13;;4728:2;;4785:77;4782:1;4775:88;4886:4;4883:1;4876:15;4914:4;4911:1;4904:15;4728:2;4965:6;4960:2;4949:9;4945:18;4938:34;4600:378;;;;;:::o;4983:440::-;5244:42;5232:55;;;;5214:74;;5319:2;5304:18;;5297:34;;;;5362:2;5347:18;;5340:34;5405:2;5390:18;;5383:34;5201:3;5186:19;;5168:255::o;5428:187::-;5593:14;;5586:22;5568:41;;5556:2;5541:18;;5523:92::o;5620:177::-;5766:25;;;5754:2;5739:18;;5721:76::o;5802:341::-;6004:2;5986:21;;;6043:2;6023:18;;;6016:30;6082:19;6077:2;6062:18;;6055:47;6134:2;6119:18;;5976:167::o;6148:354::-;6350:2;6332:21;;;6389:2;6369:18;;;6362:30;6428:32;6423:2;6408:18;;6401:60;6493:2;6478:18;;6322:180::o;6507:348::-;6709:2;6691:21;;;6748:2;6728:18;;;6721:30;6787:26;6782:2;6767:18;;6760:54;6846:2;6831:18;;6681:174::o;6860:352::-;7062:2;7044:21;;;7101:2;7081:18;;;7074:30;7140;7135:2;7120:18;;7113:58;7203:2;7188:18;;7034:178::o;7217:343::-;7419:2;7401:21;;;7458:2;7438:18;;;7431:30;7497:21;7492:2;7477:18;;7470:49;7551:2;7536:18;;7391:169::o;7565:339::-;7767:2;7749:21;;;7806:2;7786:18;;;7779:30;7845:17;7840:2;7825:18;;7818:45;7895:2;7880:18;;7739:165::o;7909:341::-;8111:2;8093:21;;;8150:2;8130:18;;;8123:30;8189:19;8184:2;8169:18;;8162:47;8241:2;8226:18;;8083:167::o;8437:128::-;;8508:1;8504:6;8501:1;8498:13;8495:2;;;8514:18;;:::i;:::-;-1:-1:-1;8550:9:34;;8485:80::o;8570:120::-;;8636:1;8626:2;;8641:18;;:::i;:::-;-1:-1:-1;8675:9:34;;8616:74::o;8695:453::-;8791:6;8814:5;8828:314;8877:1;8914:2;8904:8;8901:16;8891:2;;8921:5;;;8891:2;8962:4;8957:3;8953:14;8947:4;8944:24;8941:2;;;8971:18;;:::i;:::-;9021:2;9011:8;9007:17;9004:2;;;9036:16;;;;9004:2;9115:17;;;;;9075:15;;8828:314;;;8772:376;;;;;;;:::o;9153:199::-;;9242:104;9279:66;9269:8;9263:4;9357:922;9441:8;9431:2;;-1:-1:-1;9482:1:34;9496:5;;9431:2;9530:4;9520:2;;-1:-1:-1;9567:1:34;9581:5;;9520:2;9612:4;9630:1;9625:59;;;;9698:1;9693:183;;;;9605:271;;9625:59;9655:1;9646:10;;9669:5;;;9693:183;9730:3;9720:8;9717:17;9714:2;;;9737:18;;:::i;:::-;9793:1;9783:8;9779:16;9770:25;;9821:3;9814:5;9811:14;9808:2;;;9828:18;;:::i;:::-;9861:5;;;9605:271;;9960:2;9950:8;9947:16;9941:3;9935:4;9932:13;9928:36;9922:2;9912:8;9909:16;9904:2;9898:4;9895:12;9891:35;9888:77;9885:2;;;-1:-1:-1;9997:19:34;;;10032:14;;;10029:2;;;10049:18;;:::i;9885:2::-;10129:42;10167:3;10157:8;10151:4;10148:1;10129:42;:::i;:::-;10204:6;10199:3;10195:16;10186:7;10183:29;10180:2;;;10215:18;;:::i;:::-;10253:20;;9421:858;-1:-1:-1;;;;9421:858:34:o;10284:228::-;;10450:1;10382:66;10378:74;10375:1;10372:81;10367:1;10360:9;10353:17;10349:105;10346:2;;;10457:18;;:::i;:::-;-1:-1:-1;10497:9:34;;10336:176::o;10517:125::-;;10585:1;10582;10579:8;10576:2;;;10590:18;;:::i;:::-;-1:-1:-1;10627:9:34;;10566:76::o;10647:195::-;;10717:66;10710:5;10707:77;10704:2;;;10787:18;;:::i;:::-;-1:-1:-1;10834:1:34;10823:13;;10694:148::o;10847:112::-;;10905:1;10895:2;;10910:18;;:::i;:::-;-1:-1:-1;10944:9:34;;10885:74::o;10964:184::-;11016:77;11013:1;11006:88;11113:4;11110:1;11103:15;11137:4;11134:1;11127:15;11153:184;11205:77;11202:1;11195:88;11302:4;11299:1;11292:15;11326:4;11323:1;11316:15;11342:184;11394:77;11391:1;11384:88;11491:4;11488:1;11481:15;11515:4;11512:1;11505:15;11531:156;11619:42;11612:5;11608:54;11601:5;11598:65;11588:2;;11677:1;11674;11667:12;11588:2;11578:109;:::o;11692:120::-;11780:5;11773:13;11766:21;11759:5;11756:32;11746:2;;11802:1;11799;11792:12",
  "source": "pragma solidity ^0.8.0;\n\n// SPDX-License-Identifier: MIT\n\nimport \"../core/DaoConstants.sol\";\nimport \"../core/DaoRegistry.sol\";\nimport \"../extensions/Bank.sol\";\nimport \"./interfaces/IRagequit.sol\";\nimport \"../helpers/FairShareHelper.sol\";\n\n/**\nMIT License\n\nCopyright (c) 2020 Openlaw\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n */\n\ncontract RagequitContract is IRagequit, DaoConstants {\n    /**\n     * @notice Event emitted when a member of the DAO executes a ragequit with all or parts of the member's shares/loot.\n     */\n    event MemberRagequit(\n        address memberAddr,\n        uint256 burnedShares,\n        uint256 burnedLoot,\n        uint256 initialTotalSharesAndLoot\n    );\n\n    /**\n     * @notice default fallback function to prevent from sending ether to the contract.\n     */\n    receive() external payable {\n        revert(\"fallback revert\");\n    }\n\n    /**\n     * @notice Allows a member or advisor of the DAO to opt out by burning the proportional amount of shares/loot of the member.\n     * @notice Anyone is allowed to call this function, but only members and advisors that have shares are able to execute the entire ragequit process.\n     * @dev The sum of sharesToBurn and lootToBurn have to be greater than zero.\n     * @dev The member can not be in jail to execute a ragequit.\n     * @dev The member becomes an inactive member of the DAO once all the shares/loot are burned.\n     * @dev If the member provides an invalid/not allowed token, the entire processed is reverted.\n     * @param dao The dao address that the member is part of.\n     * @param sharesToBurn The amount of shares of the member that must be converted into funds.\n     * @param lootToBurn The amount of loot of the member that must be converted into funds.\n     * @param tokens The array of tokens that the funds should be sent to.\n     */\n    function ragequit(\n        DaoRegistry dao,\n        uint256 sharesToBurn,\n        uint256 lootToBurn,\n        address[] memory tokens\n    ) external override {\n        // Checks if the are enough shares and/or loot to burn\n        require(sharesToBurn + lootToBurn > 0, \"insufficient shares/loot\");\n        // Gets the delegated address, otherwise returns the sender address.\n        address memberAddr = dao.getAddressIfDelegated(msg.sender);\n\n        // Checks if the member is not in jail\n        require(\n            !dao.getMemberFlag(memberAddr, DaoRegistry.MemberFlag.JAILED),\n            \"jailed member can not ragequit\"\n        );\n\n        // Instantiates the Bank extension to handle the internal balance checks and transfers.\n        BankExtension bank = BankExtension(dao.getExtensionAddress(BANK));\n        // Check if member has enough shares to burn.\n        require(\n            bank.balanceOf(memberAddr, SHARES) >= sharesToBurn,\n            \"insufficient shares\"\n        );\n        // Check if the member has enough loot to burn.\n        require(\n            bank.balanceOf(memberAddr, LOOT) >= lootToBurn,\n            \"insufficient loot\"\n        );\n\n        // Start the ragequit process by updating the member's internal account balances.\n        _prepareRagequit(memberAddr, sharesToBurn, lootToBurn, tokens, bank);\n    }\n\n    /**\n     * @notice Subtracts from the internal member's account the proportional shares and/or loot.\n     * @param memberAddr The member address that wants to burn the shares and/or loot.\n     * @param sharesToBurn The amount of shares of the member that must be converted into funds.\n     * @param lootToBurn The amount of loot of the member that must be converted into funds.\n     * @param tokens The array of tokens that the funds should be sent to.\n     * @param bank The bank extension.\n     */\n    function _prepareRagequit(\n        address memberAddr,\n        uint256 sharesToBurn,\n        uint256 lootToBurn,\n        address[] memory tokens,\n        BankExtension bank\n    ) internal {\n        // Calculates the total shares, loot and locked loot before any internal transfers\n        // it considers the locked loot to be able to calculate the fair amount to ragequit,\n        // but locked loot can not be burned.\n        uint256 initialTotalSharesAndLoot =\n            bank.balanceOf(TOTAL, SHARES) +\n                bank.balanceOf(TOTAL, LOOT) +\n                bank.balanceOf(TOTAL, LOCKED_LOOT);\n\n        // Burns / subtracts from member's balance the number of shares to burn.\n        bank.subtractFromBalance(memberAddr, SHARES, sharesToBurn);\n        // Burns / subtracts from member's balance the number of loot to burn.\n        bank.subtractFromBalance(memberAddr, LOOT, lootToBurn);\n\n        // Completes the ragequit process by updating the GUILD internal balance based on each provided token.\n        _burnShares(\n            memberAddr,\n            sharesToBurn,\n            lootToBurn,\n            initialTotalSharesAndLoot,\n            tokens,\n            bank\n        );\n    }\n\n    /**\n     * @notice Subtracts from the bank's account the proportional shares and/or loot,\n     * @notice and transfers the funds to the member's internal account based on the provided tokens.\n     * @param memberAddr The member address that wants to burn the shares and/or loot.\n     * @param sharesToBurn The amount of shares of the member that must be converted into funds.\n     * @param lootToBurn The amount of loot of the member that must be converted into funds.\n     * @param initialTotalSharesAndLoot The sum of shares and loot before internal transfers.\n     * @param tokens The array of tokens that the funds should be sent to.\n     * @param bank The bank extension.\n     */\n    function _burnShares(\n        address memberAddr,\n        uint256 sharesToBurn,\n        uint256 lootToBurn,\n        uint256 initialTotalSharesAndLoot,\n        address[] memory tokens,\n        BankExtension bank\n    ) internal {\n        // Calculates the total amount of shares and loot to burn\n        uint256 sharesAndLootToBurn = sharesToBurn + lootToBurn;\n\n        // Transfers the funds from the internal Guild account to the internal member's account based on each token provided by the member.\n        // The provided token must be supported/allowed by the Guild Bank, otherwise it reverts the entire transaction.\n        for (uint256 i = 0; i < tokens.length; i++) {\n            address token = tokens[i];\n            // Checks if the token is supported by the Guild Bank.\n            require(bank.isTokenAllowed(token), \"token not allowed\");\n\n            // Calculates the fair amount of funds to ragequit based on the token, shares and loot\n            uint256 amountToRagequit =\n                FairShareHelper.calc(\n                    bank.balanceOf(GUILD, token),\n                    sharesAndLootToBurn,\n                    initialTotalSharesAndLoot\n                );\n\n            // Ony execute the internal transfer if the user has enough funds to receive.\n            if (amountToRagequit > 0) {\n                // gas optimization to allow a higher maximum token limit\n                // deliberately not using safemath here to keep overflows from preventing the function execution\n                // (which would break ragekicks) if a token overflows,\n                // it is because the supply was artificially inflated to oblivion, so we probably don\"t care about it anyways\n                bank.internalTransfer(\n                    GUILD,\n                    memberAddr,\n                    token,\n                    amountToRagequit\n                );\n            }\n        }\n\n        // Once the shares and loot were burned, and the transfers completed, emit an event to indicate a successfull operation.\n        emit MemberRagequit(\n            memberAddr,\n            sharesToBurn,\n            lootToBurn,\n            initialTotalSharesAndLoot\n        );\n    }\n}\n",
  "sourcePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Ragequit.sol",
  "ast": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Ragequit.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FairShareHelper": [
        9783
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IRagequit": [
        3685
      ],
      "MemberGuard": [
        9428
      ],
      "RagequitContract": [
        2767
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 2768,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2503,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2504,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 6255,
        "src": "58:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2505,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 8219,
        "src": "93:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 2506,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 9182,
        "src": "127:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IRagequit.sol",
        "file": "./interfaces/IRagequit.sol",
        "id": 2507,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 3686,
        "src": "160:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol",
        "file": "../helpers/FairShareHelper.sol",
        "id": 2508,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 9784,
        "src": "197:40:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2510,
              "name": "IRagequit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3685,
              "src": "1341:9:6"
            },
            "id": 2511,
            "nodeType": "InheritanceSpecifier",
            "src": "1341:9:6"
          },
          {
            "baseName": {
              "id": 2512,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1352:12:6"
            },
            "id": 2513,
            "nodeType": "InheritanceSpecifier",
            "src": "1352:12:6"
          }
        ],
        "contractDependencies": [
          3685,
          6254
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2509,
          "nodeType": "StructuredDocumentation",
          "src": "239:1071:6",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 2767,
        "linearizedBaseContracts": [
          2767,
          6254,
          3685
        ],
        "name": "RagequitContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2514,
              "nodeType": "StructuredDocumentation",
              "src": "1371:132:6",
              "text": " @notice Event emitted when a member of the DAO executes a ragequit with all or parts of the member's shares/loot."
            },
            "id": 2524,
            "name": "MemberRagequit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1538:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burnedShares",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1566:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burnedLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1596:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialTotalSharesAndLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1624:33:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:135:6"
            },
            "src": "1508:156:6"
          },
          {
            "body": {
              "id": 2532,
              "nodeType": "Block",
              "src": "1801:42:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1818:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2528,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1811:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:25:6"
                }
              ]
            },
            "documentation": {
              "id": 2525,
              "nodeType": "StructuredDocumentation",
              "src": "1670:99:6",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 2533,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:2:6"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:0:6"
            },
            "scope": 2767,
            "src": "1774:69:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3684
            ],
            "body": {
              "id": 2617,
              "nodeType": "Block",
              "src": "2974:1184:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2549,
                            "name": "sharesToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2539,
                            "src": "3055:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2550,
                            "name": "lootToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2541,
                            "src": "3070:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3055:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3083:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3055:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e74207368617265732f6c6f6f74",
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3086:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15",
                          "typeString": "literal_string \"insufficient shares/loot\""
                        },
                        "value": "insufficient shares/loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15",
                          "typeString": "literal_string \"insufficient shares/loot\""
                        }
                      ],
                      "id": 2548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3047:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2556,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:66:6"
                },
                {
                  "assignments": [
                    2558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2558,
                      "mutability": "mutable",
                      "name": "memberAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 2617,
                      "src": "3200:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2557,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3200:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2564,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3247:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3247:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2559,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2537,
                        "src": "3221:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressIfDelegated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7959,
                      "src": "3221:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3221:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3200:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3337:61:6",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2568,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3356:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 2569,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8218,
                                  "src": "3368:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8218_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 2570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MemberFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6657,
                                "src": "3368:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MemberFlag_$6657_$",
                                  "typeString": "type(enum DaoRegistry.MemberFlag)"
                                }
                              },
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "JAILED",
                              "nodeType": "MemberAccess",
                              "src": "3368:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberFlag_$6657",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_MemberFlag_$6657",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            ],
                            "expression": {
                              "id": 2566,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2537,
                              "src": "3338:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMemberFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7808,
                            "src": "3338:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_MemberFlag_$6657_$returns$_t_bool_$",
                              "typeString": "function (address,enum DaoRegistry.MemberFlag) view external returns (bool)"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6a61696c6564206d656d6265722063616e206e6f74207261676571756974",
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3412:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325",
                          "typeString": "literal_string \"jailed member can not ragequit\""
                        },
                        "value": "jailed member can not ragequit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325",
                          "typeString": "literal_string \"jailed member can not ragequit\""
                        }
                      ],
                      "id": 2565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3316:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:138:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:138:6"
                },
                {
                  "assignments": [
                    2579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2579,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 2617,
                      "src": "3561:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 2578,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2577,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "3561:13:6"
                        },
                        "referencedDeclaration": 9181,
                        "src": "3561:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2583,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "3620:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2581,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2537,
                            "src": "3596:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "3596:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3596:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2580,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "3582:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3582:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3561:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2590,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3726:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2591,
                              "name": "SHARES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6174,
                              "src": "3738:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2588,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "3711:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 2589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8930,
                            "src": "3711:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2593,
                          "name": "sharesToBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "3749:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3711:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e7420736861726573",
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3775:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a",
                          "typeString": "literal_string \"insufficient shares\""
                        },
                        "value": "insufficient shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a",
                          "typeString": "literal_string \"insufficient shares\""
                        }
                      ],
                      "id": 2587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3690:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:116:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2601,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3908:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2602,
                              "name": "LOOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "3920:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2599,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "3893:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 2600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8930,
                            "src": "3893:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3893:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2604,
                          "name": "lootToBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2541,
                          "src": "3929:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3893:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e74206c6f6f74",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3953:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04",
                          "typeString": "literal_string \"insufficient loot\""
                        },
                        "value": "insufficient loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04",
                          "typeString": "literal_string \"insufficient loot\""
                        }
                      ],
                      "id": 2598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3872:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:110:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2610,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "4100:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2611,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "4112:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2612,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2541,
                        "src": "4126:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2613,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "4138:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2614,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "4146:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      ],
                      "id": 2609,
                      "name": "_prepareRagequit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2680,
                      "src": "4083:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_BankExtension_$9181_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address[] memory,contract BankExtension)"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4083:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "4083:68:6"
                }
              ]
            },
            "documentation": {
              "id": 2534,
              "nodeType": "StructuredDocumentation",
              "src": "1849:962:6",
              "text": " @notice Allows a member or advisor of the DAO to opt out by burning the proportional amount of shares/loot of the member.\n @notice Anyone is allowed to call this function, but only members and advisors that have shares are able to execute the entire ragequit process.\n @dev The sum of sharesToBurn and lootToBurn have to be greater than zero.\n @dev The member can not be in jail to execute a ragequit.\n @dev The member becomes an inactive member of the DAO once all the shares/loot are burned.\n @dev If the member provides an invalid/not allowed token, the entire processed is reverted.\n @param dao The dao address that the member is part of.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param tokens The array of tokens that the funds should be sent to."
            },
            "functionSelector": "ed0cdf15",
            "id": 2618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ragequit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2546,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2965:8:6"
            },
            "parameters": {
              "id": 2545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2843:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2536,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2535,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2843:11:6"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2843:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2868:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2898:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2926:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2542,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2926:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2543,
                    "nodeType": "ArrayTypeName",
                    "src": "2926:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:122:6"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:6"
            },
            "scope": 2767,
            "src": "2816:1342:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2679,
              "nodeType": "Block",
              "src": "4856:1010:6",
              "statements": [
                {
                  "assignments": [
                    2635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2635,
                      "mutability": "mutable",
                      "name": "initialTotalSharesAndLoot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2679,
                      "src": "5096:33:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5096:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2653,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2638,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "5159:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2639,
                            "name": "SHARES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6174,
                            "src": "5166:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2636,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2631,
                            "src": "5144:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8930,
                          "src": "5144:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5144:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 2643,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "5207:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2644,
                            "name": "LOOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6180,
                            "src": "5214:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2641,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2631,
                            "src": "5192:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8930,
                          "src": "5192:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5192:27:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5144:75:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2649,
                          "name": "TOTAL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6168,
                          "src": "5253:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2650,
                          "name": "LOCKED_LOOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6186,
                          "src": "5260:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2647,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2631,
                          "src": "5238:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9181",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8930,
                        "src": "5238:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 2651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5238:34:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5144:128:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5096:176:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2657,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5389:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2658,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "5401:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2659,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "5409:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2654,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5364:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5364:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5364:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "5364:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2665,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5536:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2666,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "5548:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2667,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5554:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2662,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5511:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5511:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5511:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2669,
                  "nodeType": "ExpressionStatement",
                  "src": "5511:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2671,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5712:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2672,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "5736:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2673,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5762:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2674,
                        "name": "initialTotalSharesAndLoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "5786:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2675,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "5825:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2676,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5845:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      ],
                      "id": 2670,
                      "name": "_burnShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2766,
                      "src": "5687:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_BankExtension_$9181_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address[] memory,contract BankExtension)"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5687:172:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2678,
                  "nodeType": "ExpressionStatement",
                  "src": "5687:172:6"
                }
              ]
            },
            "documentation": {
              "id": 2619,
              "nodeType": "StructuredDocumentation",
              "src": "4164:499:6",
              "text": " @notice Subtracts from the internal member's account the proportional shares and/or loot.\n @param memberAddr The member address that wants to burn the shares and/or loot.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param tokens The array of tokens that the funds should be sent to.\n @param bank The bank extension."
            },
            "id": 2680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareRagequit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4703:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4731:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4761:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4761:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4789:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2626,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4789:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2627,
                    "nodeType": "ArrayTypeName",
                    "src": "4789:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4822:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                    "typeString": "contract BankExtension"
                  },
                  "typeName": {
                    "id": 2630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2629,
                      "name": "BankExtension",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9181,
                      "src": "4822:13:6"
                    },
                    "referencedDeclaration": 9181,
                    "src": "4822:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4693:153:6"
            },
            "returnParameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4856:0:6"
            },
            "scope": 2767,
            "src": "4668:1198:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "6787:1964:6",
              "statements": [
                {
                  "assignments": [
                    2699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2699,
                      "mutability": "mutable",
                      "name": "sharesAndLootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 2765,
                      "src": "6863:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6863:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2703,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2700,
                      "name": "sharesToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "6893:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2701,
                      "name": "lootToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "6908:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6893:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6863:55:6"
                },
                {
                  "body": {
                    "id": 2756,
                    "nodeType": "Block",
                    "src": "7233:1230:6",
                    "statements": [
                      {
                        "assignments": [
                          2716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2716,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2756,
                            "src": "7247:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7247:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2720,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2717,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2692,
                            "src": "7263:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2719,
                          "indexExpression": {
                            "id": 2718,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2705,
                            "src": "7270:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7263:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7247:25:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2724,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2716,
                                  "src": "7381:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2722,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "7361:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 2723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isTokenAllowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8488,
                                "src": "7361:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7361:26:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e206e6f7420616c6c6f776564",
                              "id": 2726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7389:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                                "typeString": "literal_string \"token not allowed\""
                              },
                              "value": "token not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                                "typeString": "literal_string \"token not allowed\""
                              }
                            ],
                            "id": 2721,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7353:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7353:56:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2728,
                        "nodeType": "ExpressionStatement",
                        "src": "7353:56:6"
                      },
                      {
                        "assignments": [
                          2730
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2730,
                            "mutability": "mutable",
                            "name": "amountToRagequit",
                            "nodeType": "VariableDeclaration",
                            "scope": 2756,
                            "src": "7523:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2729,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7523:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2741,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2735,
                                  "name": "GUILD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6162,
                                  "src": "7623:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2736,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2716,
                                  "src": "7630:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2733,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "7608:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 2734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8930,
                                "src": "7608:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7608:28:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2738,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2699,
                              "src": "7658:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2739,
                              "name": "initialTotalSharesAndLoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2689,
                              "src": "7699:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2731,
                              "name": "FairShareHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9783,
                              "src": "7566:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FairShareHelper_$9783_$",
                                "typeString": "type(library FairShareHelper)"
                              }
                            },
                            "id": 2732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calc",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9782,
                            "src": "7566:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7566:176:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7523:219:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2742,
                            "name": "amountToRagequit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2730,
                            "src": "7851:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7870:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7851:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2755,
                        "nodeType": "IfStatement",
                        "src": "7847:606:6",
                        "trueBody": {
                          "id": 2754,
                          "nodeType": "Block",
                          "src": "7873:580:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2748,
                                    "name": "GUILD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6162,
                                    "src": "8318:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2749,
                                    "name": "memberAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2683,
                                    "src": "8345:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2750,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2716,
                                    "src": "8377:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2751,
                                    "name": "amountToRagequit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2730,
                                    "src": "8404:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2745,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2695,
                                    "src": "8275:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 2747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "internalTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8895,
                                  "src": "8275:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256) external"
                                  }
                                },
                                "id": 2752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8275:163:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2753,
                              "nodeType": "ExpressionStatement",
                              "src": "8275:163:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2708,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "7209:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2709,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "7213:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7213:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7209:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2757,
                  "initializationExpression": {
                    "assignments": [
                      2705
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2705,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2757,
                        "src": "7194:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2704,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7194:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2707,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7206:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7194:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7228:3:6",
                      "subExpression": {
                        "id": 2712,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2705,
                        "src": "7228:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2714,
                    "nodeType": "ExpressionStatement",
                    "src": "7228:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7189:1274:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2759,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "8635:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2760,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8659:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2761,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "8685:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2762,
                        "name": "initialTotalSharesAndLoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "8709:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2758,
                      "name": "MemberRagequit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "8607:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8607:137:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2764,
                  "nodeType": "EmitStatement",
                  "src": "8602:142:6"
                }
              ]
            },
            "documentation": {
              "id": 2681,
              "nodeType": "StructuredDocumentation",
              "src": "5872:684:6",
              "text": " @notice Subtracts from the bank's account the proportional shares and/or loot,\n @notice and transfers the funds to the member's internal account based on the provided tokens.\n @param memberAddr The member address that wants to burn the shares and/or loot.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param initialTotalSharesAndLoot The sum of shares and loot before internal transfers.\n @param tokens The array of tokens that the funds should be sent to.\n @param bank The bank extension."
            },
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6591:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6591:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6619:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6649:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "mutability": "mutable",
                  "name": "initialTotalSharesAndLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6677:33:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2692,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6720:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2690,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6720:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2691,
                    "nodeType": "ArrayTypeName",
                    "src": "6720:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6753:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                    "typeString": "contract BankExtension"
                  },
                  "typeName": {
                    "id": 2694,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2693,
                      "name": "BankExtension",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9181,
                      "src": "6753:13:6"
                    },
                    "referencedDeclaration": 9181,
                    "src": "6753:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6581:196:6"
            },
            "returnParameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6787:0:6"
            },
            "scope": 2767,
            "src": "6561:2190:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2768,
        "src": "1312:7441:6"
      }
    ],
    "src": "0:8754:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/Ragequit.sol",
    "exportedSymbols": {
      "AdapterGuard": [
        9340
      ],
      "Address": [
        9724
      ],
      "BankExtension": [
        9181
      ],
      "DaoConstants": [
        6254
      ],
      "DaoRegistry": [
        8218
      ],
      "FairShareHelper": [
        9783
      ],
      "IERC20": [
        10558
      ],
      "IExtension": [
        9244
      ],
      "IRagequit": [
        3685
      ],
      "MemberGuard": [
        9428
      ],
      "RagequitContract": [
        2767
      ],
      "SafeERC20": [
        9995
      ]
    },
    "id": 2768,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2503,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoConstants.sol",
        "file": "../core/DaoConstants.sol",
        "id": 2504,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 6255,
        "src": "58:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/core/DaoRegistry.sol",
        "file": "../core/DaoRegistry.sol",
        "id": 2505,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 8219,
        "src": "93:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/extensions/Bank.sol",
        "file": "../extensions/Bank.sol",
        "id": 2506,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 9182,
        "src": "127:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/adapters/interfaces/IRagequit.sol",
        "file": "./interfaces/IRagequit.sol",
        "id": 2507,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 3686,
        "src": "160:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sophia/OPENLAWTEAM/laoland/contracts/helpers/FairShareHelper.sol",
        "file": "../helpers/FairShareHelper.sol",
        "id": 2508,
        "nodeType": "ImportDirective",
        "scope": 2768,
        "sourceUnit": 9784,
        "src": "197:40:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2510,
              "name": "IRagequit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3685,
              "src": "1341:9:6"
            },
            "id": 2511,
            "nodeType": "InheritanceSpecifier",
            "src": "1341:9:6"
          },
          {
            "baseName": {
              "id": 2512,
              "name": "DaoConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6254,
              "src": "1352:12:6"
            },
            "id": 2513,
            "nodeType": "InheritanceSpecifier",
            "src": "1352:12:6"
          }
        ],
        "contractDependencies": [
          3685,
          6254
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 2509,
          "nodeType": "StructuredDocumentation",
          "src": "239:1071:6",
          "text": "MIT License\nCopyright (c) 2020 Openlaw\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        "fullyImplemented": true,
        "id": 2767,
        "linearizedBaseContracts": [
          2767,
          6254,
          3685
        ],
        "name": "RagequitContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2514,
              "nodeType": "StructuredDocumentation",
              "src": "1371:132:6",
              "text": " @notice Event emitted when a member of the DAO executes a ragequit with all or parts of the member's shares/loot."
            },
            "id": 2524,
            "name": "MemberRagequit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2516,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1538:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2518,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burnedShares",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1566:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2520,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burnedLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1596:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1596:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "initialTotalSharesAndLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "1624:33:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:135:6"
            },
            "src": "1508:156:6"
          },
          {
            "body": {
              "id": 2532,
              "nodeType": "Block",
              "src": "1801:42:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c6c6261636b20726576657274",
                        "id": 2529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1818:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        },
                        "value": "fallback revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e7a6b70b349628db8f92f31bd6e8b9ad4413590fbd117c4d166bab3b558e4427",
                          "typeString": "literal_string \"fallback revert\""
                        }
                      ],
                      "id": 2528,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1811:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 2530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:25:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2531,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:25:6"
                }
              ]
            },
            "documentation": {
              "id": 2525,
              "nodeType": "StructuredDocumentation",
              "src": "1670:99:6",
              "text": " @notice default fallback function to prevent from sending ether to the contract."
            },
            "id": 2533,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:2:6"
            },
            "returnParameters": {
              "id": 2527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:0:6"
            },
            "scope": 2767,
            "src": "1774:69:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3684
            ],
            "body": {
              "id": 2617,
              "nodeType": "Block",
              "src": "2974:1184:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2549,
                            "name": "sharesToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2539,
                            "src": "3055:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2550,
                            "name": "lootToBurn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2541,
                            "src": "3070:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3055:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3083:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3055:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e74207368617265732f6c6f6f74",
                        "id": 2554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3086:26:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15",
                          "typeString": "literal_string \"insufficient shares/loot\""
                        },
                        "value": "insufficient shares/loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b128861f3ec1a9079903fe58467ec66b723d68fc7e4a59dbb4fad80880736a15",
                          "typeString": "literal_string \"insufficient shares/loot\""
                        }
                      ],
                      "id": 2548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3047:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:66:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2556,
                  "nodeType": "ExpressionStatement",
                  "src": "3047:66:6"
                },
                {
                  "assignments": [
                    2558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2558,
                      "mutability": "mutable",
                      "name": "memberAddr",
                      "nodeType": "VariableDeclaration",
                      "scope": 2617,
                      "src": "3200:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2557,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3200:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2564,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2561,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3247:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3247:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2559,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2537,
                        "src": "3221:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                          "typeString": "contract DaoRegistry"
                        }
                      },
                      "id": 2560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressIfDelegated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7959,
                      "src": "3221:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 2563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3221:37:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3200:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3337:61:6",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2568,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3356:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 2569,
                                  "name": "DaoRegistry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8218,
                                  "src": "3368:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_DaoRegistry_$8218_$",
                                    "typeString": "type(contract DaoRegistry)"
                                  }
                                },
                                "id": 2570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "MemberFlag",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 6657,
                                "src": "3368:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_MemberFlag_$6657_$",
                                  "typeString": "type(enum DaoRegistry.MemberFlag)"
                                }
                              },
                              "id": 2571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "JAILED",
                              "nodeType": "MemberAccess",
                              "src": "3368:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_MemberFlag_$6657",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_MemberFlag_$6657",
                                "typeString": "enum DaoRegistry.MemberFlag"
                              }
                            ],
                            "expression": {
                              "id": 2566,
                              "name": "dao",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2537,
                              "src": "3338:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                                "typeString": "contract DaoRegistry"
                              }
                            },
                            "id": 2567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getMemberFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7808,
                            "src": "3338:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_enum$_MemberFlag_$6657_$returns$_t_bool_$",
                              "typeString": "function (address,enum DaoRegistry.MemberFlag) view external returns (bool)"
                            }
                          },
                          "id": 2572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3338:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6a61696c6564206d656d6265722063616e206e6f74207261676571756974",
                        "id": 2574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3412:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325",
                          "typeString": "literal_string \"jailed member can not ragequit\""
                        },
                        "value": "jailed member can not ragequit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_747679804340afbc08c160035bdb8a410fdc598d29d4e6a16331e9be43cf6325",
                          "typeString": "literal_string \"jailed member can not ragequit\""
                        }
                      ],
                      "id": 2565,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3316:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3316:138:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "3316:138:6"
                },
                {
                  "assignments": [
                    2579
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2579,
                      "mutability": "mutable",
                      "name": "bank",
                      "nodeType": "VariableDeclaration",
                      "scope": 2617,
                      "src": "3561:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BankExtension_$9181",
                        "typeString": "contract BankExtension"
                      },
                      "typeName": {
                        "id": 2578,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2577,
                          "name": "BankExtension",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9181,
                          "src": "3561:13:6"
                        },
                        "referencedDeclaration": 9181,
                        "src": "3561:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2586,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2583,
                            "name": "BANK",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6146,
                            "src": "3620:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 2581,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2537,
                            "src": "3596:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                              "typeString": "contract DaoRegistry"
                            }
                          },
                          "id": 2582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getExtensionAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7373,
                          "src": "3596:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3596:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2580,
                      "name": "BankExtension",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9181,
                      "src": "3582:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_BankExtension_$9181_$",
                        "typeString": "type(contract BankExtension)"
                      }
                    },
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3582:44:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3561:65:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2590,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3726:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2591,
                              "name": "SHARES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6174,
                              "src": "3738:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2588,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "3711:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 2589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8930,
                            "src": "3711:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2593,
                          "name": "sharesToBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2539,
                          "src": "3749:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3711:50:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e7420736861726573",
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3775:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a",
                          "typeString": "literal_string \"insufficient shares\""
                        },
                        "value": "insufficient shares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d5ba7a6055332667d0b47802db7f56b8e6983a138e30503682c0b7c57a45190a",
                          "typeString": "literal_string \"insufficient shares\""
                        }
                      ],
                      "id": 2587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3690:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3690:116:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2597,
                  "nodeType": "ExpressionStatement",
                  "src": "3690:116:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2601,
                              "name": "memberAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "3908:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2602,
                              "name": "LOOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "3920:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2599,
                              "name": "bank",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2579,
                              "src": "3893:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BankExtension_$9181",
                                "typeString": "contract BankExtension"
                              }
                            },
                            "id": 2600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8930,
                            "src": "3893:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3893:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2604,
                          "name": "lootToBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2541,
                          "src": "3929:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3893:46:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e73756666696369656e74206c6f6f74",
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3953:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04",
                          "typeString": "literal_string \"insufficient loot\""
                        },
                        "value": "insufficient loot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee89528def6da8b026f277df88d994c05e8dde59942e7812ea4bb312a1238b04",
                          "typeString": "literal_string \"insufficient loot\""
                        }
                      ],
                      "id": 2598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3872:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3872:110:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "3872:110:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2610,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "4100:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2611,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2539,
                        "src": "4112:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2612,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2541,
                        "src": "4126:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2613,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2544,
                        "src": "4138:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2614,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2579,
                        "src": "4146:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      ],
                      "id": 2609,
                      "name": "_prepareRagequit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2680,
                      "src": "4083:16:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_BankExtension_$9181_$returns$__$",
                        "typeString": "function (address,uint256,uint256,address[] memory,contract BankExtension)"
                      }
                    },
                    "id": 2615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4083:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2616,
                  "nodeType": "ExpressionStatement",
                  "src": "4083:68:6"
                }
              ]
            },
            "documentation": {
              "id": 2534,
              "nodeType": "StructuredDocumentation",
              "src": "1849:962:6",
              "text": " @notice Allows a member or advisor of the DAO to opt out by burning the proportional amount of shares/loot of the member.\n @notice Anyone is allowed to call this function, but only members and advisors that have shares are able to execute the entire ragequit process.\n @dev The sum of sharesToBurn and lootToBurn have to be greater than zero.\n @dev The member can not be in jail to execute a ragequit.\n @dev The member becomes an inactive member of the DAO once all the shares/loot are burned.\n @dev If the member provides an invalid/not allowed token, the entire processed is reverted.\n @param dao The dao address that the member is part of.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param tokens The array of tokens that the funds should be sent to."
            },
            "functionSelector": "ed0cdf15",
            "id": 2618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ragequit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2546,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2965:8:6"
            },
            "parameters": {
              "id": 2545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2537,
                  "mutability": "mutable",
                  "name": "dao",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2843:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                    "typeString": "contract DaoRegistry"
                  },
                  "typeName": {
                    "id": 2536,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2535,
                      "name": "DaoRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8218,
                      "src": "2843:11:6"
                    },
                    "referencedDeclaration": 8218,
                    "src": "2843:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DaoRegistry_$8218",
                      "typeString": "contract DaoRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2539,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2868:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2868:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2541,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2898:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2544,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2618,
                  "src": "2926:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2542,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2926:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2543,
                    "nodeType": "ArrayTypeName",
                    "src": "2926:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:122:6"
            },
            "returnParameters": {
              "id": 2547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:6"
            },
            "scope": 2767,
            "src": "2816:1342:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2679,
              "nodeType": "Block",
              "src": "4856:1010:6",
              "statements": [
                {
                  "assignments": [
                    2635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2635,
                      "mutability": "mutable",
                      "name": "initialTotalSharesAndLoot",
                      "nodeType": "VariableDeclaration",
                      "scope": 2679,
                      "src": "5096:33:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5096:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2653,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 2638,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "5159:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2639,
                            "name": "SHARES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6174,
                            "src": "5166:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2636,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2631,
                            "src": "5144:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8930,
                          "src": "5144:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5144:29:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 2643,
                            "name": "TOTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6168,
                            "src": "5207:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2644,
                            "name": "LOOT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6180,
                            "src": "5214:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2641,
                            "name": "bank",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2631,
                            "src": "5192:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BankExtension_$9181",
                              "typeString": "contract BankExtension"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8930,
                          "src": "5192:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 2645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5192:27:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5144:75:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2649,
                          "name": "TOTAL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6168,
                          "src": "5253:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 2650,
                          "name": "LOCKED_LOOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6186,
                          "src": "5260:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2647,
                          "name": "bank",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2631,
                          "src": "5238:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BankExtension_$9181",
                            "typeString": "contract BankExtension"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8930,
                        "src": "5238:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 2651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5238:34:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5144:128:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5096:176:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2657,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5389:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2658,
                        "name": "SHARES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6174,
                        "src": "5401:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2659,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "5409:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2654,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5364:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5364:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5364:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2661,
                  "nodeType": "ExpressionStatement",
                  "src": "5364:58:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2665,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5536:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2666,
                        "name": "LOOT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "5548:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2667,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5554:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2662,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5511:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      },
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subtractFromBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8847,
                      "src": "5511:24:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 2668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5511:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2669,
                  "nodeType": "ExpressionStatement",
                  "src": "5511:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2671,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2621,
                        "src": "5712:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2672,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2623,
                        "src": "5736:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2673,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "5762:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2674,
                        "name": "initialTotalSharesAndLoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2635,
                        "src": "5786:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2675,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2628,
                        "src": "5825:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 2676,
                        "name": "bank",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2631,
                        "src": "5845:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_BankExtension_$9181",
                          "typeString": "contract BankExtension"
                        }
                      ],
                      "id": 2670,
                      "name": "_burnShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2766,
                      "src": "5687:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_contract$_BankExtension_$9181_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256,address[] memory,contract BankExtension)"
                      }
                    },
                    "id": 2677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5687:172:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2678,
                  "nodeType": "ExpressionStatement",
                  "src": "5687:172:6"
                }
              ]
            },
            "documentation": {
              "id": 2619,
              "nodeType": "StructuredDocumentation",
              "src": "4164:499:6",
              "text": " @notice Subtracts from the internal member's account the proportional shares and/or loot.\n @param memberAddr The member address that wants to burn the shares and/or loot.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param tokens The array of tokens that the funds should be sent to.\n @param bank The bank extension."
            },
            "id": 2680,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareRagequit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2621,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4703:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4703:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2623,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4731:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2625,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4761:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4761:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4789:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2626,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4789:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2627,
                    "nodeType": "ArrayTypeName",
                    "src": "4789:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2631,
                  "mutability": "mutable",
                  "name": "bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 2680,
                  "src": "4822:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                    "typeString": "contract BankExtension"
                  },
                  "typeName": {
                    "id": 2630,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2629,
                      "name": "BankExtension",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9181,
                      "src": "4822:13:6"
                    },
                    "referencedDeclaration": 9181,
                    "src": "4822:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4693:153:6"
            },
            "returnParameters": {
              "id": 2633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4856:0:6"
            },
            "scope": 2767,
            "src": "4668:1198:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2765,
              "nodeType": "Block",
              "src": "6787:1964:6",
              "statements": [
                {
                  "assignments": [
                    2699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2699,
                      "mutability": "mutable",
                      "name": "sharesAndLootToBurn",
                      "nodeType": "VariableDeclaration",
                      "scope": 2765,
                      "src": "6863:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6863:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2703,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2700,
                      "name": "sharesToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "6893:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 2701,
                      "name": "lootToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2687,
                      "src": "6908:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6893:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6863:55:6"
                },
                {
                  "body": {
                    "id": 2756,
                    "nodeType": "Block",
                    "src": "7233:1230:6",
                    "statements": [
                      {
                        "assignments": [
                          2716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2716,
                            "mutability": "mutable",
                            "name": "token",
                            "nodeType": "VariableDeclaration",
                            "scope": 2756,
                            "src": "7247:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7247:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2720,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2717,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2692,
                            "src": "7263:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 2719,
                          "indexExpression": {
                            "id": 2718,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2705,
                            "src": "7270:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7263:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7247:25:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2724,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2716,
                                  "src": "7381:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2722,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "7361:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 2723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isTokenAllowed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8488,
                                "src": "7361:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address) view external returns (bool)"
                                }
                              },
                              "id": 2725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7361:26:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "746f6b656e206e6f7420616c6c6f776564",
                              "id": 2726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7389:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                                "typeString": "literal_string \"token not allowed\""
                              },
                              "value": "token not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38d6b0afbbc56928921d4c86bfdccd58cac4876eb1f97ab89bbf8bc98df11095",
                                "typeString": "literal_string \"token not allowed\""
                              }
                            ],
                            "id": 2721,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7353:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7353:56:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2728,
                        "nodeType": "ExpressionStatement",
                        "src": "7353:56:6"
                      },
                      {
                        "assignments": [
                          2730
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2730,
                            "mutability": "mutable",
                            "name": "amountToRagequit",
                            "nodeType": "VariableDeclaration",
                            "scope": 2756,
                            "src": "7523:24:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2729,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7523:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2741,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2735,
                                  "name": "GUILD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6162,
                                  "src": "7623:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2736,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2716,
                                  "src": "7630:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 2733,
                                  "name": "bank",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2695,
                                  "src": "7608:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                                    "typeString": "contract BankExtension"
                                  }
                                },
                                "id": 2734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 8930,
                                "src": "7608:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 2737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7608:28:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2738,
                              "name": "sharesAndLootToBurn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2699,
                              "src": "7658:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2739,
                              "name": "initialTotalSharesAndLoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2689,
                              "src": "7699:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2731,
                              "name": "FairShareHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9783,
                              "src": "7566:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FairShareHelper_$9783_$",
                                "typeString": "type(library FairShareHelper)"
                              }
                            },
                            "id": 2732,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "calc",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9782,
                            "src": "7566:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7566:176:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7523:219:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2742,
                            "name": "amountToRagequit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2730,
                            "src": "7851:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7870:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7851:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2755,
                        "nodeType": "IfStatement",
                        "src": "7847:606:6",
                        "trueBody": {
                          "id": 2754,
                          "nodeType": "Block",
                          "src": "7873:580:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2748,
                                    "name": "GUILD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6162,
                                    "src": "8318:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2749,
                                    "name": "memberAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2683,
                                    "src": "8345:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2750,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2716,
                                    "src": "8377:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2751,
                                    "name": "amountToRagequit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2730,
                                    "src": "8404:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2745,
                                    "name": "bank",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2695,
                                    "src": "8275:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                                      "typeString": "contract BankExtension"
                                    }
                                  },
                                  "id": 2747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "internalTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8895,
                                  "src": "8275:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256) external"
                                  }
                                },
                                "id": 2752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8275:163:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2753,
                              "nodeType": "ExpressionStatement",
                              "src": "8275:163:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2708,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2705,
                      "src": "7209:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2709,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2692,
                        "src": "7213:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 2710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7213:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7209:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2757,
                  "initializationExpression": {
                    "assignments": [
                      2705
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2705,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 2757,
                        "src": "7194:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2704,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7194:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2707,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7206:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7194:13:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7228:3:6",
                      "subExpression": {
                        "id": 2712,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2705,
                        "src": "7228:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2714,
                    "nodeType": "ExpressionStatement",
                    "src": "7228:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "7189:1274:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2759,
                        "name": "memberAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2683,
                        "src": "8635:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2760,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2685,
                        "src": "8659:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2761,
                        "name": "lootToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2687,
                        "src": "8685:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2762,
                        "name": "initialTotalSharesAndLoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2689,
                        "src": "8709:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2758,
                      "name": "MemberRagequit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2524,
                      "src": "8607:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 2763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8607:137:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2764,
                  "nodeType": "EmitStatement",
                  "src": "8602:142:6"
                }
              ]
            },
            "documentation": {
              "id": 2681,
              "nodeType": "StructuredDocumentation",
              "src": "5872:684:6",
              "text": " @notice Subtracts from the bank's account the proportional shares and/or loot,\n @notice and transfers the funds to the member's internal account based on the provided tokens.\n @param memberAddr The member address that wants to burn the shares and/or loot.\n @param sharesToBurn The amount of shares of the member that must be converted into funds.\n @param lootToBurn The amount of loot of the member that must be converted into funds.\n @param initialTotalSharesAndLoot The sum of shares and loot before internal transfers.\n @param tokens The array of tokens that the funds should be sent to.\n @param bank The bank extension."
            },
            "id": 2766,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2683,
                  "mutability": "mutable",
                  "name": "memberAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6591:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6591:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2685,
                  "mutability": "mutable",
                  "name": "sharesToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6619:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6619:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2687,
                  "mutability": "mutable",
                  "name": "lootToBurn",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6649:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2689,
                  "mutability": "mutable",
                  "name": "initialTotalSharesAndLoot",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6677:33:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6677:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2692,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6720:23:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2690,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6720:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2691,
                    "nodeType": "ArrayTypeName",
                    "src": "6720:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2695,
                  "mutability": "mutable",
                  "name": "bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 2766,
                  "src": "6753:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BankExtension_$9181",
                    "typeString": "contract BankExtension"
                  },
                  "typeName": {
                    "id": 2694,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2693,
                      "name": "BankExtension",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9181,
                      "src": "6753:13:6"
                    },
                    "referencedDeclaration": 9181,
                    "src": "6753:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BankExtension_$9181",
                      "typeString": "contract BankExtension"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6581:196:6"
            },
            "returnParameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6787:0:6"
            },
            "scope": 2767,
            "src": "6561:2190:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2768,
        "src": "1312:7441:6"
      }
    ],
    "src": "0:8754:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T09:36:52.605Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "ragequit(address,uint256,uint256,address[])": {
        "details": "The sum of sharesToBurn and lootToBurn have to be greater than zero.The member can not be in jail to execute a ragequit.The member becomes an inactive member of the DAO once all the shares/loot are burned.If the member provides an invalid/not allowed token, the entire processed is reverted.",
        "params": {
          "dao": "The dao address that the member is part of.",
          "lootToBurn": "The amount of loot of the member that must be converted into funds.",
          "sharesToBurn": "The amount of shares of the member that must be converted into funds.",
          "tokens": "The array of tokens that the funds should be sent to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "MemberRagequit(address,uint256,uint256,uint256)": {
        "notice": "Event emitted when a member of the DAO executes a ragequit with all or parts of the member's shares/loot."
      }
    },
    "kind": "user",
    "methods": {
      "ragequit(address,uint256,uint256,address[])": {
        "notice": "Allows a member or advisor of the DAO to opt out by burning the proportional amount of shares/loot of the member.Anyone is allowed to call this function, but only members and advisors that have shares are able to execute the entire ragequit process."
      }
    },
    "notice": "MIT License Copyright (c) 2020 Openlaw Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "version": 1
  }
}